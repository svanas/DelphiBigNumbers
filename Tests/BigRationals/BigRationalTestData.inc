//
// Test data for Velthuis.BigRationals.BigRational type, generated 01 Feb, 2019, 18:52:51.
//
// Do not modify the generated data in this file. Modify the data in the generator.
// The generator is in BigRationalTestDataGenerator.java, below the Test directory.
//
// The generator was written in Java, using NetBeans 8.2.
//

type
  TTestResultInfo =
  (
    triOk,
    triDivideByZero,
    triArgumentNull,
    triArgumentRange,
    triFormat,
    triOverflow,
    triUnderflow,
    triReverseRound
  );

  TTestResult = record
    Info: TTestResultInfo;
    Val: string;
  end;

  TAdditionalData = record
    Numerator: string;
    Denominator: string;
  end;

const
  CtorTestDataCount = 21;
  CtorTestData: array[0..CtorTestDataCount - 1] of string =
  (
    '1',                                                                  // 0
    '0',                                                                  // 1
    '-1',                                                                 // 2
    '2',                                                                  // 3
    '3',                                                                  // 4
    '4',                                                                  // 5
    '5',                                                                  // 6
    '6',                                                                  // 7
    '7',                                                                  // 8
    '8',                                                                  // 9
    '9',                                                                  // 10
    '10',                                                                 // 11
    '1000',                                                               // 12
    '-1000000',                                                           // 13
    '31',                                                                 // 14
    '37',                                                                 // 15
    '1147',                                                               // 16
    '59',                                                                 // 17
    '1829',                                                               // 18
    '2183',                                                               // 19
    '67673'                                                               // 20

    // Add additional values below
  );

  DoubleCount = 101;
  DoubleData: array[0..DoubleCount - 1] of Double =
  (
    3.500000000000000000000000000000000000000e-323,                                       // 0
    -600000000000000000000.0000000000000000000,                                           // 1
    -100000000000000000000.0000000000000000000,                                           // 2
    -3.510000000000000000000000000000000000000,                                           // 3
    -3.500000000000000000000000000000000000000,                                           // 4
    -3.490000000000000000000000000000000000000,                                           // 5
    -2.510000000000000000000000000000000000000,                                           // 6
    -2.500000000000000000000000000000000000000,                                           // 7
    -2.490000000000000000000000000000000000000,                                           // 8
    -2.000000000000000000000000000000000000000e-100,                                      // 9
    0.000000000000000000000000000000000000000,                                            // 10
    7.000000000000000000000000000000000000000e-08,                                        // 11
    0.0001000000000000000000000000000000000000000,                                        // 12
    0.1000000000000000000000000000000000000000,                                           // 13
    0.2000000000000000000000000000000000000000,                                           // 14
    0.3000000000000000000000000000000000000000,                                           // 15
    0.4000000000000000000000000000000000000000,                                           // 16
    0.4999999999999900000000000000000000000000,                                           // 17
    0.5000000000000000000000000000000000000000,                                           // 18
    0.5000000100000000000000000000000000000000,                                           // 19
    0.7000000000000000000000000000000000000000,                                           // 20
    0.9000000000000000000000000000000000000000,                                           // 21
    1.000000000000000000000000000000000000000,                                            // 22
    1.000000000000010000000000000000000000000,                                            // 23
    1.100000000000000000000000000000000000000,                                            // 24
    1.499999999999990000000000000000000000000,                                            // 25
    1.500000000000000000000000000000000000000,                                            // 26
    1.500000000000010000000000000000000000000,                                            // 27
    1.999900000000000000000000000000000000000,                                            // 28
    2.000000000000000000000000000000000000000,                                            // 29
    2.490000000000000000000000000000000000000,                                            // 30
    2.500000000000000000000000000000000000000,                                            // 31
    2.510000000000000000000000000000000000000,                                            // 32
    3.000000000000000000000000000000000000000,                                            // 33
    3.490000000000000000000000000000000000000,                                            // 34
    3.500000000000000000000000000000000000000,                                            // 35
    3.510000000000000000000000000000000000000,                                            // 36
    4.000000000000000000000000000000000000000,                                            // 37
    4.100000000000000000000000000000000000000,                                            // 38
    4.200000000000000000000000000000000000000,                                            // 39
    4.400000000000000000000000000000000000000,                                            // 40
    4.500000000000000000000000000000000000000,                                            // 41
    4.600000000000000000000000000000000000000,                                            // 42
    4.999900000000000000000000000000000000000,                                            // 43
    5.000000000000000000000000000000000000000,                                            // 44
    6.000000000000000000000000000000000000000,                                            // 45
    7.000000000000000000000000000000000000000,                                            // 46
    8.000000000000000000000000000000000000000,                                            // 47
    9.000000000000000000000000000000000000000,                                            // 48
    10.00000000000000000000000000000000000000,                                            // 49
    15.00000000000000000000000000000000000000,                                            // 50
    22.00000000000000000000000000000000000000,                                            // 51
    44.00000000000000000000000000000000000000,                                            // 52
    85.00000000000000000000000000000000000000,                                            // 53
    128.0000000000000000000000000000000000000,                                            // 54
    256.0000000000000000000000000000000000000,                                            // 55
    256.1000000000000000000000000000000000000,                                            // 56
    256.5000000000000000000000000000000000000,                                            // 57
    256.7000000000000000000000000000000000000,                                            // 58
    300.0000000000000000000000000000000000000,                                            // 59
    876.5432109876540000000000000000000000000,                                            // 60
    645000.0000000000000000000000000000000000,                                            // 61
    1000000.500000000000000000000000000000000,                                            // 62
    1000000.500000000000000000000000000000000,                                            // 63
    1000000.500000000000000000000000000000000,                                            // 64
    1048576.100000000000000000000000000000000,                                            // 65
    1048576.500000000000000000000000000000000,                                            // 66
    10000000000.00000000000000000000000000000,                                            // 67
    14900000000.00000000000000000000000000000,                                            // 68
    15000000000.00000000000000000000000000000,                                            // 69
    15100000000.00000000000000000000000000000,                                            // 70
    31415920000.00000000000000000000000000000,                                            // 71
    100000000000.0000000000000000000000000000,                                            // 72
    1000000000000.000000000000000000000000000,                                            // 73
    10000000000000.00000000000000000000000000,                                            // 74
    100000000000000.0000000000000000000000000,                                            // 75
    1000000000000000.000000000000000000000000,                                            // 76
    2000000000000000.000000000000000000000000,                                            // 77
    4000000000000000.000000000000000000000000,                                            // 78
    4900000000000000.000000000000000000000000,                                            // 79
    8000000000000000.000000000000000000000000,                                            // 80
    10000000000000000.00000000000000000000000,                                            // 81
    20000000000000000.00000000000000000000000,                                            // 82
    40000000000000000.00000000000000000000000,                                            // 83
    50000000000000000.00000000000000000000000,                                            // 84
    100000000000000000.0000000000000000000000,                                            // 85
    1000000000000000000.000000000000000000000,                                            // 86
    10000000000000000000.00000000000000000000,                                            // 87
    12345678901234600000.00000000000000000000,                                            // 88
    100000000000000000000.0000000000000000000,                                            // 89
    100000000000001.0000000000000000000000000,                                            // 90
    100000000000002.0000000000000000000000000,                                            // 91
    100000000000004.0000000000000000000000000,                                            // 92
    100000000000008.0000000000000000000000000,                                            // 93
    100000000000016.0000000000000000000000000,                                            // 94
    100000000000032.0000000000000000000000000,                                            // 95
    100000000000064.0000000000000000000000000,                                            // 96
    100000000000128.0000000000000000000000000,                                            // 97
    100000000000256.0000000000000000000000000,                                            // 98
    100000000000512.0000000000000000000000000,                                            // 99
    1.000000000000000000000000000000000000000e+80                                         // 100
  );

  ArgumentCount = 16;
  Arguments: array[0..ArgumentCount - 1] of string =
  (
    '0',                                                                  // 0
    '1',                                                                  // 1
    '1/2',                                                                // 2
    '-1/10',                                                              // 3
    '1/100',                                                              // 4
    '2/7',                                                                // 5
    '-12345',                                                             // 6
    '-345/679',                                                           // 7
    '999999999999999/8888888888888',                                      // 8
    '100',                                                                // 9
    '-10000000',                                                          // 10
    '17',                                                                 // 11
    '1/17',                                                               // 12
    '31/37',                                                              // 13
    '1147/59',                                                            // 14
    '67673'                                                               // 15
  );

  BigDecimalDataCount = 64;
  BigDecimalData: array[0..BigDecimalDataCount - 1] of string =
  (
    '0',                                                                  // 0
    '-0.00',                                                              // 1
    '1',                                                                  // 2
    '-1.00',                                                              // 3
    '2.0000',                                                             // 4
    '10',                                                                 // 5
    '1e16',                                                               // 6
    '1e-16',                                                              // 7
    '0.1',                                                                // 8
    '1.79e+308',                                                          // 9
    '3.79e+308',                                                          // 10
    '4.940656458412465443e-324',                                          // 11
    '8.0e-324',                                                           // 12
    '1.23456e-326',                                                       // 13
    '0.001',                                                              // 14
    '2.71828182845904523536028747135266249775724709369995',               // 15
    '3.14159265358979323851280895940618620443274267017841339111328125',   // 16
    '79228162514264337593543950335',                                      // 17
    '-79228162514264337593543950335',                                     // 18
    '27703302467091960609331879.532',                                     // 19
    '-27703302467091960609331879.532',                                    // 20
    '-3203854.9559968181492513385018',                                    // 21
    '-48466870444188873796420.028868',                                    // 22
    '-545193693242804794.30331374676',                                    // 23
    '0.7629234053338741809892531431',                                     // 24
    '-400453059665371395972.33474452',                                    // 25
    '222851627785191714190050.61676',                                     // 26
    '14246043379204153213661335.584',                                     // 27
    '-421123.30446308691436596648186',                                    // 28
    '24463288738299545.200508898642',                                     // 29
    '-5323259153836385912697776.001',                                     // 30
    '102801066199805834724673169.19',                                     // 31
    '7081320760.3793287174700927968',                                     // 32
    '415752273939.77704245656837041',                                     // 33
    '-6389392489892.6362673670820462',                                    // 34
    '442346282742915.0596416330681',                                      // 35
    '-512833780867323.89020837443764',                                    // 36
    '608940580690915704.1450897514',                                      // 37
    '-42535053313319986966115.037787',                                    // 38
    '-7808274522591953107485.8812311',                                    // 39
    '1037807626804273037330059471.7',                                     // 40
    '-4997122966.448652425771563042',                                     // 41
    '3961408125713216879677197.5171',                                     // 42
    '3961408125713216879677197.5172',                                     // 43
    '990352031428304219919299.3793',                                      // 44
    '922337203685477.5811',                                               // 45
    '2305843009.213693953',                                               // 46
    '230584300.9213693952',                                               // 47
    '8.00',                                                               // 48
    '2.00',                                                               // 49
    '34359738.368',                                                       // 50
    '85899345.92',                                                        // 51
    '14757395258967.6412928',                                             // 52
    '36893488147419.103232',                                              // 53
    '2147483651',                                                         // 54
    '536870913',                                                          // 55
    '110',                                                                // 56
    '10000',                                                              // 57
    '1.234e+17',                                                          // 58
    '1.234e+2',                                                           // 59
    '3.0',                                                                // 60
    '5.0000001',                                                          // 61
    '7.000000',                                                           // 62
    '-130.00000000000000000750000001'                                     // 63
  );

  CtorResultCount = 441;
  CtorResults: array[0..CtorResultCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '1'),                                                                 // ( 0, 0)    0: 1/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 0, 1)    1: 1/0
    (Info: triOk;            Val: '-1'),                                                                // ( 0, 2)    2: 1/-1
    (Info: triOk;            Val: '1/2'),                                                               // ( 0, 3)    3: 1/2
    (Info: triOk;            Val: '1/3'),                                                               // ( 0, 4)    4: 1/3
    (Info: triOk;            Val: '1/4'),                                                               // ( 0, 5)    5: 1/4
    (Info: triOk;            Val: '1/5'),                                                               // ( 0, 6)    6: 1/5
    (Info: triOk;            Val: '1/6'),                                                               // ( 0, 7)    7: 1/6
    (Info: triOk;            Val: '1/7'),                                                               // ( 0, 8)    8: 1/7
    (Info: triOk;            Val: '1/8'),                                                               // ( 0, 9)    9: 1/8
    (Info: triOk;            Val: '1/9'),                                                               // ( 0,10)   10: 1/9
    (Info: triOk;            Val: '1/10'),                                                              // ( 0,11)   11: 1/10
    (Info: triOk;            Val: '1/1000'),                                                            // ( 0,12)   12: 1/1000
    (Info: triOk;            Val: '-1/1000000'),                                                        // ( 0,13)   13: 1/-1000000
    (Info: triOk;            Val: '1/31'),                                                              // ( 0,14)   14: 1/31
    (Info: triOk;            Val: '1/37'),                                                              // ( 0,15)   15: 1/37
    (Info: triOk;            Val: '1/1147'),                                                            // ( 0,16)   16: 1/1147
    (Info: triOk;            Val: '1/59'),                                                              // ( 0,17)   17: 1/59
    (Info: triOk;            Val: '1/1829'),                                                            // ( 0,18)   18: 1/1829
    (Info: triOk;            Val: '1/2183'),                                                            // ( 0,19)   19: 1/2183
    (Info: triOk;            Val: '1/67673'),                                                           // ( 0,20)   20: 1/67673
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 0)   21: 0/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 1, 1)   22: 0/0
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 2)   23: 0/-1
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 3)   24: 0/2
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 4)   25: 0/3
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 5)   26: 0/4
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 6)   27: 0/5
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 7)   28: 0/6
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 8)   29: 0/7
    (Info: triOk;            Val: '0'),                                                                 // ( 1, 9)   30: 0/8
    (Info: triOk;            Val: '0'),                                                                 // ( 1,10)   31: 0/9
    (Info: triOk;            Val: '0'),                                                                 // ( 1,11)   32: 0/10
    (Info: triOk;            Val: '0'),                                                                 // ( 1,12)   33: 0/1000
    (Info: triOk;            Val: '0'),                                                                 // ( 1,13)   34: 0/-1000000
    (Info: triOk;            Val: '0'),                                                                 // ( 1,14)   35: 0/31
    (Info: triOk;            Val: '0'),                                                                 // ( 1,15)   36: 0/37
    (Info: triOk;            Val: '0'),                                                                 // ( 1,16)   37: 0/1147
    (Info: triOk;            Val: '0'),                                                                 // ( 1,17)   38: 0/59
    (Info: triOk;            Val: '0'),                                                                 // ( 1,18)   39: 0/1829
    (Info: triOk;            Val: '0'),                                                                 // ( 1,19)   40: 0/2183
    (Info: triOk;            Val: '0'),                                                                 // ( 1,20)   41: 0/67673
    (Info: triOk;            Val: '-1'),                                                                // ( 2, 0)   42: -1/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 2, 1)   43: -1/0
    (Info: triOk;            Val: '1'),                                                                 // ( 2, 2)   44: -1/-1
    (Info: triOk;            Val: '-1/2'),                                                              // ( 2, 3)   45: -1/2
    (Info: triOk;            Val: '-1/3'),                                                              // ( 2, 4)   46: -1/3
    (Info: triOk;            Val: '-1/4'),                                                              // ( 2, 5)   47: -1/4
    (Info: triOk;            Val: '-1/5'),                                                              // ( 2, 6)   48: -1/5
    (Info: triOk;            Val: '-1/6'),                                                              // ( 2, 7)   49: -1/6
    (Info: triOk;            Val: '-1/7'),                                                              // ( 2, 8)   50: -1/7
    (Info: triOk;            Val: '-1/8'),                                                              // ( 2, 9)   51: -1/8
    (Info: triOk;            Val: '-1/9'),                                                              // ( 2,10)   52: -1/9
    (Info: triOk;            Val: '-1/10'),                                                             // ( 2,11)   53: -1/10
    (Info: triOk;            Val: '-1/1000'),                                                           // ( 2,12)   54: -1/1000
    (Info: triOk;            Val: '1/1000000'),                                                         // ( 2,13)   55: -1/-1000000
    (Info: triOk;            Val: '-1/31'),                                                             // ( 2,14)   56: -1/31
    (Info: triOk;            Val: '-1/37'),                                                             // ( 2,15)   57: -1/37
    (Info: triOk;            Val: '-1/1147'),                                                           // ( 2,16)   58: -1/1147
    (Info: triOk;            Val: '-1/59'),                                                             // ( 2,17)   59: -1/59
    (Info: triOk;            Val: '-1/1829'),                                                           // ( 2,18)   60: -1/1829
    (Info: triOk;            Val: '-1/2183'),                                                           // ( 2,19)   61: -1/2183
    (Info: triOk;            Val: '-1/67673'),                                                          // ( 2,20)   62: -1/67673
    (Info: triOk;            Val: '2'),                                                                 // ( 3, 0)   63: 2/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 3, 1)   64: 2/0
    (Info: triOk;            Val: '-2'),                                                                // ( 3, 2)   65: 2/-1
    (Info: triOk;            Val: '1'),                                                                 // ( 3, 3)   66: 2/2
    (Info: triOk;            Val: '2/3'),                                                               // ( 3, 4)   67: 2/3
    (Info: triOk;            Val: '1/2'),                                                               // ( 3, 5)   68: 2/4
    (Info: triOk;            Val: '2/5'),                                                               // ( 3, 6)   69: 2/5
    (Info: triOk;            Val: '1/3'),                                                               // ( 3, 7)   70: 2/6
    (Info: triOk;            Val: '2/7'),                                                               // ( 3, 8)   71: 2/7
    (Info: triOk;            Val: '1/4'),                                                               // ( 3, 9)   72: 2/8
    (Info: triOk;            Val: '2/9'),                                                               // ( 3,10)   73: 2/9
    (Info: triOk;            Val: '1/5'),                                                               // ( 3,11)   74: 2/10
    (Info: triOk;            Val: '1/500'),                                                             // ( 3,12)   75: 2/1000
    (Info: triOk;            Val: '-1/500000'),                                                         // ( 3,13)   76: 2/-1000000
    (Info: triOk;            Val: '2/31'),                                                              // ( 3,14)   77: 2/31
    (Info: triOk;            Val: '2/37'),                                                              // ( 3,15)   78: 2/37
    (Info: triOk;            Val: '2/1147'),                                                            // ( 3,16)   79: 2/1147
    (Info: triOk;            Val: '2/59'),                                                              // ( 3,17)   80: 2/59
    (Info: triOk;            Val: '2/1829'),                                                            // ( 3,18)   81: 2/1829
    (Info: triOk;            Val: '2/2183'),                                                            // ( 3,19)   82: 2/2183
    (Info: triOk;            Val: '2/67673'),                                                           // ( 3,20)   83: 2/67673
    (Info: triOk;            Val: '3'),                                                                 // ( 4, 0)   84: 3/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 4, 1)   85: 3/0
    (Info: triOk;            Val: '-3'),                                                                // ( 4, 2)   86: 3/-1
    (Info: triOk;            Val: '3/2'),                                                               // ( 4, 3)   87: 3/2
    (Info: triOk;            Val: '1'),                                                                 // ( 4, 4)   88: 3/3
    (Info: triOk;            Val: '3/4'),                                                               // ( 4, 5)   89: 3/4
    (Info: triOk;            Val: '3/5'),                                                               // ( 4, 6)   90: 3/5
    (Info: triOk;            Val: '1/2'),                                                               // ( 4, 7)   91: 3/6
    (Info: triOk;            Val: '3/7'),                                                               // ( 4, 8)   92: 3/7
    (Info: triOk;            Val: '3/8'),                                                               // ( 4, 9)   93: 3/8
    (Info: triOk;            Val: '1/3'),                                                               // ( 4,10)   94: 3/9
    (Info: triOk;            Val: '3/10'),                                                              // ( 4,11)   95: 3/10
    (Info: triOk;            Val: '3/1000'),                                                            // ( 4,12)   96: 3/1000
    (Info: triOk;            Val: '-3/1000000'),                                                        // ( 4,13)   97: 3/-1000000
    (Info: triOk;            Val: '3/31'),                                                              // ( 4,14)   98: 3/31
    (Info: triOk;            Val: '3/37'),                                                              // ( 4,15)   99: 3/37
    (Info: triOk;            Val: '3/1147'),                                                            // ( 4,16)  100: 3/1147
    (Info: triOk;            Val: '3/59'),                                                              // ( 4,17)  101: 3/59
    (Info: triOk;            Val: '3/1829'),                                                            // ( 4,18)  102: 3/1829
    (Info: triOk;            Val: '3/2183'),                                                            // ( 4,19)  103: 3/2183
    (Info: triOk;            Val: '3/67673'),                                                           // ( 4,20)  104: 3/67673
    (Info: triOk;            Val: '4'),                                                                 // ( 5, 0)  105: 4/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 5, 1)  106: 4/0
    (Info: triOk;            Val: '-4'),                                                                // ( 5, 2)  107: 4/-1
    (Info: triOk;            Val: '2'),                                                                 // ( 5, 3)  108: 4/2
    (Info: triOk;            Val: '4/3'),                                                               // ( 5, 4)  109: 4/3
    (Info: triOk;            Val: '1'),                                                                 // ( 5, 5)  110: 4/4
    (Info: triOk;            Val: '4/5'),                                                               // ( 5, 6)  111: 4/5
    (Info: triOk;            Val: '2/3'),                                                               // ( 5, 7)  112: 4/6
    (Info: triOk;            Val: '4/7'),                                                               // ( 5, 8)  113: 4/7
    (Info: triOk;            Val: '1/2'),                                                               // ( 5, 9)  114: 4/8
    (Info: triOk;            Val: '4/9'),                                                               // ( 5,10)  115: 4/9
    (Info: triOk;            Val: '2/5'),                                                               // ( 5,11)  116: 4/10
    (Info: triOk;            Val: '1/250'),                                                             // ( 5,12)  117: 4/1000
    (Info: triOk;            Val: '-1/250000'),                                                         // ( 5,13)  118: 4/-1000000
    (Info: triOk;            Val: '4/31'),                                                              // ( 5,14)  119: 4/31
    (Info: triOk;            Val: '4/37'),                                                              // ( 5,15)  120: 4/37
    (Info: triOk;            Val: '4/1147'),                                                            // ( 5,16)  121: 4/1147
    (Info: triOk;            Val: '4/59'),                                                              // ( 5,17)  122: 4/59
    (Info: triOk;            Val: '4/1829'),                                                            // ( 5,18)  123: 4/1829
    (Info: triOk;            Val: '4/2183'),                                                            // ( 5,19)  124: 4/2183
    (Info: triOk;            Val: '4/67673'),                                                           // ( 5,20)  125: 4/67673
    (Info: triOk;            Val: '5'),                                                                 // ( 6, 0)  126: 5/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 6, 1)  127: 5/0
    (Info: triOk;            Val: '-5'),                                                                // ( 6, 2)  128: 5/-1
    (Info: triOk;            Val: '5/2'),                                                               // ( 6, 3)  129: 5/2
    (Info: triOk;            Val: '5/3'),                                                               // ( 6, 4)  130: 5/3
    (Info: triOk;            Val: '5/4'),                                                               // ( 6, 5)  131: 5/4
    (Info: triOk;            Val: '1'),                                                                 // ( 6, 6)  132: 5/5
    (Info: triOk;            Val: '5/6'),                                                               // ( 6, 7)  133: 5/6
    (Info: triOk;            Val: '5/7'),                                                               // ( 6, 8)  134: 5/7
    (Info: triOk;            Val: '5/8'),                                                               // ( 6, 9)  135: 5/8
    (Info: triOk;            Val: '5/9'),                                                               // ( 6,10)  136: 5/9
    (Info: triOk;            Val: '1/2'),                                                               // ( 6,11)  137: 5/10
    (Info: triOk;            Val: '1/200'),                                                             // ( 6,12)  138: 5/1000
    (Info: triOk;            Val: '-1/200000'),                                                         // ( 6,13)  139: 5/-1000000
    (Info: triOk;            Val: '5/31'),                                                              // ( 6,14)  140: 5/31
    (Info: triOk;            Val: '5/37'),                                                              // ( 6,15)  141: 5/37
    (Info: triOk;            Val: '5/1147'),                                                            // ( 6,16)  142: 5/1147
    (Info: triOk;            Val: '5/59'),                                                              // ( 6,17)  143: 5/59
    (Info: triOk;            Val: '5/1829'),                                                            // ( 6,18)  144: 5/1829
    (Info: triOk;            Val: '5/2183'),                                                            // ( 6,19)  145: 5/2183
    (Info: triOk;            Val: '5/67673'),                                                           // ( 6,20)  146: 5/67673
    (Info: triOk;            Val: '6'),                                                                 // ( 7, 0)  147: 6/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 7, 1)  148: 6/0
    (Info: triOk;            Val: '-6'),                                                                // ( 7, 2)  149: 6/-1
    (Info: triOk;            Val: '3'),                                                                 // ( 7, 3)  150: 6/2
    (Info: triOk;            Val: '2'),                                                                 // ( 7, 4)  151: 6/3
    (Info: triOk;            Val: '3/2'),                                                               // ( 7, 5)  152: 6/4
    (Info: triOk;            Val: '6/5'),                                                               // ( 7, 6)  153: 6/5
    (Info: triOk;            Val: '1'),                                                                 // ( 7, 7)  154: 6/6
    (Info: triOk;            Val: '6/7'),                                                               // ( 7, 8)  155: 6/7
    (Info: triOk;            Val: '3/4'),                                                               // ( 7, 9)  156: 6/8
    (Info: triOk;            Val: '2/3'),                                                               // ( 7,10)  157: 6/9
    (Info: triOk;            Val: '3/5'),                                                               // ( 7,11)  158: 6/10
    (Info: triOk;            Val: '3/500'),                                                             // ( 7,12)  159: 6/1000
    (Info: triOk;            Val: '-3/500000'),                                                         // ( 7,13)  160: 6/-1000000
    (Info: triOk;            Val: '6/31'),                                                              // ( 7,14)  161: 6/31
    (Info: triOk;            Val: '6/37'),                                                              // ( 7,15)  162: 6/37
    (Info: triOk;            Val: '6/1147'),                                                            // ( 7,16)  163: 6/1147
    (Info: triOk;            Val: '6/59'),                                                              // ( 7,17)  164: 6/59
    (Info: triOk;            Val: '6/1829'),                                                            // ( 7,18)  165: 6/1829
    (Info: triOk;            Val: '6/2183'),                                                            // ( 7,19)  166: 6/2183
    (Info: triOk;            Val: '6/67673'),                                                           // ( 7,20)  167: 6/67673
    (Info: triOk;            Val: '7'),                                                                 // ( 8, 0)  168: 7/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 8, 1)  169: 7/0
    (Info: triOk;            Val: '-7'),                                                                // ( 8, 2)  170: 7/-1
    (Info: triOk;            Val: '7/2'),                                                               // ( 8, 3)  171: 7/2
    (Info: triOk;            Val: '7/3'),                                                               // ( 8, 4)  172: 7/3
    (Info: triOk;            Val: '7/4'),                                                               // ( 8, 5)  173: 7/4
    (Info: triOk;            Val: '7/5'),                                                               // ( 8, 6)  174: 7/5
    (Info: triOk;            Val: '7/6'),                                                               // ( 8, 7)  175: 7/6
    (Info: triOk;            Val: '1'),                                                                 // ( 8, 8)  176: 7/7
    (Info: triOk;            Val: '7/8'),                                                               // ( 8, 9)  177: 7/8
    (Info: triOk;            Val: '7/9'),                                                               // ( 8,10)  178: 7/9
    (Info: triOk;            Val: '7/10'),                                                              // ( 8,11)  179: 7/10
    (Info: triOk;            Val: '7/1000'),                                                            // ( 8,12)  180: 7/1000
    (Info: triOk;            Val: '-7/1000000'),                                                        // ( 8,13)  181: 7/-1000000
    (Info: triOk;            Val: '7/31'),                                                              // ( 8,14)  182: 7/31
    (Info: triOk;            Val: '7/37'),                                                              // ( 8,15)  183: 7/37
    (Info: triOk;            Val: '7/1147'),                                                            // ( 8,16)  184: 7/1147
    (Info: triOk;            Val: '7/59'),                                                              // ( 8,17)  185: 7/59
    (Info: triOk;            Val: '7/1829'),                                                            // ( 8,18)  186: 7/1829
    (Info: triOk;            Val: '7/2183'),                                                            // ( 8,19)  187: 7/2183
    (Info: triOk;            Val: '7/67673'),                                                           // ( 8,20)  188: 7/67673
    (Info: triOk;            Val: '8'),                                                                 // ( 9, 0)  189: 8/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // ( 9, 1)  190: 8/0
    (Info: triOk;            Val: '-8'),                                                                // ( 9, 2)  191: 8/-1
    (Info: triOk;            Val: '4'),                                                                 // ( 9, 3)  192: 8/2
    (Info: triOk;            Val: '8/3'),                                                               // ( 9, 4)  193: 8/3
    (Info: triOk;            Val: '2'),                                                                 // ( 9, 5)  194: 8/4
    (Info: triOk;            Val: '8/5'),                                                               // ( 9, 6)  195: 8/5
    (Info: triOk;            Val: '4/3'),                                                               // ( 9, 7)  196: 8/6
    (Info: triOk;            Val: '8/7'),                                                               // ( 9, 8)  197: 8/7
    (Info: triOk;            Val: '1'),                                                                 // ( 9, 9)  198: 8/8
    (Info: triOk;            Val: '8/9'),                                                               // ( 9,10)  199: 8/9
    (Info: triOk;            Val: '4/5'),                                                               // ( 9,11)  200: 8/10
    (Info: triOk;            Val: '1/125'),                                                             // ( 9,12)  201: 8/1000
    (Info: triOk;            Val: '-1/125000'),                                                         // ( 9,13)  202: 8/-1000000
    (Info: triOk;            Val: '8/31'),                                                              // ( 9,14)  203: 8/31
    (Info: triOk;            Val: '8/37'),                                                              // ( 9,15)  204: 8/37
    (Info: triOk;            Val: '8/1147'),                                                            // ( 9,16)  205: 8/1147
    (Info: triOk;            Val: '8/59'),                                                              // ( 9,17)  206: 8/59
    (Info: triOk;            Val: '8/1829'),                                                            // ( 9,18)  207: 8/1829
    (Info: triOk;            Val: '8/2183'),                                                            // ( 9,19)  208: 8/2183
    (Info: triOk;            Val: '8/67673'),                                                           // ( 9,20)  209: 8/67673
    (Info: triOk;            Val: '9'),                                                                 // (10, 0)  210: 9/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (10, 1)  211: 9/0
    (Info: triOk;            Val: '-9'),                                                                // (10, 2)  212: 9/-1
    (Info: triOk;            Val: '9/2'),                                                               // (10, 3)  213: 9/2
    (Info: triOk;            Val: '3'),                                                                 // (10, 4)  214: 9/3
    (Info: triOk;            Val: '9/4'),                                                               // (10, 5)  215: 9/4
    (Info: triOk;            Val: '9/5'),                                                               // (10, 6)  216: 9/5
    (Info: triOk;            Val: '3/2'),                                                               // (10, 7)  217: 9/6
    (Info: triOk;            Val: '9/7'),                                                               // (10, 8)  218: 9/7
    (Info: triOk;            Val: '9/8'),                                                               // (10, 9)  219: 9/8
    (Info: triOk;            Val: '1'),                                                                 // (10,10)  220: 9/9
    (Info: triOk;            Val: '9/10'),                                                              // (10,11)  221: 9/10
    (Info: triOk;            Val: '9/1000'),                                                            // (10,12)  222: 9/1000
    (Info: triOk;            Val: '-9/1000000'),                                                        // (10,13)  223: 9/-1000000
    (Info: triOk;            Val: '9/31'),                                                              // (10,14)  224: 9/31
    (Info: triOk;            Val: '9/37'),                                                              // (10,15)  225: 9/37
    (Info: triOk;            Val: '9/1147'),                                                            // (10,16)  226: 9/1147
    (Info: triOk;            Val: '9/59'),                                                              // (10,17)  227: 9/59
    (Info: triOk;            Val: '9/1829'),                                                            // (10,18)  228: 9/1829
    (Info: triOk;            Val: '9/2183'),                                                            // (10,19)  229: 9/2183
    (Info: triOk;            Val: '9/67673'),                                                           // (10,20)  230: 9/67673
    (Info: triOk;            Val: '10'),                                                                // (11, 0)  231: 10/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (11, 1)  232: 10/0
    (Info: triOk;            Val: '-10'),                                                               // (11, 2)  233: 10/-1
    (Info: triOk;            Val: '5'),                                                                 // (11, 3)  234: 10/2
    (Info: triOk;            Val: '10/3'),                                                              // (11, 4)  235: 10/3
    (Info: triOk;            Val: '5/2'),                                                               // (11, 5)  236: 10/4
    (Info: triOk;            Val: '2'),                                                                 // (11, 6)  237: 10/5
    (Info: triOk;            Val: '5/3'),                                                               // (11, 7)  238: 10/6
    (Info: triOk;            Val: '10/7'),                                                              // (11, 8)  239: 10/7
    (Info: triOk;            Val: '5/4'),                                                               // (11, 9)  240: 10/8
    (Info: triOk;            Val: '10/9'),                                                              // (11,10)  241: 10/9
    (Info: triOk;            Val: '1'),                                                                 // (11,11)  242: 10/10
    (Info: triOk;            Val: '1/100'),                                                             // (11,12)  243: 10/1000
    (Info: triOk;            Val: '-1/100000'),                                                         // (11,13)  244: 10/-1000000
    (Info: triOk;            Val: '10/31'),                                                             // (11,14)  245: 10/31
    (Info: triOk;            Val: '10/37'),                                                             // (11,15)  246: 10/37
    (Info: triOk;            Val: '10/1147'),                                                           // (11,16)  247: 10/1147
    (Info: triOk;            Val: '10/59'),                                                             // (11,17)  248: 10/59
    (Info: triOk;            Val: '10/1829'),                                                           // (11,18)  249: 10/1829
    (Info: triOk;            Val: '10/2183'),                                                           // (11,19)  250: 10/2183
    (Info: triOk;            Val: '10/67673'),                                                          // (11,20)  251: 10/67673
    (Info: triOk;            Val: '1000'),                                                              // (12, 0)  252: 1000/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (12, 1)  253: 1000/0
    (Info: triOk;            Val: '-1000'),                                                             // (12, 2)  254: 1000/-1
    (Info: triOk;            Val: '500'),                                                               // (12, 3)  255: 1000/2
    (Info: triOk;            Val: '1000/3'),                                                            // (12, 4)  256: 1000/3
    (Info: triOk;            Val: '250'),                                                               // (12, 5)  257: 1000/4
    (Info: triOk;            Val: '200'),                                                               // (12, 6)  258: 1000/5
    (Info: triOk;            Val: '500/3'),                                                             // (12, 7)  259: 1000/6
    (Info: triOk;            Val: '1000/7'),                                                            // (12, 8)  260: 1000/7
    (Info: triOk;            Val: '125'),                                                               // (12, 9)  261: 1000/8
    (Info: triOk;            Val: '1000/9'),                                                            // (12,10)  262: 1000/9
    (Info: triOk;            Val: '100'),                                                               // (12,11)  263: 1000/10
    (Info: triOk;            Val: '1'),                                                                 // (12,12)  264: 1000/1000
    (Info: triOk;            Val: '-1/1000'),                                                           // (12,13)  265: 1000/-1000000
    (Info: triOk;            Val: '1000/31'),                                                           // (12,14)  266: 1000/31
    (Info: triOk;            Val: '1000/37'),                                                           // (12,15)  267: 1000/37
    (Info: triOk;            Val: '1000/1147'),                                                         // (12,16)  268: 1000/1147
    (Info: triOk;            Val: '1000/59'),                                                           // (12,17)  269: 1000/59
    (Info: triOk;            Val: '1000/1829'),                                                         // (12,18)  270: 1000/1829
    (Info: triOk;            Val: '1000/2183'),                                                         // (12,19)  271: 1000/2183
    (Info: triOk;            Val: '1000/67673'),                                                        // (12,20)  272: 1000/67673
    (Info: triOk;            Val: '-1000000'),                                                          // (13, 0)  273: -1000000/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (13, 1)  274: -1000000/0
    (Info: triOk;            Val: '1000000'),                                                           // (13, 2)  275: -1000000/-1
    (Info: triOk;            Val: '-500000'),                                                           // (13, 3)  276: -1000000/2
    (Info: triOk;            Val: '-1000000/3'),                                                        // (13, 4)  277: -1000000/3
    (Info: triOk;            Val: '-250000'),                                                           // (13, 5)  278: -1000000/4
    (Info: triOk;            Val: '-200000'),                                                           // (13, 6)  279: -1000000/5
    (Info: triOk;            Val: '-500000/3'),                                                         // (13, 7)  280: -1000000/6
    (Info: triOk;            Val: '-1000000/7'),                                                        // (13, 8)  281: -1000000/7
    (Info: triOk;            Val: '-125000'),                                                           // (13, 9)  282: -1000000/8
    (Info: triOk;            Val: '-1000000/9'),                                                        // (13,10)  283: -1000000/9
    (Info: triOk;            Val: '-100000'),                                                           // (13,11)  284: -1000000/10
    (Info: triOk;            Val: '-1000'),                                                             // (13,12)  285: -1000000/1000
    (Info: triOk;            Val: '1'),                                                                 // (13,13)  286: -1000000/-1000000
    (Info: triOk;            Val: '-1000000/31'),                                                       // (13,14)  287: -1000000/31
    (Info: triOk;            Val: '-1000000/37'),                                                       // (13,15)  288: -1000000/37
    (Info: triOk;            Val: '-1000000/1147'),                                                     // (13,16)  289: -1000000/1147
    (Info: triOk;            Val: '-1000000/59'),                                                       // (13,17)  290: -1000000/59
    (Info: triOk;            Val: '-1000000/1829'),                                                     // (13,18)  291: -1000000/1829
    (Info: triOk;            Val: '-1000000/2183'),                                                     // (13,19)  292: -1000000/2183
    (Info: triOk;            Val: '-1000000/67673'),                                                    // (13,20)  293: -1000000/67673
    (Info: triOk;            Val: '31'),                                                                // (14, 0)  294: 31/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (14, 1)  295: 31/0
    (Info: triOk;            Val: '-31'),                                                               // (14, 2)  296: 31/-1
    (Info: triOk;            Val: '31/2'),                                                              // (14, 3)  297: 31/2
    (Info: triOk;            Val: '31/3'),                                                              // (14, 4)  298: 31/3
    (Info: triOk;            Val: '31/4'),                                                              // (14, 5)  299: 31/4
    (Info: triOk;            Val: '31/5'),                                                              // (14, 6)  300: 31/5
    (Info: triOk;            Val: '31/6'),                                                              // (14, 7)  301: 31/6
    (Info: triOk;            Val: '31/7'),                                                              // (14, 8)  302: 31/7
    (Info: triOk;            Val: '31/8'),                                                              // (14, 9)  303: 31/8
    (Info: triOk;            Val: '31/9'),                                                              // (14,10)  304: 31/9
    (Info: triOk;            Val: '31/10'),                                                             // (14,11)  305: 31/10
    (Info: triOk;            Val: '31/1000'),                                                           // (14,12)  306: 31/1000
    (Info: triOk;            Val: '-31/1000000'),                                                       // (14,13)  307: 31/-1000000
    (Info: triOk;            Val: '1'),                                                                 // (14,14)  308: 31/31
    (Info: triOk;            Val: '31/37'),                                                             // (14,15)  309: 31/37
    (Info: triOk;            Val: '1/37'),                                                              // (14,16)  310: 31/1147
    (Info: triOk;            Val: '31/59'),                                                             // (14,17)  311: 31/59
    (Info: triOk;            Val: '1/59'),                                                              // (14,18)  312: 31/1829
    (Info: triOk;            Val: '31/2183'),                                                           // (14,19)  313: 31/2183
    (Info: triOk;            Val: '1/2183'),                                                            // (14,20)  314: 31/67673
    (Info: triOk;            Val: '37'),                                                                // (15, 0)  315: 37/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (15, 1)  316: 37/0
    (Info: triOk;            Val: '-37'),                                                               // (15, 2)  317: 37/-1
    (Info: triOk;            Val: '37/2'),                                                              // (15, 3)  318: 37/2
    (Info: triOk;            Val: '37/3'),                                                              // (15, 4)  319: 37/3
    (Info: triOk;            Val: '37/4'),                                                              // (15, 5)  320: 37/4
    (Info: triOk;            Val: '37/5'),                                                              // (15, 6)  321: 37/5
    (Info: triOk;            Val: '37/6'),                                                              // (15, 7)  322: 37/6
    (Info: triOk;            Val: '37/7'),                                                              // (15, 8)  323: 37/7
    (Info: triOk;            Val: '37/8'),                                                              // (15, 9)  324: 37/8
    (Info: triOk;            Val: '37/9'),                                                              // (15,10)  325: 37/9
    (Info: triOk;            Val: '37/10'),                                                             // (15,11)  326: 37/10
    (Info: triOk;            Val: '37/1000'),                                                           // (15,12)  327: 37/1000
    (Info: triOk;            Val: '-37/1000000'),                                                       // (15,13)  328: 37/-1000000
    (Info: triOk;            Val: '37/31'),                                                             // (15,14)  329: 37/31
    (Info: triOk;            Val: '1'),                                                                 // (15,15)  330: 37/37
    (Info: triOk;            Val: '1/31'),                                                              // (15,16)  331: 37/1147
    (Info: triOk;            Val: '37/59'),                                                             // (15,17)  332: 37/59
    (Info: triOk;            Val: '37/1829'),                                                           // (15,18)  333: 37/1829
    (Info: triOk;            Val: '1/59'),                                                              // (15,19)  334: 37/2183
    (Info: triOk;            Val: '1/1829'),                                                            // (15,20)  335: 37/67673
    (Info: triOk;            Val: '1147'),                                                              // (16, 0)  336: 1147/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (16, 1)  337: 1147/0
    (Info: triOk;            Val: '-1147'),                                                             // (16, 2)  338: 1147/-1
    (Info: triOk;            Val: '1147/2'),                                                            // (16, 3)  339: 1147/2
    (Info: triOk;            Val: '1147/3'),                                                            // (16, 4)  340: 1147/3
    (Info: triOk;            Val: '1147/4'),                                                            // (16, 5)  341: 1147/4
    (Info: triOk;            Val: '1147/5'),                                                            // (16, 6)  342: 1147/5
    (Info: triOk;            Val: '1147/6'),                                                            // (16, 7)  343: 1147/6
    (Info: triOk;            Val: '1147/7'),                                                            // (16, 8)  344: 1147/7
    (Info: triOk;            Val: '1147/8'),                                                            // (16, 9)  345: 1147/8
    (Info: triOk;            Val: '1147/9'),                                                            // (16,10)  346: 1147/9
    (Info: triOk;            Val: '1147/10'),                                                           // (16,11)  347: 1147/10
    (Info: triOk;            Val: '1147/1000'),                                                         // (16,12)  348: 1147/1000
    (Info: triOk;            Val: '-1147/1000000'),                                                     // (16,13)  349: 1147/-1000000
    (Info: triOk;            Val: '37'),                                                                // (16,14)  350: 1147/31
    (Info: triOk;            Val: '31'),                                                                // (16,15)  351: 1147/37
    (Info: triOk;            Val: '1'),                                                                 // (16,16)  352: 1147/1147
    (Info: triOk;            Val: '1147/59'),                                                           // (16,17)  353: 1147/59
    (Info: triOk;            Val: '37/59'),                                                             // (16,18)  354: 1147/1829
    (Info: triOk;            Val: '31/59'),                                                             // (16,19)  355: 1147/2183
    (Info: triOk;            Val: '1/59'),                                                              // (16,20)  356: 1147/67673
    (Info: triOk;            Val: '59'),                                                                // (17, 0)  357: 59/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (17, 1)  358: 59/0
    (Info: triOk;            Val: '-59'),                                                               // (17, 2)  359: 59/-1
    (Info: triOk;            Val: '59/2'),                                                              // (17, 3)  360: 59/2
    (Info: triOk;            Val: '59/3'),                                                              // (17, 4)  361: 59/3
    (Info: triOk;            Val: '59/4'),                                                              // (17, 5)  362: 59/4
    (Info: triOk;            Val: '59/5'),                                                              // (17, 6)  363: 59/5
    (Info: triOk;            Val: '59/6'),                                                              // (17, 7)  364: 59/6
    (Info: triOk;            Val: '59/7'),                                                              // (17, 8)  365: 59/7
    (Info: triOk;            Val: '59/8'),                                                              // (17, 9)  366: 59/8
    (Info: triOk;            Val: '59/9'),                                                              // (17,10)  367: 59/9
    (Info: triOk;            Val: '59/10'),                                                             // (17,11)  368: 59/10
    (Info: triOk;            Val: '59/1000'),                                                           // (17,12)  369: 59/1000
    (Info: triOk;            Val: '-59/1000000'),                                                       // (17,13)  370: 59/-1000000
    (Info: triOk;            Val: '59/31'),                                                             // (17,14)  371: 59/31
    (Info: triOk;            Val: '59/37'),                                                             // (17,15)  372: 59/37
    (Info: triOk;            Val: '59/1147'),                                                           // (17,16)  373: 59/1147
    (Info: triOk;            Val: '1'),                                                                 // (17,17)  374: 59/59
    (Info: triOk;            Val: '1/31'),                                                              // (17,18)  375: 59/1829
    (Info: triOk;            Val: '1/37'),                                                              // (17,19)  376: 59/2183
    (Info: triOk;            Val: '1/1147'),                                                            // (17,20)  377: 59/67673
    (Info: triOk;            Val: '1829'),                                                              // (18, 0)  378: 1829/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (18, 1)  379: 1829/0
    (Info: triOk;            Val: '-1829'),                                                             // (18, 2)  380: 1829/-1
    (Info: triOk;            Val: '1829/2'),                                                            // (18, 3)  381: 1829/2
    (Info: triOk;            Val: '1829/3'),                                                            // (18, 4)  382: 1829/3
    (Info: triOk;            Val: '1829/4'),                                                            // (18, 5)  383: 1829/4
    (Info: triOk;            Val: '1829/5'),                                                            // (18, 6)  384: 1829/5
    (Info: triOk;            Val: '1829/6'),                                                            // (18, 7)  385: 1829/6
    (Info: triOk;            Val: '1829/7'),                                                            // (18, 8)  386: 1829/7
    (Info: triOk;            Val: '1829/8'),                                                            // (18, 9)  387: 1829/8
    (Info: triOk;            Val: '1829/9'),                                                            // (18,10)  388: 1829/9
    (Info: triOk;            Val: '1829/10'),                                                           // (18,11)  389: 1829/10
    (Info: triOk;            Val: '1829/1000'),                                                         // (18,12)  390: 1829/1000
    (Info: triOk;            Val: '-1829/1000000'),                                                     // (18,13)  391: 1829/-1000000
    (Info: triOk;            Val: '59'),                                                                // (18,14)  392: 1829/31
    (Info: triOk;            Val: '1829/37'),                                                           // (18,15)  393: 1829/37
    (Info: triOk;            Val: '59/37'),                                                             // (18,16)  394: 1829/1147
    (Info: triOk;            Val: '31'),                                                                // (18,17)  395: 1829/59
    (Info: triOk;            Val: '1'),                                                                 // (18,18)  396: 1829/1829
    (Info: triOk;            Val: '31/37'),                                                             // (18,19)  397: 1829/2183
    (Info: triOk;            Val: '1/37'),                                                              // (18,20)  398: 1829/67673
    (Info: triOk;            Val: '2183'),                                                              // (19, 0)  399: 2183/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (19, 1)  400: 2183/0
    (Info: triOk;            Val: '-2183'),                                                             // (19, 2)  401: 2183/-1
    (Info: triOk;            Val: '2183/2'),                                                            // (19, 3)  402: 2183/2
    (Info: triOk;            Val: '2183/3'),                                                            // (19, 4)  403: 2183/3
    (Info: triOk;            Val: '2183/4'),                                                            // (19, 5)  404: 2183/4
    (Info: triOk;            Val: '2183/5'),                                                            // (19, 6)  405: 2183/5
    (Info: triOk;            Val: '2183/6'),                                                            // (19, 7)  406: 2183/6
    (Info: triOk;            Val: '2183/7'),                                                            // (19, 8)  407: 2183/7
    (Info: triOk;            Val: '2183/8'),                                                            // (19, 9)  408: 2183/8
    (Info: triOk;            Val: '2183/9'),                                                            // (19,10)  409: 2183/9
    (Info: triOk;            Val: '2183/10'),                                                           // (19,11)  410: 2183/10
    (Info: triOk;            Val: '2183/1000'),                                                         // (19,12)  411: 2183/1000
    (Info: triOk;            Val: '-2183/1000000'),                                                     // (19,13)  412: 2183/-1000000
    (Info: triOk;            Val: '2183/31'),                                                           // (19,14)  413: 2183/31
    (Info: triOk;            Val: '59'),                                                                // (19,15)  414: 2183/37
    (Info: triOk;            Val: '59/31'),                                                             // (19,16)  415: 2183/1147
    (Info: triOk;            Val: '37'),                                                                // (19,17)  416: 2183/59
    (Info: triOk;            Val: '37/31'),                                                             // (19,18)  417: 2183/1829
    (Info: triOk;            Val: '1'),                                                                 // (19,19)  418: 2183/2183
    (Info: triOk;            Val: '1/31'),                                                              // (19,20)  419: 2183/67673
    (Info: triOk;            Val: '67673'),                                                             // (20, 0)  420: 67673/1
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // (20, 1)  421: 67673/0
    (Info: triOk;            Val: '-67673'),                                                            // (20, 2)  422: 67673/-1
    (Info: triOk;            Val: '67673/2'),                                                           // (20, 3)  423: 67673/2
    (Info: triOk;            Val: '67673/3'),                                                           // (20, 4)  424: 67673/3
    (Info: triOk;            Val: '67673/4'),                                                           // (20, 5)  425: 67673/4
    (Info: triOk;            Val: '67673/5'),                                                           // (20, 6)  426: 67673/5
    (Info: triOk;            Val: '67673/6'),                                                           // (20, 7)  427: 67673/6
    (Info: triOk;            Val: '67673/7'),                                                           // (20, 8)  428: 67673/7
    (Info: triOk;            Val: '67673/8'),                                                           // (20, 9)  429: 67673/8
    (Info: triOk;            Val: '67673/9'),                                                           // (20,10)  430: 67673/9
    (Info: triOk;            Val: '67673/10'),                                                          // (20,11)  431: 67673/10
    (Info: triOk;            Val: '67673/1000'),                                                        // (20,12)  432: 67673/1000
    (Info: triOk;            Val: '-67673/1000000'),                                                    // (20,13)  433: 67673/-1000000
    (Info: triOk;            Val: '2183'),                                                              // (20,14)  434: 67673/31
    (Info: triOk;            Val: '1829'),                                                              // (20,15)  435: 67673/37
    (Info: triOk;            Val: '59'),                                                                // (20,16)  436: 67673/1147
    (Info: triOk;            Val: '1147'),                                                              // (20,17)  437: 67673/59
    (Info: triOk;            Val: '37'),                                                                // (20,18)  438: 67673/1829
    (Info: triOk;            Val: '31'),                                                                // (20,19)  439: 67673/2183
    (Info: triOk;            Val: '1')                                                                  // (20,20)  440: 67673/67673
  );

  DoubleCtorResultCount = 101;
  DoubleCtorResults: array[0..DoubleCtorResultCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '7/40480450661462123670499069343783461409911329952828423671380271' + 
                                  '6054860679135990693783920767402874248990374155728633623822779617' + 
                                  '4747715869537340267998814770198430348485531327227289338154841864' + 
                                  '3268247953535694549013712401496684938539723620671129831911268162' + 
                                  '0113024717539104666829230461005064372655017292012526615415482186' + 
                                  '989568'),                                                            // ( 0)    0: BigRational.Create(3.5000000000000000000e-323)
    (Info: triOk;            Val: '-600000000000000000000'),                                            // ( 1)    1: BigRational.Create(-6.0000000000000000000e+20)
    (Info: triOk;            Val: '-100000000000000000000'),                                            // ( 2)    2: BigRational.Create(-1.0000000000000000000e+20)
    (Info: triOk;            Val: '-1975954336508805/562949953421312'),                                 // ( 3)    3: BigRational.Create(-3.5100000000000000000)
    (Info: triOk;            Val: '-7/2'),                                                              // ( 4)    4: BigRational.Create(-3.5000000000000000000)
    (Info: triOk;            Val: '-1964695337440379/562949953421312'),                                 // ( 5)    5: BigRational.Create(-3.4900000000000000000)
    (Info: triOk;            Val: '-1413004383087493/562949953421312'),                                 // ( 6)    6: BigRational.Create(-2.5100000000000000000)
    (Info: triOk;            Val: '-5/2'),                                                              // ( 7)    7: BigRational.Create(-2.5000000000000000000)
    (Info: triOk;            Val: '-1401745384019067/562949953421312'),                                 // ( 8)    8: BigRational.Create(-2.4900000000000000000)
    (Info: triOk;            Val: '-492525077454931/24626253872746549507674400062589758628174837044' + 
                                  '0409041674676833776535761071857566321339164093030722755041424939' + 
                                  '4176'),                                                              // ( 9)    9: BigRational.Create(-2.0000000000000000000e-100)
    (Info: triOk;            Val: '0'),                                                                 // (10)   10: BigRational.Create(0.0000000000000000000)
    (Info: triOk;            Val: '5289050460814003/75557863725914323419136'),                          // (11)   11: BigRational.Create(7.0000000000000000000e-08)
    (Info: triOk;            Val: '7378697629483821/73786976294838206464'),                             // (12)   12: BigRational.Create(0.00010000000000000000000)
    (Info: triOk;            Val: '3602879701896397/36028797018963968'),                                // (13)   13: BigRational.Create(0.10000000000000000000)
    (Info: triOk;            Val: '3602879701896397/18014398509481984'),                                // (14)   14: BigRational.Create(0.20000000000000000000)
    (Info: triOk;            Val: '5404319552844595/18014398509481984'),                                // (15)   15: BigRational.Create(0.30000000000000000000)
    (Info: triOk;            Val: '3602879701896397/9007199254740992'),                                 // (16)   16: BigRational.Create(0.40000000000000000000)
    (Info: triOk;            Val: '2251799813685203/4503599627370496'),                                 // (17)   17: BigRational.Create(0.49999999999999000000)
    (Info: triOk;            Val: '1/2'),                                                               // (18)   18: BigRational.Create(0.50000000000000000000)
    (Info: triOk;            Val: '4503599717442489/9007199254740992'),                                 // (19)   19: BigRational.Create(0.50000001000000000000)
    (Info: triOk;            Val: '3152519739159347/4503599627370496'),                                 // (20)   20: BigRational.Create(0.70000000000000000000)
    (Info: triOk;            Val: '8106479329266893/9007199254740992'),                                 // (21)   21: BigRational.Create(0.90000000000000000000)
    (Info: triOk;            Val: '1'),                                                                 // (22)   22: BigRational.Create(1.0000000000000000000)
    (Info: triOk;            Val: '4503599627370541/4503599627370496'),                                 // (23)   23: BigRational.Create(1.0000000000000100000)
    (Info: triOk;            Val: '2476979795053773/2251799813685248'),                                 // (24)   24: BigRational.Create(1.1000000000000000000)
    (Info: triOk;            Val: '6755399441055699/4503599627370496'),                                 // (25)   25: BigRational.Create(1.4999999999999900000)
    (Info: triOk;            Val: '3/2'),                                                               // (26)   26: BigRational.Create(1.5000000000000000000)
    (Info: triOk;            Val: '6755399441055789/4503599627370496'),                                 // (27)   27: BigRational.Create(1.5000000000000100000)
    (Info: triOk;            Val: '9006748894778255/4503599627370496'),                                 // (28)   28: BigRational.Create(1.9999000000000000000)
    (Info: triOk;            Val: '2'),                                                                 // (29)   29: BigRational.Create(2.0000000000000000000)
    (Info: triOk;            Val: '1401745384019067/562949953421312'),                                  // (30)   30: BigRational.Create(2.4900000000000000000)
    (Info: triOk;            Val: '5/2'),                                                               // (31)   31: BigRational.Create(2.5000000000000000000)
    (Info: triOk;            Val: '1413004383087493/562949953421312'),                                  // (32)   32: BigRational.Create(2.5100000000000000000)
    (Info: triOk;            Val: '3'),                                                                 // (33)   33: BigRational.Create(3.0000000000000000000)
    (Info: triOk;            Val: '1964695337440379/562949953421312'),                                  // (34)   34: BigRational.Create(3.4900000000000000000)
    (Info: triOk;            Val: '7/2'),                                                               // (35)   35: BigRational.Create(3.5000000000000000000)
    (Info: triOk;            Val: '1975954336508805/562949953421312'),                                  // (36)   36: BigRational.Create(3.5100000000000000000)
    (Info: triOk;            Val: '4'),                                                                 // (37)   37: BigRational.Create(4.0000000000000000000)
    (Info: triOk;            Val: '2308094809027379/562949953421312'),                                  // (38)   38: BigRational.Create(4.1000000000000000000)
    (Info: triOk;            Val: '4728779608739021/1125899906842624'),                                 // (39)   39: BigRational.Create(4.2000000000000000000)
    (Info: triOk;            Val: '2476979795053773/562949953421312'),                                  // (40)   40: BigRational.Create(4.4000000000000000000)
    (Info: triOk;            Val: '9/2'),                                                               // (41)   41: BigRational.Create(4.5000000000000000000)
    (Info: triOk;            Val: '2589569785738035/562949953421312'),                                  // (42)   42: BigRational.Create(4.6000000000000000000)
    (Info: triOk;            Val: '1407346736055609/281474976710656'),                                  // (43)   43: BigRational.Create(4.9999000000000000000)
    (Info: triOk;            Val: '5'),                                                                 // (44)   44: BigRational.Create(5.0000000000000000000)
    (Info: triOk;            Val: '6'),                                                                 // (45)   45: BigRational.Create(6.0000000000000000000)
    (Info: triOk;            Val: '7'),                                                                 // (46)   46: BigRational.Create(7.0000000000000000000)
    (Info: triOk;            Val: '8'),                                                                 // (47)   47: BigRational.Create(8.0000000000000000000)
    (Info: triOk;            Val: '9'),                                                                 // (48)   48: BigRational.Create(9.0000000000000000000)
    (Info: triOk;            Val: '10'),                                                                // (49)   49: BigRational.Create(10.000000000000000000)
    (Info: triOk;            Val: '15'),                                                                // (50)   50: BigRational.Create(15.000000000000000000)
    (Info: triOk;            Val: '22'),                                                                // (51)   51: BigRational.Create(22.000000000000000000)
    (Info: triOk;            Val: '44'),                                                                // (52)   52: BigRational.Create(44.000000000000000000)
    (Info: triOk;            Val: '85'),                                                                // (53)   53: BigRational.Create(85.000000000000000000)
    (Info: triOk;            Val: '128'),                                                               // (54)   54: BigRational.Create(128.00000000000000000)
    (Info: triOk;            Val: '256'),                                                               // (55)   55: BigRational.Create(256.00000000000000000)
    (Info: triOk;            Val: '2252679422987469/8796093022208'),                                    // (56)   56: BigRational.Create(256.10000000000000000)
    (Info: triOk;            Val: '513/2'),                                                             // (57)   57: BigRational.Create(256.50000000000000000)
    (Info: triOk;            Val: '4515914157601587/17592186044416'),                                   // (58)   58: BigRational.Create(256.70000000000000000)
    (Info: triOk;            Val: '300'),                                                               // (59)   59: BigRational.Create(300.00000000000000000)
    (Info: triOk;            Val: '3855077810916149/4398046511104'),                                    // (60)   60: BigRational.Create(876.54321098765400000)
    (Info: triOk;            Val: '645000'),                                                            // (61)   61: BigRational.Create(645000.00000000000000)
    (Info: triOk;            Val: '2000001/2'),                                                         // (62)   62: BigRational.Create(1000000.5000000000000)
    (Info: triOk;            Val: '2000001/2'),                                                         // (63)   63: BigRational.Create(1000000.5000000000000)
    (Info: triOk;            Val: '2000001/2'),                                                         // (64)   64: BigRational.Create(1000000.5000000000000)
    (Info: triOk;            Val: '2251800028433613/2147483648'),                                       // (65)   65: BigRational.Create(1048576.1000000000000)
    (Info: triOk;            Val: '2097153/2'),                                                         // (66)   66: BigRational.Create(1048576.5000000000000)
    (Info: triOk;            Val: '10000000000'),                                                       // (67)   67: BigRational.Create(10000000000.000000000)
    (Info: triOk;            Val: '14900000000'),                                                       // (68)   68: BigRational.Create(14900000000.000000000)
    (Info: triOk;            Val: '15000000000'),                                                       // (69)   69: BigRational.Create(15000000000.000000000)
    (Info: triOk;            Val: '15100000000'),                                                       // (70)   70: BigRational.Create(15100000000.000000000)
    (Info: triOk;            Val: '31415920000'),                                                       // (71)   71: BigRational.Create(31415920000.000000000)
    (Info: triOk;            Val: '100000000000'),                                                      // (72)   72: BigRational.Create(100000000000.00000000)
    (Info: triOk;            Val: '1000000000000'),                                                     // (73)   73: BigRational.Create(1000000000000.0000000)
    (Info: triOk;            Val: '10000000000000'),                                                    // (74)   74: BigRational.Create(10000000000000.000000)
    (Info: triOk;            Val: '100000000000000'),                                                   // (75)   75: BigRational.Create(100000000000000.00000)
    (Info: triOk;            Val: '1000000000000000'),                                                  // (76)   76: BigRational.Create(1000000000000000.0000)
    (Info: triOk;            Val: '2000000000000000'),                                                  // (77)   77: BigRational.Create(2000000000000000.0000)
    (Info: triOk;            Val: '4000000000000000'),                                                  // (78)   78: BigRational.Create(4000000000000000.0000)
    (Info: triOk;            Val: '4900000000000000'),                                                  // (79)   79: BigRational.Create(4900000000000000.0000)
    (Info: triOk;            Val: '8000000000000000'),                                                  // (80)   80: BigRational.Create(8000000000000000.0000)
    (Info: triOk;            Val: '10000000000000000'),                                                 // (81)   81: BigRational.Create(10000000000000000.000)
    (Info: triOk;            Val: '20000000000000000'),                                                 // (82)   82: BigRational.Create(20000000000000000.000)
    (Info: triOk;            Val: '40000000000000000'),                                                 // (83)   83: BigRational.Create(40000000000000000.000)
    (Info: triOk;            Val: '50000000000000000'),                                                 // (84)   84: BigRational.Create(50000000000000000.000)
    (Info: triOk;            Val: '100000000000000000'),                                                // (85)   85: BigRational.Create(100000000000000000.00)
    (Info: triOk;            Val: '1000000000000000000'),                                               // (86)   86: BigRational.Create(1000000000000000000.0)
    (Info: triOk;            Val: '10000000000000000000'),                                              // (87)   87: BigRational.Create(10000000000000000000)
    (Info: triOk;            Val: '12345678901234599936'),                                              // (88)   88: BigRational.Create(12345678901234600000)
    (Info: triOk;            Val: '100000000000000000000'),                                             // (89)   89: BigRational.Create(1.0000000000000000000e+20)
    (Info: triOk;            Val: '100000000000001'),                                                   // (90)   90: BigRational.Create(100000000000001.00000)
    (Info: triOk;            Val: '100000000000002'),                                                   // (91)   91: BigRational.Create(100000000000002.00000)
    (Info: triOk;            Val: '100000000000004'),                                                   // (92)   92: BigRational.Create(100000000000004.00000)
    (Info: triOk;            Val: '100000000000008'),                                                   // (93)   93: BigRational.Create(100000000000008.00000)
    (Info: triOk;            Val: '100000000000016'),                                                   // (94)   94: BigRational.Create(100000000000016.00000)
    (Info: triOk;            Val: '100000000000032'),                                                   // (95)   95: BigRational.Create(100000000000032.00000)
    (Info: triOk;            Val: '100000000000064'),                                                   // (96)   96: BigRational.Create(100000000000064.00000)
    (Info: triOk;            Val: '100000000000128'),                                                   // (97)   97: BigRational.Create(100000000000128.00000)
    (Info: triOk;            Val: '100000000000256'),                                                   // (98)   98: BigRational.Create(100000000000256.00000)
    (Info: triOk;            Val: '100000000000512'),                                                   // (99)   99: BigRational.Create(100000000000512.00000)
    (Info: triOk;            Val: '1000000000000000000266098647083672765374024011812008090981319774' + 
                                  '53489758916313088')                                                  // (100)  100: BigRational.Create(1.0000000000000000000e+80)
  );

  BigDecimalCtorResultCount = 64;
  BigDecimalCtorResults: array[0..BigDecimalCtorResultCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '0'),                                                                 // ( 0): BigRational.Create(BigDecimal('0'))
    (Info: triOk;            Val: '0'),                                                                 // ( 1): BigRational.Create(BigDecimal('-0.00'))
    (Info: triOk;            Val: '1'),                                                                 // ( 2): BigRational.Create(BigDecimal('1'))
    (Info: triOk;            Val: '-1'),                                                                // ( 3): BigRational.Create(BigDecimal('-1.00'))
    (Info: triOk;            Val: '2'),                                                                 // ( 4): BigRational.Create(BigDecimal('2.0000'))
    (Info: triOk;            Val: '10'),                                                                // ( 5): BigRational.Create(BigDecimal('10'))
    (Info: triOk;            Val: '10000000000000000'),                                                 // ( 6): BigRational.Create(BigDecimal('1e16'))
    (Info: triOk;            Val: '1/10000000000000000'),                                               // ( 7): BigRational.Create(BigDecimal('1e-16'))
    (Info: triOk;            Val: '1/10'),                                                              // ( 8): BigRational.Create(BigDecimal('0.1'))
    (Info: triOk;            Val: '1790000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000000000000000000000'),             // ( 9): BigRational.Create(BigDecimal('1.79e+308'))
    (Info: triOk;            Val: '3790000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000000000000000000000'),             // (10): BigRational.Create(BigDecimal('3.79e+308'))
    (Info: triOk;            Val: '4940656458412465443/10000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000'),                       // (11): BigRational.Create(BigDecimal('4.940656458412465443e-324'))
    (Info: triOk;            Val: '1/12500000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '000000'),                                                            // (12): BigRational.Create(BigDecimal('8.0e-324'))
    (Info: triOk;            Val: '1929/15625000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000000000000000000000000000' + 
                                  '000000000000000'),                                                   // (13): BigRational.Create(BigDecimal('1.23456e-326'))
    (Info: triOk;            Val: '1/1000'),                                                            // (14): BigRational.Create(BigDecimal('0.001'))
    (Info: triOk;            Val: '54365636569180904707205749427053249955144941873999/2000000000000' + 
                                  '0000000000000000000000000000000000000'),                             // (15): BigRational.Create(BigDecimal('2.71828182845904523536028747135266249775724709369995'))
    (Info: triOk;            Val: '14488038916154245685/4611686018427387904'),                          // (16): BigRational.Create(BigDecimal('3.14159265358979323851280895940618620443274267017841339111328125'))
    (Info: triOk;            Val: '79228162514264337593543950335'),                                     // (17): BigRational.Create(BigDecimal('79228162514264337593543950335'))
    (Info: triOk;            Val: '-79228162514264337593543950335'),                                    // (18): BigRational.Create(BigDecimal('-79228162514264337593543950335'))
    (Info: triOk;            Val: '6925825616772990152332969883/250'),                                  // (19): BigRational.Create(BigDecimal('27703302467091960609331879.532'))
    (Info: triOk;            Val: '-6925825616772990152332969883/250'),                                 // (20): BigRational.Create(BigDecimal('-27703302467091960609331879.532'))
    (Info: triOk;            Val: '-16019274779984090746256692509/5000000000000000000000'),             // (21): BigRational.Create(BigDecimal('-3203854.9559968181492513385018'))
    (Info: triOk;            Val: '-12116717611047218449105007217/250000'),                             // (22): BigRational.Create(BigDecimal('-48466870444188873796420.028868'))
    (Info: triOk;            Val: '-13629842331070119857582843669/25000000000'),                        // (23): BigRational.Create(BigDecimal('-545193693242804794.30331374676'))
    (Info: triOk;            Val: '7629234053338741809892531431/10000000000000000000000000000'),        // (24): BigRational.Create(BigDecimal('0.7629234053338741809892531431'))
    (Info: triOk;            Val: '-10011326491634284899308368613/25000000'),                           // (25): BigRational.Create(BigDecimal('-400453059665371395972.33474452'))
    (Info: triOk;            Val: '5571290694629792854751265419/25000'),                                // (26): BigRational.Create(BigDecimal('222851627785191714190050.61676'))
    (Info: triOk;            Val: '1780755422400519151707666948/125'),                                  // (27): BigRational.Create(BigDecimal('14246043379204153213661335.584'))
    (Info: triOk;            Val: '-21056165223154345718298324093/50000000000000000000000'),            // (28): BigRational.Create(BigDecimal('-421123.30446308691436596648186'))
    (Info: triOk;            Val: '12231644369149772600254449321/500000000000'),                        // (29): BigRational.Create(BigDecimal('24463288738299545.200508898642'))
    (Info: triOk;            Val: '-5323259153836385912697776001/1000'),                                // (30): BigRational.Create(BigDecimal('-5323259153836385912697776.001'))
    (Info: triOk;            Val: '10280106619980583472467316919/100'),                                 // (31): BigRational.Create(BigDecimal('102801066199805834724673169.19'))
    (Info: triOk;            Val: '2212912737618540224209403999/312500000000000000'),                   // (32): BigRational.Create(BigDecimal('7081320760.3793287174700927968'))
    (Info: triOk;            Val: '41575227393977704245656837041/100000000000000000'),                  // (33): BigRational.Create(BigDecimal('415752273939.77704245656837041'))
    (Info: triOk;            Val: '-31946962449463181336835410231/5000000000000000'),                   // (34): BigRational.Create(BigDecimal('-6389392489892.6362673670820462'))
    (Info: triOk;            Val: '4423462827429150596416330681/10000000000000'),                       // (35): BigRational.Create(BigDecimal('442346282742915.0596416330681'))
    (Info: triOk;            Val: '-12820844521683097255209360941/25000000000000'),                     // (36): BigRational.Create(BigDecimal('-512833780867323.89020837443764'))
    (Info: triOk;            Val: '3044702903454578520725448757/5000000000'),                           // (37): BigRational.Create(BigDecimal('608940580690915704.1450897514'))
    (Info: triOk;            Val: '-42535053313319986966115037787/1000000'),                            // (38): BigRational.Create(BigDecimal('-42535053313319986966115.037787'))
    (Info: triOk;            Val: '-78082745225919531074858812311/10000000'),                           // (39): BigRational.Create(BigDecimal('-7808274522591953107485.8812311'))
    (Info: triOk;            Val: '10378076268042730373300594717/10'),                                  // (40): BigRational.Create(BigDecimal('1037807626804273037330059471.7'))
    (Info: triOk;            Val: '-2498561483224326212885781521/500000000000000000'),                  // (41): BigRational.Create(BigDecimal('-4997122966.448652425771563042'))
    (Info: triOk;            Val: '39614081257132168796771975171/10000'),                               // (42): BigRational.Create(BigDecimal('3961408125713216879677197.5171'))
    (Info: triOk;            Val: '9903520314283042199192993793/2500'),                                 // (43): BigRational.Create(BigDecimal('3961408125713216879677197.5172'))
    (Info: triOk;            Val: '9903520314283042199192993793/10000'),                                // (44): BigRational.Create(BigDecimal('990352031428304219919299.3793'))
    (Info: triOk;            Val: '9223372036854775811/10000'),                                         // (45): BigRational.Create(BigDecimal('922337203685477.5811'))
    (Info: triOk;            Val: '2305843009213693953/1000000000'),                                    // (46): BigRational.Create(BigDecimal('2305843009.213693953'))
    (Info: triOk;            Val: '2251799813685248/9765625'),                                          // (47): BigRational.Create(BigDecimal('230584300.9213693952'))
    (Info: triOk;            Val: '8'),                                                                 // (48): BigRational.Create(BigDecimal('8.00'))
    (Info: triOk;            Val: '2'),                                                                 // (49): BigRational.Create(BigDecimal('2.00'))
    (Info: triOk;            Val: '4294967296/125'),                                                    // (50): BigRational.Create(BigDecimal('34359738.368'))
    (Info: triOk;            Val: '2147483648/25'),                                                     // (51): BigRational.Create(BigDecimal('85899345.92'))
    (Info: triOk;            Val: '1152921504606846976/78125'),                                         // (52): BigRational.Create(BigDecimal('14757395258967.6412928'))
    (Info: triOk;            Val: '576460752303423488/15625'),                                          // (53): BigRational.Create(BigDecimal('36893488147419.103232'))
    (Info: triOk;            Val: '2147483651'),                                                        // (54): BigRational.Create(BigDecimal('2147483651'))
    (Info: triOk;            Val: '536870913'),                                                         // (55): BigRational.Create(BigDecimal('536870913'))
    (Info: triOk;            Val: '110'),                                                               // (56): BigRational.Create(BigDecimal('110'))
    (Info: triOk;            Val: '10000'),                                                             // (57): BigRational.Create(BigDecimal('10000'))
    (Info: triOk;            Val: '123400000000000000'),                                                // (58): BigRational.Create(BigDecimal('1.234e+17'))
    (Info: triOk;            Val: '617/5'),                                                             // (59): BigRational.Create(BigDecimal('1.234e+2'))
    (Info: triOk;            Val: '3'),                                                                 // (60): BigRational.Create(BigDecimal('3.0'))
    (Info: triOk;            Val: '50000001/10000000'),                                                 // (61): BigRational.Create(BigDecimal('5.0000001'))
    (Info: triOk;            Val: '7'),                                                                 // (62): BigRational.Create(BigDecimal('7.000000'))
    (Info: triOk;            Val: '-13000000000000000000750000001/100000000000000000000000000')         // (63): BigRational.Create(BigDecimal('-130.00000000000000000750000001'))
  );

  AddResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '0'),                                                                 //    0: (0) + (0)
    (Info: triOk;            Val: '1'),                                                                 //    1: (0) + (1)
    (Info: triOk;            Val: '1/2'),                                                               //    2: (0) + (1/2)
    (Info: triOk;            Val: '-1/10'),                                                             //    3: (0) + (-1/10)
    (Info: triOk;            Val: '1/100'),                                                             //    4: (0) + (1/100)
    (Info: triOk;            Val: '2/7'),                                                               //    5: (0) + (2/7)
    (Info: triOk;            Val: '-12345'),                                                            //    6: (0) + (-12345)
    (Info: triOk;            Val: '-345/679'),                                                          //    7: (0) + (-345/679)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //    8: (0) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '100'),                                                               //    9: (0) + (100)
    (Info: triOk;            Val: '-10000000'),                                                         //   10: (0) + (-10000000)
    (Info: triOk;            Val: '17'),                                                                //   11: (0) + (17)
    (Info: triOk;            Val: '1/17'),                                                              //   12: (0) + (1/17)
    (Info: triOk;            Val: '31/37'),                                                             //   13: (0) + (31/37)
    (Info: triOk;            Val: '1147/59'),                                                           //   14: (0) + (1147/59)
    (Info: triOk;            Val: '67673'),                                                             //   15: (0) + (67673)
    (Info: triOk;            Val: '1'),                                                                 //   16: (1) + (0)
    (Info: triOk;            Val: '2'),                                                                 //   17: (1) + (1)
    (Info: triOk;            Val: '3/2'),                                                               //   18: (1) + (1/2)
    (Info: triOk;            Val: '9/10'),                                                              //   19: (1) + (-1/10)
    (Info: triOk;            Val: '101/100'),                                                           //   20: (1) + (1/100)
    (Info: triOk;            Val: '9/7'),                                                               //   21: (1) + (2/7)
    (Info: triOk;            Val: '-12344'),                                                            //   22: (1) + (-12345)
    (Info: triOk;            Val: '334/679'),                                                           //   23: (1) + (-345/679)
    (Info: triOk;            Val: '1008888888888887/8888888888888'),                                    //   24: (1) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '101'),                                                               //   25: (1) + (100)
    (Info: triOk;            Val: '-9999999'),                                                          //   26: (1) + (-10000000)
    (Info: triOk;            Val: '18'),                                                                //   27: (1) + (17)
    (Info: triOk;            Val: '18/17'),                                                             //   28: (1) + (1/17)
    (Info: triOk;            Val: '68/37'),                                                             //   29: (1) + (31/37)
    (Info: triOk;            Val: '1206/59'),                                                           //   30: (1) + (1147/59)
    (Info: triOk;            Val: '67674'),                                                             //   31: (1) + (67673)
    (Info: triOk;            Val: '1/2'),                                                               //   32: (1/2) + (0)
    (Info: triOk;            Val: '3/2'),                                                               //   33: (1/2) + (1)
    (Info: triOk;            Val: '1'),                                                                 //   34: (1/2) + (1/2)
    (Info: triOk;            Val: '2/5'),                                                               //   35: (1/2) + (-1/10)
    (Info: triOk;            Val: '51/100'),                                                            //   36: (1/2) + (1/100)
    (Info: triOk;            Val: '11/14'),                                                             //   37: (1/2) + (2/7)
    (Info: triOk;            Val: '-24689/2'),                                                          //   38: (1/2) + (-12345)
    (Info: triOk;            Val: '-11/1358'),                                                          //   39: (1/2) + (-345/679)
    (Info: triOk;            Val: '1004444444444443/8888888888888'),                                    //   40: (1/2) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '201/2'),                                                             //   41: (1/2) + (100)
    (Info: triOk;            Val: '-19999999/2'),                                                       //   42: (1/2) + (-10000000)
    (Info: triOk;            Val: '35/2'),                                                              //   43: (1/2) + (17)
    (Info: triOk;            Val: '19/34'),                                                             //   44: (1/2) + (1/17)
    (Info: triOk;            Val: '99/74'),                                                             //   45: (1/2) + (31/37)
    (Info: triOk;            Val: '2353/118'),                                                          //   46: (1/2) + (1147/59)
    (Info: triOk;            Val: '135347/2'),                                                          //   47: (1/2) + (67673)
    (Info: triOk;            Val: '-1/10'),                                                             //   48: (-1/10) + (0)
    (Info: triOk;            Val: '9/10'),                                                              //   49: (-1/10) + (1)
    (Info: triOk;            Val: '2/5'),                                                               //   50: (-1/10) + (1/2)
    (Info: triOk;            Val: '-1/5'),                                                              //   51: (-1/10) + (-1/10)
    (Info: triOk;            Val: '-9/100'),                                                            //   52: (-1/10) + (1/100)
    (Info: triOk;            Val: '13/70'),                                                             //   53: (-1/10) + (2/7)
    (Info: triOk;            Val: '-123451/10'),                                                        //   54: (-1/10) + (-12345)
    (Info: triOk;            Val: '-4129/6790'),                                                        //   55: (-1/10) + (-345/679)
    (Info: triOk;            Val: '4995555555555551/44444444444440'),                                   //   56: (-1/10) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '999/10'),                                                            //   57: (-1/10) + (100)
    (Info: triOk;            Val: '-100000001/10'),                                                     //   58: (-1/10) + (-10000000)
    (Info: triOk;            Val: '169/10'),                                                            //   59: (-1/10) + (17)
    (Info: triOk;            Val: '-7/170'),                                                            //   60: (-1/10) + (1/17)
    (Info: triOk;            Val: '273/370'),                                                           //   61: (-1/10) + (31/37)
    (Info: triOk;            Val: '11411/590'),                                                         //   62: (-1/10) + (1147/59)
    (Info: triOk;            Val: '676729/10'),                                                         //   63: (-1/10) + (67673)
    (Info: triOk;            Val: '1/100'),                                                             //   64: (1/100) + (0)
    (Info: triOk;            Val: '101/100'),                                                           //   65: (1/100) + (1)
    (Info: triOk;            Val: '51/100'),                                                            //   66: (1/100) + (1/2)
    (Info: triOk;            Val: '-9/100'),                                                            //   67: (1/100) + (-1/10)
    (Info: triOk;            Val: '1/50'),                                                              //   68: (1/100) + (1/100)
    (Info: triOk;            Val: '207/700'),                                                           //   69: (1/100) + (2/7)
    (Info: triOk;            Val: '-1234499/100'),                                                      //   70: (1/100) + (-12345)
    (Info: triOk;            Val: '-33821/67900'),                                                      //   71: (1/100) + (-345/679)
    (Info: triOk;            Val: '25002222222222197/222222222222200'),                                 //   72: (1/100) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '10001/100'),                                                         //   73: (1/100) + (100)
    (Info: triOk;            Val: '-999999999/100'),                                                    //   74: (1/100) + (-10000000)
    (Info: triOk;            Val: '1701/100'),                                                          //   75: (1/100) + (17)
    (Info: triOk;            Val: '117/1700'),                                                          //   76: (1/100) + (1/17)
    (Info: triOk;            Val: '3137/3700'),                                                         //   77: (1/100) + (31/37)
    (Info: triOk;            Val: '114759/5900'),                                                       //   78: (1/100) + (1147/59)
    (Info: triOk;            Val: '6767301/100'),                                                       //   79: (1/100) + (67673)
    (Info: triOk;            Val: '2/7'),                                                               //   80: (2/7) + (0)
    (Info: triOk;            Val: '9/7'),                                                               //   81: (2/7) + (1)
    (Info: triOk;            Val: '11/14'),                                                             //   82: (2/7) + (1/2)
    (Info: triOk;            Val: '13/70'),                                                             //   83: (2/7) + (-1/10)
    (Info: triOk;            Val: '207/700'),                                                           //   84: (2/7) + (1/100)
    (Info: triOk;            Val: '4/7'),                                                               //   85: (2/7) + (2/7)
    (Info: triOk;            Val: '-86413/7'),                                                          //   86: (2/7) + (-12345)
    (Info: triOk;            Val: '-151/679'),                                                          //   87: (2/7) + (-345/679)
    (Info: triOk;            Val: '7017777777777769/62222222222216'),                                   //   88: (2/7) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '702/7'),                                                             //   89: (2/7) + (100)
    (Info: triOk;            Val: '-69999998/7'),                                                       //   90: (2/7) + (-10000000)
    (Info: triOk;            Val: '121/7'),                                                             //   91: (2/7) + (17)
    (Info: triOk;            Val: '41/119'),                                                            //   92: (2/7) + (1/17)
    (Info: triOk;            Val: '291/259'),                                                           //   93: (2/7) + (31/37)
    (Info: triOk;            Val: '8147/413'),                                                          //   94: (2/7) + (1147/59)
    (Info: triOk;            Val: '473713/7'),                                                          //   95: (2/7) + (67673)
    (Info: triOk;            Val: '-12345'),                                                            //   96: (-12345) + (0)
    (Info: triOk;            Val: '-12344'),                                                            //   97: (-12345) + (1)
    (Info: triOk;            Val: '-24689/2'),                                                          //   98: (-12345) + (1/2)
    (Info: triOk;            Val: '-123451/10'),                                                        //   99: (-12345) + (-1/10)
    (Info: triOk;            Val: '-1234499/100'),                                                      //  100: (-12345) + (1/100)
    (Info: triOk;            Val: '-86413/7'),                                                          //  101: (-12345) + (2/7)
    (Info: triOk;            Val: '-24690'),                                                            //  102: (-12345) + (-12345)
    (Info: triOk;            Val: '-8382600/679'),                                                      //  103: (-12345) + (-345/679)
    (Info: triOk;            Val: '-108733333333322361/8888888888888'),                                 //  104: (-12345) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '-12245'),                                                            //  105: (-12345) + (100)
    (Info: triOk;            Val: '-10012345'),                                                         //  106: (-12345) + (-10000000)
    (Info: triOk;            Val: '-12328'),                                                            //  107: (-12345) + (17)
    (Info: triOk;            Val: '-209864/17'),                                                        //  108: (-12345) + (1/17)
    (Info: triOk;            Val: '-456734/37'),                                                        //  109: (-12345) + (31/37)
    (Info: triOk;            Val: '-727208/59'),                                                        //  110: (-12345) + (1147/59)
    (Info: triOk;            Val: '55328'),                                                             //  111: (-12345) + (67673)
    (Info: triOk;            Val: '-345/679'),                                                          //  112: (-345/679) + (0)
    (Info: triOk;            Val: '334/679'),                                                           //  113: (-345/679) + (1)
    (Info: triOk;            Val: '-11/1358'),                                                          //  114: (-345/679) + (1/2)
    (Info: triOk;            Val: '-4129/6790'),                                                        //  115: (-345/679) + (-1/10)
    (Info: triOk;            Val: '-33821/67900'),                                                      //  116: (-345/679) + (1/100)
    (Info: triOk;            Val: '-151/679'),                                                          //  117: (-345/679) + (2/7)
    (Info: triOk;            Val: '-8382600/679'),                                                      //  118: (-345/679) + (-12345)
    (Info: triOk;            Val: '-690/679'),                                                          //  119: (-345/679) + (-345/679)
    (Info: triOk;            Val: '675933333333332961/6035555555554952'),                               //  120: (-345/679) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '67555/679'),                                                         //  121: (-345/679) + (100)
    (Info: triOk;            Val: '-6790000345/679'),                                                   //  122: (-345/679) + (-10000000)
    (Info: triOk;            Val: '11198/679'),                                                         //  123: (-345/679) + (17)
    (Info: triOk;            Val: '-5186/11543'),                                                       //  124: (-345/679) + (1/17)
    (Info: triOk;            Val: '8284/25123'),                                                        //  125: (-345/679) + (31/37)
    (Info: triOk;            Val: '758458/40061'),                                                      //  126: (-345/679) + (1147/59)
    (Info: triOk;            Val: '45949622/679'),                                                      //  127: (-345/679) + (67673)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  128: (999999999999999/8888888888888) + (0)
    (Info: triOk;            Val: '1008888888888887/8888888888888'),                                    //  129: (999999999999999/8888888888888) + (1)
    (Info: triOk;            Val: '1004444444444443/8888888888888'),                                    //  130: (999999999999999/8888888888888) + (1/2)
    (Info: triOk;            Val: '4995555555555551/44444444444440'),                                   //  131: (999999999999999/8888888888888) + (-1/10)
    (Info: triOk;            Val: '25002222222222197/222222222222200'),                                 //  132: (999999999999999/8888888888888) + (1/100)
    (Info: triOk;            Val: '7017777777777769/62222222222216'),                                   //  133: (999999999999999/8888888888888) + (2/7)
    (Info: triOk;            Val: '-108733333333322361/8888888888888'),                                 //  134: (999999999999999/8888888888888) + (-12345)
    (Info: triOk;            Val: '675933333333332961/6035555555554952'),                               //  135: (999999999999999/8888888888888) + (-345/679)
    (Info: triOk;            Val: '999999999999999/4444444444444'),                                     //  136: (999999999999999/8888888888888) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '1888888888888799/8888888888888'),                                    //  137: (999999999999999/8888888888888) + (100)
    (Info: triOk;            Val: '-88887888888880000001/8888888888888'),                               //  138: (999999999999999/8888888888888) + (-10000000)
    (Info: triOk;            Val: '1151111111111095/8888888888888'),                                    //  139: (999999999999999/8888888888888) + (17)
    (Info: triOk;            Val: '17008888888888871/151111111111096'),                                 //  140: (999999999999999/8888888888888) + (1/17)
    (Info: triOk;            Val: '37275555555555491/328888888888856'),                                 //  141: (999999999999999/8888888888888) + (31/37)
    (Info: triOk;            Val: '69195555555554477/524444444444392'),                                 //  142: (999999999999999/8888888888888) + (1147/59)
    (Info: triOk;            Val: '602537777777717623/8888888888888'),                                  //  143: (999999999999999/8888888888888) + (67673)
    (Info: triOk;            Val: '100'),                                                               //  144: (100) + (0)
    (Info: triOk;            Val: '101'),                                                               //  145: (100) + (1)
    (Info: triOk;            Val: '201/2'),                                                             //  146: (100) + (1/2)
    (Info: triOk;            Val: '999/10'),                                                            //  147: (100) + (-1/10)
    (Info: triOk;            Val: '10001/100'),                                                         //  148: (100) + (1/100)
    (Info: triOk;            Val: '702/7'),                                                             //  149: (100) + (2/7)
    (Info: triOk;            Val: '-12245'),                                                            //  150: (100) + (-12345)
    (Info: triOk;            Val: '67555/679'),                                                         //  151: (100) + (-345/679)
    (Info: triOk;            Val: '1888888888888799/8888888888888'),                                    //  152: (100) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '200'),                                                               //  153: (100) + (100)
    (Info: triOk;            Val: '-9999900'),                                                          //  154: (100) + (-10000000)
    (Info: triOk;            Val: '117'),                                                               //  155: (100) + (17)
    (Info: triOk;            Val: '1701/17'),                                                           //  156: (100) + (1/17)
    (Info: triOk;            Val: '3731/37'),                                                           //  157: (100) + (31/37)
    (Info: triOk;            Val: '7047/59'),                                                           //  158: (100) + (1147/59)
    (Info: triOk;            Val: '67773'),                                                             //  159: (100) + (67673)
    (Info: triOk;            Val: '-10000000'),                                                         //  160: (-10000000) + (0)
    (Info: triOk;            Val: '-9999999'),                                                          //  161: (-10000000) + (1)
    (Info: triOk;            Val: '-19999999/2'),                                                       //  162: (-10000000) + (1/2)
    (Info: triOk;            Val: '-100000001/10'),                                                     //  163: (-10000000) + (-1/10)
    (Info: triOk;            Val: '-999999999/100'),                                                    //  164: (-10000000) + (1/100)
    (Info: triOk;            Val: '-69999998/7'),                                                       //  165: (-10000000) + (2/7)
    (Info: triOk;            Val: '-10012345'),                                                         //  166: (-10000000) + (-12345)
    (Info: triOk;            Val: '-6790000345/679'),                                                   //  167: (-10000000) + (-345/679)
    (Info: triOk;            Val: '-88887888888880000001/8888888888888'),                               //  168: (-10000000) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '-9999900'),                                                          //  169: (-10000000) + (100)
    (Info: triOk;            Val: '-20000000'),                                                         //  170: (-10000000) + (-10000000)
    (Info: triOk;            Val: '-9999983'),                                                          //  171: (-10000000) + (17)
    (Info: triOk;            Val: '-169999999/17'),                                                     //  172: (-10000000) + (1/17)
    (Info: triOk;            Val: '-369999969/37'),                                                     //  173: (-10000000) + (31/37)
    (Info: triOk;            Val: '-589998853/59'),                                                     //  174: (-10000000) + (1147/59)
    (Info: triOk;            Val: '-9932327'),                                                          //  175: (-10000000) + (67673)
    (Info: triOk;            Val: '17'),                                                                //  176: (17) + (0)
    (Info: triOk;            Val: '18'),                                                                //  177: (17) + (1)
    (Info: triOk;            Val: '35/2'),                                                              //  178: (17) + (1/2)
    (Info: triOk;            Val: '169/10'),                                                            //  179: (17) + (-1/10)
    (Info: triOk;            Val: '1701/100'),                                                          //  180: (17) + (1/100)
    (Info: triOk;            Val: '121/7'),                                                             //  181: (17) + (2/7)
    (Info: triOk;            Val: '-12328'),                                                            //  182: (17) + (-12345)
    (Info: triOk;            Val: '11198/679'),                                                         //  183: (17) + (-345/679)
    (Info: triOk;            Val: '1151111111111095/8888888888888'),                                    //  184: (17) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '117'),                                                               //  185: (17) + (100)
    (Info: triOk;            Val: '-9999983'),                                                          //  186: (17) + (-10000000)
    (Info: triOk;            Val: '34'),                                                                //  187: (17) + (17)
    (Info: triOk;            Val: '290/17'),                                                            //  188: (17) + (1/17)
    (Info: triOk;            Val: '660/37'),                                                            //  189: (17) + (31/37)
    (Info: triOk;            Val: '2150/59'),                                                           //  190: (17) + (1147/59)
    (Info: triOk;            Val: '67690'),                                                             //  191: (17) + (67673)
    (Info: triOk;            Val: '1/17'),                                                              //  192: (1/17) + (0)
    (Info: triOk;            Val: '18/17'),                                                             //  193: (1/17) + (1)
    (Info: triOk;            Val: '19/34'),                                                             //  194: (1/17) + (1/2)
    (Info: triOk;            Val: '-7/170'),                                                            //  195: (1/17) + (-1/10)
    (Info: triOk;            Val: '117/1700'),                                                          //  196: (1/17) + (1/100)
    (Info: triOk;            Val: '41/119'),                                                            //  197: (1/17) + (2/7)
    (Info: triOk;            Val: '-209864/17'),                                                        //  198: (1/17) + (-12345)
    (Info: triOk;            Val: '-5186/11543'),                                                       //  199: (1/17) + (-345/679)
    (Info: triOk;            Val: '17008888888888871/151111111111096'),                                 //  200: (1/17) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '1701/17'),                                                           //  201: (1/17) + (100)
    (Info: triOk;            Val: '-169999999/17'),                                                     //  202: (1/17) + (-10000000)
    (Info: triOk;            Val: '290/17'),                                                            //  203: (1/17) + (17)
    (Info: triOk;            Val: '2/17'),                                                              //  204: (1/17) + (1/17)
    (Info: triOk;            Val: '564/629'),                                                           //  205: (1/17) + (31/37)
    (Info: triOk;            Val: '19558/1003'),                                                        //  206: (1/17) + (1147/59)
    (Info: triOk;            Val: '1150442/17'),                                                        //  207: (1/17) + (67673)
    (Info: triOk;            Val: '31/37'),                                                             //  208: (31/37) + (0)
    (Info: triOk;            Val: '68/37'),                                                             //  209: (31/37) + (1)
    (Info: triOk;            Val: '99/74'),                                                             //  210: (31/37) + (1/2)
    (Info: triOk;            Val: '273/370'),                                                           //  211: (31/37) + (-1/10)
    (Info: triOk;            Val: '3137/3700'),                                                         //  212: (31/37) + (1/100)
    (Info: triOk;            Val: '291/259'),                                                           //  213: (31/37) + (2/7)
    (Info: triOk;            Val: '-456734/37'),                                                        //  214: (31/37) + (-12345)
    (Info: triOk;            Val: '8284/25123'),                                                        //  215: (31/37) + (-345/679)
    (Info: triOk;            Val: '37275555555555491/328888888888856'),                                 //  216: (31/37) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '3731/37'),                                                           //  217: (31/37) + (100)
    (Info: triOk;            Val: '-369999969/37'),                                                     //  218: (31/37) + (-10000000)
    (Info: triOk;            Val: '660/37'),                                                            //  219: (31/37) + (17)
    (Info: triOk;            Val: '564/629'),                                                           //  220: (31/37) + (1/17)
    (Info: triOk;            Val: '62/37'),                                                             //  221: (31/37) + (31/37)
    (Info: triOk;            Val: '44268/2183'),                                                        //  222: (31/37) + (1147/59)
    (Info: triOk;            Val: '2503932/37'),                                                        //  223: (31/37) + (67673)
    (Info: triOk;            Val: '1147/59'),                                                           //  224: (1147/59) + (0)
    (Info: triOk;            Val: '1206/59'),                                                           //  225: (1147/59) + (1)
    (Info: triOk;            Val: '2353/118'),                                                          //  226: (1147/59) + (1/2)
    (Info: triOk;            Val: '11411/590'),                                                         //  227: (1147/59) + (-1/10)
    (Info: triOk;            Val: '114759/5900'),                                                       //  228: (1147/59) + (1/100)
    (Info: triOk;            Val: '8147/413'),                                                          //  229: (1147/59) + (2/7)
    (Info: triOk;            Val: '-727208/59'),                                                        //  230: (1147/59) + (-12345)
    (Info: triOk;            Val: '758458/40061'),                                                      //  231: (1147/59) + (-345/679)
    (Info: triOk;            Val: '69195555555554477/524444444444392'),                                 //  232: (1147/59) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '7047/59'),                                                           //  233: (1147/59) + (100)
    (Info: triOk;            Val: '-589998853/59'),                                                     //  234: (1147/59) + (-10000000)
    (Info: triOk;            Val: '2150/59'),                                                           //  235: (1147/59) + (17)
    (Info: triOk;            Val: '19558/1003'),                                                        //  236: (1147/59) + (1/17)
    (Info: triOk;            Val: '44268/2183'),                                                        //  237: (1147/59) + (31/37)
    (Info: triOk;            Val: '2294/59'),                                                           //  238: (1147/59) + (1147/59)
    (Info: triOk;            Val: '3993854/59'),                                                        //  239: (1147/59) + (67673)
    (Info: triOk;            Val: '67673'),                                                             //  240: (67673) + (0)
    (Info: triOk;            Val: '67674'),                                                             //  241: (67673) + (1)
    (Info: triOk;            Val: '135347/2'),                                                          //  242: (67673) + (1/2)
    (Info: triOk;            Val: '676729/10'),                                                         //  243: (67673) + (-1/10)
    (Info: triOk;            Val: '6767301/100'),                                                       //  244: (67673) + (1/100)
    (Info: triOk;            Val: '473713/7'),                                                          //  245: (67673) + (2/7)
    (Info: triOk;            Val: '55328'),                                                             //  246: (67673) + (-12345)
    (Info: triOk;            Val: '45949622/679'),                                                      //  247: (67673) + (-345/679)
    (Info: triOk;            Val: '602537777777717623/8888888888888'),                                  //  248: (67673) + (999999999999999/8888888888888)
    (Info: triOk;            Val: '67773'),                                                             //  249: (67673) + (100)
    (Info: triOk;            Val: '-9932327'),                                                          //  250: (67673) + (-10000000)
    (Info: triOk;            Val: '67690'),                                                             //  251: (67673) + (17)
    (Info: triOk;            Val: '1150442/17'),                                                        //  252: (67673) + (1/17)
    (Info: triOk;            Val: '2503932/37'),                                                        //  253: (67673) + (31/37)
    (Info: triOk;            Val: '3993854/59'),                                                        //  254: (67673) + (1147/59)
    (Info: triOk;            Val: '135346')                                                             //  255: (67673) + (67673)
  );

  SubtractResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '0'),                                                                 //    0: (0) - (0)
    (Info: triOk;            Val: '-1'),                                                                //    1: (0) - (1)
    (Info: triOk;            Val: '-1/2'),                                                              //    2: (0) - (1/2)
    (Info: triOk;            Val: '1/10'),                                                              //    3: (0) - (-1/10)
    (Info: triOk;            Val: '-1/100'),                                                            //    4: (0) - (1/100)
    (Info: triOk;            Val: '-2/7'),                                                              //    5: (0) - (2/7)
    (Info: triOk;            Val: '12345'),                                                             //    6: (0) - (-12345)
    (Info: triOk;            Val: '345/679'),                                                           //    7: (0) - (-345/679)
    (Info: triOk;            Val: '-999999999999999/8888888888888'),                                    //    8: (0) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-100'),                                                              //    9: (0) - (100)
    (Info: triOk;            Val: '10000000'),                                                          //   10: (0) - (-10000000)
    (Info: triOk;            Val: '-17'),                                                               //   11: (0) - (17)
    (Info: triOk;            Val: '-1/17'),                                                             //   12: (0) - (1/17)
    (Info: triOk;            Val: '-31/37'),                                                            //   13: (0) - (31/37)
    (Info: triOk;            Val: '-1147/59'),                                                          //   14: (0) - (1147/59)
    (Info: triOk;            Val: '-67673'),                                                            //   15: (0) - (67673)
    (Info: triOk;            Val: '1'),                                                                 //   16: (1) - (0)
    (Info: triOk;            Val: '0'),                                                                 //   17: (1) - (1)
    (Info: triOk;            Val: '1/2'),                                                               //   18: (1) - (1/2)
    (Info: triOk;            Val: '11/10'),                                                             //   19: (1) - (-1/10)
    (Info: triOk;            Val: '99/100'),                                                            //   20: (1) - (1/100)
    (Info: triOk;            Val: '5/7'),                                                               //   21: (1) - (2/7)
    (Info: triOk;            Val: '12346'),                                                             //   22: (1) - (-12345)
    (Info: triOk;            Val: '1024/679'),                                                          //   23: (1) - (-345/679)
    (Info: triOk;            Val: '-991111111111111/8888888888888'),                                    //   24: (1) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-99'),                                                               //   25: (1) - (100)
    (Info: triOk;            Val: '10000001'),                                                          //   26: (1) - (-10000000)
    (Info: triOk;            Val: '-16'),                                                               //   27: (1) - (17)
    (Info: triOk;            Val: '16/17'),                                                             //   28: (1) - (1/17)
    (Info: triOk;            Val: '6/37'),                                                              //   29: (1) - (31/37)
    (Info: triOk;            Val: '-1088/59'),                                                          //   30: (1) - (1147/59)
    (Info: triOk;            Val: '-67672'),                                                            //   31: (1) - (67673)
    (Info: triOk;            Val: '1/2'),                                                               //   32: (1/2) - (0)
    (Info: triOk;            Val: '-1/2'),                                                              //   33: (1/2) - (1)
    (Info: triOk;            Val: '0'),                                                                 //   34: (1/2) - (1/2)
    (Info: triOk;            Val: '3/5'),                                                               //   35: (1/2) - (-1/10)
    (Info: triOk;            Val: '49/100'),                                                            //   36: (1/2) - (1/100)
    (Info: triOk;            Val: '3/14'),                                                              //   37: (1/2) - (2/7)
    (Info: triOk;            Val: '24691/2'),                                                           //   38: (1/2) - (-12345)
    (Info: triOk;            Val: '1369/1358'),                                                         //   39: (1/2) - (-345/679)
    (Info: triOk;            Val: '-995555555555555/8888888888888'),                                    //   40: (1/2) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-199/2'),                                                            //   41: (1/2) - (100)
    (Info: triOk;            Val: '20000001/2'),                                                        //   42: (1/2) - (-10000000)
    (Info: triOk;            Val: '-33/2'),                                                             //   43: (1/2) - (17)
    (Info: triOk;            Val: '15/34'),                                                             //   44: (1/2) - (1/17)
    (Info: triOk;            Val: '-25/74'),                                                            //   45: (1/2) - (31/37)
    (Info: triOk;            Val: '-2235/118'),                                                         //   46: (1/2) - (1147/59)
    (Info: triOk;            Val: '-135345/2'),                                                         //   47: (1/2) - (67673)
    (Info: triOk;            Val: '-1/10'),                                                             //   48: (-1/10) - (0)
    (Info: triOk;            Val: '-11/10'),                                                            //   49: (-1/10) - (1)
    (Info: triOk;            Val: '-3/5'),                                                              //   50: (-1/10) - (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   51: (-1/10) - (-1/10)
    (Info: triOk;            Val: '-11/100'),                                                           //   52: (-1/10) - (1/100)
    (Info: triOk;            Val: '-27/70'),                                                            //   53: (-1/10) - (2/7)
    (Info: triOk;            Val: '123449/10'),                                                         //   54: (-1/10) - (-12345)
    (Info: triOk;            Val: '2771/6790'),                                                         //   55: (-1/10) - (-345/679)
    (Info: triOk;            Val: '-5004444444444439/44444444444440'),                                  //   56: (-1/10) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1001/10'),                                                          //   57: (-1/10) - (100)
    (Info: triOk;            Val: '99999999/10'),                                                       //   58: (-1/10) - (-10000000)
    (Info: triOk;            Val: '-171/10'),                                                           //   59: (-1/10) - (17)
    (Info: triOk;            Val: '-27/170'),                                                           //   60: (-1/10) - (1/17)
    (Info: triOk;            Val: '-347/370'),                                                          //   61: (-1/10) - (31/37)
    (Info: triOk;            Val: '-11529/590'),                                                        //   62: (-1/10) - (1147/59)
    (Info: triOk;            Val: '-676731/10'),                                                        //   63: (-1/10) - (67673)
    (Info: triOk;            Val: '1/100'),                                                             //   64: (1/100) - (0)
    (Info: triOk;            Val: '-99/100'),                                                           //   65: (1/100) - (1)
    (Info: triOk;            Val: '-49/100'),                                                           //   66: (1/100) - (1/2)
    (Info: triOk;            Val: '11/100'),                                                            //   67: (1/100) - (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //   68: (1/100) - (1/100)
    (Info: triOk;            Val: '-193/700'),                                                          //   69: (1/100) - (2/7)
    (Info: triOk;            Val: '1234501/100'),                                                       //   70: (1/100) - (-12345)
    (Info: triOk;            Val: '35179/67900'),                                                       //   71: (1/100) - (-345/679)
    (Info: triOk;            Val: '-24997777777777753/222222222222200'),                                //   72: (1/100) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-9999/100'),                                                         //   73: (1/100) - (100)
    (Info: triOk;            Val: '1000000001/100'),                                                    //   74: (1/100) - (-10000000)
    (Info: triOk;            Val: '-1699/100'),                                                         //   75: (1/100) - (17)
    (Info: triOk;            Val: '-83/1700'),                                                          //   76: (1/100) - (1/17)
    (Info: triOk;            Val: '-3063/3700'),                                                        //   77: (1/100) - (31/37)
    (Info: triOk;            Val: '-114641/5900'),                                                      //   78: (1/100) - (1147/59)
    (Info: triOk;            Val: '-6767299/100'),                                                      //   79: (1/100) - (67673)
    (Info: triOk;            Val: '2/7'),                                                               //   80: (2/7) - (0)
    (Info: triOk;            Val: '-5/7'),                                                              //   81: (2/7) - (1)
    (Info: triOk;            Val: '-3/14'),                                                             //   82: (2/7) - (1/2)
    (Info: triOk;            Val: '27/70'),                                                             //   83: (2/7) - (-1/10)
    (Info: triOk;            Val: '193/700'),                                                           //   84: (2/7) - (1/100)
    (Info: triOk;            Val: '0'),                                                                 //   85: (2/7) - (2/7)
    (Info: triOk;            Val: '86417/7'),                                                           //   86: (2/7) - (-12345)
    (Info: triOk;            Val: '77/97'),                                                             //   87: (2/7) - (-345/679)
    (Info: triOk;            Val: '-6982222222222217/62222222222216'),                                  //   88: (2/7) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-698/7'),                                                            //   89: (2/7) - (100)
    (Info: triOk;            Val: '70000002/7'),                                                        //   90: (2/7) - (-10000000)
    (Info: triOk;            Val: '-117/7'),                                                            //   91: (2/7) - (17)
    (Info: triOk;            Val: '27/119'),                                                            //   92: (2/7) - (1/17)
    (Info: triOk;            Val: '-143/259'),                                                          //   93: (2/7) - (31/37)
    (Info: triOk;            Val: '-7911/413'),                                                         //   94: (2/7) - (1147/59)
    (Info: triOk;            Val: '-473709/7'),                                                         //   95: (2/7) - (67673)
    (Info: triOk;            Val: '-12345'),                                                            //   96: (-12345) - (0)
    (Info: triOk;            Val: '-12346'),                                                            //   97: (-12345) - (1)
    (Info: triOk;            Val: '-24691/2'),                                                          //   98: (-12345) - (1/2)
    (Info: triOk;            Val: '-123449/10'),                                                        //   99: (-12345) - (-1/10)
    (Info: triOk;            Val: '-1234501/100'),                                                      //  100: (-12345) - (1/100)
    (Info: triOk;            Val: '-86417/7'),                                                          //  101: (-12345) - (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  102: (-12345) - (-12345)
    (Info: triOk;            Val: '-8381910/679'),                                                      //  103: (-12345) - (-345/679)
    (Info: triOk;            Val: '-110733333333322359/8888888888888'),                                 //  104: (-12345) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-12445'),                                                            //  105: (-12345) - (100)
    (Info: triOk;            Val: '9987655'),                                                           //  106: (-12345) - (-10000000)
    (Info: triOk;            Val: '-12362'),                                                            //  107: (-12345) - (17)
    (Info: triOk;            Val: '-209866/17'),                                                        //  108: (-12345) - (1/17)
    (Info: triOk;            Val: '-456796/37'),                                                        //  109: (-12345) - (31/37)
    (Info: triOk;            Val: '-729502/59'),                                                        //  110: (-12345) - (1147/59)
    (Info: triOk;            Val: '-80018'),                                                            //  111: (-12345) - (67673)
    (Info: triOk;            Val: '-345/679'),                                                          //  112: (-345/679) - (0)
    (Info: triOk;            Val: '-1024/679'),                                                         //  113: (-345/679) - (1)
    (Info: triOk;            Val: '-1369/1358'),                                                        //  114: (-345/679) - (1/2)
    (Info: triOk;            Val: '-2771/6790'),                                                        //  115: (-345/679) - (-1/10)
    (Info: triOk;            Val: '-35179/67900'),                                                      //  116: (-345/679) - (1/100)
    (Info: triOk;            Val: '-77/97'),                                                            //  117: (-345/679) - (2/7)
    (Info: triOk;            Val: '8381910/679'),                                                       //  118: (-345/679) - (-12345)
    (Info: triOk;            Val: '0'),                                                                 //  119: (-345/679) - (-345/679)
    (Info: triOk;            Val: '-682066666666665681/6035555555554952'),                              //  120: (-345/679) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-68245/679'),                                                        //  121: (-345/679) - (100)
    (Info: triOk;            Val: '6789999655/679'),                                                    //  122: (-345/679) - (-10000000)
    (Info: triOk;            Val: '-11888/679'),                                                        //  123: (-345/679) - (17)
    (Info: triOk;            Val: '-6544/11543'),                                                       //  124: (-345/679) - (1/17)
    (Info: triOk;            Val: '-33814/25123'),                                                      //  125: (-345/679) - (31/37)
    (Info: triOk;            Val: '-799168/40061'),                                                     //  126: (-345/679) - (1147/59)
    (Info: triOk;            Val: '-45950312/679'),                                                     //  127: (-345/679) - (67673)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  128: (999999999999999/8888888888888) - (0)
    (Info: triOk;            Val: '991111111111111/8888888888888'),                                     //  129: (999999999999999/8888888888888) - (1)
    (Info: triOk;            Val: '995555555555555/8888888888888'),                                     //  130: (999999999999999/8888888888888) - (1/2)
    (Info: triOk;            Val: '5004444444444439/44444444444440'),                                   //  131: (999999999999999/8888888888888) - (-1/10)
    (Info: triOk;            Val: '24997777777777753/222222222222200'),                                 //  132: (999999999999999/8888888888888) - (1/100)
    (Info: triOk;            Val: '6982222222222217/62222222222216'),                                   //  133: (999999999999999/8888888888888) - (2/7)
    (Info: triOk;            Val: '110733333333322359/8888888888888'),                                  //  134: (999999999999999/8888888888888) - (-12345)
    (Info: triOk;            Val: '682066666666665681/6035555555554952'),                               //  135: (999999999999999/8888888888888) - (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  136: (999999999999999/8888888888888) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '111111111111199/8888888888888'),                                     //  137: (999999999999999/8888888888888) - (100)
    (Info: triOk;            Val: '88889888888879999999/8888888888888'),                                //  138: (999999999999999/8888888888888) - (-10000000)
    (Info: triOk;            Val: '848888888888903/8888888888888'),                                     //  139: (999999999999999/8888888888888) - (17)
    (Info: triOk;            Val: '16991111111111095/151111111111096'),                                 //  140: (999999999999999/8888888888888) - (1/17)
    (Info: triOk;            Val: '36724444444444435/328888888888856'),                                 //  141: (999999999999999/8888888888888) - (31/37)
    (Info: triOk;            Val: '48804444444445405/524444444444392'),                                 //  142: (999999999999999/8888888888888) - (1147/59)
    (Info: triOk;            Val: '-600537777777717625/8888888888888'),                                 //  143: (999999999999999/8888888888888) - (67673)
    (Info: triOk;            Val: '100'),                                                               //  144: (100) - (0)
    (Info: triOk;            Val: '99'),                                                                //  145: (100) - (1)
    (Info: triOk;            Val: '199/2'),                                                             //  146: (100) - (1/2)
    (Info: triOk;            Val: '1001/10'),                                                           //  147: (100) - (-1/10)
    (Info: triOk;            Val: '9999/100'),                                                          //  148: (100) - (1/100)
    (Info: triOk;            Val: '698/7'),                                                             //  149: (100) - (2/7)
    (Info: triOk;            Val: '12445'),                                                             //  150: (100) - (-12345)
    (Info: triOk;            Val: '68245/679'),                                                         //  151: (100) - (-345/679)
    (Info: triOk;            Val: '-111111111111199/8888888888888'),                                    //  152: (100) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  153: (100) - (100)
    (Info: triOk;            Val: '10000100'),                                                          //  154: (100) - (-10000000)
    (Info: triOk;            Val: '83'),                                                                //  155: (100) - (17)
    (Info: triOk;            Val: '1699/17'),                                                           //  156: (100) - (1/17)
    (Info: triOk;            Val: '3669/37'),                                                           //  157: (100) - (31/37)
    (Info: triOk;            Val: '4753/59'),                                                           //  158: (100) - (1147/59)
    (Info: triOk;            Val: '-67573'),                                                            //  159: (100) - (67673)
    (Info: triOk;            Val: '-10000000'),                                                         //  160: (-10000000) - (0)
    (Info: triOk;            Val: '-10000001'),                                                         //  161: (-10000000) - (1)
    (Info: triOk;            Val: '-20000001/2'),                                                       //  162: (-10000000) - (1/2)
    (Info: triOk;            Val: '-99999999/10'),                                                      //  163: (-10000000) - (-1/10)
    (Info: triOk;            Val: '-1000000001/100'),                                                   //  164: (-10000000) - (1/100)
    (Info: triOk;            Val: '-70000002/7'),                                                       //  165: (-10000000) - (2/7)
    (Info: triOk;            Val: '-9987655'),                                                          //  166: (-10000000) - (-12345)
    (Info: triOk;            Val: '-6789999655/679'),                                                   //  167: (-10000000) - (-345/679)
    (Info: triOk;            Val: '-88889888888879999999/8888888888888'),                               //  168: (-10000000) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-10000100'),                                                         //  169: (-10000000) - (100)
    (Info: triOk;            Val: '0'),                                                                 //  170: (-10000000) - (-10000000)
    (Info: triOk;            Val: '-10000017'),                                                         //  171: (-10000000) - (17)
    (Info: triOk;            Val: '-170000001/17'),                                                     //  172: (-10000000) - (1/17)
    (Info: triOk;            Val: '-370000031/37'),                                                     //  173: (-10000000) - (31/37)
    (Info: triOk;            Val: '-590001147/59'),                                                     //  174: (-10000000) - (1147/59)
    (Info: triOk;            Val: '-10067673'),                                                         //  175: (-10000000) - (67673)
    (Info: triOk;            Val: '17'),                                                                //  176: (17) - (0)
    (Info: triOk;            Val: '16'),                                                                //  177: (17) - (1)
    (Info: triOk;            Val: '33/2'),                                                              //  178: (17) - (1/2)
    (Info: triOk;            Val: '171/10'),                                                            //  179: (17) - (-1/10)
    (Info: triOk;            Val: '1699/100'),                                                          //  180: (17) - (1/100)
    (Info: triOk;            Val: '117/7'),                                                             //  181: (17) - (2/7)
    (Info: triOk;            Val: '12362'),                                                             //  182: (17) - (-12345)
    (Info: triOk;            Val: '11888/679'),                                                         //  183: (17) - (-345/679)
    (Info: triOk;            Val: '-848888888888903/8888888888888'),                                    //  184: (17) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-83'),                                                               //  185: (17) - (100)
    (Info: triOk;            Val: '10000017'),                                                          //  186: (17) - (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //  187: (17) - (17)
    (Info: triOk;            Val: '288/17'),                                                            //  188: (17) - (1/17)
    (Info: triOk;            Val: '598/37'),                                                            //  189: (17) - (31/37)
    (Info: triOk;            Val: '-144/59'),                                                           //  190: (17) - (1147/59)
    (Info: triOk;            Val: '-67656'),                                                            //  191: (17) - (67673)
    (Info: triOk;            Val: '1/17'),                                                              //  192: (1/17) - (0)
    (Info: triOk;            Val: '-16/17'),                                                            //  193: (1/17) - (1)
    (Info: triOk;            Val: '-15/34'),                                                            //  194: (1/17) - (1/2)
    (Info: triOk;            Val: '27/170'),                                                            //  195: (1/17) - (-1/10)
    (Info: triOk;            Val: '83/1700'),                                                           //  196: (1/17) - (1/100)
    (Info: triOk;            Val: '-27/119'),                                                           //  197: (1/17) - (2/7)
    (Info: triOk;            Val: '209866/17'),                                                         //  198: (1/17) - (-12345)
    (Info: triOk;            Val: '6544/11543'),                                                        //  199: (1/17) - (-345/679)
    (Info: triOk;            Val: '-16991111111111095/151111111111096'),                                //  200: (1/17) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1699/17'),                                                          //  201: (1/17) - (100)
    (Info: triOk;            Val: '170000001/17'),                                                      //  202: (1/17) - (-10000000)
    (Info: triOk;            Val: '-288/17'),                                                           //  203: (1/17) - (17)
    (Info: triOk;            Val: '0'),                                                                 //  204: (1/17) - (1/17)
    (Info: triOk;            Val: '-490/629'),                                                          //  205: (1/17) - (31/37)
    (Info: triOk;            Val: '-19440/1003'),                                                       //  206: (1/17) - (1147/59)
    (Info: triOk;            Val: '-1150440/17'),                                                       //  207: (1/17) - (67673)
    (Info: triOk;            Val: '31/37'),                                                             //  208: (31/37) - (0)
    (Info: triOk;            Val: '-6/37'),                                                             //  209: (31/37) - (1)
    (Info: triOk;            Val: '25/74'),                                                             //  210: (31/37) - (1/2)
    (Info: triOk;            Val: '347/370'),                                                           //  211: (31/37) - (-1/10)
    (Info: triOk;            Val: '3063/3700'),                                                         //  212: (31/37) - (1/100)
    (Info: triOk;            Val: '143/259'),                                                           //  213: (31/37) - (2/7)
    (Info: triOk;            Val: '456796/37'),                                                         //  214: (31/37) - (-12345)
    (Info: triOk;            Val: '33814/25123'),                                                       //  215: (31/37) - (-345/679)
    (Info: triOk;            Val: '-36724444444444435/328888888888856'),                                //  216: (31/37) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-3669/37'),                                                          //  217: (31/37) - (100)
    (Info: triOk;            Val: '370000031/37'),                                                      //  218: (31/37) - (-10000000)
    (Info: triOk;            Val: '-598/37'),                                                           //  219: (31/37) - (17)
    (Info: triOk;            Val: '490/629'),                                                           //  220: (31/37) - (1/17)
    (Info: triOk;            Val: '0'),                                                                 //  221: (31/37) - (31/37)
    (Info: triOk;            Val: '-40610/2183'),                                                       //  222: (31/37) - (1147/59)
    (Info: triOk;            Val: '-2503870/37'),                                                       //  223: (31/37) - (67673)
    (Info: triOk;            Val: '1147/59'),                                                           //  224: (1147/59) - (0)
    (Info: triOk;            Val: '1088/59'),                                                           //  225: (1147/59) - (1)
    (Info: triOk;            Val: '2235/118'),                                                          //  226: (1147/59) - (1/2)
    (Info: triOk;            Val: '11529/590'),                                                         //  227: (1147/59) - (-1/10)
    (Info: triOk;            Val: '114641/5900'),                                                       //  228: (1147/59) - (1/100)
    (Info: triOk;            Val: '7911/413'),                                                          //  229: (1147/59) - (2/7)
    (Info: triOk;            Val: '729502/59'),                                                         //  230: (1147/59) - (-12345)
    (Info: triOk;            Val: '799168/40061'),                                                      //  231: (1147/59) - (-345/679)
    (Info: triOk;            Val: '-48804444444445405/524444444444392'),                                //  232: (1147/59) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '-4753/59'),                                                          //  233: (1147/59) - (100)
    (Info: triOk;            Val: '590001147/59'),                                                      //  234: (1147/59) - (-10000000)
    (Info: triOk;            Val: '144/59'),                                                            //  235: (1147/59) - (17)
    (Info: triOk;            Val: '19440/1003'),                                                        //  236: (1147/59) - (1/17)
    (Info: triOk;            Val: '40610/2183'),                                                        //  237: (1147/59) - (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  238: (1147/59) - (1147/59)
    (Info: triOk;            Val: '-3991560/59'),                                                       //  239: (1147/59) - (67673)
    (Info: triOk;            Val: '67673'),                                                             //  240: (67673) - (0)
    (Info: triOk;            Val: '67672'),                                                             //  241: (67673) - (1)
    (Info: triOk;            Val: '135345/2'),                                                          //  242: (67673) - (1/2)
    (Info: triOk;            Val: '676731/10'),                                                         //  243: (67673) - (-1/10)
    (Info: triOk;            Val: '6767299/100'),                                                       //  244: (67673) - (1/100)
    (Info: triOk;            Val: '473709/7'),                                                          //  245: (67673) - (2/7)
    (Info: triOk;            Val: '80018'),                                                             //  246: (67673) - (-12345)
    (Info: triOk;            Val: '45950312/679'),                                                      //  247: (67673) - (-345/679)
    (Info: triOk;            Val: '600537777777717625/8888888888888'),                                  //  248: (67673) - (999999999999999/8888888888888)
    (Info: triOk;            Val: '67573'),                                                             //  249: (67673) - (100)
    (Info: triOk;            Val: '10067673'),                                                          //  250: (67673) - (-10000000)
    (Info: triOk;            Val: '67656'),                                                             //  251: (67673) - (17)
    (Info: triOk;            Val: '1150440/17'),                                                        //  252: (67673) - (1/17)
    (Info: triOk;            Val: '2503870/37'),                                                        //  253: (67673) - (31/37)
    (Info: triOk;            Val: '3991560/59'),                                                        //  254: (67673) - (1147/59)
    (Info: triOk;            Val: '0')                                                                  //  255: (67673) - (67673)
  );

  MultiplyResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '0'),                                                                 //    0: (0) * (0)
    (Info: triOk;            Val: '0'),                                                                 //    1: (0) * (1)
    (Info: triOk;            Val: '0'),                                                                 //    2: (0) * (1/2)
    (Info: triOk;            Val: '0'),                                                                 //    3: (0) * (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //    4: (0) * (1/100)
    (Info: triOk;            Val: '0'),                                                                 //    5: (0) * (2/7)
    (Info: triOk;            Val: '0'),                                                                 //    6: (0) * (-12345)
    (Info: triOk;            Val: '0'),                                                                 //    7: (0) * (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //    8: (0) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //    9: (0) * (100)
    (Info: triOk;            Val: '0'),                                                                 //   10: (0) * (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   11: (0) * (17)
    (Info: triOk;            Val: '0'),                                                                 //   12: (0) * (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   13: (0) * (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   14: (0) * (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   15: (0) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   16: (1) * (0)
    (Info: triOk;            Val: '1'),                                                                 //   17: (1) * (1)
    (Info: triOk;            Val: '1/2'),                                                               //   18: (1) * (1/2)
    (Info: triOk;            Val: '-1/10'),                                                             //   19: (1) * (-1/10)
    (Info: triOk;            Val: '1/100'),                                                             //   20: (1) * (1/100)
    (Info: triOk;            Val: '2/7'),                                                               //   21: (1) * (2/7)
    (Info: triOk;            Val: '-12345'),                                                            //   22: (1) * (-12345)
    (Info: triOk;            Val: '-345/679'),                                                          //   23: (1) * (-345/679)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //   24: (1) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '100'),                                                               //   25: (1) * (100)
    (Info: triOk;            Val: '-10000000'),                                                         //   26: (1) * (-10000000)
    (Info: triOk;            Val: '17'),                                                                //   27: (1) * (17)
    (Info: triOk;            Val: '1/17'),                                                              //   28: (1) * (1/17)
    (Info: triOk;            Val: '31/37'),                                                             //   29: (1) * (31/37)
    (Info: triOk;            Val: '1147/59'),                                                           //   30: (1) * (1147/59)
    (Info: triOk;            Val: '67673'),                                                             //   31: (1) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   32: (1/2) * (0)
    (Info: triOk;            Val: '1/2'),                                                               //   33: (1/2) * (1)
    (Info: triOk;            Val: '1/4'),                                                               //   34: (1/2) * (1/2)
    (Info: triOk;            Val: '-1/20'),                                                             //   35: (1/2) * (-1/10)
    (Info: triOk;            Val: '1/200'),                                                             //   36: (1/2) * (1/100)
    (Info: triOk;            Val: '1/7'),                                                               //   37: (1/2) * (2/7)
    (Info: triOk;            Val: '-12345/2'),                                                          //   38: (1/2) * (-12345)
    (Info: triOk;            Val: '-345/1358'),                                                         //   39: (1/2) * (-345/679)
    (Info: triOk;            Val: '999999999999999/17777777777776'),                                    //   40: (1/2) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '50'),                                                                //   41: (1/2) * (100)
    (Info: triOk;            Val: '-5000000'),                                                          //   42: (1/2) * (-10000000)
    (Info: triOk;            Val: '17/2'),                                                              //   43: (1/2) * (17)
    (Info: triOk;            Val: '1/34'),                                                              //   44: (1/2) * (1/17)
    (Info: triOk;            Val: '31/74'),                                                             //   45: (1/2) * (31/37)
    (Info: triOk;            Val: '1147/118'),                                                          //   46: (1/2) * (1147/59)
    (Info: triOk;            Val: '67673/2'),                                                           //   47: (1/2) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   48: (-1/10) * (0)
    (Info: triOk;            Val: '-1/10'),                                                             //   49: (-1/10) * (1)
    (Info: triOk;            Val: '-1/20'),                                                             //   50: (-1/10) * (1/2)
    (Info: triOk;            Val: '1/100'),                                                             //   51: (-1/10) * (-1/10)
    (Info: triOk;            Val: '-1/1000'),                                                           //   52: (-1/10) * (1/100)
    (Info: triOk;            Val: '-1/35'),                                                             //   53: (-1/10) * (2/7)
    (Info: triOk;            Val: '2469/2'),                                                            //   54: (-1/10) * (-12345)
    (Info: triOk;            Val: '69/1358'),                                                           //   55: (-1/10) * (-345/679)
    (Info: triOk;            Val: '-999999999999999/88888888888880'),                                   //   56: (-1/10) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '-10'),                                                               //   57: (-1/10) * (100)
    (Info: triOk;            Val: '1000000'),                                                           //   58: (-1/10) * (-10000000)
    (Info: triOk;            Val: '-17/10'),                                                            //   59: (-1/10) * (17)
    (Info: triOk;            Val: '-1/170'),                                                            //   60: (-1/10) * (1/17)
    (Info: triOk;            Val: '-31/370'),                                                           //   61: (-1/10) * (31/37)
    (Info: triOk;            Val: '-1147/590'),                                                         //   62: (-1/10) * (1147/59)
    (Info: triOk;            Val: '-67673/10'),                                                         //   63: (-1/10) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   64: (1/100) * (0)
    (Info: triOk;            Val: '1/100'),                                                             //   65: (1/100) * (1)
    (Info: triOk;            Val: '1/200'),                                                             //   66: (1/100) * (1/2)
    (Info: triOk;            Val: '-1/1000'),                                                           //   67: (1/100) * (-1/10)
    (Info: triOk;            Val: '1/10000'),                                                           //   68: (1/100) * (1/100)
    (Info: triOk;            Val: '1/350'),                                                             //   69: (1/100) * (2/7)
    (Info: triOk;            Val: '-2469/20'),                                                          //   70: (1/100) * (-12345)
    (Info: triOk;            Val: '-69/13580'),                                                         //   71: (1/100) * (-345/679)
    (Info: triOk;            Val: '999999999999999/888888888888800'),                                   //   72: (1/100) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '1'),                                                                 //   73: (1/100) * (100)
    (Info: triOk;            Val: '-100000'),                                                           //   74: (1/100) * (-10000000)
    (Info: triOk;            Val: '17/100'),                                                            //   75: (1/100) * (17)
    (Info: triOk;            Val: '1/1700'),                                                            //   76: (1/100) * (1/17)
    (Info: triOk;            Val: '31/3700'),                                                           //   77: (1/100) * (31/37)
    (Info: triOk;            Val: '1147/5900'),                                                         //   78: (1/100) * (1147/59)
    (Info: triOk;            Val: '67673/100'),                                                         //   79: (1/100) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   80: (2/7) * (0)
    (Info: triOk;            Val: '2/7'),                                                               //   81: (2/7) * (1)
    (Info: triOk;            Val: '1/7'),                                                               //   82: (2/7) * (1/2)
    (Info: triOk;            Val: '-1/35'),                                                             //   83: (2/7) * (-1/10)
    (Info: triOk;            Val: '1/350'),                                                             //   84: (2/7) * (1/100)
    (Info: triOk;            Val: '4/49'),                                                              //   85: (2/7) * (2/7)
    (Info: triOk;            Val: '-24690/7'),                                                          //   86: (2/7) * (-12345)
    (Info: triOk;            Val: '-690/4753'),                                                         //   87: (2/7) * (-345/679)
    (Info: triOk;            Val: '999999999999999/31111111111108'),                                    //   88: (2/7) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '200/7'),                                                             //   89: (2/7) * (100)
    (Info: triOk;            Val: '-20000000/7'),                                                       //   90: (2/7) * (-10000000)
    (Info: triOk;            Val: '34/7'),                                                              //   91: (2/7) * (17)
    (Info: triOk;            Val: '2/119'),                                                             //   92: (2/7) * (1/17)
    (Info: triOk;            Val: '62/259'),                                                            //   93: (2/7) * (31/37)
    (Info: triOk;            Val: '2294/413'),                                                          //   94: (2/7) * (1147/59)
    (Info: triOk;            Val: '135346/7'),                                                          //   95: (2/7) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //   96: (-12345) * (0)
    (Info: triOk;            Val: '-12345'),                                                            //   97: (-12345) * (1)
    (Info: triOk;            Val: '-12345/2'),                                                          //   98: (-12345) * (1/2)
    (Info: triOk;            Val: '2469/2'),                                                            //   99: (-12345) * (-1/10)
    (Info: triOk;            Val: '-2469/20'),                                                          //  100: (-12345) * (1/100)
    (Info: triOk;            Val: '-24690/7'),                                                          //  101: (-12345) * (2/7)
    (Info: triOk;            Val: '152399025'),                                                         //  102: (-12345) * (-12345)
    (Info: triOk;            Val: '4259025/679'),                                                       //  103: (-12345) * (-345/679)
    (Info: triOk;            Val: '-12344999999999987655/8888888888888'),                               //  104: (-12345) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1234500'),                                                          //  105: (-12345) * (100)
    (Info: triOk;            Val: '123450000000'),                                                      //  106: (-12345) * (-10000000)
    (Info: triOk;            Val: '-209865'),                                                           //  107: (-12345) * (17)
    (Info: triOk;            Val: '-12345/17'),                                                         //  108: (-12345) * (1/17)
    (Info: triOk;            Val: '-382695/37'),                                                        //  109: (-12345) * (31/37)
    (Info: triOk;            Val: '-14159715/59'),                                                      //  110: (-12345) * (1147/59)
    (Info: triOk;            Val: '-835423185'),                                                        //  111: (-12345) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  112: (-345/679) * (0)
    (Info: triOk;            Val: '-345/679'),                                                          //  113: (-345/679) * (1)
    (Info: triOk;            Val: '-345/1358'),                                                         //  114: (-345/679) * (1/2)
    (Info: triOk;            Val: '69/1358'),                                                           //  115: (-345/679) * (-1/10)
    (Info: triOk;            Val: '-69/13580'),                                                         //  116: (-345/679) * (1/100)
    (Info: triOk;            Val: '-690/4753'),                                                         //  117: (-345/679) * (2/7)
    (Info: triOk;            Val: '4259025/679'),                                                       //  118: (-345/679) * (-12345)
    (Info: triOk;            Val: '119025/461041'),                                                     //  119: (-345/679) * (-345/679)
    (Info: triOk;            Val: '-344999999999999655/6035555555554952'),                              //  120: (-345/679) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '-34500/679'),                                                        //  121: (-345/679) * (100)
    (Info: triOk;            Val: '3450000000/679'),                                                    //  122: (-345/679) * (-10000000)
    (Info: triOk;            Val: '-5865/679'),                                                         //  123: (-345/679) * (17)
    (Info: triOk;            Val: '-345/11543'),                                                        //  124: (-345/679) * (1/17)
    (Info: triOk;            Val: '-10695/25123'),                                                      //  125: (-345/679) * (31/37)
    (Info: triOk;            Val: '-395715/40061'),                                                     //  126: (-345/679) * (1147/59)
    (Info: triOk;            Val: '-23347185/679'),                                                     //  127: (-345/679) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  128: (999999999999999/8888888888888) * (0)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  129: (999999999999999/8888888888888) * (1)
    (Info: triOk;            Val: '999999999999999/17777777777776'),                                    //  130: (999999999999999/8888888888888) * (1/2)
    (Info: triOk;            Val: '-999999999999999/88888888888880'),                                   //  131: (999999999999999/8888888888888) * (-1/10)
    (Info: triOk;            Val: '999999999999999/888888888888800'),                                   //  132: (999999999999999/8888888888888) * (1/100)
    (Info: triOk;            Val: '999999999999999/31111111111108'),                                    //  133: (999999999999999/8888888888888) * (2/7)
    (Info: triOk;            Val: '-12344999999999987655/8888888888888'),                               //  134: (999999999999999/8888888888888) * (-12345)
    (Info: triOk;            Val: '-344999999999999655/6035555555554952'),                              //  135: (999999999999999/8888888888888) * (-345/679)
    (Info: triOk;            Val: '999999999999998000000000000001/79012345678996543209876544'),         //  136: (999999999999999/8888888888888) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '24999999999999975/2222222222222'),                                   //  137: (999999999999999/8888888888888) * (100)
    (Info: triOk;            Val: '-1249999999999998750000/1111111111111'),                             //  138: (999999999999999/8888888888888) * (-10000000)
    (Info: triOk;            Val: '16999999999999983/8888888888888'),                                   //  139: (999999999999999/8888888888888) * (17)
    (Info: triOk;            Val: '999999999999999/151111111111096'),                                   //  140: (999999999999999/8888888888888) * (1/17)
    (Info: triOk;            Val: '837837837837837/8888888888888'),                                     //  141: (999999999999999/8888888888888) * (31/37)
    (Info: triOk;            Val: '1146999999999998853/524444444444392'),                               //  142: (999999999999999/8888888888888) * (1147/59)
    (Info: triOk;            Val: '67672999999999932327/8888888888888'),                                //  143: (999999999999999/8888888888888) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  144: (100) * (0)
    (Info: triOk;            Val: '100'),                                                               //  145: (100) * (1)
    (Info: triOk;            Val: '50'),                                                                //  146: (100) * (1/2)
    (Info: triOk;            Val: '-10'),                                                               //  147: (100) * (-1/10)
    (Info: triOk;            Val: '1'),                                                                 //  148: (100) * (1/100)
    (Info: triOk;            Val: '200/7'),                                                             //  149: (100) * (2/7)
    (Info: triOk;            Val: '-1234500'),                                                          //  150: (100) * (-12345)
    (Info: triOk;            Val: '-34500/679'),                                                        //  151: (100) * (-345/679)
    (Info: triOk;            Val: '24999999999999975/2222222222222'),                                   //  152: (100) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '10000'),                                                             //  153: (100) * (100)
    (Info: triOk;            Val: '-1000000000'),                                                       //  154: (100) * (-10000000)
    (Info: triOk;            Val: '1700'),                                                              //  155: (100) * (17)
    (Info: triOk;            Val: '100/17'),                                                            //  156: (100) * (1/17)
    (Info: triOk;            Val: '3100/37'),                                                           //  157: (100) * (31/37)
    (Info: triOk;            Val: '114700/59'),                                                         //  158: (100) * (1147/59)
    (Info: triOk;            Val: '6767300'),                                                           //  159: (100) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  160: (-10000000) * (0)
    (Info: triOk;            Val: '-10000000'),                                                         //  161: (-10000000) * (1)
    (Info: triOk;            Val: '-5000000'),                                                          //  162: (-10000000) * (1/2)
    (Info: triOk;            Val: '1000000'),                                                           //  163: (-10000000) * (-1/10)
    (Info: triOk;            Val: '-100000'),                                                           //  164: (-10000000) * (1/100)
    (Info: triOk;            Val: '-20000000/7'),                                                       //  165: (-10000000) * (2/7)
    (Info: triOk;            Val: '123450000000'),                                                      //  166: (-10000000) * (-12345)
    (Info: triOk;            Val: '3450000000/679'),                                                    //  167: (-10000000) * (-345/679)
    (Info: triOk;            Val: '-1249999999999998750000/1111111111111'),                             //  168: (-10000000) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1000000000'),                                                       //  169: (-10000000) * (100)
    (Info: triOk;            Val: '100000000000000'),                                                   //  170: (-10000000) * (-10000000)
    (Info: triOk;            Val: '-170000000'),                                                        //  171: (-10000000) * (17)
    (Info: triOk;            Val: '-10000000/17'),                                                      //  172: (-10000000) * (1/17)
    (Info: triOk;            Val: '-310000000/37'),                                                     //  173: (-10000000) * (31/37)
    (Info: triOk;            Val: '-11470000000/59'),                                                   //  174: (-10000000) * (1147/59)
    (Info: triOk;            Val: '-676730000000'),                                                     //  175: (-10000000) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  176: (17) * (0)
    (Info: triOk;            Val: '17'),                                                                //  177: (17) * (1)
    (Info: triOk;            Val: '17/2'),                                                              //  178: (17) * (1/2)
    (Info: triOk;            Val: '-17/10'),                                                            //  179: (17) * (-1/10)
    (Info: triOk;            Val: '17/100'),                                                            //  180: (17) * (1/100)
    (Info: triOk;            Val: '34/7'),                                                              //  181: (17) * (2/7)
    (Info: triOk;            Val: '-209865'),                                                           //  182: (17) * (-12345)
    (Info: triOk;            Val: '-5865/679'),                                                         //  183: (17) * (-345/679)
    (Info: triOk;            Val: '16999999999999983/8888888888888'),                                   //  184: (17) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '1700'),                                                              //  185: (17) * (100)
    (Info: triOk;            Val: '-170000000'),                                                        //  186: (17) * (-10000000)
    (Info: triOk;            Val: '289'),                                                               //  187: (17) * (17)
    (Info: triOk;            Val: '1'),                                                                 //  188: (17) * (1/17)
    (Info: triOk;            Val: '527/37'),                                                            //  189: (17) * (31/37)
    (Info: triOk;            Val: '19499/59'),                                                          //  190: (17) * (1147/59)
    (Info: triOk;            Val: '1150441'),                                                           //  191: (17) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  192: (1/17) * (0)
    (Info: triOk;            Val: '1/17'),                                                              //  193: (1/17) * (1)
    (Info: triOk;            Val: '1/34'),                                                              //  194: (1/17) * (1/2)
    (Info: triOk;            Val: '-1/170'),                                                            //  195: (1/17) * (-1/10)
    (Info: triOk;            Val: '1/1700'),                                                            //  196: (1/17) * (1/100)
    (Info: triOk;            Val: '2/119'),                                                             //  197: (1/17) * (2/7)
    (Info: triOk;            Val: '-12345/17'),                                                         //  198: (1/17) * (-12345)
    (Info: triOk;            Val: '-345/11543'),                                                        //  199: (1/17) * (-345/679)
    (Info: triOk;            Val: '999999999999999/151111111111096'),                                   //  200: (1/17) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '100/17'),                                                            //  201: (1/17) * (100)
    (Info: triOk;            Val: '-10000000/17'),                                                      //  202: (1/17) * (-10000000)
    (Info: triOk;            Val: '1'),                                                                 //  203: (1/17) * (17)
    (Info: triOk;            Val: '1/289'),                                                             //  204: (1/17) * (1/17)
    (Info: triOk;            Val: '31/629'),                                                            //  205: (1/17) * (31/37)
    (Info: triOk;            Val: '1147/1003'),                                                         //  206: (1/17) * (1147/59)
    (Info: triOk;            Val: '67673/17'),                                                          //  207: (1/17) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  208: (31/37) * (0)
    (Info: triOk;            Val: '31/37'),                                                             //  209: (31/37) * (1)
    (Info: triOk;            Val: '31/74'),                                                             //  210: (31/37) * (1/2)
    (Info: triOk;            Val: '-31/370'),                                                           //  211: (31/37) * (-1/10)
    (Info: triOk;            Val: '31/3700'),                                                           //  212: (31/37) * (1/100)
    (Info: triOk;            Val: '62/259'),                                                            //  213: (31/37) * (2/7)
    (Info: triOk;            Val: '-382695/37'),                                                        //  214: (31/37) * (-12345)
    (Info: triOk;            Val: '-10695/25123'),                                                      //  215: (31/37) * (-345/679)
    (Info: triOk;            Val: '837837837837837/8888888888888'),                                     //  216: (31/37) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '3100/37'),                                                           //  217: (31/37) * (100)
    (Info: triOk;            Val: '-310000000/37'),                                                     //  218: (31/37) * (-10000000)
    (Info: triOk;            Val: '527/37'),                                                            //  219: (31/37) * (17)
    (Info: triOk;            Val: '31/629'),                                                            //  220: (31/37) * (1/17)
    (Info: triOk;            Val: '961/1369'),                                                          //  221: (31/37) * (31/37)
    (Info: triOk;            Val: '961/59'),                                                            //  222: (31/37) * (1147/59)
    (Info: triOk;            Val: '56699'),                                                             //  223: (31/37) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  224: (1147/59) * (0)
    (Info: triOk;            Val: '1147/59'),                                                           //  225: (1147/59) * (1)
    (Info: triOk;            Val: '1147/118'),                                                          //  226: (1147/59) * (1/2)
    (Info: triOk;            Val: '-1147/590'),                                                         //  227: (1147/59) * (-1/10)
    (Info: triOk;            Val: '1147/5900'),                                                         //  228: (1147/59) * (1/100)
    (Info: triOk;            Val: '2294/413'),                                                          //  229: (1147/59) * (2/7)
    (Info: triOk;            Val: '-14159715/59'),                                                      //  230: (1147/59) * (-12345)
    (Info: triOk;            Val: '-395715/40061'),                                                     //  231: (1147/59) * (-345/679)
    (Info: triOk;            Val: '1146999999999998853/524444444444392'),                               //  232: (1147/59) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '114700/59'),                                                         //  233: (1147/59) * (100)
    (Info: triOk;            Val: '-11470000000/59'),                                                   //  234: (1147/59) * (-10000000)
    (Info: triOk;            Val: '19499/59'),                                                          //  235: (1147/59) * (17)
    (Info: triOk;            Val: '1147/1003'),                                                         //  236: (1147/59) * (1/17)
    (Info: triOk;            Val: '961/59'),                                                            //  237: (1147/59) * (31/37)
    (Info: triOk;            Val: '1315609/3481'),                                                      //  238: (1147/59) * (1147/59)
    (Info: triOk;            Val: '1315609'),                                                           //  239: (1147/59) * (67673)
    (Info: triOk;            Val: '0'),                                                                 //  240: (67673) * (0)
    (Info: triOk;            Val: '67673'),                                                             //  241: (67673) * (1)
    (Info: triOk;            Val: '67673/2'),                                                           //  242: (67673) * (1/2)
    (Info: triOk;            Val: '-67673/10'),                                                         //  243: (67673) * (-1/10)
    (Info: triOk;            Val: '67673/100'),                                                         //  244: (67673) * (1/100)
    (Info: triOk;            Val: '135346/7'),                                                          //  245: (67673) * (2/7)
    (Info: triOk;            Val: '-835423185'),                                                        //  246: (67673) * (-12345)
    (Info: triOk;            Val: '-23347185/679'),                                                     //  247: (67673) * (-345/679)
    (Info: triOk;            Val: '67672999999999932327/8888888888888'),                                //  248: (67673) * (999999999999999/8888888888888)
    (Info: triOk;            Val: '6767300'),                                                           //  249: (67673) * (100)
    (Info: triOk;            Val: '-676730000000'),                                                     //  250: (67673) * (-10000000)
    (Info: triOk;            Val: '1150441'),                                                           //  251: (67673) * (17)
    (Info: triOk;            Val: '67673/17'),                                                          //  252: (67673) * (1/17)
    (Info: triOk;            Val: '56699'),                                                             //  253: (67673) * (31/37)
    (Info: triOk;            Val: '1315609'),                                                           //  254: (67673) * (1147/59)
    (Info: triOk;            Val: '4579634929')                                                         //  255: (67673) * (67673)
  );

  DivideResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //    0: (0) / (0)
    (Info: triOk;            Val: '0'),                                                                 //    1: (0) / (1)
    (Info: triOk;            Val: '0'),                                                                 //    2: (0) / (1/2)
    (Info: triOk;            Val: '0'),                                                                 //    3: (0) / (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //    4: (0) / (1/100)
    (Info: triOk;            Val: '0'),                                                                 //    5: (0) / (2/7)
    (Info: triOk;            Val: '0'),                                                                 //    6: (0) / (-12345)
    (Info: triOk;            Val: '0'),                                                                 //    7: (0) / (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //    8: (0) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //    9: (0) / (100)
    (Info: triOk;            Val: '0'),                                                                 //   10: (0) / (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   11: (0) / (17)
    (Info: triOk;            Val: '0'),                                                                 //   12: (0) / (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   13: (0) / (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   14: (0) / (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   15: (0) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   16: (1) / (0)
    (Info: triOk;            Val: '1'),                                                                 //   17: (1) / (1)
    (Info: triOk;            Val: '2'),                                                                 //   18: (1) / (1/2)
    (Info: triOk;            Val: '-10'),                                                               //   19: (1) / (-1/10)
    (Info: triOk;            Val: '100'),                                                               //   20: (1) / (1/100)
    (Info: triOk;            Val: '7/2'),                                                               //   21: (1) / (2/7)
    (Info: triOk;            Val: '-1/12345'),                                                          //   22: (1) / (-12345)
    (Info: triOk;            Val: '-679/345'),                                                          //   23: (1) / (-345/679)
    (Info: triOk;            Val: '8888888888888/999999999999999'),                                     //   24: (1) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/100'),                                                             //   25: (1) / (100)
    (Info: triOk;            Val: '-1/10000000'),                                                       //   26: (1) / (-10000000)
    (Info: triOk;            Val: '1/17'),                                                              //   27: (1) / (17)
    (Info: triOk;            Val: '17'),                                                                //   28: (1) / (1/17)
    (Info: triOk;            Val: '37/31'),                                                             //   29: (1) / (31/37)
    (Info: triOk;            Val: '59/1147'),                                                           //   30: (1) / (1147/59)
    (Info: triOk;            Val: '1/67673'),                                                           //   31: (1) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   32: (1/2) / (0)
    (Info: triOk;            Val: '1/2'),                                                               //   33: (1/2) / (1)
    (Info: triOk;            Val: '1'),                                                                 //   34: (1/2) / (1/2)
    (Info: triOk;            Val: '-5'),                                                                //   35: (1/2) / (-1/10)
    (Info: triOk;            Val: '50'),                                                                //   36: (1/2) / (1/100)
    (Info: triOk;            Val: '7/4'),                                                               //   37: (1/2) / (2/7)
    (Info: triOk;            Val: '-1/24690'),                                                          //   38: (1/2) / (-12345)
    (Info: triOk;            Val: '-679/690'),                                                          //   39: (1/2) / (-345/679)
    (Info: triOk;            Val: '4444444444444/999999999999999'),                                     //   40: (1/2) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/200'),                                                             //   41: (1/2) / (100)
    (Info: triOk;            Val: '-1/20000000'),                                                       //   42: (1/2) / (-10000000)
    (Info: triOk;            Val: '1/34'),                                                              //   43: (1/2) / (17)
    (Info: triOk;            Val: '17/2'),                                                              //   44: (1/2) / (1/17)
    (Info: triOk;            Val: '37/62'),                                                             //   45: (1/2) / (31/37)
    (Info: triOk;            Val: '59/2294'),                                                           //   46: (1/2) / (1147/59)
    (Info: triOk;            Val: '1/135346'),                                                          //   47: (1/2) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   48: (-1/10) / (0)
    (Info: triOk;            Val: '-1/10'),                                                             //   49: (-1/10) / (1)
    (Info: triOk;            Val: '-1/5'),                                                              //   50: (-1/10) / (1/2)
    (Info: triOk;            Val: '1'),                                                                 //   51: (-1/10) / (-1/10)
    (Info: triOk;            Val: '-10'),                                                               //   52: (-1/10) / (1/100)
    (Info: triOk;            Val: '-7/20'),                                                             //   53: (-1/10) / (2/7)
    (Info: triOk;            Val: '1/123450'),                                                          //   54: (-1/10) / (-12345)
    (Info: triOk;            Val: '679/3450'),                                                          //   55: (-1/10) / (-345/679)
    (Info: triOk;            Val: '-4444444444444/4999999999999995'),                                   //   56: (-1/10) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1/1000'),                                                           //   57: (-1/10) / (100)
    (Info: triOk;            Val: '1/100000000'),                                                       //   58: (-1/10) / (-10000000)
    (Info: triOk;            Val: '-1/170'),                                                            //   59: (-1/10) / (17)
    (Info: triOk;            Val: '-17/10'),                                                            //   60: (-1/10) / (1/17)
    (Info: triOk;            Val: '-37/310'),                                                           //   61: (-1/10) / (31/37)
    (Info: triOk;            Val: '-59/11470'),                                                         //   62: (-1/10) / (1147/59)
    (Info: triOk;            Val: '-1/676730'),                                                         //   63: (-1/10) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   64: (1/100) / (0)
    (Info: triOk;            Val: '1/100'),                                                             //   65: (1/100) / (1)
    (Info: triOk;            Val: '1/50'),                                                              //   66: (1/100) / (1/2)
    (Info: triOk;            Val: '-1/10'),                                                             //   67: (1/100) / (-1/10)
    (Info: triOk;            Val: '1'),                                                                 //   68: (1/100) / (1/100)
    (Info: triOk;            Val: '7/200'),                                                             //   69: (1/100) / (2/7)
    (Info: triOk;            Val: '-1/1234500'),                                                        //   70: (1/100) / (-12345)
    (Info: triOk;            Val: '-679/34500'),                                                        //   71: (1/100) / (-345/679)
    (Info: triOk;            Val: '2222222222222/24999999999999975'),                                   //   72: (1/100) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/10000'),                                                           //   73: (1/100) / (100)
    (Info: triOk;            Val: '-1/1000000000'),                                                     //   74: (1/100) / (-10000000)
    (Info: triOk;            Val: '1/1700'),                                                            //   75: (1/100) / (17)
    (Info: triOk;            Val: '17/100'),                                                            //   76: (1/100) / (1/17)
    (Info: triOk;            Val: '37/3100'),                                                           //   77: (1/100) / (31/37)
    (Info: triOk;            Val: '59/114700'),                                                         //   78: (1/100) / (1147/59)
    (Info: triOk;            Val: '1/6767300'),                                                         //   79: (1/100) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   80: (2/7) / (0)
    (Info: triOk;            Val: '2/7'),                                                               //   81: (2/7) / (1)
    (Info: triOk;            Val: '4/7'),                                                               //   82: (2/7) / (1/2)
    (Info: triOk;            Val: '-20/7'),                                                             //   83: (2/7) / (-1/10)
    (Info: triOk;            Val: '200/7'),                                                             //   84: (2/7) / (1/100)
    (Info: triOk;            Val: '1'),                                                                 //   85: (2/7) / (2/7)
    (Info: triOk;            Val: '-2/86415'),                                                          //   86: (2/7) / (-12345)
    (Info: triOk;            Val: '-194/345'),                                                          //   87: (2/7) / (-345/679)
    (Info: triOk;            Val: '17777777777776/6999999999999993'),                                   //   88: (2/7) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/350'),                                                             //   89: (2/7) / (100)
    (Info: triOk;            Val: '-1/35000000'),                                                       //   90: (2/7) / (-10000000)
    (Info: triOk;            Val: '2/119'),                                                             //   91: (2/7) / (17)
    (Info: triOk;            Val: '34/7'),                                                              //   92: (2/7) / (1/17)
    (Info: triOk;            Val: '74/217'),                                                            //   93: (2/7) / (31/37)
    (Info: triOk;            Val: '118/8029'),                                                          //   94: (2/7) / (1147/59)
    (Info: triOk;            Val: '2/473711'),                                                          //   95: (2/7) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   96: (-12345) / (0)
    (Info: triOk;            Val: '-12345'),                                                            //   97: (-12345) / (1)
    (Info: triOk;            Val: '-24690'),                                                            //   98: (-12345) / (1/2)
    (Info: triOk;            Val: '123450'),                                                            //   99: (-12345) / (-1/10)
    (Info: triOk;            Val: '-1234500'),                                                          //  100: (-12345) / (1/100)
    (Info: triOk;            Val: '-86415/2'),                                                          //  101: (-12345) / (2/7)
    (Info: triOk;            Val: '1'),                                                                 //  102: (-12345) / (-12345)
    (Info: triOk;            Val: '558817/23'),                                                         //  103: (-12345) / (-345/679)
    (Info: triOk;            Val: '-36577777777774120/333333333333333'),                                //  104: (-12345) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '-2469/20'),                                                          //  105: (-12345) / (100)
    (Info: triOk;            Val: '2469/2000000'),                                                      //  106: (-12345) / (-10000000)
    (Info: triOk;            Val: '-12345/17'),                                                         //  107: (-12345) / (17)
    (Info: triOk;            Val: '-209865'),                                                           //  108: (-12345) / (1/17)
    (Info: triOk;            Val: '-456765/31'),                                                        //  109: (-12345) / (31/37)
    (Info: triOk;            Val: '-728355/1147'),                                                      //  110: (-12345) / (1147/59)
    (Info: triOk;            Val: '-12345/67673'),                                                      //  111: (-12345) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  112: (-345/679) / (0)
    (Info: triOk;            Val: '-345/679'),                                                          //  113: (-345/679) / (1)
    (Info: triOk;            Val: '-690/679'),                                                          //  114: (-345/679) / (1/2)
    (Info: triOk;            Val: '3450/679'),                                                          //  115: (-345/679) / (-1/10)
    (Info: triOk;            Val: '-34500/679'),                                                        //  116: (-345/679) / (1/100)
    (Info: triOk;            Val: '-345/194'),                                                          //  117: (-345/679) / (2/7)
    (Info: triOk;            Val: '23/558817'),                                                         //  118: (-345/679) / (-12345)
    (Info: triOk;            Val: '1'),                                                                 //  119: (-345/679) / (-345/679)
    (Info: triOk;            Val: '-1022222222222120/226333333333333107'),                              //  120: (-345/679) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '-69/13580'),                                                         //  121: (-345/679) / (100)
    (Info: triOk;            Val: '69/1358000000'),                                                     //  122: (-345/679) / (-10000000)
    (Info: triOk;            Val: '-345/11543'),                                                        //  123: (-345/679) / (17)
    (Info: triOk;            Val: '-5865/679'),                                                         //  124: (-345/679) / (1/17)
    (Info: triOk;            Val: '-12765/21049'),                                                      //  125: (-345/679) / (31/37)
    (Info: triOk;            Val: '-20355/778813'),                                                     //  126: (-345/679) / (1147/59)
    (Info: triOk;            Val: '-345/45949967'),                                                     //  127: (-345/679) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  128: (999999999999999/8888888888888) / (0)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  129: (999999999999999/8888888888888) / (1)
    (Info: triOk;            Val: '999999999999999/4444444444444'),                                     //  130: (999999999999999/8888888888888) / (1/2)
    (Info: triOk;            Val: '-4999999999999995/4444444444444'),                                   //  131: (999999999999999/8888888888888) / (-1/10)
    (Info: triOk;            Val: '24999999999999975/2222222222222'),                                   //  132: (999999999999999/8888888888888) / (1/100)
    (Info: triOk;            Val: '6999999999999993/17777777777776'),                                   //  133: (999999999999999/8888888888888) / (2/7)
    (Info: triOk;            Val: '-333333333333333/36577777777774120'),                                //  134: (999999999999999/8888888888888) / (-12345)
    (Info: triOk;            Val: '-226333333333333107/1022222222222120'),                              //  135: (999999999999999/8888888888888) / (-345/679)
    (Info: triOk;            Val: '1'),                                                                 //  136: (999999999999999/8888888888888) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '999999999999999/888888888888800'),                                   //  137: (999999999999999/8888888888888) / (100)
    (Info: triOk;            Val: '-999999999999999/88888888888880000000'),                             //  138: (999999999999999/8888888888888) / (-10000000)
    (Info: triOk;            Val: '999999999999999/151111111111096'),                                   //  139: (999999999999999/8888888888888) / (17)
    (Info: triOk;            Val: '16999999999999983/8888888888888'),                                   //  140: (999999999999999/8888888888888) / (1/17)
    (Info: triOk;            Val: '1193548387096773/8888888888888'),                                    //  141: (999999999999999/8888888888888) / (31/37)
    (Info: triOk;            Val: '51438535309503/8888888888888'),                                      //  142: (999999999999999/8888888888888) / (1147/59)
    (Info: triOk;            Val: '871839581517/524444444444392'),                                      //  143: (999999999999999/8888888888888) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  144: (100) / (0)
    (Info: triOk;            Val: '100'),                                                               //  145: (100) / (1)
    (Info: triOk;            Val: '200'),                                                               //  146: (100) / (1/2)
    (Info: triOk;            Val: '-1000'),                                                             //  147: (100) / (-1/10)
    (Info: triOk;            Val: '10000'),                                                             //  148: (100) / (1/100)
    (Info: triOk;            Val: '350'),                                                               //  149: (100) / (2/7)
    (Info: triOk;            Val: '-20/2469'),                                                          //  150: (100) / (-12345)
    (Info: triOk;            Val: '-13580/69'),                                                         //  151: (100) / (-345/679)
    (Info: triOk;            Val: '888888888888800/999999999999999'),                                   //  152: (100) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1'),                                                                 //  153: (100) / (100)
    (Info: triOk;            Val: '-1/100000'),                                                         //  154: (100) / (-10000000)
    (Info: triOk;            Val: '100/17'),                                                            //  155: (100) / (17)
    (Info: triOk;            Val: '1700'),                                                              //  156: (100) / (1/17)
    (Info: triOk;            Val: '3700/31'),                                                           //  157: (100) / (31/37)
    (Info: triOk;            Val: '5900/1147'),                                                         //  158: (100) / (1147/59)
    (Info: triOk;            Val: '100/67673'),                                                         //  159: (100) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  160: (-10000000) / (0)
    (Info: triOk;            Val: '-10000000'),                                                         //  161: (-10000000) / (1)
    (Info: triOk;            Val: '-20000000'),                                                         //  162: (-10000000) / (1/2)
    (Info: triOk;            Val: '100000000'),                                                         //  163: (-10000000) / (-1/10)
    (Info: triOk;            Val: '-1000000000'),                                                       //  164: (-10000000) / (1/100)
    (Info: triOk;            Val: '-35000000'),                                                         //  165: (-10000000) / (2/7)
    (Info: triOk;            Val: '2000000/2469'),                                                      //  166: (-10000000) / (-12345)
    (Info: triOk;            Val: '1358000000/69'),                                                     //  167: (-10000000) / (-345/679)
    (Info: triOk;            Val: '-88888888888880000000/999999999999999'),                             //  168: (-10000000) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '-100000'),                                                           //  169: (-10000000) / (100)
    (Info: triOk;            Val: '1'),                                                                 //  170: (-10000000) / (-10000000)
    (Info: triOk;            Val: '-10000000/17'),                                                      //  171: (-10000000) / (17)
    (Info: triOk;            Val: '-170000000'),                                                        //  172: (-10000000) / (1/17)
    (Info: triOk;            Val: '-370000000/31'),                                                     //  173: (-10000000) / (31/37)
    (Info: triOk;            Val: '-590000000/1147'),                                                   //  174: (-10000000) / (1147/59)
    (Info: triOk;            Val: '-10000000/67673'),                                                   //  175: (-10000000) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  176: (17) / (0)
    (Info: triOk;            Val: '17'),                                                                //  177: (17) / (1)
    (Info: triOk;            Val: '34'),                                                                //  178: (17) / (1/2)
    (Info: triOk;            Val: '-170'),                                                              //  179: (17) / (-1/10)
    (Info: triOk;            Val: '1700'),                                                              //  180: (17) / (1/100)
    (Info: triOk;            Val: '119/2'),                                                             //  181: (17) / (2/7)
    (Info: triOk;            Val: '-17/12345'),                                                         //  182: (17) / (-12345)
    (Info: triOk;            Val: '-11543/345'),                                                        //  183: (17) / (-345/679)
    (Info: triOk;            Val: '151111111111096/999999999999999'),                                   //  184: (17) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '17/100'),                                                            //  185: (17) / (100)
    (Info: triOk;            Val: '-17/10000000'),                                                      //  186: (17) / (-10000000)
    (Info: triOk;            Val: '1'),                                                                 //  187: (17) / (17)
    (Info: triOk;            Val: '289'),                                                               //  188: (17) / (1/17)
    (Info: triOk;            Val: '629/31'),                                                            //  189: (17) / (31/37)
    (Info: triOk;            Val: '1003/1147'),                                                         //  190: (17) / (1147/59)
    (Info: triOk;            Val: '17/67673'),                                                          //  191: (17) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  192: (1/17) / (0)
    (Info: triOk;            Val: '1/17'),                                                              //  193: (1/17) / (1)
    (Info: triOk;            Val: '2/17'),                                                              //  194: (1/17) / (1/2)
    (Info: triOk;            Val: '-10/17'),                                                            //  195: (1/17) / (-1/10)
    (Info: triOk;            Val: '100/17'),                                                            //  196: (1/17) / (1/100)
    (Info: triOk;            Val: '7/34'),                                                              //  197: (1/17) / (2/7)
    (Info: triOk;            Val: '-1/209865'),                                                         //  198: (1/17) / (-12345)
    (Info: triOk;            Val: '-679/5865'),                                                         //  199: (1/17) / (-345/679)
    (Info: triOk;            Val: '8888888888888/16999999999999983'),                                   //  200: (1/17) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/1700'),                                                            //  201: (1/17) / (100)
    (Info: triOk;            Val: '-1/170000000'),                                                      //  202: (1/17) / (-10000000)
    (Info: triOk;            Val: '1/289'),                                                             //  203: (1/17) / (17)
    (Info: triOk;            Val: '1'),                                                                 //  204: (1/17) / (1/17)
    (Info: triOk;            Val: '37/527'),                                                            //  205: (1/17) / (31/37)
    (Info: triOk;            Val: '59/19499'),                                                          //  206: (1/17) / (1147/59)
    (Info: triOk;            Val: '1/1150441'),                                                         //  207: (1/17) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  208: (31/37) / (0)
    (Info: triOk;            Val: '31/37'),                                                             //  209: (31/37) / (1)
    (Info: triOk;            Val: '62/37'),                                                             //  210: (31/37) / (1/2)
    (Info: triOk;            Val: '-310/37'),                                                           //  211: (31/37) / (-1/10)
    (Info: triOk;            Val: '3100/37'),                                                           //  212: (31/37) / (1/100)
    (Info: triOk;            Val: '217/74'),                                                            //  213: (31/37) / (2/7)
    (Info: triOk;            Val: '-31/456765'),                                                        //  214: (31/37) / (-12345)
    (Info: triOk;            Val: '-21049/12765'),                                                      //  215: (31/37) / (-345/679)
    (Info: triOk;            Val: '8888888888888/1193548387096773'),                                    //  216: (31/37) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '31/3700'),                                                           //  217: (31/37) / (100)
    (Info: triOk;            Val: '-31/370000000'),                                                     //  218: (31/37) / (-10000000)
    (Info: triOk;            Val: '31/629'),                                                            //  219: (31/37) / (17)
    (Info: triOk;            Val: '527/37'),                                                            //  220: (31/37) / (1/17)
    (Info: triOk;            Val: '1'),                                                                 //  221: (31/37) / (31/37)
    (Info: triOk;            Val: '59/1369'),                                                           //  222: (31/37) / (1147/59)
    (Info: triOk;            Val: '1/80771'),                                                           //  223: (31/37) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  224: (1147/59) / (0)
    (Info: triOk;            Val: '1147/59'),                                                           //  225: (1147/59) / (1)
    (Info: triOk;            Val: '2294/59'),                                                           //  226: (1147/59) / (1/2)
    (Info: triOk;            Val: '-11470/59'),                                                         //  227: (1147/59) / (-1/10)
    (Info: triOk;            Val: '114700/59'),                                                         //  228: (1147/59) / (1/100)
    (Info: triOk;            Val: '8029/118'),                                                          //  229: (1147/59) / (2/7)
    (Info: triOk;            Val: '-1147/728355'),                                                      //  230: (1147/59) / (-12345)
    (Info: triOk;            Val: '-778813/20355'),                                                     //  231: (1147/59) / (-345/679)
    (Info: triOk;            Val: '8888888888888/51438535309503'),                                      //  232: (1147/59) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '1147/5900'),                                                         //  233: (1147/59) / (100)
    (Info: triOk;            Val: '-1147/590000000'),                                                   //  234: (1147/59) / (-10000000)
    (Info: triOk;            Val: '1147/1003'),                                                         //  235: (1147/59) / (17)
    (Info: triOk;            Val: '19499/59'),                                                          //  236: (1147/59) / (1/17)
    (Info: triOk;            Val: '1369/59'),                                                           //  237: (1147/59) / (31/37)
    (Info: triOk;            Val: '1'),                                                                 //  238: (1147/59) / (1147/59)
    (Info: triOk;            Val: '1/3481'),                                                            //  239: (1147/59) / (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  240: (67673) / (0)
    (Info: triOk;            Val: '67673'),                                                             //  241: (67673) / (1)
    (Info: triOk;            Val: '135346'),                                                            //  242: (67673) / (1/2)
    (Info: triOk;            Val: '-676730'),                                                           //  243: (67673) / (-1/10)
    (Info: triOk;            Val: '6767300'),                                                           //  244: (67673) / (1/100)
    (Info: triOk;            Val: '473711/2'),                                                          //  245: (67673) / (2/7)
    (Info: triOk;            Val: '-67673/12345'),                                                      //  246: (67673) / (-12345)
    (Info: triOk;            Val: '-45949967/345'),                                                     //  247: (67673) / (-345/679)
    (Info: triOk;            Val: '524444444444392/871839581517'),                                      //  248: (67673) / (999999999999999/8888888888888)
    (Info: triOk;            Val: '67673/100'),                                                         //  249: (67673) / (100)
    (Info: triOk;            Val: '-67673/10000000'),                                                   //  250: (67673) / (-10000000)
    (Info: triOk;            Val: '67673/17'),                                                          //  251: (67673) / (17)
    (Info: triOk;            Val: '1150441'),                                                           //  252: (67673) / (1/17)
    (Info: triOk;            Val: '80771'),                                                             //  253: (67673) / (31/37)
    (Info: triOk;            Val: '3481'),                                                              //  254: (67673) / (1147/59)
    (Info: triOk;            Val: '1')                                                                  //  255: (67673) / (67673)
  );

  IntDivideResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //    0: (0) div (0)
    (Info: triOk;            Val: '0'),                                                                 //    1: (0) div (1)
    (Info: triOk;            Val: '0'),                                                                 //    2: (0) div (1/2)
    (Info: triOk;            Val: '0'),                                                                 //    3: (0) div (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //    4: (0) div (1/100)
    (Info: triOk;            Val: '0'),                                                                 //    5: (0) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //    6: (0) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //    7: (0) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //    8: (0) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //    9: (0) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   10: (0) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   11: (0) div (17)
    (Info: triOk;            Val: '0'),                                                                 //   12: (0) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   13: (0) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   14: (0) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   15: (0) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   16: (1) div (0)
    (Info: triOk;            Val: '1'),                                                                 //   17: (1) div (1)
    (Info: triOk;            Val: '2'),                                                                 //   18: (1) div (1/2)
    (Info: triOk;            Val: '-10'),                                                               //   19: (1) div (-1/10)
    (Info: triOk;            Val: '100'),                                                               //   20: (1) div (1/100)
    (Info: triOk;            Val: '3'),                                                                 //   21: (1) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //   22: (1) div (-12345)
    (Info: triOk;            Val: '-1'),                                                                //   23: (1) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //   24: (1) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //   25: (1) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   26: (1) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   27: (1) div (17)
    (Info: triOk;            Val: '17'),                                                                //   28: (1) div (1/17)
    (Info: triOk;            Val: '1'),                                                                 //   29: (1) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   30: (1) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   31: (1) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   32: (1/2) div (0)
    (Info: triOk;            Val: '0'),                                                                 //   33: (1/2) div (1)
    (Info: triOk;            Val: '1'),                                                                 //   34: (1/2) div (1/2)
    (Info: triOk;            Val: '-5'),                                                                //   35: (1/2) div (-1/10)
    (Info: triOk;            Val: '50'),                                                                //   36: (1/2) div (1/100)
    (Info: triOk;            Val: '1'),                                                                 //   37: (1/2) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //   38: (1/2) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //   39: (1/2) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //   40: (1/2) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //   41: (1/2) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   42: (1/2) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   43: (1/2) div (17)
    (Info: triOk;            Val: '8'),                                                                 //   44: (1/2) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   45: (1/2) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   46: (1/2) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   47: (1/2) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   48: (-1/10) div (0)
    (Info: triOk;            Val: '0'),                                                                 //   49: (-1/10) div (1)
    (Info: triOk;            Val: '0'),                                                                 //   50: (-1/10) div (1/2)
    (Info: triOk;            Val: '1'),                                                                 //   51: (-1/10) div (-1/10)
    (Info: triOk;            Val: '-10'),                                                               //   52: (-1/10) div (1/100)
    (Info: triOk;            Val: '0'),                                                                 //   53: (-1/10) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //   54: (-1/10) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //   55: (-1/10) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //   56: (-1/10) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //   57: (-1/10) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   58: (-1/10) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   59: (-1/10) div (17)
    (Info: triOk;            Val: '-1'),                                                                //   60: (-1/10) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   61: (-1/10) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   62: (-1/10) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   63: (-1/10) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   64: (1/100) div (0)
    (Info: triOk;            Val: '0'),                                                                 //   65: (1/100) div (1)
    (Info: triOk;            Val: '0'),                                                                 //   66: (1/100) div (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   67: (1/100) div (-1/10)
    (Info: triOk;            Val: '1'),                                                                 //   68: (1/100) div (1/100)
    (Info: triOk;            Val: '0'),                                                                 //   69: (1/100) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //   70: (1/100) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //   71: (1/100) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //   72: (1/100) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //   73: (1/100) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   74: (1/100) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   75: (1/100) div (17)
    (Info: triOk;            Val: '0'),                                                                 //   76: (1/100) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   77: (1/100) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   78: (1/100) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   79: (1/100) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   80: (2/7) div (0)
    (Info: triOk;            Val: '0'),                                                                 //   81: (2/7) div (1)
    (Info: triOk;            Val: '0'),                                                                 //   82: (2/7) div (1/2)
    (Info: triOk;            Val: '-2'),                                                                //   83: (2/7) div (-1/10)
    (Info: triOk;            Val: '28'),                                                                //   84: (2/7) div (1/100)
    (Info: triOk;            Val: '1'),                                                                 //   85: (2/7) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //   86: (2/7) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //   87: (2/7) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //   88: (2/7) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //   89: (2/7) div (100)
    (Info: triOk;            Val: '0'),                                                                 //   90: (2/7) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   91: (2/7) div (17)
    (Info: triOk;            Val: '4'),                                                                 //   92: (2/7) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   93: (2/7) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   94: (2/7) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   95: (2/7) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   96: (-12345) div (0)
    (Info: triOk;            Val: '-12345'),                                                            //   97: (-12345) div (1)
    (Info: triOk;            Val: '-24690'),                                                            //   98: (-12345) div (1/2)
    (Info: triOk;            Val: '123450'),                                                            //   99: (-12345) div (-1/10)
    (Info: triOk;            Val: '-1234500'),                                                          //  100: (-12345) div (1/100)
    (Info: triOk;            Val: '-43207'),                                                            //  101: (-12345) div (2/7)
    (Info: triOk;            Val: '1'),                                                                 //  102: (-12345) div (-12345)
    (Info: triOk;            Val: '24296'),                                                             //  103: (-12345) div (-345/679)
    (Info: triOk;            Val: '-109'),                                                              //  104: (-12345) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '-123'),                                                              //  105: (-12345) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  106: (-12345) div (-10000000)
    (Info: triOk;            Val: '-726'),                                                              //  107: (-12345) div (17)
    (Info: triOk;            Val: '-209865'),                                                           //  108: (-12345) div (1/17)
    (Info: triOk;            Val: '-14734'),                                                            //  109: (-12345) div (31/37)
    (Info: triOk;            Val: '-635'),                                                              //  110: (-12345) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  111: (-12345) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  112: (-345/679) div (0)
    (Info: triOk;            Val: '0'),                                                                 //  113: (-345/679) div (1)
    (Info: triOk;            Val: '-1'),                                                                //  114: (-345/679) div (1/2)
    (Info: triOk;            Val: '5'),                                                                 //  115: (-345/679) div (-1/10)
    (Info: triOk;            Val: '-50'),                                                               //  116: (-345/679) div (1/100)
    (Info: triOk;            Val: '-1'),                                                                //  117: (-345/679) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  118: (-345/679) div (-12345)
    (Info: triOk;            Val: '1'),                                                                 //  119: (-345/679) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  120: (-345/679) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  121: (-345/679) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  122: (-345/679) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //  123: (-345/679) div (17)
    (Info: triOk;            Val: '-8'),                                                                //  124: (-345/679) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //  125: (-345/679) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  126: (-345/679) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  127: (-345/679) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  128: (999999999999999/8888888888888) div (0)
    (Info: triOk;            Val: '112'),                                                               //  129: (999999999999999/8888888888888) div (1)
    (Info: triOk;            Val: '225'),                                                               //  130: (999999999999999/8888888888888) div (1/2)
    (Info: triOk;            Val: '-1125'),                                                             //  131: (999999999999999/8888888888888) div (-1/10)
    (Info: triOk;            Val: '11250'),                                                             //  132: (999999999999999/8888888888888) div (1/100)
    (Info: triOk;            Val: '393'),                                                               //  133: (999999999999999/8888888888888) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  134: (999999999999999/8888888888888) div (-12345)
    (Info: triOk;            Val: '-221'),                                                              //  135: (999999999999999/8888888888888) div (-345/679)
    (Info: triOk;            Val: '1'),                                                                 //  136: (999999999999999/8888888888888) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '1'),                                                                 //  137: (999999999999999/8888888888888) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  138: (999999999999999/8888888888888) div (-10000000)
    (Info: triOk;            Val: '6'),                                                                 //  139: (999999999999999/8888888888888) div (17)
    (Info: triOk;            Val: '1912'),                                                              //  140: (999999999999999/8888888888888) div (1/17)
    (Info: triOk;            Val: '134'),                                                               //  141: (999999999999999/8888888888888) div (31/37)
    (Info: triOk;            Val: '5'),                                                                 //  142: (999999999999999/8888888888888) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  143: (999999999999999/8888888888888) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  144: (100) div (0)
    (Info: triOk;            Val: '100'),                                                               //  145: (100) div (1)
    (Info: triOk;            Val: '200'),                                                               //  146: (100) div (1/2)
    (Info: triOk;            Val: '-1000'),                                                             //  147: (100) div (-1/10)
    (Info: triOk;            Val: '10000'),                                                             //  148: (100) div (1/100)
    (Info: triOk;            Val: '350'),                                                               //  149: (100) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  150: (100) div (-12345)
    (Info: triOk;            Val: '-196'),                                                              //  151: (100) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  152: (100) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '1'),                                                                 //  153: (100) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  154: (100) div (-10000000)
    (Info: triOk;            Val: '5'),                                                                 //  155: (100) div (17)
    (Info: triOk;            Val: '1700'),                                                              //  156: (100) div (1/17)
    (Info: triOk;            Val: '119'),                                                               //  157: (100) div (31/37)
    (Info: triOk;            Val: '5'),                                                                 //  158: (100) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  159: (100) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  160: (-10000000) div (0)
    (Info: triOk;            Val: '-10000000'),                                                         //  161: (-10000000) div (1)
    (Info: triOk;            Val: '-20000000'),                                                         //  162: (-10000000) div (1/2)
    (Info: triOk;            Val: '100000000'),                                                         //  163: (-10000000) div (-1/10)
    (Info: triOk;            Val: '-1000000000'),                                                       //  164: (-10000000) div (1/100)
    (Info: triOk;            Val: '-35000000'),                                                         //  165: (-10000000) div (2/7)
    (Info: triOk;            Val: '810'),                                                               //  166: (-10000000) div (-12345)
    (Info: triOk;            Val: '19681159'),                                                          //  167: (-10000000) div (-345/679)
    (Info: triOk;            Val: '-88888'),                                                            //  168: (-10000000) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '-100000'),                                                           //  169: (-10000000) div (100)
    (Info: triOk;            Val: '1'),                                                                 //  170: (-10000000) div (-10000000)
    (Info: triOk;            Val: '-588235'),                                                           //  171: (-10000000) div (17)
    (Info: triOk;            Val: '-170000000'),                                                        //  172: (-10000000) div (1/17)
    (Info: triOk;            Val: '-11935483'),                                                         //  173: (-10000000) div (31/37)
    (Info: triOk;            Val: '-514385'),                                                           //  174: (-10000000) div (1147/59)
    (Info: triOk;            Val: '-147'),                                                              //  175: (-10000000) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  176: (17) div (0)
    (Info: triOk;            Val: '17'),                                                                //  177: (17) div (1)
    (Info: triOk;            Val: '34'),                                                                //  178: (17) div (1/2)
    (Info: triOk;            Val: '-170'),                                                              //  179: (17) div (-1/10)
    (Info: triOk;            Val: '1700'),                                                              //  180: (17) div (1/100)
    (Info: triOk;            Val: '59'),                                                                //  181: (17) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  182: (17) div (-12345)
    (Info: triOk;            Val: '-33'),                                                               //  183: (17) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  184: (17) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  185: (17) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  186: (17) div (-10000000)
    (Info: triOk;            Val: '1'),                                                                 //  187: (17) div (17)
    (Info: triOk;            Val: '289'),                                                               //  188: (17) div (1/17)
    (Info: triOk;            Val: '20'),                                                                //  189: (17) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  190: (17) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  191: (17) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  192: (1/17) div (0)
    (Info: triOk;            Val: '0'),                                                                 //  193: (1/17) div (1)
    (Info: triOk;            Val: '0'),                                                                 //  194: (1/17) div (1/2)
    (Info: triOk;            Val: '0'),                                                                 //  195: (1/17) div (-1/10)
    (Info: triOk;            Val: '5'),                                                                 //  196: (1/17) div (1/100)
    (Info: triOk;            Val: '0'),                                                                 //  197: (1/17) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  198: (1/17) div (-12345)
    (Info: triOk;            Val: '0'),                                                                 //  199: (1/17) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  200: (1/17) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  201: (1/17) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  202: (1/17) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //  203: (1/17) div (17)
    (Info: triOk;            Val: '1'),                                                                 //  204: (1/17) div (1/17)
    (Info: triOk;            Val: '0'),                                                                 //  205: (1/17) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  206: (1/17) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  207: (1/17) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  208: (31/37) div (0)
    (Info: triOk;            Val: '0'),                                                                 //  209: (31/37) div (1)
    (Info: triOk;            Val: '1'),                                                                 //  210: (31/37) div (1/2)
    (Info: triOk;            Val: '-8'),                                                                //  211: (31/37) div (-1/10)
    (Info: triOk;            Val: '83'),                                                                //  212: (31/37) div (1/100)
    (Info: triOk;            Val: '2'),                                                                 //  213: (31/37) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  214: (31/37) div (-12345)
    (Info: triOk;            Val: '-1'),                                                                //  215: (31/37) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  216: (31/37) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  217: (31/37) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  218: (31/37) div (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //  219: (31/37) div (17)
    (Info: triOk;            Val: '14'),                                                                //  220: (31/37) div (1/17)
    (Info: triOk;            Val: '1'),                                                                 //  221: (31/37) div (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  222: (31/37) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  223: (31/37) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  224: (1147/59) div (0)
    (Info: triOk;            Val: '19'),                                                                //  225: (1147/59) div (1)
    (Info: triOk;            Val: '38'),                                                                //  226: (1147/59) div (1/2)
    (Info: triOk;            Val: '-194'),                                                              //  227: (1147/59) div (-1/10)
    (Info: triOk;            Val: '1944'),                                                              //  228: (1147/59) div (1/100)
    (Info: triOk;            Val: '68'),                                                                //  229: (1147/59) div (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  230: (1147/59) div (-12345)
    (Info: triOk;            Val: '-38'),                                                               //  231: (1147/59) div (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  232: (1147/59) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  233: (1147/59) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  234: (1147/59) div (-10000000)
    (Info: triOk;            Val: '1'),                                                                 //  235: (1147/59) div (17)
    (Info: triOk;            Val: '330'),                                                               //  236: (1147/59) div (1/17)
    (Info: triOk;            Val: '23'),                                                                //  237: (1147/59) div (31/37)
    (Info: triOk;            Val: '1'),                                                                 //  238: (1147/59) div (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //  239: (1147/59) div (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  240: (67673) div (0)
    (Info: triOk;            Val: '67673'),                                                             //  241: (67673) div (1)
    (Info: triOk;            Val: '135346'),                                                            //  242: (67673) div (1/2)
    (Info: triOk;            Val: '-676730'),                                                           //  243: (67673) div (-1/10)
    (Info: triOk;            Val: '6767300'),                                                           //  244: (67673) div (1/100)
    (Info: triOk;            Val: '236855'),                                                            //  245: (67673) div (2/7)
    (Info: triOk;            Val: '-5'),                                                                //  246: (67673) div (-12345)
    (Info: triOk;            Val: '-133188'),                                                           //  247: (67673) div (-345/679)
    (Info: triOk;            Val: '601'),                                                               //  248: (67673) div (999999999999999/8888888888888)
    (Info: triOk;            Val: '676'),                                                               //  249: (67673) div (100)
    (Info: triOk;            Val: '0'),                                                                 //  250: (67673) div (-10000000)
    (Info: triOk;            Val: '3980'),                                                              //  251: (67673) div (17)
    (Info: triOk;            Val: '1150441'),                                                           //  252: (67673) div (1/17)
    (Info: triOk;            Val: '80771'),                                                             //  253: (67673) div (31/37)
    (Info: triOk;            Val: '3481'),                                                              //  254: (67673) div (1147/59)
    (Info: triOk;            Val: '1')                                                                  //  255: (67673) div (67673)
  );

  RemainderResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //    0: (0) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //    1: (0) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //    2: (0) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //    3: (0) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //    4: (0) mod (1/100)
    (Info: triOk;            Val: '0'),                                                                 //    5: (0) mod (2/7)
    (Info: triOk;            Val: '0'),                                                                 //    6: (0) mod (-12345)
    (Info: triOk;            Val: '0'),                                                                 //    7: (0) mod (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //    8: (0) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //    9: (0) mod (100)
    (Info: triOk;            Val: '0'),                                                                 //   10: (0) mod (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //   11: (0) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //   12: (0) mod (1/17)
    (Info: triOk;            Val: '0'),                                                                 //   13: (0) mod (31/37)
    (Info: triOk;            Val: '0'),                                                                 //   14: (0) mod (1147/59)
    (Info: triOk;            Val: '0'),                                                                 //   15: (0) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   16: (1) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //   17: (1) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //   18: (1) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   19: (1) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //   20: (1) mod (1/100)
    (Info: triOk;            Val: '1/7'),                                                               //   21: (1) mod (2/7)
    (Info: triOk;            Val: '1'),                                                                 //   22: (1) mod (-12345)
    (Info: triOk;            Val: '334/679'),                                                           //   23: (1) mod (-345/679)
    (Info: triOk;            Val: '1'),                                                                 //   24: (1) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '1'),                                                                 //   25: (1) mod (100)
    (Info: triOk;            Val: '1'),                                                                 //   26: (1) mod (-10000000)
    (Info: triOk;            Val: '1'),                                                                 //   27: (1) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //   28: (1) mod (1/17)
    (Info: triOk;            Val: '6/37'),                                                              //   29: (1) mod (31/37)
    (Info: triOk;            Val: '1'),                                                                 //   30: (1) mod (1147/59)
    (Info: triOk;            Val: '1'),                                                                 //   31: (1) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   32: (1/2) mod (0)
    (Info: triOk;            Val: '1/2'),                                                               //   33: (1/2) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //   34: (1/2) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   35: (1/2) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //   36: (1/2) mod (1/100)
    (Info: triOk;            Val: '3/14'),                                                              //   37: (1/2) mod (2/7)
    (Info: triOk;            Val: '1/2'),                                                               //   38: (1/2) mod (-12345)
    (Info: triOk;            Val: '1/2'),                                                               //   39: (1/2) mod (-345/679)
    (Info: triOk;            Val: '1/2'),                                                               //   40: (1/2) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/2'),                                                               //   41: (1/2) mod (100)
    (Info: triOk;            Val: '1/2'),                                                               //   42: (1/2) mod (-10000000)
    (Info: triOk;            Val: '1/2'),                                                               //   43: (1/2) mod (17)
    (Info: triOk;            Val: '1/34'),                                                              //   44: (1/2) mod (1/17)
    (Info: triOk;            Val: '1/2'),                                                               //   45: (1/2) mod (31/37)
    (Info: triOk;            Val: '1/2'),                                                               //   46: (1/2) mod (1147/59)
    (Info: triOk;            Val: '1/2'),                                                               //   47: (1/2) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   48: (-1/10) mod (0)
    (Info: triOk;            Val: '-1/10'),                                                             //   49: (-1/10) mod (1)
    (Info: triOk;            Val: '-1/10'),                                                             //   50: (-1/10) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   51: (-1/10) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //   52: (-1/10) mod (1/100)
    (Info: triOk;            Val: '-1/10'),                                                             //   53: (-1/10) mod (2/7)
    (Info: triOk;            Val: '-1/10'),                                                             //   54: (-1/10) mod (-12345)
    (Info: triOk;            Val: '-1/10'),                                                             //   55: (-1/10) mod (-345/679)
    (Info: triOk;            Val: '-1/10'),                                                             //   56: (-1/10) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '-1/10'),                                                             //   57: (-1/10) mod (100)
    (Info: triOk;            Val: '-1/10'),                                                             //   58: (-1/10) mod (-10000000)
    (Info: triOk;            Val: '-1/10'),                                                             //   59: (-1/10) mod (17)
    (Info: triOk;            Val: '-7/170'),                                                            //   60: (-1/10) mod (1/17)
    (Info: triOk;            Val: '-1/10'),                                                             //   61: (-1/10) mod (31/37)
    (Info: triOk;            Val: '-1/10'),                                                             //   62: (-1/10) mod (1147/59)
    (Info: triOk;            Val: '-1/10'),                                                             //   63: (-1/10) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   64: (1/100) mod (0)
    (Info: triOk;            Val: '1/100'),                                                             //   65: (1/100) mod (1)
    (Info: triOk;            Val: '1/100'),                                                             //   66: (1/100) mod (1/2)
    (Info: triOk;            Val: '1/100'),                                                             //   67: (1/100) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //   68: (1/100) mod (1/100)
    (Info: triOk;            Val: '1/100'),                                                             //   69: (1/100) mod (2/7)
    (Info: triOk;            Val: '1/100'),                                                             //   70: (1/100) mod (-12345)
    (Info: triOk;            Val: '1/100'),                                                             //   71: (1/100) mod (-345/679)
    (Info: triOk;            Val: '1/100'),                                                             //   72: (1/100) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/100'),                                                             //   73: (1/100) mod (100)
    (Info: triOk;            Val: '1/100'),                                                             //   74: (1/100) mod (-10000000)
    (Info: triOk;            Val: '1/100'),                                                             //   75: (1/100) mod (17)
    (Info: triOk;            Val: '1/100'),                                                             //   76: (1/100) mod (1/17)
    (Info: triOk;            Val: '1/100'),                                                             //   77: (1/100) mod (31/37)
    (Info: triOk;            Val: '1/100'),                                                             //   78: (1/100) mod (1147/59)
    (Info: triOk;            Val: '1/100'),                                                             //   79: (1/100) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   80: (2/7) mod (0)
    (Info: triOk;            Val: '2/7'),                                                               //   81: (2/7) mod (1)
    (Info: triOk;            Val: '2/7'),                                                               //   82: (2/7) mod (1/2)
    (Info: triOk;            Val: '3/35'),                                                              //   83: (2/7) mod (-1/10)
    (Info: triOk;            Val: '1/175'),                                                             //   84: (2/7) mod (1/100)
    (Info: triOk;            Val: '0'),                                                                 //   85: (2/7) mod (2/7)
    (Info: triOk;            Val: '2/7'),                                                               //   86: (2/7) mod (-12345)
    (Info: triOk;            Val: '2/7'),                                                               //   87: (2/7) mod (-345/679)
    (Info: triOk;            Val: '2/7'),                                                               //   88: (2/7) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '2/7'),                                                               //   89: (2/7) mod (100)
    (Info: triOk;            Val: '2/7'),                                                               //   90: (2/7) mod (-10000000)
    (Info: triOk;            Val: '2/7'),                                                               //   91: (2/7) mod (17)
    (Info: triOk;            Val: '6/119'),                                                             //   92: (2/7) mod (1/17)
    (Info: triOk;            Val: '2/7'),                                                               //   93: (2/7) mod (31/37)
    (Info: triOk;            Val: '2/7'),                                                               //   94: (2/7) mod (1147/59)
    (Info: triOk;            Val: '2/7'),                                                               //   95: (2/7) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //   96: (-12345) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //   97: (-12345) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //   98: (-12345) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //   99: (-12345) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //  100: (-12345) mod (1/100)
    (Info: triOk;            Val: '-1/7'),                                                              //  101: (-12345) mod (2/7)
    (Info: triOk;            Val: '0'),                                                                 //  102: (-12345) mod (-12345)
    (Info: triOk;            Val: '-135/679'),                                                          //  103: (-12345) mod (-345/679)
    (Info: triOk;            Val: '-733333333322469/8888888888888'),                                    //  104: (-12345) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '-45'),                                                               //  105: (-12345) mod (100)
    (Info: triOk;            Val: '-12345'),                                                            //  106: (-12345) mod (-10000000)
    (Info: triOk;            Val: '-3'),                                                                //  107: (-12345) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  108: (-12345) mod (1/17)
    (Info: triOk;            Val: '-11/37'),                                                            //  109: (-12345) mod (31/37)
    (Info: triOk;            Val: '-10/59'),                                                            //  110: (-12345) mod (1147/59)
    (Info: triOk;            Val: '-12345'),                                                            //  111: (-12345) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  112: (-345/679) mod (0)
    (Info: triOk;            Val: '-345/679'),                                                          //  113: (-345/679) mod (1)
    (Info: triOk;            Val: '-11/1358'),                                                          //  114: (-345/679) mod (1/2)
    (Info: triOk;            Val: '-11/1358'),                                                          //  115: (-345/679) mod (-1/10)
    (Info: triOk;            Val: '-11/1358'),                                                          //  116: (-345/679) mod (1/100)
    (Info: triOk;            Val: '-151/679'),                                                          //  117: (-345/679) mod (2/7)
    (Info: triOk;            Val: '-345/679'),                                                          //  118: (-345/679) mod (-12345)
    (Info: triOk;            Val: '0'),                                                                 //  119: (-345/679) mod (-345/679)
    (Info: triOk;            Val: '-345/679'),                                                          //  120: (-345/679) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '-345/679'),                                                          //  121: (-345/679) mod (100)
    (Info: triOk;            Val: '-345/679'),                                                          //  122: (-345/679) mod (-10000000)
    (Info: triOk;            Val: '-345/679'),                                                          //  123: (-345/679) mod (17)
    (Info: triOk;            Val: '-433/11543'),                                                        //  124: (-345/679) mod (1/17)
    (Info: triOk;            Val: '-345/679'),                                                          //  125: (-345/679) mod (31/37)
    (Info: triOk;            Val: '-345/679'),                                                          //  126: (-345/679) mod (1147/59)
    (Info: triOk;            Val: '-345/679'),                                                          //  127: (-345/679) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  128: (999999999999999/8888888888888) mod (0)
    (Info: triOk;            Val: '4444444444543/8888888888888'),                                       //  129: (999999999999999/8888888888888) mod (1)
    (Info: triOk;            Val: '99/8888888888888'),                                                  //  130: (999999999999999/8888888888888) mod (1/2)
    (Info: triOk;            Val: '99/8888888888888'),                                                  //  131: (999999999999999/8888888888888) mod (-1/10)
    (Info: triOk;            Val: '99/8888888888888'),                                                  //  132: (999999999999999/8888888888888) mod (1/100)
    (Info: triOk;            Val: '13333333334025/62222222222216'),                                     //  133: (999999999999999/8888888888888) mod (2/7)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  134: (999999999999999/8888888888888) mod (-12345)
    (Info: triOk;            Val: '1266666666733761/6035555555554952'),                                 //  135: (999999999999999/8888888888888) mod (-345/679)
    (Info: triOk;            Val: '0'),                                                                 //  136: (999999999999999/8888888888888) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '111111111111199/8888888888888'),                                     //  137: (999999999999999/8888888888888) mod (100)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  138: (999999999999999/8888888888888) mod (-10000000)
    (Info: triOk;            Val: '93333333333423/8888888888888'),                                      //  139: (999999999999999/8888888888888) mod (17)
    (Info: triOk;            Val: '4444444446127/151111111111096'),                                     //  140: (999999999999999/8888888888888) mod (1/17)
    (Info: triOk;            Val: '75555555559211/328888888888856'),                                    //  141: (999999999999999/8888888888888) mod (31/37)
    (Info: triOk;            Val: '8022222222227261/524444444444392'),                                  //  142: (999999999999999/8888888888888) mod (1147/59)
    (Info: triOk;            Val: '999999999999999/8888888888888'),                                     //  143: (999999999999999/8888888888888) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  144: (100) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //  145: (100) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //  146: (100) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //  147: (100) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //  148: (100) mod (1/100)
    (Info: triOk;            Val: '0'),                                                                 //  149: (100) mod (2/7)
    (Info: triOk;            Val: '100'),                                                               //  150: (100) mod (-12345)
    (Info: triOk;            Val: '40/97'),                                                             //  151: (100) mod (-345/679)
    (Info: triOk;            Val: '100'),                                                               //  152: (100) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  153: (100) mod (100)
    (Info: triOk;            Val: '100'),                                                               //  154: (100) mod (-10000000)
    (Info: triOk;            Val: '15'),                                                                //  155: (100) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  156: (100) mod (1/17)
    (Info: triOk;            Val: '11/37'),                                                             //  157: (100) mod (31/37)
    (Info: triOk;            Val: '165/59'),                                                            //  158: (100) mod (1147/59)
    (Info: triOk;            Val: '100'),                                                               //  159: (100) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  160: (-10000000) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //  161: (-10000000) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //  162: (-10000000) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //  163: (-10000000) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //  164: (-10000000) mod (1/100)
    (Info: triOk;            Val: '0'),                                                                 //  165: (-10000000) mod (2/7)
    (Info: triOk;            Val: '-550'),                                                              //  166: (-10000000) mod (-12345)
    (Info: triOk;            Val: '-145/679'),                                                          //  167: (-10000000) mod (-345/679)
    (Info: triOk;            Val: '-111111110011111/1111111111111'),                                    //  168: (-10000000) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '0'),                                                                 //  169: (-10000000) mod (100)
    (Info: triOk;            Val: '0'),                                                                 //  170: (-10000000) mod (-10000000)
    (Info: triOk;            Val: '-5'),                                                                //  171: (-10000000) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  172: (-10000000) mod (1/17)
    (Info: triOk;            Val: '-27/37'),                                                            //  173: (-10000000) mod (31/37)
    (Info: triOk;            Val: '-405/59'),                                                           //  174: (-10000000) mod (1147/59)
    (Info: triOk;            Val: '-52069'),                                                            //  175: (-10000000) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  176: (17) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //  177: (17) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //  178: (17) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //  179: (17) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //  180: (17) mod (1/100)
    (Info: triOk;            Val: '1/7'),                                                               //  181: (17) mod (2/7)
    (Info: triOk;            Val: '17'),                                                                //  182: (17) mod (-12345)
    (Info: triOk;            Val: '158/679'),                                                           //  183: (17) mod (-345/679)
    (Info: triOk;            Val: '17'),                                                                //  184: (17) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '17'),                                                                //  185: (17) mod (100)
    (Info: triOk;            Val: '17'),                                                                //  186: (17) mod (-10000000)
    (Info: triOk;            Val: '0'),                                                                 //  187: (17) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  188: (17) mod (1/17)
    (Info: triOk;            Val: '9/37'),                                                              //  189: (17) mod (31/37)
    (Info: triOk;            Val: '17'),                                                                //  190: (17) mod (1147/59)
    (Info: triOk;            Val: '17'),                                                                //  191: (17) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  192: (1/17) mod (0)
    (Info: triOk;            Val: '1/17'),                                                              //  193: (1/17) mod (1)
    (Info: triOk;            Val: '1/17'),                                                              //  194: (1/17) mod (1/2)
    (Info: triOk;            Val: '1/17'),                                                              //  195: (1/17) mod (-1/10)
    (Info: triOk;            Val: '3/340'),                                                             //  196: (1/17) mod (1/100)
    (Info: triOk;            Val: '1/17'),                                                              //  197: (1/17) mod (2/7)
    (Info: triOk;            Val: '1/17'),                                                              //  198: (1/17) mod (-12345)
    (Info: triOk;            Val: '1/17'),                                                              //  199: (1/17) mod (-345/679)
    (Info: triOk;            Val: '1/17'),                                                              //  200: (1/17) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '1/17'),                                                              //  201: (1/17) mod (100)
    (Info: triOk;            Val: '1/17'),                                                              //  202: (1/17) mod (-10000000)
    (Info: triOk;            Val: '1/17'),                                                              //  203: (1/17) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  204: (1/17) mod (1/17)
    (Info: triOk;            Val: '1/17'),                                                              //  205: (1/17) mod (31/37)
    (Info: triOk;            Val: '1/17'),                                                              //  206: (1/17) mod (1147/59)
    (Info: triOk;            Val: '1/17'),                                                              //  207: (1/17) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  208: (31/37) mod (0)
    (Info: triOk;            Val: '31/37'),                                                             //  209: (31/37) mod (1)
    (Info: triOk;            Val: '25/74'),                                                             //  210: (31/37) mod (1/2)
    (Info: triOk;            Val: '7/185'),                                                             //  211: (31/37) mod (-1/10)
    (Info: triOk;            Val: '29/3700'),                                                           //  212: (31/37) mod (1/100)
    (Info: triOk;            Val: '69/259'),                                                            //  213: (31/37) mod (2/7)
    (Info: triOk;            Val: '31/37'),                                                             //  214: (31/37) mod (-12345)
    (Info: triOk;            Val: '8284/25123'),                                                        //  215: (31/37) mod (-345/679)
    (Info: triOk;            Val: '31/37'),                                                             //  216: (31/37) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '31/37'),                                                             //  217: (31/37) mod (100)
    (Info: triOk;            Val: '31/37'),                                                             //  218: (31/37) mod (-10000000)
    (Info: triOk;            Val: '31/37'),                                                             //  219: (31/37) mod (17)
    (Info: triOk;            Val: '9/629'),                                                             //  220: (31/37) mod (1/17)
    (Info: triOk;            Val: '0'),                                                                 //  221: (31/37) mod (31/37)
    (Info: triOk;            Val: '31/37'),                                                             //  222: (31/37) mod (1147/59)
    (Info: triOk;            Val: '31/37'),                                                             //  223: (31/37) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  224: (1147/59) mod (0)
    (Info: triOk;            Val: '26/59'),                                                             //  225: (1147/59) mod (1)
    (Info: triOk;            Val: '26/59'),                                                             //  226: (1147/59) mod (1/2)
    (Info: triOk;            Val: '12/295'),                                                            //  227: (1147/59) mod (-1/10)
    (Info: triOk;            Val: '1/1475'),                                                            //  228: (1147/59) mod (1/100)
    (Info: triOk;            Val: '5/413'),                                                             //  229: (1147/59) mod (2/7)
    (Info: triOk;            Val: '1147/59'),                                                           //  230: (1147/59) mod (-12345)
    (Info: triOk;            Val: '5323/40061'),                                                        //  231: (1147/59) mod (-345/679)
    (Info: triOk;            Val: '1147/59'),                                                           //  232: (1147/59) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '1147/59'),                                                           //  233: (1147/59) mod (100)
    (Info: triOk;            Val: '1147/59'),                                                           //  234: (1147/59) mod (-10000000)
    (Info: triOk;            Val: '144/59'),                                                            //  235: (1147/59) mod (17)
    (Info: triOk;            Val: '29/1003'),                                                           //  236: (1147/59) mod (1/17)
    (Info: triOk;            Val: '372/2183'),                                                          //  237: (1147/59) mod (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  238: (1147/59) mod (1147/59)
    (Info: triOk;            Val: '1147/59'),                                                           //  239: (1147/59) mod (67673)
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  //  240: (67673) mod (0)
    (Info: triOk;            Val: '0'),                                                                 //  241: (67673) mod (1)
    (Info: triOk;            Val: '0'),                                                                 //  242: (67673) mod (1/2)
    (Info: triOk;            Val: '0'),                                                                 //  243: (67673) mod (-1/10)
    (Info: triOk;            Val: '0'),                                                                 //  244: (67673) mod (1/100)
    (Info: triOk;            Val: '1/7'),                                                               //  245: (67673) mod (2/7)
    (Info: triOk;            Val: '5948'),                                                              //  246: (67673) mod (-12345)
    (Info: triOk;            Val: '107/679'),                                                           //  247: (67673) mod (-345/679)
    (Info: triOk;            Val: '537777777718225/8888888888888'),                                     //  248: (67673) mod (999999999999999/8888888888888)
    (Info: triOk;            Val: '73'),                                                                //  249: (67673) mod (100)
    (Info: triOk;            Val: '67673'),                                                             //  250: (67673) mod (-10000000)
    (Info: triOk;            Val: '13'),                                                                //  251: (67673) mod (17)
    (Info: triOk;            Val: '0'),                                                                 //  252: (67673) mod (1/17)
    (Info: triOk;            Val: '0'),                                                                 //  253: (67673) mod (31/37)
    (Info: triOk;            Val: '0'),                                                                 //  254: (67673) mod (1147/59)
    (Info: triOk;            Val: '0')                                                                  //  255: (67673) mod (67673)
  );

  NegateResults: array[0..ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '0'),                                                                 // -(0)
    (Info: triOk;            Val: '-1'),                                                                // -(1)
    (Info: triOk;            Val: '-1/2'),                                                              // -(1/2)
    (Info: triOk;            Val: '1/10'),                                                              // -(-1/10)
    (Info: triOk;            Val: '-1/100'),                                                            // -(1/100)
    (Info: triOk;            Val: '-2/7'),                                                              // -(2/7)
    (Info: triOk;            Val: '12345'),                                                             // -(-12345)
    (Info: triOk;            Val: '345/679'),                                                           // -(-345/679)
    (Info: triOk;            Val: '-999999999999999/8888888888888'),                                    // -(999999999999999/8888888888888)
    (Info: triOk;            Val: '-100'),                                                              // -(100)
    (Info: triOk;            Val: '10000000'),                                                          // -(-10000000)
    (Info: triOk;            Val: '-17'),                                                               // -(17)
    (Info: triOk;            Val: '-1/17'),                                                             // -(1/17)
    (Info: triOk;            Val: '-31/37'),                                                            // -(31/37)
    (Info: triOk;            Val: '-1147/59'),                                                          // -(1147/59)
    (Info: triOk;            Val: '-67673')                                                             // -(67673)
  );

  ReciprocalResults: array[0..ArgumentCount - 1] of TTestResult =
  (
    (Info: triDivideByZero;  Val: 'Division by zero'),                                                  // 1/(0)
    (Info: triOk;            Val: '1'),                                                                 // 1/(1)
    (Info: triOk;            Val: '2'),                                                                 // 1/(1/2)
    (Info: triOk;            Val: '-10'),                                                               // 1/(-1/10)
    (Info: triOk;            Val: '100'),                                                               // 1/(1/100)
    (Info: triOk;            Val: '7/2'),                                                               // 1/(2/7)
    (Info: triOk;            Val: '-1/12345'),                                                          // 1/(-12345)
    (Info: triOk;            Val: '-679/345'),                                                          // 1/(-345/679)
    (Info: triOk;            Val: '8888888888888/999999999999999'),                                     // 1/(999999999999999/8888888888888)
    (Info: triOk;            Val: '1/100'),                                                             // 1/(100)
    (Info: triOk;            Val: '-1/10000000'),                                                       // 1/(-10000000)
    (Info: triOk;            Val: '1/17'),                                                              // 1/(17)
    (Info: triOk;            Val: '17'),                                                                // 1/(1/17)
    (Info: triOk;            Val: '37/31'),                                                             // 1/(31/37)
    (Info: triOk;            Val: '59/1147'),                                                           // 1/(1147/59)
    (Info: triOk;            Val: '1/67673')                                                            // 1/(67673)
  );

  SingleValueResults: array[0..ArgumentCount - 1] of UInt32 =
  (
    $00000000,    //  0: 0 --> 0.000000
    $3F800000,    //  1: 1 --> 1.000000
    $3F000000,    //  2: 1/2 --> 0.500000
    $BDCCCCCD,    //  3: -1/10 --> -0.100000
    $3C23D70A,    //  4: 1/100 --> 0.010000
    $3E924925,    //  5: 2/7 --> 0.285714
    $C640E400,    //  6: -12345 --> -12345.000000
    $BF0212DA,    //  7: -345/679 --> -0.508100
    $42E10000,    //  8: 999999999999999/8888888888888 --> 112.500000
    $42C80000,    //  9: 100 --> 100.000000
    $CB189680,    // 10: -10000000 --> -10000000.000000
    $41880000,    // 11: 17 --> 17.000000
    $3D70F0F1,    // 12: 1/17 --> 0.058824
    $3F567C8A,    // 13: 31/37 --> 0.837838
    $419B8682,    // 14: 1147/59 --> 19.440678
    $47842C80     // 15: 67673 --> 67673.000000
  );

  DoubleValueResults: array[0..ArgumentCount - 1] of UInt64 =
  (
    $0000000000000000,    //  0: 0 --> 0.000000
    $3FF0000000000000,    //  1: 1 --> 1.000000
    $3FE0000000000000,    //  2: 1/2 --> 0.500000
    $BFB999999999999A,    //  3: -1/10 --> -0.100000
    $3F847AE147AE147B,    //  4: 1/100 --> 0.010000
    $3FD2492492492492,    //  5: 2/7 --> 0.285714
    $C0C81C8000000000,    //  6: -12345 --> -12345.000000
    $BFE0425B3D748030,    //  7: -345/679 --> -0.508100
    $405C200000000310,    //  8: 999999999999999/8888888888888 --> 112.500000
    $4059000000000000,    //  9: 100 --> 100.000000
    $C16312D000000000,    // 10: -10000000 --> -10000000.000000
    $4031000000000000,    // 11: 17 --> 17.000000
    $3FAE1E1E1E1E1E1E,    // 12: 1/17 --> 0.058824
    $3FEACF914C1BACF9,    // 13: 31/37 --> 0.837838
    $403370D0456C797E,    // 14: 1147/59 --> 19.440678
    $40F0859000000000     // 15: 67673 --> 67673.000000
  );

