//                                                                                                  //
// File: BigIntegerMathResults.inc                                                                  //
//                                                                                                  //
// Test data for Velthuis.BigIntegers.pas, generated 10 Okt, 2018, 01:32:32                         //
//                                                                                                  //
// Do not modify the generated data in this file.  Modify the data in the generator source file.    //
// The source file for the generator is BigIntegerTestDataGenerator.java, in the Test subdirectory. //
//                                                                                                  //
// The freely available NetBeans IDE (V8.1) was used to compile and run this project.               //
// http://www.netbeans.org                                                                          //
//                                                                                                  //

  LnResults: array[0..ArgumentCount - 1] of Double =
  (
    NaN,                                                                        // Ln(Arguments[0])
    NaN,                                                                        // Ln(Arguments[1])
    NaN,                                                                        // Ln(Arguments[2])
    NaN,                                                                        // Ln(Arguments[3])
    NaN,                                                                        // Ln(Arguments[4])
    NaN,                                                                        // Ln(Arguments[5])
    NaN,                                                                        // Ln(Arguments[6])
    NaN,                                                                        // Ln(Arguments[7])
    NaN,                                                                        // Ln(Arguments[8])
    NaN,                                                                        // Ln(Arguments[9])
    NaN,                                                                        // Ln(Arguments[10])
    NaN,                                                                        // Ln(Arguments[11])
    NaN,                                                                        // Ln(Arguments[12])
    NaN,                                                                        // Ln(Arguments[13])
    NaN,                                                                        // Ln(Arguments[14])
    NaN,                                                                        // Ln(Arguments[15])
    NaN,                                                                        // Ln(Arguments[16])
    NaN,                                                                        // Ln(Arguments[17])
    NaN,                                                                        // Ln(Arguments[18])
    NaN,                                                                        // Ln(Arguments[19])
    NaN,                                                                        // Ln(Arguments[20])
    NegInfinity,                                                                // Ln(Arguments[21])
    0.0,                                                                        // Ln(Arguments[22])
    0.69314718055994528622676398299518041312694549560546875,                    // Ln(Arguments[23])
    1.945910149055313009824885739362798631191253662109375,                      // Ln(Arguments[24])
    2.302585092994045457004403942846693098545074462890625,                      // Ln(Arguments[25])
    4.60517018598809091400880788569338619709014892578125,                       // Ln(Arguments[26])
    6.0137151560428012686543297604657709598541259765625,                        // Ln(Arguments[27])
    6.70686233660274666590339620597660541534423828125,                          // Ln(Arguments[28])
    6.907755278982136815102421678602695465087890625,                            // Ln(Arguments[29])
    9.2103403719761818280176157713867723941802978515625,                        // Ln(Arguments[30])
    11.5129254649702286172896492644213140010833740234375,                       // Ln(Arguments[31])
    13.81551055796427363020484335720539093017578125,                            // Ln(Arguments[32])
    42.88981481895034875151395681314170360565185546875,                         // Ln(Arguments[33])
    43.13056518444397369194120983593165874481201171875,                         // Ln(Arguments[34])
    43.66827237574219822136001312173902988433837890625,                         // Ln(Arguments[35])
    46.59908551454206104835975565947592258453369140625,                         // Ln(Arguments[36])
    48.33171146938861539865683880634605884552001953125,                         // Ln(Arguments[37])
    48.86906769350931512008173740468919277191162109375,                         // Ln(Arguments[38])
    50.4670816495840455218058195896446704864501953125,                          // Ln(Arguments[39])
    50.950756665704915349124348722398281097412109375,                           // Ln(Arguments[40])
    52.66222703118575054759276099503040313720703125,                            // Ln(Arguments[41])
    52.808190282956189776086830534040927886962890625,                           // Ln(Arguments[42])
    57.22164391420559326206785044632852077484130859375,                         // Ln(Arguments[43])
    61.4760112796781044153249240480363368988037109375,                          // Ln(Arguments[44])
    62.38770995104423633392798365093767642974853515625,                         // Ln(Arguments[45])
    64.349150872066985584751819260418415069580078125,                           // Ln(Arguments[46])
    65.15583497216920250139082781970500946044921875,                            // Ln(Arguments[47])
    66.3245057299629792169071151874959468841552734375,                          // Ln(Arguments[48])
    66.579704280803383653619675897061824798583984375,                           // Ln(Arguments[49])
    68.828936588527284357041935436427593231201171875,                           // Ln(Arguments[50])
    66.898163247523456220733351074159145355224609375,                           // Ln(Arguments[51])
    77.563788925994771261684945784509181976318359375,                           // Ln(Arguments[52])
    80.4918985322153588413129909895360469818115234375,                          // Ln(Arguments[53])
    87.3365447505531022898139781318604946136474609375,                          // Ln(Arguments[54])
    87.3365447505531022898139781318604946136474609375,                          // Ln(Arguments[55])
    89.4159862326282990352410706691443920135498046875,                          // Ln(Arguments[56])
    92.69313102522511371716973371803760528564453125,                            // Ln(Arguments[57])
    97.1696098387926809891723678447306156158447265625,                          // Ln(Arguments[58])
    159.089092438904799564625136554241180419921875,                             // Ln(Arguments[59])
    164.7178419922348666659672744572162628173828125,                            // Ln(Arguments[60])
    194.6514482011574500575079582631587982177734375,                            // Ln(Arguments[61])
    29.933606208922594049681720207445323467254638671875,                        // Ln(Arguments[62])
    131.247350300660599486946011893451213836669921875                           // Ln(Arguments[63])
  );

  Ln_1000_1000    = 6907.7552789821374972234480082988739013671875;
  Log10_1000_1000 = 3000.0;
  Log2_1000_1000  = 9965.78428466208788449876010417938232421875;

  PowerResultsCount = 1600;
  PowerResults: array[0..PowerResultsCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '1'),                                         // (0): 1 ^ 1
    (Info: triOk;            Val: '1'),                                         // (1): 1 ^ 2
    (Info: triOk;            Val: '1'),                                         // (2): 1 ^ 3
    (Info: triOk;            Val: '1'),                                         // (3): 1 ^ 4
    (Info: triOk;            Val: '1'),                                         // (4): 1 ^ 5
    (Info: triOk;            Val: '1'),                                         // (5): 1 ^ 6
    (Info: triOk;            Val: '1'),                                         // (6): 1 ^ 7
    (Info: triOk;            Val: '1'),                                         // (7): 1 ^ 8
    (Info: triOk;            Val: '1'),                                         // (8): 1 ^ 9
    (Info: triOk;            Val: '1'),                                         // (9): 1 ^ 10
    (Info: triOk;            Val: '1'),                                         // (10): 1 ^ 11
    (Info: triOk;            Val: '1'),                                         // (11): 1 ^ 12
    (Info: triOk;            Val: '1'),                                         // (12): 1 ^ 13
    (Info: triOk;            Val: '1'),                                         // (13): 1 ^ 14
    (Info: triOk;            Val: '1'),                                         // (14): 1 ^ 15
    (Info: triOk;            Val: '1'),                                         // (15): 1 ^ 20
    (Info: triOk;            Val: '1'),                                         // (16): 1 ^ 25
    (Info: triOk;            Val: '1'),                                         // (17): 1 ^ 30
    (Info: triOk;            Val: '1'),                                         // (18): 1 ^ 31
    (Info: triOk;            Val: '1'),                                         // (19): 1 ^ 32
    (Info: triOk;            Val: '1'),                                         // (20): 1 ^ 33
    (Info: triOk;            Val: '1'),                                         // (21): 1 ^ 35
    (Info: triOk;            Val: '1'),                                         // (22): 1 ^ 40
    (Info: triOk;            Val: '1'),                                         // (23): 1 ^ 50
    (Info: triOk;            Val: '1'),                                         // (24): 1 ^ 60
    (Info: triOk;            Val: '1'),                                         // (25): 1 ^ 70
    (Info: triOk;            Val: '1'),                                         // (26): 1 ^ 71
    (Info: triOk;            Val: '1'),                                         // (27): 1 ^ 72
    (Info: triOk;            Val: '1'),                                         // (28): 1 ^ 73
    (Info: triOk;            Val: '1'),                                         // (29): 1 ^ 74
    (Info: triOk;            Val: '1'),                                         // (30): 1 ^ 75
    (Info: triOk;            Val: '1'),                                         // (31): 1 ^ 90
    (Info: triOk;            Val: '1'),                                         // (32): 1 ^ 100
    (Info: triOk;            Val: '1'),                                         // (33): 1 ^ 110
    (Info: triOk;            Val: '1'),                                         // (34): 1 ^ 159
    (Info: triOk;            Val: '1'),                                         // (35): 1 ^ 160
    (Info: triOk;            Val: '1'),                                         // (36): 1 ^ 161
    (Info: triOk;            Val: '1'),                                         // (37): 1 ^ 162
    (Info: triOk;            Val: '1'),                                         // (38): 1 ^ 163
    (Info: triOk;            Val: '1'),                                         // (39): 1 ^ 164
    (Info: triOk;            Val: '2'),                                         // (40): 2 ^ 1
    (Info: triOk;            Val: '4'),                                         // (41): 2 ^ 2
    (Info: triOk;            Val: '8'),                                         // (42): 2 ^ 3
    (Info: triOk;            Val: '16'),                                        // (43): 2 ^ 4
    (Info: triOk;            Val: '32'),                                        // (44): 2 ^ 5
    (Info: triOk;            Val: '64'),                                        // (45): 2 ^ 6
    (Info: triOk;            Val: '128'),                                       // (46): 2 ^ 7
    (Info: triOk;            Val: '256'),                                       // (47): 2 ^ 8
    (Info: triOk;            Val: '512'),                                       // (48): 2 ^ 9
    (Info: triOk;            Val: '1024'),                                      // (49): 2 ^ 10
    (Info: triOk;            Val: '2048'),                                      // (50): 2 ^ 11
    (Info: triOk;            Val: '4096'),                                      // (51): 2 ^ 12
    (Info: triOk;            Val: '8192'),                                      // (52): 2 ^ 13
    (Info: triOk;            Val: '16384'),                                     // (53): 2 ^ 14
    (Info: triOk;            Val: '32768'),                                     // (54): 2 ^ 15
    (Info: triOk;            Val: '1048576'),                                   // (55): 2 ^ 20
    (Info: triOk;            Val: '33554432'),                                  // (56): 2 ^ 25
    (Info: triOk;            Val: '1073741824'),                                // (57): 2 ^ 30
    (Info: triOk;            Val: '2147483648'),                                // (58): 2 ^ 31
    (Info: triOk;            Val: '4294967296'),                                // (59): 2 ^ 32
    (Info: triOk;            Val: '8589934592'),                                // (60): 2 ^ 33
    (Info: triOk;            Val: '34359738368'),                               // (61): 2 ^ 35
    (Info: triOk;            Val: '1099511627776'),                             // (62): 2 ^ 40
    (Info: triOk;            Val: '1125899906842624'),                          // (63): 2 ^ 50
    (Info: triOk;            Val: '1152921504606846976'),                       // (64): 2 ^ 60
    (Info: triOk;            Val: '1180591620717411303424'),                    // (65): 2 ^ 70
    (Info: triOk;            Val: '2361183241434822606848'),                    // (66): 2 ^ 71
    (Info: triOk;            Val: '4722366482869645213696'),                    // (67): 2 ^ 72
    (Info: triOk;            Val: '9444732965739290427392'),                    // (68): 2 ^ 73
    (Info: triOk;            Val: '18889465931478580854784'),                   // (69): 2 ^ 74
    (Info: triOk;            Val: '37778931862957161709568'),                   // (70): 2 ^ 75
    (Info: triOk;            Val: '1237940039285380274899124224'),              // (71): 2 ^ 90
    (Info: triOk;            Val: '1267650600228229401496703205376'),           // (72): 2 ^ 100
    (Info: triOk;            Val: '1298074214633706907132624082305024'),        // (73): 2 ^ 110
    (Info: triOk;            Val: '7307508186654514591018424163581415098279' + 
                                  '66271488'),                                  // (74): 2 ^ 159
    (Info: triOk;            Val: '1461501637330902918203684832716283019655' + 
                                  '932542976'),                                 // (75): 2 ^ 160
    (Info: triOk;            Val: '2923003274661805836407369665432566039311' + 
                                  '865085952'),                                 // (76): 2 ^ 161
    (Info: triOk;            Val: '5846006549323611672814739330865132078623' + 
                                  '730171904'),                                 // (77): 2 ^ 162
    (Info: triOk;            Val: '1169201309864722334562947866173026415724' + 
                                  '7460343808'),                                // (78): 2 ^ 163
    (Info: triOk;            Val: '2338402619729444669125895732346052831449' + 
                                  '4920687616'),                                // (79): 2 ^ 164
    (Info: triOk;            Val: '3'),                                         // (80): 3 ^ 1
    (Info: triOk;            Val: '9'),                                         // (81): 3 ^ 2
    (Info: triOk;            Val: '27'),                                        // (82): 3 ^ 3
    (Info: triOk;            Val: '81'),                                        // (83): 3 ^ 4
    (Info: triOk;            Val: '243'),                                       // (84): 3 ^ 5
    (Info: triOk;            Val: '729'),                                       // (85): 3 ^ 6
    (Info: triOk;            Val: '2187'),                                      // (86): 3 ^ 7
    (Info: triOk;            Val: '6561'),                                      // (87): 3 ^ 8
    (Info: triOk;            Val: '19683'),                                     // (88): 3 ^ 9
    (Info: triOk;            Val: '59049'),                                     // (89): 3 ^ 10
    (Info: triOk;            Val: '177147'),                                    // (90): 3 ^ 11
    (Info: triOk;            Val: '531441'),                                    // (91): 3 ^ 12
    (Info: triOk;            Val: '1594323'),                                   // (92): 3 ^ 13
    (Info: triOk;            Val: '4782969'),                                   // (93): 3 ^ 14
    (Info: triOk;            Val: '14348907'),                                  // (94): 3 ^ 15
    (Info: triOk;            Val: '3486784401'),                                // (95): 3 ^ 20
    (Info: triOk;            Val: '847288609443'),                              // (96): 3 ^ 25
    (Info: triOk;            Val: '205891132094649'),                           // (97): 3 ^ 30
    (Info: triOk;            Val: '617673396283947'),                           // (98): 3 ^ 31
    (Info: triOk;            Val: '1853020188851841'),                          // (99): 3 ^ 32
    (Info: triOk;            Val: '5559060566555523'),                          // (100): 3 ^ 33
    (Info: triOk;            Val: '50031545098999707'),                         // (101): 3 ^ 35
    (Info: triOk;            Val: '12157665459056928801'),                      // (102): 3 ^ 40
    (Info: triOk;            Val: '717897987691852588770249'),                  // (103): 3 ^ 50
    (Info: triOk;            Val: '42391158275216203514294433201'),             // (104): 3 ^ 60
    (Info: triOk;            Val: '2503155504993241601315571986085849'),        // (105): 3 ^ 70
    (Info: triOk;            Val: '7509466514979724803946715958257547'),        // (106): 3 ^ 71
    (Info: triOk;            Val: '22528399544939174411840147874772641'),       // (107): 3 ^ 72
    (Info: triOk;            Val: '67585198634817523235520443624317923'),       // (108): 3 ^ 73
    (Info: triOk;            Val: '202755595904452569706561330872953769'),      // (109): 3 ^ 74
    (Info: triOk;            Val: '608266787713357709119683992618861307'),      // (110): 3 ^ 75
    (Info: triOk;            Val: '8727963568087712425891397479476727340041' + 
                                  '449'),                                       // (111): 3 ^ 90
    (Info: triOk;            Val: '5153775207320113310364611297656212727021' + 
                                  '07522001'),                                  // (112): 3 ^ 100
    (Info: triOk;            Val: '3043252722170453708637199325153017053178' + 
                                  '6747066637049'),                             // (113): 3 ^ 110
    (Info: triOk;            Val: '7282483350946404208076885500996745047522' + 
                                  '350034970917293604274649554310785067'),      // (114): 3 ^ 159
    (Info: triOk;            Val: '2184745005283921262423065650299023514256' + 
                                  '7050104912751880812823948662932355201'),     // (115): 3 ^ 160
    (Info: triOk;            Val: '6554235015851763787269196950897070542770' + 
                                  '1150314738255642438471845988797065603'),     // (116): 3 ^ 161
    (Info: triOk;            Val: '1966270504755529136180759085269121162831' + 
                                  '03450944214766927315415537966391196809'),    // (117): 3 ^ 162
    (Info: triOk;            Val: '5898811514266587408542277255807363488493' + 
                                  '10352832644300781946246613899173590427'),    // (118): 3 ^ 163
    (Info: triOk;            Val: '1769643454279976222562683176742209046547' + 
                                  '931058497932902345838739841697520771281'),   // (119): 3 ^ 164
    (Info: triOk;            Val: '4'),                                         // (120): 4 ^ 1
    (Info: triOk;            Val: '16'),                                        // (121): 4 ^ 2
    (Info: triOk;            Val: '64'),                                        // (122): 4 ^ 3
    (Info: triOk;            Val: '256'),                                       // (123): 4 ^ 4
    (Info: triOk;            Val: '1024'),                                      // (124): 4 ^ 5
    (Info: triOk;            Val: '4096'),                                      // (125): 4 ^ 6
    (Info: triOk;            Val: '16384'),                                     // (126): 4 ^ 7
    (Info: triOk;            Val: '65536'),                                     // (127): 4 ^ 8
    (Info: triOk;            Val: '262144'),                                    // (128): 4 ^ 9
    (Info: triOk;            Val: '1048576'),                                   // (129): 4 ^ 10
    (Info: triOk;            Val: '4194304'),                                   // (130): 4 ^ 11
    (Info: triOk;            Val: '16777216'),                                  // (131): 4 ^ 12
    (Info: triOk;            Val: '67108864'),                                  // (132): 4 ^ 13
    (Info: triOk;            Val: '268435456'),                                 // (133): 4 ^ 14
    (Info: triOk;            Val: '1073741824'),                                // (134): 4 ^ 15
    (Info: triOk;            Val: '1099511627776'),                             // (135): 4 ^ 20
    (Info: triOk;            Val: '1125899906842624'),                          // (136): 4 ^ 25
    (Info: triOk;            Val: '1152921504606846976'),                       // (137): 4 ^ 30
    (Info: triOk;            Val: '4611686018427387904'),                       // (138): 4 ^ 31
    (Info: triOk;            Val: '18446744073709551616'),                      // (139): 4 ^ 32
    (Info: triOk;            Val: '73786976294838206464'),                      // (140): 4 ^ 33
    (Info: triOk;            Val: '1180591620717411303424'),                    // (141): 4 ^ 35
    (Info: triOk;            Val: '1208925819614629174706176'),                 // (142): 4 ^ 40
    (Info: triOk;            Val: '1267650600228229401496703205376'),           // (143): 4 ^ 50
    (Info: triOk;            Val: '1329227995784915872903807060280344576'),     // (144): 4 ^ 60
    (Info: triOk;            Val: '1393796574908163946345982392040522594123' + 
                                  '776'),                                       // (145): 4 ^ 70
    (Info: triOk;            Val: '5575186299632655785383929568162090376495' + 
                                  '104'),                                       // (146): 4 ^ 71
    (Info: triOk;            Val: '2230074519853062314153571827264836150598' + 
                                  '0416'),                                      // (147): 4 ^ 72
    (Info: triOk;            Val: '8920298079412249256614287309059344602392' + 
                                  '1664'),                                      // (148): 4 ^ 73
    (Info: triOk;            Val: '3568119231764899702645714923623737840956' + 
                                  '86656'),                                     // (149): 4 ^ 74
    (Info: triOk;            Val: '1427247692705959881058285969449495136382' + 
                                  '746624'),                                    // (150): 4 ^ 75
    (Info: triOk;            Val: '1532495540865888858358347027150309183618' + 
                                  '739122183602176'),                           // (151): 4 ^ 90
    (Info: triOk;            Val: '1606938044258990275541962092341162602522' + 
                                  '202993782792835301376'),                     // (152): 4 ^ 100
    (Info: triOk;            Val: '1684996666696914987166688442938726917102' + 
                                  '321526408785780068975640576'),               // (153): 4 ^ 110
    (Info: triOk;            Val: '5339967589802275205987554265423880286506' + 
                                  '7613058916319248676040195555493144516013' + 
                                  '7505740521734144'),                          // (154): 4 ^ 159
    (Info: triOk;            Val: '2135987035920910082395021706169552114602' + 
                                  '7045223566527699470416078222197257806405' + 
                                  '50022962086936576'),                         // (155): 4 ^ 160
    (Info: triOk;            Val: '8543948143683640329580086824678208458410' + 
                                  '8180894266110797881664312888789031225622' + 
                                  '00091848347746304'),                         // (156): 4 ^ 161
    (Info: triOk;            Val: '3417579257473456131832034729871283383364' + 
                                  '3272357706444319152665725155515612490248' + 
                                  '800367393390985216'),                        // (157): 4 ^ 162
    (Info: triOk;            Val: '1367031702989382452732813891948513353345' + 
                                  '7308943082577727661066290062206244996099' + 
                                  '5201469573563940864'),                       // (158): 4 ^ 163
    (Info: triOk;            Val: '5468126811957529810931255567794053413382' + 
                                  '9235772330310910644265160248824979984398' + 
                                  '0805878294255763456'),                       // (159): 4 ^ 164
    (Info: triOk;            Val: '5'),                                         // (160): 5 ^ 1
    (Info: triOk;            Val: '25'),                                        // (161): 5 ^ 2
    (Info: triOk;            Val: '125'),                                       // (162): 5 ^ 3
    (Info: triOk;            Val: '625'),                                       // (163): 5 ^ 4
    (Info: triOk;            Val: '3125'),                                      // (164): 5 ^ 5
    (Info: triOk;            Val: '15625'),                                     // (165): 5 ^ 6
    (Info: triOk;            Val: '78125'),                                     // (166): 5 ^ 7
    (Info: triOk;            Val: '390625'),                                    // (167): 5 ^ 8
    (Info: triOk;            Val: '1953125'),                                   // (168): 5 ^ 9
    (Info: triOk;            Val: '9765625'),                                   // (169): 5 ^ 10
    (Info: triOk;            Val: '48828125'),                                  // (170): 5 ^ 11
    (Info: triOk;            Val: '244140625'),                                 // (171): 5 ^ 12
    (Info: triOk;            Val: '1220703125'),                                // (172): 5 ^ 13
    (Info: triOk;            Val: '6103515625'),                                // (173): 5 ^ 14
    (Info: triOk;            Val: '30517578125'),                               // (174): 5 ^ 15
    (Info: triOk;            Val: '95367431640625'),                            // (175): 5 ^ 20
    (Info: triOk;            Val: '298023223876953125'),                        // (176): 5 ^ 25
    (Info: triOk;            Val: '931322574615478515625'),                     // (177): 5 ^ 30
    (Info: triOk;            Val: '4656612873077392578125'),                    // (178): 5 ^ 31
    (Info: triOk;            Val: '23283064365386962890625'),                   // (179): 5 ^ 32
    (Info: triOk;            Val: '116415321826934814453125'),                  // (180): 5 ^ 33
    (Info: triOk;            Val: '2910383045673370361328125'),                 // (181): 5 ^ 35
    (Info: triOk;            Val: '9094947017729282379150390625'),              // (182): 5 ^ 40
    (Info: triOk;            Val: '88817841970012523233890533447265625'),       // (183): 5 ^ 50
    (Info: triOk;            Val: '8673617379884035472059622406959533691406' + 
                                  '25'),                                        // (184): 5 ^ 60
    (Info: triOk;            Val: '8470329472543003390683225006796419620513' + 
                                  '916015625'),                                 // (185): 5 ^ 70
    (Info: triOk;            Val: '4235164736271501695341612503398209810256' + 
                                  '9580078125'),                                // (186): 5 ^ 71
    (Info: triOk;            Val: '2117582368135750847670806251699104905128' + 
                                  '47900390625'),                               // (187): 5 ^ 72
    (Info: triOk;            Val: '1058791184067875423835403125849552452564' + 
                                  '239501953125'),                              // (188): 5 ^ 73
    (Info: triOk;            Val: '5293955920339377119177015629247762262821' + 
                                  '197509765625'),                              // (189): 5 ^ 74
    (Info: triOk;            Val: '2646977960169688559588507814623881131410' + 
                                  '5987548828125'),                             // (190): 5 ^ 75
    (Info: triOk;            Val: '8077935669463160887416100508495730991853' + 
                                  '63389551639556884765625'),                   // (191): 5 ^ 90
    (Info: triOk;            Val: '7888609052210118054117285652827862296732' + 
                                  '064351090230047702789306640625'),            // (192): 5 ^ 100
    (Info: triOk;            Val: '7703719777548943412223911770339709274152' + 
                                  '4065928615527809597551822662353515625'),     // (193): 5 ^ 110
    (Info: triOk;            Val: '1368455531567204170823954671181558721953' + 
                                  '3808026137849333565119959861241041854107' + 
                                  '43639295105822384357452392578125'),          // (194): 5 ^ 159
    (Info: triOk;            Val: '6842277657836020854119773355907793609766' + 
                                  '9040130689246667825599799306205209270537' + 
                                  '18196475529111921787261962890625'),          // (195): 5 ^ 160
    (Info: triOk;            Val: '3421138828918010427059886677953896804883' + 
                                  '4520065344623333912799899653102604635268' + 
                                  '590982377645559608936309814453125'),         // (196): 5 ^ 161
    (Info: triOk;            Val: '1710569414459005213529943338976948402441' + 
                                  '7260032672311666956399949826551302317634' + 
                                  '2954911888227798044681549072265625'),        // (197): 5 ^ 162
    (Info: triOk;            Val: '8552847072295026067649716694884742012208' + 
                                  '6300163361558334781999749132756511588171' + 
                                  '4774559441138990223407745361328125'),        // (198): 5 ^ 163
    (Info: triOk;            Val: '4276423536147513033824858347442371006104' + 
                                  '3150081680779167390999874566378255794085' + 
                                  '73872797205694951117038726806640625'),       // (199): 5 ^ 164
    (Info: triOk;            Val: '6'),                                         // (200): 6 ^ 1
    (Info: triOk;            Val: '36'),                                        // (201): 6 ^ 2
    (Info: triOk;            Val: '216'),                                       // (202): 6 ^ 3
    (Info: triOk;            Val: '1296'),                                      // (203): 6 ^ 4
    (Info: triOk;            Val: '7776'),                                      // (204): 6 ^ 5
    (Info: triOk;            Val: '46656'),                                     // (205): 6 ^ 6
    (Info: triOk;            Val: '279936'),                                    // (206): 6 ^ 7
    (Info: triOk;            Val: '1679616'),                                   // (207): 6 ^ 8
    (Info: triOk;            Val: '10077696'),                                  // (208): 6 ^ 9
    (Info: triOk;            Val: '60466176'),                                  // (209): 6 ^ 10
    (Info: triOk;            Val: '362797056'),                                 // (210): 6 ^ 11
    (Info: triOk;            Val: '2176782336'),                                // (211): 6 ^ 12
    (Info: triOk;            Val: '13060694016'),                               // (212): 6 ^ 13
    (Info: triOk;            Val: '78364164096'),                               // (213): 6 ^ 14
    (Info: triOk;            Val: '470184984576'),                              // (214): 6 ^ 15
    (Info: triOk;            Val: '3656158440062976'),                          // (215): 6 ^ 20
    (Info: triOk;            Val: '28430288029929701376'),                      // (216): 6 ^ 25
    (Info: triOk;            Val: '221073919720733357899776'),                  // (217): 6 ^ 30
    (Info: triOk;            Val: '1326443518324400147398656'),                 // (218): 6 ^ 31
    (Info: triOk;            Val: '7958661109946400884391936'),                 // (219): 6 ^ 32
    (Info: triOk;            Val: '47751966659678405306351616'),                // (220): 6 ^ 33
    (Info: triOk;            Val: '1719070799748422591028658176'),              // (221): 6 ^ 35
    (Info: triOk;            Val: '13367494538843734067838845976576'),          // (222): 6 ^ 40
    (Info: triOk;            Val: '808281277464764060643139600456536293376'),   // (223): 6 ^ 50
    (Info: triOk;            Val: '4887367798068925748932275227377460386566' + 
                                  '0850176'),                                   // (224): 6 ^ 60
    (Info: triOk;            Val: '2955204414547681244658707659790455381671' + 
                                  '329323051646976'),                           // (225): 6 ^ 70
    (Info: triOk;            Val: '1773122648728608746795224595874273229002' + 
                                  '7975938309881856'),                          // (226): 6 ^ 71
    (Info: triOk;            Val: '1063873589237165248077134757524563937401' + 
                                  '67855629859291136'),                         // (227): 6 ^ 72
    (Info: triOk;            Val: '6383241535422991488462808545147383624410' + 
                                  '07133779155746816'),                         // (228): 6 ^ 73
    (Info: triOk;            Val: '3829944921253794893077685127088430174646' + 
                                  '042802674934480896'),                        // (229): 6 ^ 74
    (Info: triOk;            Val: '2297966952752276935846611076253058104787' + 
                                  '6256816049606885376'),                       // (230): 6 ^ 75
    (Info: triOk;            Val: '1080469556235987051829919370389914884872' + 
                                  '4015728610899282651377959960576'),           // (231): 6 ^ 90
    (Info: triOk;            Val: '6533186235000709060966902671580578205371' + 
                                  '43710472954871543071966369497141477376'),    // (232): 6 ^ 100
    (Info: triOk;            Val: '3950367887263302342052194671146614399477' + 
                                  '5346134750732502780781099164095188067917' + 
                                  '234176'),                                    // (233): 6 ^ 110
    (Info: triOk;            Val: '5321680670621605120982985699362531573296' + 
                                  '7252091001137577966462441185876400852995' + 
                                  '4615456267026165811442107058777251013826' + 
                                  '9696'),                                      // (234): 6 ^ 159
    (Info: triOk;            Val: '3193008402372963072589791419617518943978' + 
                                  '0351254600682546779877464711525840511797' + 
                                  '2769273760215699486865264235266350608296' + 
                                  '18176'),                                     // (235): 6 ^ 160
    (Info: triOk;            Val: '1915805041423777843553874851770511366386' + 
                                  '8210752760409528067926478826915504307078' + 
                                  '3661564256129419692119158541159810364977' + 
                                  '709056'),                                    // (236): 6 ^ 161
    (Info: triOk;            Val: '1149483024854266706132324911062306819832' + 
                                  '0926451656245716840755887296149302584247' + 
                                  '0196938553677651815271495124695886218986' + 
                                  '6254336'),                                   // (237): 6 ^ 162
    (Info: triOk;            Val: '6896898149125600236793949466373840918992' + 
                                  '5558709937474301044535323776895815505482' + 
                                  '1181631322065910891628970748175317313919' + 
                                  '7526016'),                                   // (238): 6 ^ 163
    (Info: triOk;            Val: '4138138889475360142076369679824304551395' + 
                                  '5335225962484580626721194266137489303289' + 
                                  '2708978793239546534977382448905190388351' + 
                                  '85156096'),                                  // (239): 6 ^ 164
    (Info: triOk;            Val: '7'),                                         // (240): 7 ^ 1
    (Info: triOk;            Val: '49'),                                        // (241): 7 ^ 2
    (Info: triOk;            Val: '343'),                                       // (242): 7 ^ 3
    (Info: triOk;            Val: '2401'),                                      // (243): 7 ^ 4
    (Info: triOk;            Val: '16807'),                                     // (244): 7 ^ 5
    (Info: triOk;            Val: '117649'),                                    // (245): 7 ^ 6
    (Info: triOk;            Val: '823543'),                                    // (246): 7 ^ 7
    (Info: triOk;            Val: '5764801'),                                   // (247): 7 ^ 8
    (Info: triOk;            Val: '40353607'),                                  // (248): 7 ^ 9
    (Info: triOk;            Val: '282475249'),                                 // (249): 7 ^ 10
    (Info: triOk;            Val: '1977326743'),                                // (250): 7 ^ 11
    (Info: triOk;            Val: '13841287201'),                               // (251): 7 ^ 12
    (Info: triOk;            Val: '96889010407'),                               // (252): 7 ^ 13
    (Info: triOk;            Val: '678223072849'),                              // (253): 7 ^ 14
    (Info: triOk;            Val: '4747561509943'),                             // (254): 7 ^ 15
    (Info: triOk;            Val: '79792266297612001'),                         // (255): 7 ^ 20
    (Info: triOk;            Val: '1341068619663964900807'),                    // (256): 7 ^ 25
    (Info: triOk;            Val: '22539340290692258087863249'),                // (257): 7 ^ 30
    (Info: triOk;            Val: '157775382034845806615042743'),               // (258): 7 ^ 31
    (Info: triOk;            Val: '1104427674243920646305299201'),              // (259): 7 ^ 32
    (Info: triOk;            Val: '7730993719707444524137094407'),              // (260): 7 ^ 33
    (Info: triOk;            Val: '378818692265664781682717625943'),            // (261): 7 ^ 35
    (Info: triOk;            Val: '6366805760909027985741435139224001'),        // (262): 7 ^ 40
    (Info: triOk;            Val: '1798465042647412146620280340569649349251' + 
                                  '249'),                                       // (263): 7 ^ 50
    (Info: triOk;            Val: '5080218607396233653221881976522165017724' + 
                                  '34524836001'),                               // (264): 7 ^ 60
    (Info: triOk;            Val: '1435036016098684342856030763566710717400' + 
                                  '77383739246066639249'),                      // (265): 7 ^ 70
    (Info: triOk;            Val: '1004525211269079039999221534496697502180' + 
                                  '541686174722466474743'),                     // (266): 7 ^ 71
    (Info: triOk;            Val: '7031676478883553279994550741476882515263' + 
                                  '791803223057265323201'),                     // (267): 7 ^ 72
    (Info: triOk;            Val: '4922173535218487295996185519033817760684' + 
                                  '6542622561400857262407'),                    // (268): 7 ^ 73
    (Info: triOk;            Val: '3445521474652941107197329863323672432479' + 
                                  '25798357929806000836849'),                   // (269): 7 ^ 74
    (Info: triOk;            Val: '2411865032257058775038130904326570702735' + 
                                  '480588505508642005857943'),                  // (270): 7 ^ 75
    (Info: triOk;            Val: '1145047759432104435934012671354514607705' + 
                                  '4004823284978858214566372120240027249'),     // (271): 7 ^ 90
    (Info: triOk;            Val: '3234476509624757991344647769100216810857' + 
                                  '2031989046254009338953313916914596369280' + 
                                  '60001'),                                     // (272): 7 ^ 100
    (Info: triOk;            Val: '9136595574409044101698192233938782496008' + 
                                  '7437705418058738052691627480556159211470' + 
                                  '3343869415249'),                             // (273): 7 ^ 110
    (Info: triOk;            Val: '2347406821340245511310000586509349723345' + 
                                  '4820279993192815282352446188679508032684' + 
                                  '1696794903402607778498130119856838781042' + 
                                  '578195658985143'),                           // (274): 7 ^ 159
    (Info: triOk;            Val: '1643184774938171857917000410556544806341' + 
                                  '8374195995234970697646712332075655622878' + 
                                  '9187756432381825444948691083899787146729' + 
                                  '8047369612896001'),                          // (275): 7 ^ 160
    (Info: triOk;            Val: '1150229342456720300541900287389581364439' + 
                                  '2861937196664479488352698632452958936015' + 
                                  '2431429502667277811464083758729851002710' + 
                                  '86331587290272007'),                         // (276): 7 ^ 161
    (Info: triOk;            Val: '8051605397197042103793302011727069551075' + 
                                  '0033560376651356418468890427170712552106' + 
                                  '7020006518670944680248586311108957018976' + 
                                  '04321111031904049'),                         // (277): 7 ^ 162
    (Info: triOk;            Val: '5636123778037929472655311408208948685752' + 
                                  '5023492263655949492928223299019498786474' + 
                                  '6914004563069661276174010417776269913283' + 
                                  '230247777223328343'),                        // (278): 7 ^ 163
    (Info: triOk;            Val: '3945286644626550630858717985746264080026' + 
                                  '7516444584559164645049756309313649150532' + 
                                  '2839803194148762893321807292443388939298' + 
                                  '2611734440563298401'),                       // (279): 7 ^ 164
    (Info: triOk;            Val: '8'),                                         // (280): 8 ^ 1
    (Info: triOk;            Val: '64'),                                        // (281): 8 ^ 2
    (Info: triOk;            Val: '512'),                                       // (282): 8 ^ 3
    (Info: triOk;            Val: '4096'),                                      // (283): 8 ^ 4
    (Info: triOk;            Val: '32768'),                                     // (284): 8 ^ 5
    (Info: triOk;            Val: '262144'),                                    // (285): 8 ^ 6
    (Info: triOk;            Val: '2097152'),                                   // (286): 8 ^ 7
    (Info: triOk;            Val: '16777216'),                                  // (287): 8 ^ 8
    (Info: triOk;            Val: '134217728'),                                 // (288): 8 ^ 9
    (Info: triOk;            Val: '1073741824'),                                // (289): 8 ^ 10
    (Info: triOk;            Val: '8589934592'),                                // (290): 8 ^ 11
    (Info: triOk;            Val: '68719476736'),                               // (291): 8 ^ 12
    (Info: triOk;            Val: '549755813888'),                              // (292): 8 ^ 13
    (Info: triOk;            Val: '4398046511104'),                             // (293): 8 ^ 14
    (Info: triOk;            Val: '35184372088832'),                            // (294): 8 ^ 15
    (Info: triOk;            Val: '1152921504606846976'),                       // (295): 8 ^ 20
    (Info: triOk;            Val: '37778931862957161709568'),                   // (296): 8 ^ 25
    (Info: triOk;            Val: '1237940039285380274899124224'),              // (297): 8 ^ 30
    (Info: triOk;            Val: '9903520314283042199192993792'),              // (298): 8 ^ 31
    (Info: triOk;            Val: '79228162514264337593543950336'),             // (299): 8 ^ 32
    (Info: triOk;            Val: '633825300114114700748351602688'),            // (300): 8 ^ 33
    (Info: triOk;            Val: '40564819207303340847894502572032'),          // (301): 8 ^ 35
    (Info: triOk;            Val: '1329227995784915872903807060280344576'),     // (302): 8 ^ 40
    (Info: triOk;            Val: '1427247692705959881058285969449495136382' + 
                                  '746624'),                                    // (303): 8 ^ 50
    (Info: triOk;            Val: '1532495540865888858358347027150309183618' + 
                                  '739122183602176'),                           // (304): 8 ^ 60
    (Info: triOk;            Val: '1645504557321206042154969182557350504982' + 
                                  '735865633579863348609024'),                  // (305): 8 ^ 70
    (Info: triOk;            Val: '1316403645856964833723975346045880403986' + 
                                  '1886925068638906788872192'),                 // (306): 8 ^ 71
    (Info: triOk;            Val: '1053122916685571866979180276836704323188' + 
                                  '95095400549111254310977536'),                // (307): 8 ^ 72
    (Info: triOk;            Val: '8424983333484574935833442214693634585511' + 
                                  '60763204392890034487820288'),                // (308): 8 ^ 73
    (Info: triOk;            Val: '6739986666787659948666753771754907668409' + 
                                  '286105635143120275902562304'),               // (309): 8 ^ 74
    (Info: triOk;            Val: '5391989333430127958933403017403926134727' + 
                                  '4288845081144962207220498432'),              // (310): 8 ^ 75
    (Info: triOk;            Val: '1897137590064188545819787018382342682267' + 
                                  '9754287618550012224730563856487160207114' + 
                                  '24'),                                        // (311): 8 ^ 90
    (Info: triOk;            Val: '2037035976334486086268445688409378161051' + 
                                  '4683936659362506361404493543812997633367' + 
                                  '06183397376'),                               // (312): 8 ^ 100
    (Info: triOk;            Val: '2187250724783011924372502227117621365353' + 
                                  '1694308932124364257706064099529991993759' + 
                                  '23223513177023053824'),                      // (313): 8 ^ 110
    (Info: triOk;            Val: '3902185687894990289226996537241457882185' + 
                                  '7476783312139385739461995317146735247070' + 
                                  '2515038262882936496394978366390175827861' + 
                                  '930996959911035663286272'),                  // (314): 8 ^ 159
    (Info: triOk;            Val: '3121748550315992231381597229793166305748' + 
                                  '5981426649711508591569596253717388197656' + 
                                  '2012030610306349197115982693112140662289' + 
                                  '5447975679288285306290176'),                 // (315): 8 ^ 160
    (Info: triOk;            Val: '2497398840252793785105277783834533044598' + 
                                  '8785141319769206873255677002973910558124' + 
                                  '9609624488245079357692786154489712529831' + 
                                  '63583805434306282450321408'),                // (316): 8 ^ 161
    (Info: triOk;            Val: '1997919072202235028084222227067626435679' + 
                                  '1028113055815365498604541602379128446499' + 
                                  '9687699590596063486154228923591770023865' + 
                                  '308670443474450259602571264'),               // (317): 8 ^ 162
    (Info: triOk;            Val: '1598335257761788022467377781654101148543' + 
                                  '2822490444652292398883633281903302757199' + 
                                  '9750159672476850788923383138873416019092' + 
                                  '2469363547795602076820570112'),              // (318): 8 ^ 163
    (Info: triOk;            Val: '1278668206209430417973902225323280918834' + 
                                  '6257992355721833919106906625522642205759' + 
                                  '9800127737981480631138706511098732815273' + 
                                  '79754908382364816614564560896'),             // (319): 8 ^ 164
    (Info: triOk;            Val: '9'),                                         // (320): 9 ^ 1
    (Info: triOk;            Val: '81'),                                        // (321): 9 ^ 2
    (Info: triOk;            Val: '729'),                                       // (322): 9 ^ 3
    (Info: triOk;            Val: '6561'),                                      // (323): 9 ^ 4
    (Info: triOk;            Val: '59049'),                                     // (324): 9 ^ 5
    (Info: triOk;            Val: '531441'),                                    // (325): 9 ^ 6
    (Info: triOk;            Val: '4782969'),                                   // (326): 9 ^ 7
    (Info: triOk;            Val: '43046721'),                                  // (327): 9 ^ 8
    (Info: triOk;            Val: '387420489'),                                 // (328): 9 ^ 9
    (Info: triOk;            Val: '3486784401'),                                // (329): 9 ^ 10
    (Info: triOk;            Val: '31381059609'),                               // (330): 9 ^ 11
    (Info: triOk;            Val: '282429536481'),                              // (331): 9 ^ 12
    (Info: triOk;            Val: '2541865828329'),                             // (332): 9 ^ 13
    (Info: triOk;            Val: '22876792454961'),                            // (333): 9 ^ 14
    (Info: triOk;            Val: '205891132094649'),                           // (334): 9 ^ 15
    (Info: triOk;            Val: '12157665459056928801'),                      // (335): 9 ^ 20
    (Info: triOk;            Val: '717897987691852588770249'),                  // (336): 9 ^ 25
    (Info: triOk;            Val: '42391158275216203514294433201'),             // (337): 9 ^ 30
    (Info: triOk;            Val: '381520424476945831628649898809'),            // (338): 9 ^ 31
    (Info: triOk;            Val: '3433683820292512484657849089281'),           // (339): 9 ^ 32
    (Info: triOk;            Val: '30903154382632612361920641803529'),          // (340): 9 ^ 33
    (Info: triOk;            Val: '2503155504993241601315571986085849'),        // (341): 9 ^ 35
    (Info: triOk;            Val: '147808829414345923316083210206383297601'),   // (342): 9 ^ 40
    (Info: triOk;            Val: '5153775207320113310364611297656212727021' + 
                                  '07522001'),                                  // (343): 9 ^ 50
    (Info: triOk;            Val: '1797010299914431210413179829509605039731' + 
                                  '475627537851106401'),                        // (344): 9 ^ 60
    (Info: triOk;            Val: '6265787482177970379256224194341930332206' + 
                                  '694446810665274859598050801'),               // (345): 9 ^ 70
    (Info: triOk;            Val: '5639208733960173341330601774907737298986' + 
                                  '0250021295987473736382457209'),              // (346): 9 ^ 71
    (Info: triOk;            Val: '5075287860564156007197541597416963569087' + 
                                  '42250191663887263627442114881'),             // (347): 9 ^ 72
    (Info: triOk;            Val: '4567759074507740406477787437675267212178' + 
                                  '680251724974985372646979033929'),            // (348): 9 ^ 73
    (Info: triOk;            Val: '4110983167056966365830008693907740490960' + 
                                  '8122265524774868353822811305361'),           // (349): 9 ^ 74
    (Info: triOk;            Val: '3699884850351269729247007824516966441864' + 
                                  '73100389722973815184405301748249'),          // (350): 9 ^ 75
    (Info: triOk;            Val: '7617734804586639233928972772061556175042' + 
                                  '4801402395196724001565744957137343033038' + 
                                  '019601'),                                    // (351): 9 ^ 90
    (Info: triOk;            Val: '2656139888758747693387813220357796268292' + 
                                  '3345265339449597457496173909249090130218' + 
                                  '2994384699044001'),                          // (352): 9 ^ 100
    (Info: triOk;            Val: '9261387130997876709599357980245139667017' + 
                                  '7229349922798826340526919703952917089488' + 
                                  '2252068039219702299428401'),                 // (353): 9 ^ 110
    (Info: triOk;            Val: '5303456375681156827627538928679604521291' + 
                                  '3872559915390427787289793974665208946312' + 
                                  '0510185302371378198045283415364633663044' + 
                                  '85898038735812179407593870194489'),          // (354): 9 ^ 159
    (Info: triOk;            Val: '4773110738113041144864785035811644069162' + 
                                  '2485303923851385008560814577198688051680' + 
                                  '8459166772134240378240755073828170296740' + 
                                  '373082348622309614668344831750401'),         // (355): 9 ^ 160
    (Info: triOk;            Val: '4295799664301737030378306532230479662246' + 
                                  '0236773531466246507704733119478819246512' + 
                                  '7613250094920816340416679566445353267066' + 
                                  '3357741137600786532015103485753609'),        // (356): 9 ^ 161
    (Info: triOk;            Val: '3866219697871563327340475879007431696021' + 
                                  '4213096178319621856934259807530937321861' + 
                                  '4851925085428734706375011609800817940359' + 
                                  '70219670238407078788135931371782481'),       // (357): 9 ^ 162
    (Info: triOk;            Val: '3479597728084406994606428291106688526419' + 
                                  '2791786560487659671240833826777843589675' + 
                                  '3366732576885861235737510448820736146323' + 
                                  '731977032145663709093223382346042329'),      // (358): 9 ^ 163
    (Info: triOk;            Val: '3131637955275966295145785461996019673777' + 
                                  '3512607904438893704116750444100059230707' + 
                                  '8030059319197275112163759403938662531691' + 
                                  '3587793289310973381839010441114380961'),     // (359): 9 ^ 164
    (Info: triOk;            Val: '10'),                                        // (360): 10 ^ 1
    (Info: triOk;            Val: '100'),                                       // (361): 10 ^ 2
    (Info: triOk;            Val: '1000'),                                      // (362): 10 ^ 3
    (Info: triOk;            Val: '10000'),                                     // (363): 10 ^ 4
    (Info: triOk;            Val: '100000'),                                    // (364): 10 ^ 5
    (Info: triOk;            Val: '1000000'),                                   // (365): 10 ^ 6
    (Info: triOk;            Val: '10000000'),                                  // (366): 10 ^ 7
    (Info: triOk;            Val: '100000000'),                                 // (367): 10 ^ 8
    (Info: triOk;            Val: '1000000000'),                                // (368): 10 ^ 9
    (Info: triOk;            Val: '10000000000'),                               // (369): 10 ^ 10
    (Info: triOk;            Val: '100000000000'),                              // (370): 10 ^ 11
    (Info: triOk;            Val: '1000000000000'),                             // (371): 10 ^ 12
    (Info: triOk;            Val: '10000000000000'),                            // (372): 10 ^ 13
    (Info: triOk;            Val: '100000000000000'),                           // (373): 10 ^ 14
    (Info: triOk;            Val: '1000000000000000'),                          // (374): 10 ^ 15
    (Info: triOk;            Val: '100000000000000000000'),                     // (375): 10 ^ 20
    (Info: triOk;            Val: '10000000000000000000000000'),                // (376): 10 ^ 25
    (Info: triOk;            Val: '1000000000000000000000000000000'),           // (377): 10 ^ 30
    (Info: triOk;            Val: '10000000000000000000000000000000'),          // (378): 10 ^ 31
    (Info: triOk;            Val: '100000000000000000000000000000000'),         // (379): 10 ^ 32
    (Info: triOk;            Val: '1000000000000000000000000000000000'),        // (380): 10 ^ 33
    (Info: triOk;            Val: '100000000000000000000000000000000000'),      // (381): 10 ^ 35
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0'),                                         // (382): 10 ^ 40
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (383): 10 ^ 50
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (384): 10 ^ 60
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (385): 10 ^ 70
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000'),          // (386): 10 ^ 71
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000'),         // (387): 10 ^ 72
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000'),        // (388): 10 ^ 73
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000'),       // (389): 10 ^ 74
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000'),      // (390): 10 ^ 75
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (391): 10 ^ 90
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (392): 10 ^ 100
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (393): 10 ^ 110
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000'),  // (394): 10 ^ 159
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (395): 10 ^ 160
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00'),                                        // (396): 10 ^ 161
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (397): 10 ^ 162
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000'),                                      // (398): 10 ^ 163
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (399): 10 ^ 164
    (Info: triOk;            Val: '11'),                                        // (400): 11 ^ 1
    (Info: triOk;            Val: '121'),                                       // (401): 11 ^ 2
    (Info: triOk;            Val: '1331'),                                      // (402): 11 ^ 3
    (Info: triOk;            Val: '14641'),                                     // (403): 11 ^ 4
    (Info: triOk;            Val: '161051'),                                    // (404): 11 ^ 5
    (Info: triOk;            Val: '1771561'),                                   // (405): 11 ^ 6
    (Info: triOk;            Val: '19487171'),                                  // (406): 11 ^ 7
    (Info: triOk;            Val: '214358881'),                                 // (407): 11 ^ 8
    (Info: triOk;            Val: '2357947691'),                                // (408): 11 ^ 9
    (Info: triOk;            Val: '25937424601'),                               // (409): 11 ^ 10
    (Info: triOk;            Val: '285311670611'),                              // (410): 11 ^ 11
    (Info: triOk;            Val: '3138428376721'),                             // (411): 11 ^ 12
    (Info: triOk;            Val: '34522712143931'),                            // (412): 11 ^ 13
    (Info: triOk;            Val: '379749833583241'),                           // (413): 11 ^ 14
    (Info: triOk;            Val: '4177248169415651'),                          // (414): 11 ^ 15
    (Info: triOk;            Val: '672749994932560009201'),                     // (415): 11 ^ 20
    (Info: triOk;            Val: '108347059433883722041830251'),               // (416): 11 ^ 25
    (Info: triOk;            Val: '17449402268886407318558803753801'),          // (417): 11 ^ 30
    (Info: triOk;            Val: '191943424957750480504146841291811'),         // (418): 11 ^ 31
    (Info: triOk;            Val: '2111377674535255285545615254209921'),        // (419): 11 ^ 32
    (Info: triOk;            Val: '23225154419887808141001767796309131'),       // (420): 11 ^ 33
    (Info: triOk;            Val: '2810243684806424785061213903353404851'),     // (421): 11 ^ 35
    (Info: triOk;            Val: '4525925556817595180588935603489692046584' + 
                                  '01'),                                        // (422): 11 ^ 40
    (Info: triOk;            Val: '1173908528796953165066664959903583199389' + 
                                  '8213898723001'),                             // (423): 11 ^ 50
    (Info: triOk;            Val: '3044816395414180995744492953602787746390' + 
                                  '38415066698088621947601'),                   // (424): 11 ^ 60
    (Info: triOk;            Val: '7897469567994392174328988784504809847540' + 
                                  '729881935024059662581894710332201'),         // (425): 11 ^ 70
    (Info: triOk;            Val: '8687216524793831391761887662955290832294' + 
                                  '8028701285264656288400841813654211'),        // (426): 11 ^ 71
    (Info: triOk;            Val: '9555938177273214530938076429250819915524' + 
                                  '28315714137911219172409259950196321'),       // (427): 11 ^ 72
    (Info: triOk;            Val: '1051153199500053598403188407217590190707' + 
                                  '6711472855517023410896501859452159531'),     // (428): 11 ^ 73
    (Info: triOk;            Val: '1156268519450058958243507247939349209778' + 
                                  '43826201410687257519861520453973754841'),    // (429): 11 ^ 74
    (Info: triOk;            Val: '1271895371395064854067857972733284130756' + 
                                  '282088215517559832718476724993711303251'),   // (430): 11 ^ 75
    (Info: triOk;            Val: '5313022611848274220306942020010322294782' + 
                                  '9982204787466104474392924539783646472402' + 
                                  '04594326581401'),                            // (431): 11 ^ 90
    (Info: triOk;            Val: '1378061233982227018411833717208963677626' + 
                                  '4331200038466433146477552154985209552307' + 
                                  '6769401159497458526446001'),                 // (432): 11 ^ 100
    (Info: triOk;            Val: '3574335935197503226412197580625705154978' + 
                                  '3279694668957140940616869775897393903316' + 
                                  '53361877238387305580817715435470601'),       // (433): 11 ^ 110
    (Info: triOk;            Val: '3814494035557984307599965128460248566762' + 
                                  '2958138461557962902260069855121722497621' + 
                                  '0651643354916478758908809513449529839058' + 
                                  '1183490966962311944860732520308915106670' + 
                                  '726691'),                                    // (434): 11 ^ 159
    (Info: triOk;            Val: '4195943439113782738359961641306273423438' + 
                                  '5253952307713759192486076840633894747383' + 
                                  '1716807690408126634799690464794482822963' + 
                                  '9301840063658543139346805772339806617337' + 
                                  '7993601'),                                   // (435): 11 ^ 160
    (Info: triOk;            Val: '4615537783025161012195957805436900765782' + 
                                  '3779347538485135111734684524697284222121' + 
                                  '4888488459448939298279659511273931105260' + 
                                  '3232024070024397453281486349573787279071' + 
                                  '57929611'),                                  // (436): 11 ^ 161
    (Info: triOk;            Val: '5077091561327677113415553585980590842360' + 
                                  '6157282292333648622908152977167012644333' + 
                                  '6377337305393833228107625462401324215786' + 
                                  '3555226477026837198609634984531166006978' + 
                                  '737225721'),                                 // (437): 11 ^ 162
    (Info: triOk;            Val: '5584800717460444824757108944578649926596' + 
                                  '6773010521567013485198968274883713908767' + 
                                  '0015071035933216550918388008641456637364' + 
                                  '9910749124729520918470598482984282607676' + 
                                  '6109482931'),                                // (438): 11 ^ 163
    (Info: triOk;            Val: '6143280789206489307232819839036514919256' + 
                                  '3450311573723714833718865102372085299643' + 
                                  '7016578139526538206010226809505602301101' + 
                                  '4901824037202473010317658331282710868444' + 
                                  '27204312241'),                               // (439): 11 ^ 164
    (Info: triOk;            Val: '12'),                                        // (440): 12 ^ 1
    (Info: triOk;            Val: '144'),                                       // (441): 12 ^ 2
    (Info: triOk;            Val: '1728'),                                      // (442): 12 ^ 3
    (Info: triOk;            Val: '20736'),                                     // (443): 12 ^ 4
    (Info: triOk;            Val: '248832'),                                    // (444): 12 ^ 5
    (Info: triOk;            Val: '2985984'),                                   // (445): 12 ^ 6
    (Info: triOk;            Val: '35831808'),                                  // (446): 12 ^ 7
    (Info: triOk;            Val: '429981696'),                                 // (447): 12 ^ 8
    (Info: triOk;            Val: '5159780352'),                                // (448): 12 ^ 9
    (Info: triOk;            Val: '61917364224'),                               // (449): 12 ^ 10
    (Info: triOk;            Val: '743008370688'),                              // (450): 12 ^ 11
    (Info: triOk;            Val: '8916100448256'),                             // (451): 12 ^ 12
    (Info: triOk;            Val: '106993205379072'),                           // (452): 12 ^ 13
    (Info: triOk;            Val: '1283918464548864'),                          // (453): 12 ^ 14
    (Info: triOk;            Val: '15407021574586368'),                         // (454): 12 ^ 15
    (Info: triOk;            Val: '3833759992447475122176'),                    // (455): 12 ^ 20
    (Info: triOk;            Val: '953962166440690129601298432'),               // (456): 12 ^ 25
    (Info: triOk;            Val: '237376313799769806328950291431424'),         // (457): 12 ^ 30
    (Info: triOk;            Val: '2848515765597237675947403497177088'),        // (458): 12 ^ 31
    (Info: triOk;            Val: '34182189187166852111368841966125056'),       // (459): 12 ^ 32
    (Info: triOk;            Val: '410186270246002225336426103593500672'),      // (460): 12 ^ 33
    (Info: triOk;            Val: '59066822915424320448445358917464096768'),    // (461): 12 ^ 35
    (Info: triOk;            Val: '1469771567969086450582755555015042612697' + 
                                  '4976'),                                      // (462): 12 ^ 40
    (Info: triOk;            Val: '9100438150002149773327585275342566324927' + 
                                  '15260325658624'),                            // (463): 12 ^ 50
    (Info: triOk;            Val: '5634751435316678538981231379598050055113' + 
                                  '9163800306781874894667776'),                 // (464): 12 ^ 60
    (Info: triOk;            Val: '3488889569322095618800250852305904679826' + 
                                  '716343134391016285174746322068045824'),      // (465): 12 ^ 70
    (Info: triOk;            Val: '4186667483186514742560301022767085615792' + 
                                  '0596117612692195422096955864816549888'),     // (466): 12 ^ 71
    (Info: triOk;            Val: '5024000979823817691072361227320502738950' + 
                                  '47153411352306345065163470377798598656'),    // (467): 12 ^ 72
    (Info: triOk;            Val: '6028801175788581229286833472784603286740' + 
                                  '565840936227676140781961644533583183872'),   // (468): 12 ^ 73
    (Info: triOk;            Val: '7234561410946297475144200167341523944088' + 
                                  '6790091234732113689383539734402998206464'),  // (469): 12 ^ 74
    (Info: triOk;            Val: '8681473693135556970173040200809828732906' + 
                                  '4148109481678536427260247681283597847756' + 
                                  '8'),                                         // (470): 12 ^ 75
    (Info: triOk;            Val: '1337556524893435203124586151565327487956' + 
                                  '0267436972842215671280963977858996049651' + 
                                  '078858079966593024'),                        // (471): 12 ^ 90
    (Info: triOk;            Val: '8281797452201455025840842359573684980161' + 
                                  '2281185389443546420186410325491933012122' + 
                                  '3037770283296858019385573376'),              // (472): 12 ^ 100
    (Info: triOk;            Val: '5127870692773527214577427682326914262824' + 
                                  '8097565872606433483849333140985984082853' + 
                                  '860901962339735221501111799412869300224'),   // (473): 12 ^ 110
    (Info: triOk;            Val: '3888822506732846677770524147153990611071' + 
                                  '9461961068341510347706966287498827180792' + 
                                  '6638803740570794309466885952966884813643' + 
                                  '9515642377112557614501928086509436737103' + 
                                  '536899227648'),                              // (474): 12 ^ 159
    (Info: triOk;            Val: '4666587008079416013324628976584788733286' + 
                                  '3354353282009812417248359544998592616951' + 
                                  '1966564488684953171360263143560261776372' + 
                                  '7418770852535069137402313703811324084524' + 
                                  '2442790731776'),                             // (475): 12 ^ 160
    (Info: triOk;            Val: '5599904409695299215989554771901746479943' + 
                                  '6025223938411774900698031453998311140341' + 
                                  '4359877386421943805632315772272314131647' + 
                                  '2902525023042082964882776444573588901429' + 
                                  '09313488781312'),                            // (476): 12 ^ 161
    (Info: triOk;            Val: '6719885291634359059187465726282095775932' + 
                                  '3230268726094129880837637744797973368409' + 
                                  '7231852863706332566758778926726776957976' + 
                                  '7483030027650499557859331733488306681714' + 
                                  '911761865375744'),                           // (477): 12 ^ 162
    (Info: triOk;            Val: '8063862349961230871024958871538514931118' + 
                                  '7876322471312955857005165293757568042091' + 
                                  '6678223436447599080110534712072132349572' + 
                                  '0979636033180599469431198080185968018057' + 
                                  '8941142384508928'),                          // (478): 12 ^ 163
    (Info: triOk;            Val: '9676634819953477045229950645846217917342' + 
                                  '5451586965575547028406198352509081650510' + 
                                  '0013868123737118896132641654486558819486' + 
                                  '5175563239816719363317437696223161621669' + 
                                  '47293708614107136'),                         // (479): 12 ^ 164
    (Info: triOk;            Val: '13'),                                        // (480): 13 ^ 1
    (Info: triOk;            Val: '169'),                                       // (481): 13 ^ 2
    (Info: triOk;            Val: '2197'),                                      // (482): 13 ^ 3
    (Info: triOk;            Val: '28561'),                                     // (483): 13 ^ 4
    (Info: triOk;            Val: '371293'),                                    // (484): 13 ^ 5
    (Info: triOk;            Val: '4826809'),                                   // (485): 13 ^ 6
    (Info: triOk;            Val: '62748517'),                                  // (486): 13 ^ 7
    (Info: triOk;            Val: '815730721'),                                 // (487): 13 ^ 8
    (Info: triOk;            Val: '10604499373'),                               // (488): 13 ^ 9
    (Info: triOk;            Val: '137858491849'),                              // (489): 13 ^ 10
    (Info: triOk;            Val: '1792160394037'),                             // (490): 13 ^ 11
    (Info: triOk;            Val: '23298085122481'),                            // (491): 13 ^ 12
    (Info: triOk;            Val: '302875106592253'),                           // (492): 13 ^ 13
    (Info: triOk;            Val: '3937376385699289'),                          // (493): 13 ^ 14
    (Info: triOk;            Val: '51185893014090757'),                         // (494): 13 ^ 15
    (Info: triOk;            Val: '19004963774880799438801'),                   // (495): 13 ^ 20
    (Info: triOk;            Val: '7056410014866816666030739693'),              // (496): 13 ^ 25
    (Info: triOk;            Val: '2619995643649944960380551432833049'),        // (497): 13 ^ 30
    (Info: triOk;            Val: '34059943367449284484947168626829637'),       // (498): 13 ^ 31
    (Info: triOk;            Val: '442779263776840698304313192148785281'),      // (499): 13 ^ 32
    (Info: triOk;            Val: '5756130429098929077956071497934208653'),     // (500): 13 ^ 33
    (Info: triOk;            Val: '972786042517719014174576083150881262357'),   // (501): 13 ^ 35
    (Info: triOk;            Val: '3611886480845314459299208776413401565443' + 
                                  '17601'),                                     // (502): 13 ^ 40
    (Info: triOk;            Val: '4979292229791270780171418153553361831640' + 
                                  '1192004725734249'),                          // (503): 13 ^ 50
    (Info: triOk;            Val: '6864377172744689378196133203444067624537' + 
                                  '070830997366604446306636401'),               // (504): 13 ^ 60
    (Info: triOk;            Val: '9463126845172854256020885075503122553446' + 
                                  '48571553386120579525970592441865195449'),    // (505): 13 ^ 70
    (Info: triOk;            Val: '1230206489872471053282715059815405931948' + 
                                  '0431430194019567533837617701744247540837'),  // (506): 13 ^ 71
    (Info: triOk;            Val: '1599268436834212369267529577760027711532' + 
                                  '4560859252225437793988903012267521803088' + 
                                  '1'),                                         // (507): 13 ^ 72
    (Info: triOk;            Val: '2079048967884476080047788451088036024992' + 
                                  '1929117027893069132185573915947778344014' + 
                                  '53'),                                        // (508): 13 ^ 73
    (Info: triOk;            Val: '2702763658249818904062124986414446832489' + 
                                  '8507852136260989871841246090732111847218' + 
                                  '889'),                                       // (509): 13 ^ 74
    (Info: triOk;            Val: '3513592755724764575280762482338780882236' + 
                                  '8060207777139286833393619917951745401384' + 
                                  '5557'),                                      // (510): 13 ^ 75
    (Info: triOk;            Val: '1798463828896121187183895698918966589019' + 
                                  '7130672912829203311075745019255958028927' + 
                                  '299020895173379216649'),                     // (511): 13 ^ 90
    (Info: triOk;            Val: '2479335110965972533511072884734865136238' + 
                                  '7744678749411498121890994061586998379755' + 
                                  '60158285662939982180192171594001'),          // (512): 13 ^ 100
    (Info: triOk;            Val: '3417973991860420350273941206314663219102' + 
                                  '8736449728688685273835884133057986201399' + 
                                  '1380742233214225094764227736945196195797' + 
                                  '849'),                                       // (513): 13 ^ 110
    (Info: triOk;            Val: '1309160872253787942302884978620980738962' + 
                                  '1193622137843097981159319789559029155235' + 
                                  '1725298939512887075294671761883841597527' + 
                                  '5370176608180232161550989644043708346499' + 
                                  '302654954223063877'),                        // (514): 13 ^ 159
    (Info: triOk;            Val: '1701909133929924324993750472207274960650' + 
                                  '7551708779196027375507115726426737901805' + 
                                  '7242888621366753197883073290448994076785' + 
                                  '7981229590634301810016286537256820850449' + 
                                  '0934514404899830401'),                       // (515): 13 ^ 160
    (Info: triOk;            Val: '2212481874108901622491875613869457448845' + 
                                  '9817221412954835588159250444354759272347' + 
                                  '4415755207776779157247995277583692299821' + 
                                  '5375598467824592353021172498433867105583' + 
                                  '82148687263697795213'),                      // (516): 13 ^ 161
    (Info: triOk;            Val: '2876226436341572109239438298030294683499' + 
                                  '7762387836841286264607025577661187054051' + 
                                  '6740481770109812904422393860858799989767' + 
                                  '9988278008171970058927524247964027237258' + 
                                  '967932934428071337769'),                     // (517): 13 ^ 162
    (Info: triOk;            Val: '3739094367244043742011269787439383088549' + 
                                  '7091104187893672143989133250959543170267' + 
                                  '1762626301142756775749112019116439986698' + 
                                  '3984761410623561076605781522353235408436' + 
                                  '6583128147564927390997'),                    // (518): 13 ^ 163
    (Info: triOk;            Val: '4860822677417256864614650723671198015114' + 
                                  '6218435444261773787185873226247406121347' + 
                                  '3291414191485583808473845624851371982707' + 
                                  '9180189833810629399587515979059206030967' + 
                                  '65580665918344056082961'),                   // (519): 13 ^ 164
    (Info: triOk;            Val: '14'),                                        // (520): 14 ^ 1
    (Info: triOk;            Val: '196'),                                       // (521): 14 ^ 2
    (Info: triOk;            Val: '2744'),                                      // (522): 14 ^ 3
    (Info: triOk;            Val: '38416'),                                     // (523): 14 ^ 4
    (Info: triOk;            Val: '537824'),                                    // (524): 14 ^ 5
    (Info: triOk;            Val: '7529536'),                                   // (525): 14 ^ 6
    (Info: triOk;            Val: '105413504'),                                 // (526): 14 ^ 7
    (Info: triOk;            Val: '1475789056'),                                // (527): 14 ^ 8
    (Info: triOk;            Val: '20661046784'),                               // (528): 14 ^ 9
    (Info: triOk;            Val: '289254654976'),                              // (529): 14 ^ 10
    (Info: triOk;            Val: '4049565169664'),                             // (530): 14 ^ 11
    (Info: triOk;            Val: '56693912375296'),                            // (531): 14 ^ 12
    (Info: triOk;            Val: '793714773254144'),                           // (532): 14 ^ 13
    (Info: triOk;            Val: '11112006825558016'),                         // (533): 14 ^ 14
    (Info: triOk;            Val: '155568095557812224'),                        // (534): 14 ^ 15
    (Info: triOk;            Val: '83668255425284801560576'),                   // (535): 14 ^ 20
    (Info: triOk;            Val: '44998795805848373114515226624'),             // (536): 14 ^ 25
    (Info: triOk;            Val: '24201432355484595421941037243826176'),       // (537): 14 ^ 30
    (Info: triOk;            Val: '338820052976784335907174521413566464'),      // (538): 14 ^ 31
    (Info: triOk;            Val: '4743480741674980702700443299789930496'),     // (539): 14 ^ 32
    (Info: triOk;            Val: '66408730383449729837806206197059026944'),    // (540): 14 ^ 33
    (Info: triOk;            Val: '1301611115515614704821001641462356928102' + 
                                  '4'),                                         // (541): 14 ^ 35
    (Info: triOk;            Val: '7000376965910699630056503868178506524997' + 
                                  '451776'),                                    // (542): 14 ^ 40
    (Info: triOk;            Val: '2024891623976437135118764865774783290467' + 
                                  '102632746078437376'),                        // (543): 14 ^ 50
    (Info: triOk;            Val: '5857093280570966526725322240329558916052' + 
                                  '31761913348157820228102782976'),             // (544): 14 ^ 60
    (Info: triOk;            Val: '1694191496033802886970778167748945916796' + 
                                  '9776808876209899925527610410878828648857' + 
                                  '6'),                                         // (545): 14 ^ 70
    (Info: triOk;            Val: '2371868094447324041759089434848524283515' + 
                                  '7687532426693859895738654575230360108400' + 
                                  '64'),                                        // (546): 14 ^ 71
    (Info: triOk;            Val: '3320615332226253658462725208787933996922' + 
                                  '0762545397371403854034116405322504151760' + 
                                  '896'),                                       // (547): 14 ^ 72
    (Info: triOk;            Val: '4648861465116755121847815292303107595690' + 
                                  '9067563556319965395647762967451505812465' + 
                                  '2544'),                                      // (548): 14 ^ 73
    (Info: triOk;            Val: '6508406051163457170586941409224350633967' + 
                                  '2694588978847951553906868154432108137451' + 
                                  '35616'),                                     // (549): 14 ^ 74
    (Info: triOk;            Val: '9111768471628840038821717972914090887554' + 
                                  '1772424570387132175469615416204951392431' + 
                                  '898624'),                                    // (550): 14 ^ 75
    (Info: triOk;            Val: '1417500468295016027631584874268895560005' + 
                                  '6433618261241600616530904540462300837426' + 
                                  '197462193135419995979776'),                  // (551): 14 ^ 90
    (Info: triOk;            Val: '4100186088849932880529641652467097254580' + 
                                  '1067523792027322197126356748926146602648' + 
                                  '30614790322190186581981413953765376'),       // (552): 14 ^ 100
    (Info: triOk;            Val: '1185997912467682215998359324325288715565' + 
                                  '8056144126941534261694970580086521594054' + 
                                  '2303626825660770629642409863164103585093' + 
                                  '4910976'),                                   // (553): 14 ^ 110
    (Info: triOk;            Val: '1715369456435249558077095473952502750646' + 
                                  '5155671794490313060044270844170136263989' + 
                                  '0196363274007536763577357542163855059782' + 
                                  '4288420644790410068697429135523021931779' + 
                                  '62557057262975696502784'),                   // (554): 14 ^ 159
    (Info: triOk;            Val: '2401517239009349381307933663533503850905' + 
                                  '1217940512286438284061979181838190769584' + 
                                  '6274908583610551469008300559029397083695' + 
                                  '4003788902706574096176400789732230704491' + 
                                  '475798801681659751038976'),                  // (555): 14 ^ 160
    (Info: triOk;            Val: '3362124134613089133831107128946905391267' + 
                                  '1705116717201013597686770854573467077418' + 
                                  '4784872017054772056611620782641155917173' + 
                                  '5605304463789203734646961105625122986288' + 
                                  '0661183223543236514545664'),                 // (556): 14 ^ 161
    (Info: triOk;            Val: '4706973788458324787363549980525667547774' + 
                                  '0387163404081419036761479196402853908385' + 
                                  '8698820823876680879256269095697618284042' + 
                                  '9847426249304885228505745547875172180803' + 
                                  '29256565129605311203639296'),                // (557): 14 ^ 162
    (Info: triOk;            Val: '6589763303841654702308969972735934566883' + 
                                  '6542028765713986651466070874963995471740' + 
                                  '2178349153427353230958776733976665597660' + 
                                  '1786396749026839319908043767025241053124' + 
                                  '609591911814474356850950144'),               // (558): 14 ^ 163
    (Info: triOk;            Val: '9225668625378316583232557961830308393637' + 
                                  '1158840271999581312052499224949593660436' + 
                                  '3049688814798294523342287427567331836724' + 
                                  '2500955448637575047871261273835337474374' + 
                                  '4534286765402640995913302016'),              // (559): 14 ^ 164
    (Info: triOk;            Val: '15'),                                        // (560): 15 ^ 1
    (Info: triOk;            Val: '225'),                                       // (561): 15 ^ 2
    (Info: triOk;            Val: '3375'),                                      // (562): 15 ^ 3
    (Info: triOk;            Val: '50625'),                                     // (563): 15 ^ 4
    (Info: triOk;            Val: '759375'),                                    // (564): 15 ^ 5
    (Info: triOk;            Val: '11390625'),                                  // (565): 15 ^ 6
    (Info: triOk;            Val: '170859375'),                                 // (566): 15 ^ 7
    (Info: triOk;            Val: '2562890625'),                                // (567): 15 ^ 8
    (Info: triOk;            Val: '38443359375'),                               // (568): 15 ^ 9
    (Info: triOk;            Val: '576650390625'),                              // (569): 15 ^ 10
    (Info: triOk;            Val: '8649755859375'),                             // (570): 15 ^ 11
    (Info: triOk;            Val: '129746337890625'),                           // (571): 15 ^ 12
    (Info: triOk;            Val: '1946195068359375'),                          // (572): 15 ^ 13
    (Info: triOk;            Val: '29192926025390625'),                         // (573): 15 ^ 14
    (Info: triOk;            Val: '437893890380859375'),                        // (574): 15 ^ 15
    (Info: triOk;            Val: '332525673007965087890625'),                  // (575): 15 ^ 20
    (Info: triOk;            Val: '252511682940423488616943359375'),            // (576): 15 ^ 25
    (Info: triOk;            Val: '191751059232884086668491363525390625'),      // (577): 15 ^ 30
    (Info: triOk;            Val: '2876265888493261300027370452880859375'),     // (578): 15 ^ 31
    (Info: triOk;            Val: '43143988327398919500410556793212890625'),    // (579): 15 ^ 32
    (Info: triOk;            Val: '647159824910983792506158351898193359375'),   // (580): 15 ^ 33
    (Info: triOk;            Val: '1456109606049713533138856291770935058593' + 
                                  '75'),                                        // (581): 15 ^ 35
    (Info: triOk;            Val: '1105733232094001214227318996563553810119' + 
                                  '62890625'),                                  // (582): 15 ^ 40
    (Info: triOk;            Val: '6376215002140495869034078069148563372436' + 
                                  '9108676910400390625'),                       // (583): 15 ^ 50
    (Info: triOk;            Val: '3676846871693302154009699960011264829873' + 
                                  '3120100223459303379058837890625'),           // (584): 15 ^ 60
    (Info: triOk;            Val: '2120255184830251942305847391979542743546' + 
                                  '7695398418896957082324661314487457275390' + 
                                  '625'),                                       // (585): 15 ^ 70
    (Info: triOk;            Val: '3180382777245377913458771087969314115320' + 
                                  '1543097628345435623486991971731185913085' + 
                                  '9375'),                                      // (586): 15 ^ 71
    (Info: triOk;            Val: '4770574165868066870188156631953971172980' + 
                                  '2314646442518153435230487957596778869628' + 
                                  '90625'),                                     // (587): 15 ^ 72
    (Info: triOk;            Val: '7155861248802100305282234947930956759470' + 
                                  '3471969663777230152845731936395168304443' + 
                                  '359375'),                                    // (588): 15 ^ 73
    (Info: triOk;            Val: '1073379187320315045792335242189643513920' + 
                                  '5520795449566584522926859790459275245666' + 
                                  '50390625'),                                  // (589): 15 ^ 74
    (Info: triOk;            Val: '1610068780980472568688502863284465270880' + 
                                  '8281193174349876784390289685688912868499' + 
                                  '755859375'),                                 // (590): 15 ^ 75
    (Info: triOk;            Val: '7050392822843069367725353867951204442321' + 
                                  '4144186617364858227745153321230908716188' + 
                                  '42356838285923004150390625'),                // (591): 15 ^ 90
    (Info: triOk;            Val: '4065611775352152373972797075670416710103' + 
                                  '8789063237976342905176987875638319617013' + 
                                  '77171181093217455781996250152587890625'),    // (592): 15 ^ 100
    (Info: triOk;            Val: '2344436618386418413385934516809203479637' + 
                                  '9291556593156885470779257393247725928369' + 
                                  '5918536203489646041475680249277502298355' + 
                                  '1025390625'),                                // (593): 15 ^ 110
    (Info: triOk;            Val: '9965754625148675853717298925233679297800' + 
                                  '3195442482296026811040765151428261233490' + 
                                  '1360893162777718534378077905063845999345' + 
                                  '5826192975067080758168835095955895297947' + 
                                  '790822945535182952880859375'),               // (594): 15 ^ 159
    (Info: triOk;            Val: '1494863193772301378057594838785051894670' + 
                                  '0479316372344404021656114772714239185023' + 
                                  '5204133974416657780156711685759576899901' + 
                                  '8373928946260062113725325264393384294692' + 
                                  '16862344183027744293212890625'),             // (595): 15 ^ 160
    (Info: triOk;            Val: '2242294790658452067086392258177577842005' + 
                                  '0718974558516606032484172159071358777535' + 
                                  '2806200961624986670235067528639365349852' + 
                                  '7560893419390093170587987896590076442038' + 
                                  '252935162745416164398193359375'),            // (596): 15 ^ 161
    (Info: triOk;            Val: '3363442185987678100629588387266366763007' + 
                                  '6078461837774909048726258238607038166302' + 
                                  '9209301442437480005352601292959048024779' + 
                                  '1341340129085139755881981844885114663057' + 
                                  '3794027441181242465972900390625'),           // (597): 15 ^ 162
    (Info: triOk;            Val: '5045163278981517150944382580899550144511' + 
                                  '4117692756662363573089387357910557249454' + 
                                  '3813952163656220008028901939438572037168' + 
                                  '7012010193627709633822972767327671994586' + 
                                  '06910411617718636989593505859375'),          // (598): 15 ^ 163
    (Info: triOk;            Val: '7567744918472275726416573871349325216767' + 
                                  '1176539134993545359634081036865835874181' + 
                                  '5720928245484330012043352909157858055753' + 
                                  '0518015290441564450734459150991507991879' + 
                                  '103656174265779554843902587890625'),         // (599): 15 ^ 164
    (Info: triOk;            Val: '20'),                                        // (600): 20 ^ 1
    (Info: triOk;            Val: '400'),                                       // (601): 20 ^ 2
    (Info: triOk;            Val: '8000'),                                      // (602): 20 ^ 3
    (Info: triOk;            Val: '160000'),                                    // (603): 20 ^ 4
    (Info: triOk;            Val: '3200000'),                                   // (604): 20 ^ 5
    (Info: triOk;            Val: '64000000'),                                  // (605): 20 ^ 6
    (Info: triOk;            Val: '1280000000'),                                // (606): 20 ^ 7
    (Info: triOk;            Val: '25600000000'),                               // (607): 20 ^ 8
    (Info: triOk;            Val: '512000000000'),                              // (608): 20 ^ 9
    (Info: triOk;            Val: '10240000000000'),                            // (609): 20 ^ 10
    (Info: triOk;            Val: '204800000000000'),                           // (610): 20 ^ 11
    (Info: triOk;            Val: '4096000000000000'),                          // (611): 20 ^ 12
    (Info: triOk;            Val: '81920000000000000'),                         // (612): 20 ^ 13
    (Info: triOk;            Val: '1638400000000000000'),                       // (613): 20 ^ 14
    (Info: triOk;            Val: '32768000000000000000'),                      // (614): 20 ^ 15
    (Info: triOk;            Val: '104857600000000000000000000'),               // (615): 20 ^ 20
    (Info: triOk;            Val: '335544320000000000000000000000000'),         // (616): 20 ^ 25
    (Info: triOk;            Val: '1073741824000000000000000000000000000000'),  // (617): 20 ^ 30
    (Info: triOk;            Val: '2147483648000000000000000000000000000000' + 
                                  '0'),                                         // (618): 20 ^ 31
    (Info: triOk;            Val: '4294967296000000000000000000000000000000' + 
                                  '00'),                                        // (619): 20 ^ 32
    (Info: triOk;            Val: '8589934592000000000000000000000000000000' + 
                                  '000'),                                       // (620): 20 ^ 33
    (Info: triOk;            Val: '3435973836800000000000000000000000000000' + 
                                  '000000'),                                    // (621): 20 ^ 35
    (Info: triOk;            Val: '1099511627776000000000000000000000000000' + 
                                  '0000000000000'),                             // (622): 20 ^ 40
    (Info: triOk;            Val: '1125899906842624000000000000000000000000' + 
                                  '00000000000000000000000000'),                // (623): 20 ^ 50
    (Info: triOk;            Val: '1152921504606846976000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (624): 20 ^ 60
    (Info: triOk;            Val: '1180591620717411303424000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000'),                              // (625): 20 ^ 70
    (Info: triOk;            Val: '2361183241434822606848000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (626): 20 ^ 71
    (Info: triOk;            Val: '4722366482869645213696000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000'),                            // (627): 20 ^ 72
    (Info: triOk;            Val: '9444732965739290427392000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000'),                           // (628): 20 ^ 73
    (Info: triOk;            Val: '1888946593147858085478400000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (629): 20 ^ 74
    (Info: triOk;            Val: '3777893186295716170956800000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // (630): 20 ^ 75
    (Info: triOk;            Val: '1237940039285380274899124224000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000000'),    // (631): 20 ^ 90
    (Info: triOk;            Val: '1267650600228229401496703205376000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (632): 20 ^ 100
    (Info: triOk;            Val: '1298074214633706907132624082305024000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000'),                  // (633): 20 ^ 110
    (Info: triOk;            Val: '7307508186654514591018424163581415098279' + 
                                  '6627148800000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (634): 20 ^ 159
    (Info: triOk;            Val: '1461501637330902918203684832716283019655' + 
                                  '9325429760000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (635): 20 ^ 160
    (Info: triOk;            Val: '2923003274661805836407369665432566039311' + 
                                  '8650859520000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000'),                                // (636): 20 ^ 161
    (Info: triOk;            Val: '5846006549323611672814739330865132078623' + 
                                  '7301719040000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (637): 20 ^ 162
    (Info: triOk;            Val: '1169201309864722334562947866173026415724' + 
                                  '7460343808000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (638): 20 ^ 163
    (Info: triOk;            Val: '2338402619729444669125895732346052831449' + 
                                  '4920687616000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000'),                            // (639): 20 ^ 164
    (Info: triOk;            Val: '25'),                                        // (640): 25 ^ 1
    (Info: triOk;            Val: '625'),                                       // (641): 25 ^ 2
    (Info: triOk;            Val: '15625'),                                     // (642): 25 ^ 3
    (Info: triOk;            Val: '390625'),                                    // (643): 25 ^ 4
    (Info: triOk;            Val: '9765625'),                                   // (644): 25 ^ 5
    (Info: triOk;            Val: '244140625'),                                 // (645): 25 ^ 6
    (Info: triOk;            Val: '6103515625'),                                // (646): 25 ^ 7
    (Info: triOk;            Val: '152587890625'),                              // (647): 25 ^ 8
    (Info: triOk;            Val: '3814697265625'),                             // (648): 25 ^ 9
    (Info: triOk;            Val: '95367431640625'),                            // (649): 25 ^ 10
    (Info: triOk;            Val: '2384185791015625'),                          // (650): 25 ^ 11
    (Info: triOk;            Val: '59604644775390625'),                         // (651): 25 ^ 12
    (Info: triOk;            Val: '1490116119384765625'),                       // (652): 25 ^ 13
    (Info: triOk;            Val: '37252902984619140625'),                      // (653): 25 ^ 14
    (Info: triOk;            Val: '931322574615478515625'),                     // (654): 25 ^ 15
    (Info: triOk;            Val: '9094947017729282379150390625'),              // (655): 25 ^ 20
    (Info: triOk;            Val: '88817841970012523233890533447265625'),       // (656): 25 ^ 25
    (Info: triOk;            Val: '8673617379884035472059622406959533691406' + 
                                  '25'),                                        // (657): 25 ^ 30
    (Info: triOk;            Val: '2168404344971008868014905601739883422851' + 
                                  '5625'),                                      // (658): 25 ^ 31
    (Info: triOk;            Val: '5421010862427522170037264004349708557128' + 
                                  '90625'),                                     // (659): 25 ^ 32
    (Info: triOk;            Val: '1355252715606880542509316001087427139282' + 
                                  '2265625'),                                   // (660): 25 ^ 33
    (Info: triOk;            Val: '8470329472543003390683225006796419620513' + 
                                  '916015625'),                                 // (661): 25 ^ 35
    (Info: triOk;            Val: '8271806125530276748714086920699628535658' + 
                                  '1211090087890625'),                          // (662): 25 ^ 40
    (Info: triOk;            Val: '7888609052210118054117285652827862296732' + 
                                  '064351090230047702789306640625'),            // (663): 25 ^ 50
    (Info: triOk;            Val: '7523163845262640050999913838222372338039' + 
                                  '4595633413601376560109201818704605102539' + 
                                  '0625'),                                      // (664): 25 ^ 60
    (Info: triOk;            Val: '7174648137343063403129495466444370592154' + 
                                  '9411424077607513961896135157303433516062' + 
                                  '796115875244140625'),                        // (665): 25 ^ 70
    (Info: triOk;            Val: '1793662034335765850782373866611092648038' + 
                                  '7352856019401878490474033789325858379015' + 
                                  '69902896881103515625'),                      // (666): 25 ^ 71
    (Info: triOk;            Val: '4484155085839414626955934666527731620096' + 
                                  '8382140048504696226185084473314645947539' + 
                                  '247572422027587890625'),                     // (667): 25 ^ 72
    (Info: triOk;            Val: '1121038771459853656738983666631932905024' + 
                                  '2095535012126174056546271118328661486884' + 
                                  '81189310550689697265625'),                   // (668): 25 ^ 73
    (Info: triOk;            Val: '2802596928649634141847459166579832262560' + 
                                  '5238837530315435141365677795821653717212' + 
                                  '029732763767242431640625'),                  // (669): 25 ^ 74
    (Info: triOk;            Val: '7006492321624085354618647916449580656401' + 
                                  '3097093825788587853414194489554134293030' + 
                                  '0743319094181060791015625'),                 // (670): 25 ^ 75
    (Info: triOk;            Val: '6525304467998524526710294109256547555701' + 
                                  '1642580689665477586364554697232445974862' + 
                                  '2722289612685386828161426819860935211181' + 
                                  '640625'),                                    // (671): 25 ^ 90
    (Info: triOk;            Val: '6223015277861141707144064053780124240590' + 
                                  '2521687211671331011166147896988340353834' + 
                                  '4118394482312571361695696658955512248212' + 
                                  '47160434722900390625'),                      // (672): 25 ^ 100
    (Info: triOk;            Val: '5934729841099874217170776418476223221388' + 
                                  '1036460124656039248624942681301441530069' + 
                                  '7439569933235713350005814227061760185444' + 
                                  '3279307815828360617160797119140625'),        // (673): 25 ^ 110
    (Info: triOk;            Val: '1872670541876879330862339765543470627966' + 
                                  '0093355176733265348621815441533106695998' + 
                                  '5979465403901570585337722151625256800785' + 
                                  '5670134967965972481844907693523011570836' + 
                                  '2981660689780916362540477693165996697644' + 
                                  '00459825992584228515625'),                   // (674): 25 ^ 159
    (Info: triOk;            Val: '4681676354692198327155849413858676569915' + 
                                  '0233387941833163371554538603832766739996' + 
                                  '4948663509753926463344305379063142001963' + 
                                  '9175337419914931204612269233807528927090' + 
                                  '7454151724452290906351194232914991744110' + 
                                  '011495649814605712890625'),                  // (675): 25 ^ 160
    (Info: triOk;            Val: '1170419088673049581788962353464669142478' + 
                                  '7558346985458290842888634650958191684999' + 
                                  '1237165877438481615836076344765785500490' + 
                                  '9793834354978732801153067308451882231772' + 
                                  '6863537931113072726587798558228747936027' + 
                                  '50287391245365142822265625'),                // (676): 25 ^ 161
    (Info: triOk;            Val: '2926047721682623954472405883661672856196' + 
                                  '8895867463645727107221586627395479212497' + 
                                  '8092914693596204039590190861914463751227' + 
                                  '4484585887446832002882668271129705579431' + 
                                  '7158844827782681816469496395571869840068' + 
                                  '757184781134128570556640625'),               // (677): 25 ^ 162
    (Info: triOk;            Val: '7315119304206559886181014709154182140492' + 
                                  '2239668659114317768053966568488698031244' + 
                                  '5232286733990510098975477154786159378068' + 
                                  '6211464718617080007206670677824263948579' + 
                                  '2897112069456704541173740988929674600171' + 
                                  '8929619528353214263916015625'),              // (678): 25 ^ 163
    (Info: triOk;            Val: '1828779826051639971545253677288545535123' + 
                                  '0559917164778579442013491642122174507811' + 
                                  '1308071683497627524743869288696539844517' + 
                                  '1552866179654270001801667669456065987144' + 
                                  '8224278017364176135293435247232418650042' + 
                                  '973240488208830356597900390625'),            // (679): 25 ^ 164
    (Info: triOk;            Val: '30'),                                        // (680): 30 ^ 1
    (Info: triOk;            Val: '900'),                                       // (681): 30 ^ 2
    (Info: triOk;            Val: '27000'),                                     // (682): 30 ^ 3
    (Info: triOk;            Val: '810000'),                                    // (683): 30 ^ 4
    (Info: triOk;            Val: '24300000'),                                  // (684): 30 ^ 5
    (Info: triOk;            Val: '729000000'),                                 // (685): 30 ^ 6
    (Info: triOk;            Val: '21870000000'),                               // (686): 30 ^ 7
    (Info: triOk;            Val: '656100000000'),                              // (687): 30 ^ 8
    (Info: triOk;            Val: '19683000000000'),                            // (688): 30 ^ 9
    (Info: triOk;            Val: '590490000000000'),                           // (689): 30 ^ 10
    (Info: triOk;            Val: '17714700000000000'),                         // (690): 30 ^ 11
    (Info: triOk;            Val: '531441000000000000'),                        // (691): 30 ^ 12
    (Info: triOk;            Val: '15943230000000000000'),                      // (692): 30 ^ 13
    (Info: triOk;            Val: '478296900000000000000'),                     // (693): 30 ^ 14
    (Info: triOk;            Val: '14348907000000000000000'),                   // (694): 30 ^ 15
    (Info: triOk;            Val: '348678440100000000000000000000'),            // (695): 30 ^ 20
    (Info: triOk;            Val: '8472886094430000000000000000000000000'),     // (696): 30 ^ 25
    (Info: triOk;            Val: '2058911320946490000000000000000000000000' + 
                                  '00000'),                                     // (697): 30 ^ 30
    (Info: triOk;            Val: '6176733962839470000000000000000000000000' + 
                                  '000000'),                                    // (698): 30 ^ 31
    (Info: triOk;            Val: '1853020188851841000000000000000000000000' + 
                                  '00000000'),                                  // (699): 30 ^ 32
    (Info: triOk;            Val: '5559060566555523000000000000000000000000' + 
                                  '000000000'),                                 // (700): 30 ^ 33
    (Info: triOk;            Val: '5003154509899970700000000000000000000000' + 
                                  '000000000000'),                              // (701): 30 ^ 35
    (Info: triOk;            Val: '1215766545905692880100000000000000000000' + 
                                  '00000000000000000000'),                      // (702): 30 ^ 40
    (Info: triOk;            Val: '7178979876918525887702490000000000000000' + 
                                  '0000000000000000000000000000000000'),        // (703): 30 ^ 50
    (Info: triOk;            Val: '4239115827521620351429443320100000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (704): 30 ^ 60
    (Info: triOk;            Val: '2503155504993241601315571986085849000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000'),                  // (705): 30 ^ 70
    (Info: triOk;            Val: '7509466514979724803946715958257547000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (706): 30 ^ 71
    (Info: triOk;            Val: '2252839954493917441184014787477264100000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (707): 30 ^ 72
    (Info: triOk;            Val: '6758519863481752323552044362431792300000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000'),              // (708): 30 ^ 73
    (Info: triOk;            Val: '2027555959044525697065613308729537690000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000'),            // (709): 30 ^ 74
    (Info: triOk;            Val: '6082667877133577091196839926188613070000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (710): 30 ^ 75
    (Info: triOk;            Val: '8727963568087712425891397479476727340041' + 
                                  '4490000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (711): 30 ^ 90
    (Info: triOk;            Val: '5153775207320113310364611297656212727021' + 
                                  '0752200100000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000'),              // (712): 30 ^ 100
    (Info: triOk;            Val: '3043252722170453708637199325153017053178' + 
                                  '6747066637049000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (713): 30 ^ 110
    (Info: triOk;            Val: '7282483350946404208076885500996745047522' + 
                                  '3500349709172936042746495543107850670000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000'),       // (714): 30 ^ 159
    (Info: triOk;            Val: '2184745005283921262423065650299023514256' + 
                                  '7050104912751880812823948662932355201000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000'),     // (715): 30 ^ 160
    (Info: triOk;            Val: '6554235015851763787269196950897070542770' + 
                                  '1150314738255642438471845988797065603000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000000'),    // (716): 30 ^ 161
    (Info: triOk;            Val: '1966270504755529136180759085269121162831' + 
                                  '0345094421476692731541553796639119680900' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000'),  // (717): 30 ^ 162
    (Info: triOk;            Val: '5898811514266587408542277255807363488493' + 
                                  '1035283264430078194624661389917359042700' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (718): 30 ^ 163
    (Info: triOk;            Val: '1769643454279976222562683176742209046547' + 
                                  '9310584979329023458387398416975207712810' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (719): 30 ^ 164
    (Info: triOk;            Val: '31'),                                        // (720): 31 ^ 1
    (Info: triOk;            Val: '961'),                                       // (721): 31 ^ 2
    (Info: triOk;            Val: '29791'),                                     // (722): 31 ^ 3
    (Info: triOk;            Val: '923521'),                                    // (723): 31 ^ 4
    (Info: triOk;            Val: '28629151'),                                  // (724): 31 ^ 5
    (Info: triOk;            Val: '887503681'),                                 // (725): 31 ^ 6
    (Info: triOk;            Val: '27512614111'),                               // (726): 31 ^ 7
    (Info: triOk;            Val: '852891037441'),                              // (727): 31 ^ 8
    (Info: triOk;            Val: '26439622160671'),                            // (728): 31 ^ 9
    (Info: triOk;            Val: '819628286980801'),                           // (729): 31 ^ 10
    (Info: triOk;            Val: '25408476896404831'),                         // (730): 31 ^ 11
    (Info: triOk;            Val: '787662783788549761'),                        // (731): 31 ^ 12
    (Info: triOk;            Val: '24417546297445042591'),                      // (732): 31 ^ 13
    (Info: triOk;            Val: '756943935220796320321'),                     // (733): 31 ^ 14
    (Info: triOk;            Val: '23465261991844685929951'),                   // (734): 31 ^ 15
    (Info: triOk;            Val: '671790528819082282036142601601'),            // (735): 31 ^ 20
    (Info: triOk;            Val: '19232792489931358333837313998767870751'),    // (736): 31 ^ 25
    (Info: triOk;            Val: '5506185203459108373745368719051391856788' + 
                                  '62401'),                                     // (737): 31 ^ 30
    (Info: triOk;            Val: '1706917413072323595861064302905931475604' + 
                                  '4734431'),                                   // (738): 31 ^ 31
    (Info: triOk;            Val: '5291443980524203147169299339008387574373' + 
                                  '86767361'),                                  // (739): 31 ^ 32
    (Info: triOk;            Val: '1640347633962502975622482795092600148055' + 
                                  '8989788191'),                                // (740): 31 ^ 33
    (Info: triOk;            Val: '1576374076237965359573205966083988742281' + 
                                  '7189186451551'),                             // (741): 31 ^ 35
    (Info: triOk;            Val: '4513025146110222221199060915711939238508' + 
                                  '34154614488607763201'),                      // (742): 31 ^ 40
    (Info: triOk;            Val: '3699003069607600582570551227928827372985' + 
                                  '92289523754278027523770486241304001'),       // (743): 31 ^ 50
    (Info: triOk;            Val: '3031807549479202267739106636008279324614' + 
                                  '1565010036709134205448847156868819742052' + 
                                  '9491484801'),                                // (744): 31 ^ 60
    (Info: triOk;            Val: '2484955228235098623691068130643475392346' + 
                                  '2950741142853808158370365993698798592325' + 
                                  '9161036391784458870305601'),                 // (745): 31 ^ 70
    (Info: triOk;            Val: '7703361207528805733442311204994773716273' + 
                                  '5147297542846805290948134580466275636210' + 
                                  '33992128145318224979473631'),                // (746): 31 ^ 71
    (Info: triOk;            Val: '2388041974333929777367116473548379852044' + 
                                  '7895662238282509640193921719944545447225' + 
                                  '2053755972504864974363682561'),              // (747): 31 ^ 72
    (Info: triOk;            Val: '7402930120435182309838061067999977541338' + 
                                  '8476552938675779884601157331828090886398' + 
                                  '13666435147650814205274159391'),             // (748): 31 ^ 73
    (Info: triOk;            Val: '2294908337334906516049798931079993037815' + 
                                  '0427731410989491764226358772866708174783' + 
                                  '4223659489577175240363498941121'),           // (749): 31 ^ 74
    (Info: triOk;            Val: '7114215845738210199754376686347978417226' + 
                                  '6325967374067424469101712195886795341828' + 
                                  '60933444176892432451268467174751'),          // (750): 31 ^ 75
    (Info: triOk;            Val: '1669369386867800211641944128367315856965' + 
                                  '2663750048785627474595395890222221975051' + 
                                  '9571505229796134727696760652582909950874' + 
                                  '307866061867201'),                           // (751): 31 ^ 90
    (Info: triOk;            Val: '1368262370896645160067849227020097517311' + 
                                  '8542003060720838940036125089704922841049' + 
                                  '2159355815284093937176451398488482500741' + 
                                  '423820424077813256592898608001'),            // (752): 31 ^ 100
    (Info: triOk;            Val: '1121466543198306657334407375288614005377' + 
                                  '7090507557504490288861925538582813678079' + 
                                  '0973263484865822859777381156982018610912' + 
                                  '5890603434479157058852590057272170639119' + 
                                  '88801'),                                     // (753): 31 ^ 110
    (Info: triOk;            Val: '1338163930887987460020573425871796660443' + 
                                  '1885278801124181419725253999160603584765' + 
                                  '9382472032239513065629443771501278916687' + 
                                  '4669123119174228091237682443072485865563' + 
                                  '0133915661049949714495918455848730577345' + 
                                  '29377431395079364853375605254695112671'),    // (754): 31 ^ 159
    (Info: triOk;            Val: '4148308185752761126063777620202569647373' + 
                                  '8844364283484962401148287397397871112774' + 
                                  '4085663299942490503451275691653964641731' + 
                                  '1474281669440107082836815573524706183245' + 
                                  '3415138549254844114937347213131064789770' + 
                                  '410700373247460310454643762895548492801'),   // (755): 31 ^ 160
    (Info: triOk;            Val: '1285975537583355949079771062262796590685' + 
                                  '9041752927880338344355969093193340044960' + 
                                  '0666555622982172056069895464412729038936' + 
                                  '6557027317526433195679412827792658916806' + 
                                  '0558692950269001675630577636070630084828' + 
                                  '8273171157067126962409395664976200327683' + 
                                  '1'),                                         // (756): 31 ^ 161
    (Info: triOk;            Val: '3986524166508403442147290293014669431126' + 
                                  '3029434076429048867503504188899354139376' + 
                                  '2066322431244733373816675939679460020703' + 
                                  '6326784684331942906606179766157242642098' + 
                                  '7731948145833905194454790671818953262969' + 
                                  '3646830586908093583469126561426221015817' + 
                                  '61'),                                        // (757): 31 ^ 162
    (Info: triOk;            Val: '1235822491617605067065659990834547523649' + 
                                  '1539124563693005148926086298558799783206' + 
                                  '6240559953685867345883169541300632606418' + 
                                  '1261303252142902301047915727508745219050' + 
                                  '6196903925208510610280985108263875511520' + 
                                  '5030517481941509010875429234042128514903' + 
                                  '4591'),                                      // (758): 31 ^ 163
    (Info: triOk;            Val: '3831049724014575707903545971587097323312' + 
                                  '3771286147448315961670867525532279327940' + 
                                  '5345735856426188772237825578031961079896' + 
                                  '1910040081642997133248538755277110179056' + 
                                  '9210402168146382891871053835618014085713' + 
                                  '5594604194018677933713830625530598396200' + 
                                  '72321'),                                     // (759): 31 ^ 164
    (Info: triOk;            Val: '32'),                                        // (760): 32 ^ 1
    (Info: triOk;            Val: '1024'),                                      // (761): 32 ^ 2
    (Info: triOk;            Val: '32768'),                                     // (762): 32 ^ 3
    (Info: triOk;            Val: '1048576'),                                   // (763): 32 ^ 4
    (Info: triOk;            Val: '33554432'),                                  // (764): 32 ^ 5
    (Info: triOk;            Val: '1073741824'),                                // (765): 32 ^ 6
    (Info: triOk;            Val: '34359738368'),                               // (766): 32 ^ 7
    (Info: triOk;            Val: '1099511627776'),                             // (767): 32 ^ 8
    (Info: triOk;            Val: '35184372088832'),                            // (768): 32 ^ 9
    (Info: triOk;            Val: '1125899906842624'),                          // (769): 32 ^ 10
    (Info: triOk;            Val: '36028797018963968'),                         // (770): 32 ^ 11
    (Info: triOk;            Val: '1152921504606846976'),                       // (771): 32 ^ 12
    (Info: triOk;            Val: '36893488147419103232'),                      // (772): 32 ^ 13
    (Info: triOk;            Val: '1180591620717411303424'),                    // (773): 32 ^ 14
    (Info: triOk;            Val: '37778931862957161709568'),                   // (774): 32 ^ 15
    (Info: triOk;            Val: '1267650600228229401496703205376'),           // (775): 32 ^ 20
    (Info: triOk;            Val: '42535295865117307932921825928971026432'),    // (776): 32 ^ 25
    (Info: triOk;            Val: '1427247692705959881058285969449495136382' + 
                                  '746624'),                                    // (777): 32 ^ 30
    (Info: triOk;            Val: '4567192616659071619386515102238384436424' + 
                                  '7891968'),                                   // (778): 32 ^ 31
    (Info: triOk;            Val: '1461501637330902918203684832716283019655' + 
                                  '932542976'),                                 // (779): 32 ^ 32
    (Info: triOk;            Val: '4676805239458889338251791464692105662898' + 
                                  '9841375232'),                                // (780): 32 ^ 33
    (Info: triOk;            Val: '4789048565205902682369834459844716198808' + 
                                  '5597568237568'),                             // (781): 32 ^ 35
    (Info: triOk;            Val: '1606938044258990275541962092341162602522' + 
                                  '202993782792835301376'),                     // (782): 32 ^ 40
    (Info: triOk;            Val: '1809251394333065553493296640760748560207' + 
                                  '343510400633813116524750123642650624'),      // (783): 32 ^ 50
    (Info: triOk;            Val: '2037035976334486086268445688409378161051' + 
                                  '4683936659362506361404493543812997633367' + 
                                  '06183397376'),                               // (784): 32 ^ 60
    (Info: triOk;            Val: '2293498615990071511610820895302086940796' + 
                                  '5649891682811237375888393869228760884848' + 
                                  '08070018553110125686554624'),                // (785): 32 ^ 70
    (Info: triOk;            Val: '7339195571168228837154626864966678210549' + 
                                  '0079653384995959602842860381532034831513' + 
                                  '858240593699524021969747968'),               // (786): 32 ^ 71
    (Info: triOk;            Val: '2348542582773833227889480596789337027375' + 
                                  '6825489083198707072909715322090251146084' + 
                                  '43463698998384768703031934976'),             // (787): 32 ^ 72
    (Info: triOk;            Val: '7515336264876266329246337909725878487602' + 
                                  '1841565066235862633311089030688803667470' + 
                                  '190838367948312598497021919232'),            // (788): 32 ^ 73
    (Info: triOk;            Val: '2404907604760405225358828131112281116032' + 
                                  '6989300821195476042659548489820417173590' + 
                                  '46106827774346003151904701415424'),          // (789): 32 ^ 74
    (Info: triOk;            Val: '7695704335233296721148250019559299571304' + 
                                  '6365762627825523336510555167425334955489' + 
                                  '475418488779072100860950445293568'),         // (790): 32 ^ 75
    (Info: triOk;            Val: '2907354897182427562197295231552018137414' + 
                                  '5654427492722411259607967225571524535916' + 
                                  '9330476420285505426224305008642506471173' + 
                                  '4138406514458624'),                          // (791): 32 ^ 90
    (Info: triOk;            Val: '3273390607896141870013189696827599152216' + 
                                  '6420460430647894832913680961337964046745' + 
                                  '5488327009232590415715088668412756007100' + 
                                  '9217256545885393053328527589376'),           // (792): 32 ^ 100
    (Info: triOk;            Val: '3685510180489786476798393145496356338786' + 
                                  '0558793129301058361389650836173460860828' + 
                                  '6336535813005630739017721520999098031728' + 
                                  '4932211552660930305235775636164742230126' + 
                                  '362624'),                                    // (793): 32 ^ 110
    (Info: triOk;            Val: '2083754510274954460649953684600393061607' + 
                                  '7369757237213001238305661762616368180100' + 
                                  '2235044756277236071585716559706044788763' + 
                                  '9340250516912301587613548766353384389404' + 
                                  '7367435981295495197119643474418827278015' + 
                                  '6754246456311927835876171139415348871168'),  // (794): 32 ^ 159
    (Info: triOk;            Val: '6668014432879854274079851790721257797144' + 
                                  '7583223159081603962578117640372378176320' + 
                                  '7152143220087155429074292991059343324044' + 
                                  '5888801654119365080363356052330830046095' + 
                                  '1575795140145584630782859118140247289650' + 
                                  '1613588660198169074803747646129116387737' + 
                                  '6'),                                         // (795): 32 ^ 160
    (Info: triOk;            Val: '2133764618521553367705552573030802495086' + 
                                  '3226631410906113268024997644919161016422' + 
                                  '6288685830427889737303773757138989863694' + 
                                  '2684416529318196825716273936745865614750' + 
                                  '4504254444846587081850514917804879132688' + 
                                  '0516348371263414103937199246761317244076' + 
                                  '032'),                                       // (796): 32 ^ 161
    (Info: triOk;            Val: '6828046779268970776657768233698567984276' + 
                                  '2325220514899562457679992463741315252552' + 
                                  '4123794657369247159372076022844767563821' + 
                                  '6590132893818229842292076597586769967201' + 
                                  '4413614223509078661921647736975613224601' + 
                                  '7652314788042925132599037589636215181043' + 
                                  '3024'),                                      // (797): 32 ^ 162
    (Info: triOk;            Val: '2184974969366070648530485834783541754968' + 
                                  '3944070564767859986457597588397220880816' + 
                                  '7719614290358159090999064327310325620422' + 
                                  '9308842526021833549533464511227766389504' + 
                                  '4612356551522905171814927275832196231872' + 
                                  '5648740732173736042431692028683588857933' + 
                                  '856768'),                                    // (798): 32 ^ 163
    (Info: triOk;            Val: '6991919901971426075297554671307333615898' + 
                                  '8621025807257151956664312282871106818613' + 
                                  '6702765729146109091197005847393041985353' + 
                                  '3788296083269867358507086435928852446414' + 
                                  '2759540964873296549807767282663027941992' + 
                                  '2075970342955955335781414491787484345388' + 
                                  '3416576'),                                   // (799): 32 ^ 164
    (Info: triOk;            Val: '33'),                                        // (800): 33 ^ 1
    (Info: triOk;            Val: '1089'),                                      // (801): 33 ^ 2
    (Info: triOk;            Val: '35937'),                                     // (802): 33 ^ 3
    (Info: triOk;            Val: '1185921'),                                   // (803): 33 ^ 4
    (Info: triOk;            Val: '39135393'),                                  // (804): 33 ^ 5
    (Info: triOk;            Val: '1291467969'),                                // (805): 33 ^ 6
    (Info: triOk;            Val: '42618442977'),                               // (806): 33 ^ 7
    (Info: triOk;            Val: '1406408618241'),                             // (807): 33 ^ 8
    (Info: triOk;            Val: '46411484401953'),                            // (808): 33 ^ 9
    (Info: triOk;            Val: '1531578985264449'),                          // (809): 33 ^ 10
    (Info: triOk;            Val: '50542106513726817'),                         // (810): 33 ^ 11
    (Info: triOk;            Val: '1667889514952984961'),                       // (811): 33 ^ 12
    (Info: triOk;            Val: '55040353993448503713'),                      // (812): 33 ^ 13
    (Info: triOk;            Val: '1816331681783800622529'),                    // (813): 33 ^ 14
    (Info: triOk;            Val: '59938945498865420543457'),                   // (814): 33 ^ 15
    (Info: triOk;            Val: '2345734188103679287078463273601'),           // (815): 33 ^ 20
    (Info: triOk;            Val: '91801229324973413645775482048441660193'),    // (816): 33 ^ 25
    (Info: triOk;            Val: '3592677187515959257578986279730209409225' + 
                                  '510849'),                                    // (817): 33 ^ 30
    (Info: triOk;            Val: '1185583471880266555001065472310969105044' + 
                                  '41858017'),                                  // (818): 33 ^ 31
    (Info: triOk;            Val: '3912425457204879631503516058626198046646' + 
                                  '581314561'),                                 // (819): 33 ^ 32
    (Info: triOk;            Val: '1291100400877610278396160299346645355393' + 
                                  '37183380513'),                               // (820): 33 ^ 33
    (Info: triOk;            Val: '1406008336555717593173418565988496792023' + 
                                  '38192701378657'),                            // (821): 33 ^ 35
    (Info: triOk;            Val: '5502468881238427440585585273345625543507' + 
                                  '431690278185383507201'),                     // (822): 33 ^ 40
    (Info: triOk;            Val: '8427465705576358635622839396817058164066' + 
                                  '162897508094340376170494254080797249'),      // (823): 33 ^ 50
    (Info: triOk;            Val: '1290732937369758307751717567102690642925' + 
                                  '5291457839238871200697763994751310593611' + 
                                  '625016700801'),                              // (824): 33 ^ 60
    (Info: triOk;            Val: '1976859442464176033236188438156442284563' + 
                                  '6187975186724334260239292921004080597031' + 
                                  '429462449221468308495123649'),               // (825): 33 ^ 70
    (Info: triOk;            Val: '6523636160131780909679421845916259539059' + 
                                  '9420318116190303058789666639313465970203' + 
                                  '7172260824308454180339080417'),              // (826): 33 ^ 71
    (Info: triOk;            Val: '2152799932843487700194209209152365647889' + 
                                  '7808704978342800009400589990973443770167' + 
                                  '226684607202178987951189653761'),            // (827): 33 ^ 72
    (Info: triOk;            Val: '7104239778383509410640890390202806638036' + 
                                  '2768726428531240031021946970212364441551' + 
                                  '8480592037671906602389258574113'),           // (828): 33 ^ 73
    (Info: triOk;            Val: '2344399126866558105511493828766926190551' + 
                                  '9713679721415309210237242500170080265712' + 
                                  '109859537243172917878845532945729'),         // (829): 33 ^ 74
    (Info: triOk;            Val: '7736517118659641748187929634930856428821' + 
                                  '5055143080670520393782900250561264876849' + 
                                  '9625364729024706290001902587209057'),        // (830): 33 ^ 75
    (Info: triOk;            Val: '4637186779263796064061365655667093640952' + 
                                  '2467277366683975415923475311139087985423' + 
                                  '6593771598795909746565762223501021122375' + 
                                  '61822445812490049'),                         // (831): 33 ^ 90
    (Info: triOk;            Val: '7102217821866563229631632993965430862785' + 
                                  '1037229926786264915627239769472510693096' + 
                                  '2837025135618652977326776878590606331314' + 
                                  '23168375418697393542687445968001'),          // (832): 33 ^ 100
    (Info: triOk;            Val: '1087760756474147611745232916430294143953' + 
                                  '3247659413505787634832617949515304984253' + 
                                  '1288680646382159233417059010623435789421' + 
                                  '5231931968795929577353538996928834664577' + 
                                  '76896449'),                                  // (833): 33 ^ 110
    (Info: triOk;            Val: '2777898930623538188659428177027591614376' + 
                                  '3763428077423419819537322231544904210783' + 
                                  '2188088927259508760888883119246536119331' + 
                                  '2893675441763960054520578248033612360770' + 
                                  '9337706020394849054959743425660088818725' + 
                                  '1619337650021359506469166630197556011232' + 
                                  '97'),                                        // (834): 33 ^ 159
    (Info: triOk;            Val: '9167066471057676022576112984191052327442' + 
                                  '0419312655497285404473163364098183895584' + 
                                  '6220693459956378910933314293513569193793' + 
                                  '2549128957821068179917908218510920790544' + 
                                  '0814429867303001881367153304678293101793' + 
                                  '0343814245070486371348249879651934837068' + 
                                  '801'),                                       // (835): 33 ^ 160
    (Info: triOk;            Val: '3025131935449033087450117284783047268055' + 
                                  '8738373176314104183476143910152400685542' + 
                                  '9252828841785605040607993716859477833951' + 
                                  '7741212556080952499372909712108603860879' + 
                                  '5468761856209990620851160590543836723591' + 
                                  '7013458700873260502544922460285138496232' + 
                                  '70433'),                                     // (836): 33 ^ 161
    (Info: triOk;            Val: '9982935386981809188585387039784055984584' + 
                                  '3836631481836543805471274903502922262291' + 
                                  '6534335177892496634006379265636276852040' + 
                                  '8546001435067143247930602049958392740902' + 
                                  '5046914125492969048808829948794661187852' + 
                                  '6144413712881759658398244118940957037567' + 
                                  '924289'),                                    // (837): 33 ^ 162
    (Info: triOk;            Val: '3294368677703997032233177723128738474912' + 
                                  '8466088389006059455805520718155964346556' + 
                                  '2456330608704523889222105157659971361173' + 
                                  '4820180473572157271817098676486269604497' + 
                                  '8265481661412679786106913883102238191991' + 
                                  '3627656525250980687271420559250515822397' + 
                                  '41501537'),                                  // (838): 33 ^ 163
    (Info: triOk;            Val: '1087141663642319020636948648632483696721' + 
                                  '2393809168371999620415821836991468234363' + 
                                  '5610589100872492883443294702027790549187' + 
                                  '2490659556278811899699642563240468969484' + 
                                  '2827608948266184329415281581423738603357' + 
                                  '1497126653332823626799568784552670221391' + 
                                  '1469550721'),                                // (839): 33 ^ 164
    (Info: triOk;            Val: '35'),                                        // (840): 35 ^ 1
    (Info: triOk;            Val: '1225'),                                      // (841): 35 ^ 2
    (Info: triOk;            Val: '42875'),                                     // (842): 35 ^ 3
    (Info: triOk;            Val: '1500625'),                                   // (843): 35 ^ 4
    (Info: triOk;            Val: '52521875'),                                  // (844): 35 ^ 5
    (Info: triOk;            Val: '1838265625'),                                // (845): 35 ^ 6
    (Info: triOk;            Val: '64339296875'),                               // (846): 35 ^ 7
    (Info: triOk;            Val: '2251875390625'),                             // (847): 35 ^ 8
    (Info: triOk;            Val: '78815638671875'),                            // (848): 35 ^ 9
    (Info: triOk;            Val: '2758547353515625'),                          // (849): 35 ^ 10
    (Info: triOk;            Val: '96549157373046875'),                         // (850): 35 ^ 11
    (Info: triOk;            Val: '3379220508056640625'),                       // (851): 35 ^ 12
    (Info: triOk;            Val: '118272717781982421875'),                     // (852): 35 ^ 13
    (Info: triOk;            Val: '4139545122369384765625'),                    // (853): 35 ^ 14
    (Info: triOk;            Val: '144884079282928466796875'),                  // (854): 35 ^ 15
    (Info: triOk;            Val: '7609583501588058567047119140625'),           // (855): 35 ^ 20
    (Info: triOk;            Val: '399669593472470313551127910614013671875'),   // (856): 35 ^ 25
    (Info: triOk;            Val: '2099139642966190174954314623028039932250' + 
                                  '9765625'),                                   // (857): 35 ^ 30
    (Info: triOk;            Val: '7346988750381665612340101180598139762878' + 
                                  '41796875'),                                  // (858): 35 ^ 31
    (Info: triOk;            Val: '2571446062633582964319035413209348917007' + 
                                  '4462890625'),                                // (859): 35 ^ 32
    (Info: triOk;            Val: '9000061219217540375116623946232721209526' + 
                                  '06201171875'),                               // (860): 35 ^ 33
    (Info: triOk;            Val: '1102507499354148695951786433413508348166' + 
                                  '942596435546875'),                           // (861): 35 ^ 35
    (Info: triOk;            Val: '5790576106764117854019273308244010877388' + 
                                  '0638182163238525390625'),                    // (862): 35 ^ 40
    (Info: triOk;            Val: '1597357839464496850663515506391875708348' + 
                                  '53691081889337510801851749420166015625'),    // (863): 35 ^ 50
    (Info: triOk;            Val: '4406387240672224360848558182455138498953' + 
                                  '1674088794697269344524670486862305551767' + 
                                  '3492431640625'),                             // (864): 35 ^ 60
    (Info: triOk;            Val: '1215522786132138187221252269414065116036' + 
                                  '4084015253056856482143235432050176747509' + 
                                  '34020266868174076080322265625'),             // (865): 35 ^ 70
    (Info: triOk;            Val: '4254329751462483655274382942949227906127' + 
                                  '4294053385698997687501324012175618616282' + 
                                  '690709340386092662811279296875'),            // (866): 35 ^ 71
    (Info: triOk;            Val: '1489015413011869279346034030032229767144' + 
                                  '6002918684994649190625463404261466515698' + 
                                  '94174826913513243198394775390625'),          // (867): 35 ^ 72
    (Info: triOk;            Val: '5211553945541542477711119105112804185006' + 
                                  '1010215397481272167189121914915132804946' + 
                                  '296118941972963511943817138671875'),         // (868): 35 ^ 73
    (Info: triOk;            Val: '1824043880939539867198891686789481464752' + 
                                  '1353575389118445258516192670220296481731' + 
                                  '20364162969053722918033599853515625'),       // (869): 35 ^ 74
    (Info: triOk;            Val: '6384153583288389535196120903763185126632' + 
                                  '4737513861914558404806674345771037686059' + 
                                  '212745703916880302131175994873046875'),      // (870): 35 ^ 75
    (Info: triOk;            Val: '9249622139155468943156877350008036184903' + 
                                  '0477129969301444733025523768924874680598' + 
                                  '5207715759150728321996703940044426417443' + 
                                  '9013004302978515625'),                       // (871): 35 ^ 90
    (Info: triOk;            Val: '2551552067298685292412115015142558763019' + 
                                  '0414488161019324176778440771467258239937' + 
                                  '3658437329870435557897823361956377366532' + 
                                  '85543297897675074636936187744140625'),       // (872): 35 ^ 100
    (Info: triOk;            Val: '7038577202604110208464355464053057198056' + 
                                  '0129394106362164947726660886249666666734' + 
                                  '4644639899473109589410562214127390856927' + 
                                  '0762217943288030497228646709118038415908' + 
                                  '8134765625'),                                // (873): 35 ^ 110
    (Info: triOk;            Val: '3212321849501646742534882416667528059213' + 
                                  '8350046636590425490580432581159245337477' + 
                                  '6991243809369991092879851713493781632050' + 
                                  '5386666175772811308286047209696570534808' + 
                                  '2615857747932142607519079703629535200216' + 
                                  '1353037468227711315194028429687023162841' + 
                                  '796875'),                                    // (874): 35 ^ 159
    (Info: triOk;            Val: '1124312647325576359887208845833634820724' + 
                                  '8422516322806648921703151403405735868117' + 
                                  '1946935333279496882507948099722823571217' + 
                                  '6885333161520483957900116523393799687182' + 
                                  '8915550211776249912631677896270337320075' + 
                                  '6473563113879698960317909950390458106994' + 
                                  '62890625'),                                  // (875): 35 ^ 160
    (Info: triOk;            Val: '3935094265639517259605230960417721872536' + 
                                  '9478807129823271225961029911920075538410' + 
                                  '1814273666478239088777818349029882499261' + 
                                  '9098666065321693852650407831878298905140' + 
                                  '1204425741216874694210872636946180620264' + 
                                  '7657470898578946361112684826366603374481' + 
                                  '201171875'),                                 // (876): 35 ^ 161
    (Info: triOk;            Val: '1377282992973831040861830836146202655387' + 
                                  '9317582495438144929086360469172026438443' + 
                                  '5634995783267383681072236422160458874741' + 
                                  '6684533122862592848427642741157404616799' + 
                                  '0421549009425906142973805422931163217092' + 
                                  '6680114814502631226389439689228311181068' + 
                                  '42041015625'),                               // (877): 35 ^ 162
    (Info: triOk;            Val: '4820490475408408643016407926511709293857' + 
                                  '7611538734033507251802261642102092534552' + 
                                  '4722485241435842883752827477561606061595' + 
                                  '8395865930019074969496749594050916158796' + 
                                  '6475421532990671500408318980259071259824' + 
                                  '3380401850759209292363038912299089133739' + 
                                  '471435546875'),                              // (878): 35 ^ 163
    (Info: triOk;            Val: '1687171666392943025055742774279098252850' + 
                                  '2164038556911727538130791574735732387093' + 
                                  '3652869834502545009313489617146562121558' + 
                                  '5438553075506676239323862357917820655578' + 
                                  '8266397536546735025142911643090674940938' + 
                                  '5183140647765723252327063619304681196808' + 
                                  '81500244140625'),                            // (879): 35 ^ 164
    (Info: triOk;            Val: '40'),                                        // (880): 40 ^ 1
    (Info: triOk;            Val: '1600'),                                      // (881): 40 ^ 2
    (Info: triOk;            Val: '64000'),                                     // (882): 40 ^ 3
    (Info: triOk;            Val: '2560000'),                                   // (883): 40 ^ 4
    (Info: triOk;            Val: '102400000'),                                 // (884): 40 ^ 5
    (Info: triOk;            Val: '4096000000'),                                // (885): 40 ^ 6
    (Info: triOk;            Val: '163840000000'),                              // (886): 40 ^ 7
    (Info: triOk;            Val: '6553600000000'),                             // (887): 40 ^ 8
    (Info: triOk;            Val: '262144000000000'),                           // (888): 40 ^ 9
    (Info: triOk;            Val: '10485760000000000'),                         // (889): 40 ^ 10
    (Info: triOk;            Val: '419430400000000000'),                        // (890): 40 ^ 11
    (Info: triOk;            Val: '16777216000000000000'),                      // (891): 40 ^ 12
    (Info: triOk;            Val: '671088640000000000000'),                     // (892): 40 ^ 13
    (Info: triOk;            Val: '26843545600000000000000'),                   // (893): 40 ^ 14
    (Info: triOk;            Val: '1073741824000000000000000'),                 // (894): 40 ^ 15
    (Info: triOk;            Val: '109951162777600000000000000000000'),         // (895): 40 ^ 20
    (Info: triOk;            Val: '1125899906842624000000000000000000000000' + 
                                  '0'),                                         // (896): 40 ^ 25
    (Info: triOk;            Val: '1152921504606846976000000000000000000000' + 
                                  '000000000'),                                 // (897): 40 ^ 30
    (Info: triOk;            Val: '4611686018427387904000000000000000000000' + 
                                  '0000000000'),                                // (898): 40 ^ 31
    (Info: triOk;            Val: '1844674407370955161600000000000000000000' + 
                                  '000000000000'),                              // (899): 40 ^ 32
    (Info: triOk;            Val: '7378697629483820646400000000000000000000' + 
                                  '0000000000000'),                             // (900): 40 ^ 33
    (Info: triOk;            Val: '1180591620717411303424000000000000000000' + 
                                  '00000000000000000'),                         // (901): 40 ^ 35
    (Info: triOk;            Val: '1208925819614629174706176000000000000000' + 
                                  '0000000000000000000000000'),                 // (902): 40 ^ 40
    (Info: triOk;            Val: '1267650600228229401496703205376000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (903): 40 ^ 50
    (Info: triOk;            Val: '1329227995784915872903807060280344576000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (904): 40 ^ 60
    (Info: triOk;            Val: '1393796574908163946345982392040522594123' + 
                                  '7760000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000'),         // (905): 40 ^ 70
    (Info: triOk;            Val: '5575186299632655785383929568162090376495' + 
                                  '1040000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000'),        // (906): 40 ^ 71
    (Info: triOk;            Val: '2230074519853062314153571827264836150598' + 
                                  '0416000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000'),      // (907): 40 ^ 72
    (Info: triOk;            Val: '8920298079412249256614287309059344602392' + 
                                  '1664000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000'),     // (908): 40 ^ 73
    (Info: triOk;            Val: '3568119231764899702645714923623737840956' + 
                                  '8665600000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (909): 40 ^ 74
    (Info: triOk;            Val: '1427247692705959881058285969449495136382' + 
                                  '7466240000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (910): 40 ^ 75
    (Info: triOk;            Val: '1532495540865888858358347027150309183618' + 
                                  '7391221836021760000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (911): 40 ^ 90
    (Info: triOk;            Val: '1606938044258990275541962092341162602522' + 
                                  '2029937827928353013760000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (912): 40 ^ 100
    (Info: triOk;            Val: '1684996666696914987166688442938726917102' + 
                                  '3215264087857800689756405760000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (913): 40 ^ 110
    (Info: triOk;            Val: '5339967589802275205987554265423880286506' + 
                                  '7613058916319248676040195555493144516013' + 
                                  '7505740521734144000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000'),                           // (914): 40 ^ 159
    (Info: triOk;            Val: '2135987035920910082395021706169552114602' + 
                                  '7045223566527699470416078222197257806405' + 
                                  '5002296208693657600000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (915): 40 ^ 160
    (Info: triOk;            Val: '8543948143683640329580086824678208458410' + 
                                  '8180894266110797881664312888789031225622' + 
                                  '0009184834774630400000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // (916): 40 ^ 161
    (Info: triOk;            Val: '3417579257473456131832034729871283383364' + 
                                  '3272357706444319152665725155515612490248' + 
                                  '8003673933909852160000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000'),                      // (917): 40 ^ 162
    (Info: triOk;            Val: '1367031702989382452732813891948513353345' + 
                                  '7308943082577727661066290062206244996099' + 
                                  '5201469573563940864000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000'),                    // (918): 40 ^ 163
    (Info: triOk;            Val: '5468126811957529810931255567794053413382' + 
                                  '9235772330310910644265160248824979984398' + 
                                  '0805878294255763456000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (919): 40 ^ 164
    (Info: triOk;            Val: '50'),                                        // (920): 50 ^ 1
    (Info: triOk;            Val: '2500'),                                      // (921): 50 ^ 2
    (Info: triOk;            Val: '125000'),                                    // (922): 50 ^ 3
    (Info: triOk;            Val: '6250000'),                                   // (923): 50 ^ 4
    (Info: triOk;            Val: '312500000'),                                 // (924): 50 ^ 5
    (Info: triOk;            Val: '15625000000'),                               // (925): 50 ^ 6
    (Info: triOk;            Val: '781250000000'),                              // (926): 50 ^ 7
    (Info: triOk;            Val: '39062500000000'),                            // (927): 50 ^ 8
    (Info: triOk;            Val: '1953125000000000'),                          // (928): 50 ^ 9
    (Info: triOk;            Val: '97656250000000000'),                         // (929): 50 ^ 10
    (Info: triOk;            Val: '4882812500000000000'),                       // (930): 50 ^ 11
    (Info: triOk;            Val: '244140625000000000000'),                     // (931): 50 ^ 12
    (Info: triOk;            Val: '12207031250000000000000'),                   // (932): 50 ^ 13
    (Info: triOk;            Val: '610351562500000000000000'),                  // (933): 50 ^ 14
    (Info: triOk;            Val: '30517578125000000000000000'),                // (934): 50 ^ 15
    (Info: triOk;            Val: '9536743164062500000000000000000000'),        // (935): 50 ^ 20
    (Info: triOk;            Val: '2980232238769531250000000000000000000000' + 
                                  '000'),                                       // (936): 50 ^ 25
    (Info: triOk;            Val: '9313225746154785156250000000000000000000' + 
                                  '00000000000'),                               // (937): 50 ^ 30
    (Info: triOk;            Val: '4656612873077392578125000000000000000000' + 
                                  '0000000000000'),                             // (938): 50 ^ 31
    (Info: triOk;            Val: '2328306436538696289062500000000000000000' + 
                                  '000000000000000'),                           // (939): 50 ^ 32
    (Info: triOk;            Val: '1164153218269348144531250000000000000000' + 
                                  '00000000000000000'),                         // (940): 50 ^ 33
    (Info: triOk;            Val: '2910383045673370361328125000000000000000' + 
                                  '00000000000000000000'),                      // (941): 50 ^ 35
    (Info: triOk;            Val: '9094947017729282379150390625000000000000' + 
                                  '0000000000000000000000000000'),              // (942): 50 ^ 40
    (Info: triOk;            Val: '8881784197001252323389053344726562500000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (943): 50 ^ 50
    (Info: triOk;            Val: '8673617379884035472059622406959533691406' + 
                                  '2500000000000000000000000000000000000000' + 
                                  '0000000000000000000000'),                    // (944): 50 ^ 60
    (Info: triOk;            Val: '8470329472543003390683225006796419620513' + 
                                  '9160156250000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (945): 50 ^ 70
    (Info: triOk;            Val: '4235164736271501695341612503398209810256' + 
                                  '9580078125000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (946): 50 ^ 71
    (Info: triOk;            Val: '2117582368135750847670806251699104905128' + 
                                  '4790039062500000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (947): 50 ^ 72
    (Info: triOk;            Val: '1058791184067875423835403125849552452564' + 
                                  '2395019531250000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (948): 50 ^ 73
    (Info: triOk;            Val: '5293955920339377119177015629247762262821' + 
                                  '1975097656250000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000'),                                    // (949): 50 ^ 74
    (Info: triOk;            Val: '2646977960169688559588507814623881131410' + 
                                  '5987548828125000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000'),                                  // (950): 50 ^ 75
    (Info: triOk;            Val: '8077935669463160887416100508495730991853' + 
                                  '6338955163955688476562500000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000'),         // (951): 50 ^ 90
    (Info: triOk;            Val: '7888609052210118054117285652827862296732' + 
                                  '0643510902300477027893066406250000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000'),                                // (952): 50 ^ 100
    (Info: triOk;            Val: '7703719777548943412223911770339709274152' + 
                                  '4065928615527809597551822662353515625000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (953): 50 ^ 110
    (Info: triOk;            Val: '1368455531567204170823954671181558721953' + 
                                  '3808026137849333565119959861241041854107' + 
                                  '4363929510582238435745239257812500000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (954): 50 ^ 159
    (Info: triOk;            Val: '6842277657836020854119773355907793609766' + 
                                  '9040130689246667825599799306205209270537' + 
                                  '1819647552911192178726196289062500000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000'),          // (955): 50 ^ 160
    (Info: triOk;            Val: '3421138828918010427059886677953896804883' + 
                                  '4520065344623333912799899653102604635268' + 
                                  '5909823776455596089363098144531250000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000'),        // (956): 50 ^ 161
    (Info: triOk;            Val: '1710569414459005213529943338976948402441' + 
                                  '7260032672311666956399949826551302317634' + 
                                  '2954911888227798044681549072265625000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000'),      // (957): 50 ^ 162
    (Info: triOk;            Val: '8552847072295026067649716694884742012208' + 
                                  '6300163361558334781999749132756511588171' + 
                                  '4774559441138990223407745361328125000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000'),     // (958): 50 ^ 163
    (Info: triOk;            Val: '4276423536147513033824858347442371006104' + 
                                  '3150081680779167390999874566378255794085' + 
                                  '7387279720569495111703872680664062500000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (959): 50 ^ 164
    (Info: triOk;            Val: '60'),                                        // (960): 60 ^ 1
    (Info: triOk;            Val: '3600'),                                      // (961): 60 ^ 2
    (Info: triOk;            Val: '216000'),                                    // (962): 60 ^ 3
    (Info: triOk;            Val: '12960000'),                                  // (963): 60 ^ 4
    (Info: triOk;            Val: '777600000'),                                 // (964): 60 ^ 5
    (Info: triOk;            Val: '46656000000'),                               // (965): 60 ^ 6
    (Info: triOk;            Val: '2799360000000'),                             // (966): 60 ^ 7
    (Info: triOk;            Val: '167961600000000'),                           // (967): 60 ^ 8
    (Info: triOk;            Val: '10077696000000000'),                         // (968): 60 ^ 9
    (Info: triOk;            Val: '604661760000000000'),                        // (969): 60 ^ 10
    (Info: triOk;            Val: '36279705600000000000'),                      // (970): 60 ^ 11
    (Info: triOk;            Val: '2176782336000000000000'),                    // (971): 60 ^ 12
    (Info: triOk;            Val: '130606940160000000000000'),                  // (972): 60 ^ 13
    (Info: triOk;            Val: '7836416409600000000000000'),                 // (973): 60 ^ 14
    (Info: triOk;            Val: '470184984576000000000000000'),               // (974): 60 ^ 15
    (Info: triOk;            Val: '365615844006297600000000000000000000'),      // (975): 60 ^ 20
    (Info: triOk;            Val: '2843028802992970137600000000000000000000' + 
                                  '00000'),                                     // (976): 60 ^ 25
    (Info: triOk;            Val: '2210739197207333578997760000000000000000' + 
                                  '00000000000000'),                            // (977): 60 ^ 30
    (Info: triOk;            Val: '1326443518324400147398656000000000000000' + 
                                  '0000000000000000'),                          // (978): 60 ^ 31
    (Info: triOk;            Val: '7958661109946400884391936000000000000000' + 
                                  '00000000000000000'),                         // (979): 60 ^ 32
    (Info: triOk;            Val: '4775196665967840530635161600000000000000' + 
                                  '0000000000000000000'),                       // (980): 60 ^ 33
    (Info: triOk;            Val: '1719070799748422591028658176000000000000' + 
                                  '00000000000000000000000'),                   // (981): 60 ^ 35
    (Info: triOk;            Val: '1336749453884373406783884597657600000000' + 
                                  '00000000000000000000000000000000'),          // (982): 60 ^ 40
    (Info: triOk;            Val: '8082812774647640606431396004565362933760' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (983): 60 ^ 50
    (Info: triOk;            Val: '4887367798068925748932275227377460386566' + 
                                  '0850176000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (984): 60 ^ 60
    (Info: triOk;            Val: '2955204414547681244658707659790455381671' + 
                                  '3293230516469760000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (985): 60 ^ 70
    (Info: triOk;            Val: '1773122648728608746795224595874273229002' + 
                                  '7975938309881856000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (986): 60 ^ 71
    (Info: triOk;            Val: '1063873589237165248077134757524563937401' + 
                                  '6785562985929113600000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (987): 60 ^ 72
    (Info: triOk;            Val: '6383241535422991488462808545147383624410' + 
                                  '0713377915574681600000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000'),                                // (988): 60 ^ 73
    (Info: triOk;            Val: '3829944921253794893077685127088430174646' + 
                                  '0428026749344808960000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000'),                              // (989): 60 ^ 74
    (Info: triOk;            Val: '2297966952752276935846611076253058104787' + 
                                  '6256816049606885376000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000'),                            // (990): 60 ^ 75
    (Info: triOk;            Val: '1080469556235987051829919370389914884872' + 
                                  '4015728610899282651377959960576000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (991): 60 ^ 90
    (Info: triOk;            Val: '6533186235000709060966902671580578205371' + 
                                  '4371047295487154307196636949714147737600' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // (992): 60 ^ 100
    (Info: triOk;            Val: '3950367887263302342052194671146614399477' + 
                                  '5346134750732502780781099164095188067917' + 
                                  '2341760000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000'),      // (993): 60 ^ 110
    (Info: triOk;            Val: '5321680670621605120982985699362531573296' + 
                                  '7252091001137577966462441185876400852995' + 
                                  '4615456267026165811442107058777251013826' + 
                                  '9696000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (994): 60 ^ 159
    (Info: triOk;            Val: '3193008402372963072589791419617518943978' + 
                                  '0351254600682546779877464711525840511797' + 
                                  '2769273760215699486865264235266350608296' + 
                                  '1817600000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (995): 60 ^ 160
    (Info: triOk;            Val: '1915805041423777843553874851770511366386' + 
                                  '8210752760409528067926478826915504307078' + 
                                  '3661564256129419692119158541159810364977' + 
                                  '7090560000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (996): 60 ^ 161
    (Info: triOk;            Val: '1149483024854266706132324911062306819832' + 
                                  '0926451656245716840755887296149302584247' + 
                                  '0196938553677651815271495124695886218986' + 
                                  '6254336000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (997): 60 ^ 162
    (Info: triOk;            Val: '6896898149125600236793949466373840918992' + 
                                  '5558709937474301044535323776895815505482' + 
                                  '1181631322065910891628970748175317313919' + 
                                  '7526016000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000'),                                // (998): 60 ^ 163
    (Info: triOk;            Val: '4138138889475360142076369679824304551395' + 
                                  '5335225962484580626721194266137489303289' + 
                                  '2708978793239546534977382448905190388351' + 
                                  '8515609600000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000'),                              // (999): 60 ^ 164
    (Info: triOk;            Val: '70'),                                        // (1000): 70 ^ 1
    (Info: triOk;            Val: '4900'),                                      // (1001): 70 ^ 2
    (Info: triOk;            Val: '343000'),                                    // (1002): 70 ^ 3
    (Info: triOk;            Val: '24010000'),                                  // (1003): 70 ^ 4
    (Info: triOk;            Val: '1680700000'),                                // (1004): 70 ^ 5
    (Info: triOk;            Val: '117649000000'),                              // (1005): 70 ^ 6
    (Info: triOk;            Val: '8235430000000'),                             // (1006): 70 ^ 7
    (Info: triOk;            Val: '576480100000000'),                           // (1007): 70 ^ 8
    (Info: triOk;            Val: '40353607000000000'),                         // (1008): 70 ^ 9
    (Info: triOk;            Val: '2824752490000000000'),                       // (1009): 70 ^ 10
    (Info: triOk;            Val: '197732674300000000000'),                     // (1010): 70 ^ 11
    (Info: triOk;            Val: '13841287201000000000000'),                   // (1011): 70 ^ 12
    (Info: triOk;            Val: '968890104070000000000000'),                  // (1012): 70 ^ 13
    (Info: triOk;            Val: '67822307284900000000000000'),                // (1013): 70 ^ 14
    (Info: triOk;            Val: '4747561509943000000000000000'),              // (1014): 70 ^ 15
    (Info: triOk;            Val: '7979226629761200100000000000000000000'),     // (1015): 70 ^ 20
    (Info: triOk;            Val: '1341068619663964900807000000000000000000' + 
                                  '0000000'),                                   // (1016): 70 ^ 25
    (Info: triOk;            Val: '2253934029069225808786324900000000000000' + 
                                  '0000000000000000'),                          // (1017): 70 ^ 30
    (Info: triOk;            Val: '1577753820348458066150427430000000000000' + 
                                  '000000000000000000'),                        // (1018): 70 ^ 31
    (Info: triOk;            Val: '1104427674243920646305299201000000000000' + 
                                  '00000000000000000000'),                      // (1019): 70 ^ 32
    (Info: triOk;            Val: '7730993719707444524137094407000000000000' + 
                                  '000000000000000000000'),                     // (1020): 70 ^ 33
    (Info: triOk;            Val: '3788186922656647816827176259430000000000' + 
                                  '0000000000000000000000000'),                 // (1021): 70 ^ 35
    (Info: triOk;            Val: '6366805760909027985741435139224001000000' + 
                                  '0000000000000000000000000000000000'),        // (1022): 70 ^ 40
    (Info: triOk;            Val: '1798465042647412146620280340569649349251' + 
                                  '2490000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (1023): 70 ^ 50
    (Info: triOk;            Val: '5080218607396233653221881976522165017724' + 
                                  '3452483600100000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1024): 70 ^ 60
    (Info: triOk;            Val: '1435036016098684342856030763566710717400' + 
                                  '7738373924606663924900000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000'),                                // (1025): 70 ^ 70
    (Info: triOk;            Val: '1004525211269079039999221534496697502180' + 
                                  '5416861747224664747430000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000'),                              // (1026): 70 ^ 71
    (Info: triOk;            Val: '7031676478883553279994550741476882515263' + 
                                  '7918032230572653232010000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (1027): 70 ^ 72
    (Info: triOk;            Val: '4922173535218487295996185519033817760684' + 
                                  '6542622561400857262407000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000'),                           // (1028): 70 ^ 73
    (Info: triOk;            Val: '3445521474652941107197329863323672432479' + 
                                  '2579835792980600083684900000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (1029): 70 ^ 74
    (Info: triOk;            Val: '2411865032257058775038130904326570702735' + 
                                  '4805885055086420058579430000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000'),                       // (1030): 70 ^ 75
    (Info: triOk;            Val: '1145047759432104435934012671354514607705' + 
                                  '4004823284978858214566372120240027249000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (1031): 70 ^ 90
    (Info: triOk;            Val: '3234476509624757991344647769100216810857' + 
                                  '2031989046254009338953313916914596369280' + 
                                  '6000100000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1032): 70 ^ 100
    (Info: triOk;            Val: '9136595574409044101698192233938782496008' + 
                                  '7437705418058738052691627480556159211470' + 
                                  '3343869415249000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (1033): 70 ^ 110
    (Info: triOk;            Val: '2347406821340245511310000586509349723345' + 
                                  '4820279993192815282352446188679508032684' + 
                                  '1696794903402607778498130119856838781042' + 
                                  '5781956589851430000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000'),                            // (1034): 70 ^ 159
    (Info: triOk;            Val: '1643184774938171857917000410556544806341' + 
                                  '8374195995234970697646712332075655622878' + 
                                  '9187756432381825444948691083899787146729' + 
                                  '8047369612896001000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000'),                          // (1035): 70 ^ 160
    (Info: triOk;            Val: '1150229342456720300541900287389581364439' + 
                                  '2861937196664479488352698632452958936015' + 
                                  '2431429502667277811464083758729851002710' + 
                                  '8633158729027200700000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // (1036): 70 ^ 161
    (Info: triOk;            Val: '8051605397197042103793302011727069551075' + 
                                  '0033560376651356418468890427170712552106' + 
                                  '7020006518670944680248586311108957018976' + 
                                  '0432111103190404900000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000'),                       // (1037): 70 ^ 162
    (Info: triOk;            Val: '5636123778037929472655311408208948685752' + 
                                  '5023492263655949492928223299019498786474' + 
                                  '6914004563069661276174010417776269913283' + 
                                  '2302477772233283430000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1038): 70 ^ 163
    (Info: triOk;            Val: '3945286644626550630858717985746264080026' + 
                                  '7516444584559164645049756309313649150532' + 
                                  '2839803194148762893321807292443388939298' + 
                                  '2611734440563298401000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1039): 70 ^ 164
    (Info: triOk;            Val: '71'),                                        // (1040): 71 ^ 1
    (Info: triOk;            Val: '5041'),                                      // (1041): 71 ^ 2
    (Info: triOk;            Val: '357911'),                                    // (1042): 71 ^ 3
    (Info: triOk;            Val: '25411681'),                                  // (1043): 71 ^ 4
    (Info: triOk;            Val: '1804229351'),                                // (1044): 71 ^ 5
    (Info: triOk;            Val: '128100283921'),                              // (1045): 71 ^ 6
    (Info: triOk;            Val: '9095120158391'),                             // (1046): 71 ^ 7
    (Info: triOk;            Val: '645753531245761'),                           // (1047): 71 ^ 8
    (Info: triOk;            Val: '45848500718449031'),                         // (1048): 71 ^ 9
    (Info: triOk;            Val: '3255243551009881201'),                       // (1049): 71 ^ 10
    (Info: triOk;            Val: '231122292121701565271'),                     // (1050): 71 ^ 11
    (Info: triOk;            Val: '16409682740640811134241'),                   // (1051): 71 ^ 12
    (Info: triOk;            Val: '1165087474585497590531111'),                 // (1052): 71 ^ 13
    (Info: triOk;            Val: '82721210695570328927708881'),                // (1053): 71 ^ 14
    (Info: triOk;            Val: '5873205959385493353867330551'),              // (1054): 71 ^ 15
    (Info: triOk;            Val: '10596610576391421032662867140133202401'),    // (1055): 71 ^ 20
    (Info: triOk;            Val: '1911871582304242949172907458204175382150' + 
                                  '7871751'),                                   // (1056): 71 ^ 25
    (Info: triOk;            Val: '3449454824136127340732560810098778975228' + 
                                  '0917290697963601'),                          // (1057): 71 ^ 30
    (Info: triOk;            Val: '2449112925136650411920118175170133072411' + 
                                  '945127639555415671'),                        // (1058): 71 ^ 31
    (Info: triOk;            Val: '1738870176847021792463283904370794481412' + 
                                  '48104062408434512641'),                      // (1059): 71 ^ 32
    (Info: triOk;            Val: '1234597825561385472648931572103264081802' + 
                                  '8615388430998850397511'),                    // (1060): 71 ^ 33
    (Info: triOk;            Val: '6223607638654944167623264054972554236368' + 
                                  '2250173080665204853852951'),                 // (1061): 71 ^ 35
    (Info: triOk;            Val: '1122881557076905242849215691840475985269' + 
                                  '49432199996966253201749159632164801'),       // (1062): 71 ^ 40
    (Info: triOk;            Val: '3655252947222529621187668119434259684762' + 
                                  '3221918676395787170366927675037737762235' + 
                                  '4857463806001'),                             // (1063): 71 ^ 50
    (Info: triOk;            Val: '1189873858375600120035497781343208081469' + 
                                  '1264209092651527015595260034643363638825' + 
                                  '57468886718091110275768320887201'),          // (1064): 71 ^ 60
    (Info: triOk;            Val: '3873329203992417009259634882073981105565' + 
                                  '9626763064177579401969264015338872969284' + 
                                  '4232592350490638587653234673510768589886' + 
                                  '9931408401'),                                // (1065): 71 ^ 70
    (Info: triOk;            Val: '2750063734834616076574340766272526584951' + 
                                  '8335001775566081375398177450890599808191' + 
                                  '9405140568848353397233796618192645698819' + 
                                  '765129996471'),                              // (1066): 71 ^ 71
    (Info: triOk;            Val: '1952545251732577414367781944053493875315' + 
                                  '8017851260651917776532705990132325863816' + 
                                  '2777649803882330912035995598916778446162' + 
                                  '03324229749441'),                            // (1067): 71 ^ 72
    (Info: triOk;            Val: '1386307128730129964201125180277980651474' + 
                                  '2192674395062861621338221252993951363309' + 
                                  '5572131360756454947545556875230912696775' + 
                                  '0436020312210311'),                          // (1068): 71 ^ 73
    (Info: triOk;            Val: '9842780613983922745827988779973662625466' + 
                                  '9567988204946317511501370896257054679497' + 
                                  '8562132661370830127573453814139480147102' + 
                                  '80957442166932081'),                         // (1069): 71 ^ 74
    (Info: triOk;            Val: '6988374235928585149537872033781300464081' + 
                                  '5393271625511885433165973336342508822443' + 
                                  '4779114189573289390577152208039030904442' + 
                                  '9947978393852177751'),                       // (1070): 71 ^ 75
    (Info: triOk;            Val: '4104416120887181002099288995946728763359' + 
                                  '9544969210220807832792616345267283179771' + 
                                  '7095220687768784638190632643725227656443' + 
                                  '9811833309989551770462830979826089344432' + 
                                  '4770801'),                                   // (1071): 71 ^ 90
    (Info: triOk;            Val: '1336087410817898891633155449954597844299' + 
                                  '9734779958847630533301345373492671117566' + 
                                  '6102497782921507978433312682463230186211' + 
                                  '5923703047664970540529426490122573753595' + 
                                  '43273038071309720563612001'),                // (1072): 71 ^ 100
    (Info: triOk;            Val: '4349289927650455150618738369591112302721' + 
                                  '2375958908390216992624040432358991788428' + 
                                  '5719838608550104453185189980712944086005' + 
                                  '0835374546192168371141689862270123320477' + 
                                  '0211245227390279507537331520359843446789' + 
                                  '3201'),                                      // (1073): 71 ^ 110
    (Info: triOk;            Val: '2239120398080223776792375854311422883795' + 
                                  '0616972412222256580188503239400662662170' + 
                                  '3420311583565535670768153640536296867332' + 
                                  '3286067141764810726262596948503871958331' + 
                                  '3628341785016516743782058422273980632123' + 
                                  '7749450995137857050886887351050081207210' + 
                                  '7315894989532800814296649287145885870590' + 
                                  '141427682407031'),                           // (1074): 71 ^ 159
    (Info: triOk;            Val: '1589775482636958881522586856561110247494' + 
                                  '4938050412677802171933837299974470490140' + 
                                  '9428421224331530326245389084780770775805' + 
                                  '9533107670653015615646443833437749090415' + 
                                  '2676122667361726888085261479814526248807' + 
                                  '8802110206547878506129690019245557657119' + 
                                  '6194285442568288578150620993873578968119' + 
                                  '00041365450899201'),                         // (1075): 71 ^ 160
    (Info: triOk;            Val: '1128740592672240805881036668158388275721' + 
                                  '0906015793001239542073024482981874048000' + 
                                  '0694179069275386531634226250194347250822' + 
                                  '2268506446163641087108975121740801854194' + 
                                  '8400047093826826090540535650668313636653' + 
                                  '5949498246648993739352079913664345936554' + 
                                  '9297942664223484890486940905650241067364' + 
                                  '4902936947013843271'),                       // (1076): 71 ^ 161
    (Info: triOk;            Val: '8014058207972909721755360343924556757619' + 
                                  '7432712130308800748718473829171305740800' + 
                                  '4928671391855244374603006376379865480837' + 
                                  '8106395767761851718473723364359693164783' + 
                                  '3640334366170465242837803119745026820240' + 
                                  '5241437551207855549399767387016856149540' + 
                                  '0015392915986742722457280430116711578287' + 
                                  '88108523237982872241'),                      // (1077): 71 ^ 162
    (Info: triOk;            Val: '5689981327660765902446305844186435297910' + 
                                  '0177225612519248531590116418711627075968' + 
                                  '3499356688217223505968134527229704491394' + 
                                  '8455540995110914720116343588695382146996' + 
                                  '1884637399981030322414840215018969042370' + 
                                  '7721420661357577440073834844781967866173' + 
                                  '4010928970350587332944669105382865220584' + 
                                  '3955705149896783929111'),                    // (1078): 71 ^ 163
    (Info: triOk;            Val: '4039886742639143790736877149372369061516' + 
                                  '1125830184888666457428982657285255223937' + 
                                  '5284543248634228689237375514333090188890' + 
                                  '3403434106528749451282603947973721324367' + 
                                  '2938092553986531528914536552663468020083' + 
                                  '2482208669563879982452422739795197184983' + 
                                  '1147759568948917006390715064821834306614' + 
                                  '920855065642671658966881'),                  // (1079): 71 ^ 164
    (Info: triOk;            Val: '72'),                                        // (1080): 72 ^ 1
    (Info: triOk;            Val: '5184'),                                      // (1081): 72 ^ 2
    (Info: triOk;            Val: '373248'),                                    // (1082): 72 ^ 3
    (Info: triOk;            Val: '26873856'),                                  // (1083): 72 ^ 4
    (Info: triOk;            Val: '1934917632'),                                // (1084): 72 ^ 5
    (Info: triOk;            Val: '139314069504'),                              // (1085): 72 ^ 6
    (Info: triOk;            Val: '10030613004288'),                            // (1086): 72 ^ 7
    (Info: triOk;            Val: '722204136308736'),                           // (1087): 72 ^ 8
    (Info: triOk;            Val: '51998697814228992'),                         // (1088): 72 ^ 9
    (Info: triOk;            Val: '3743906242624487424'),                       // (1089): 72 ^ 10
    (Info: triOk;            Val: '269561249468963094528'),                     // (1090): 72 ^ 11
    (Info: triOk;            Val: '19408409961765342806016'),                   // (1091): 72 ^ 12
    (Info: triOk;            Val: '1397405517247104682033152'),                 // (1092): 72 ^ 13
    (Info: triOk;            Val: '100613197241791537106386944'),               // (1093): 72 ^ 14
    (Info: triOk;            Val: '7244150201408990671659859968'),              // (1094): 72 ^ 15
    (Info: triOk;            Val: '14016833953562607293918185758734155776'),    // (1095): 72 ^ 20
    (Info: triOk;            Val: '2712141916156455806889410399002601601161' + 
                                  '7042432'),                                   // (1096): 72 ^ 25
    (Info: triOk;            Val: '5247771214057392011379107255114289051959' + 
                                  '2132233368961024'),                          // (1097): 72 ^ 30
    (Info: triOk;            Val: '3778395274121322248192957223682288117410' + 
                                  '633520802565193728'),                        // (1098): 72 ^ 31
    (Info: triOk;            Val: '2720444597367352018698929201051247444535' + 
                                  '65613497784693948416'),                      // (1099): 72 ^ 32
    (Info: triOk;            Val: '1958720110104493453463229024756898160065' + 
                                  '6724171840497964285952'),                    // (1100): 72 ^ 33
    (Info: triOk;            Val: '1015400505078169406275337926433976006178' + 
                                  '04458106821141446858375168'),                // (1101): 72 ^ 35
    (Info: triOk;            Val: '1964716340817455522485122800615419058218' + 
                                  '83939119093566055892261119434162176'),       // (1102): 72 ^ 40
    (Info: triOk;            Val: '7355713773372811759757221458831897269591' + 
                                  '2628610228128730614992756576146544677749' + 
                                  '8866888474624'),                             // (1103): 72 ^ 50
    (Info: triOk;            Val: '2753910271508939408646097283178478031054' + 
                                  '8939388965768896839907204345236835925865' + 
                                  '64948214776631198305421231128576'),          // (1104): 72 ^ 60
    (Info: triOk;            Val: '1031038185713001534221167055170863012055' + 
                                  '1813540336923528215574969961577710343177' + 
                                  '6812686851584276984068635220893860608337' + 
                                  '85039028224'),                               // (1105): 72 ^ 70
    (Info: triOk;            Val: '7423474937133611046392402797230213686797' + 
                                  '3057490425849403152139783723359514470879' + 
                                  '3051345331406794285294173590435796380032' + 
                                  '522810032128'),                              // (1106): 72 ^ 71
    (Info: triOk;            Val: '5344901954736199953402530014005753854494' + 
                                  '0601393106611570269540644280818850419033' + 
                                  '0996968638612891885411804985113773393623' + 
                                  '41642322313216'),                            // (1107): 72 ^ 72
    (Info: triOk;            Val: '3848329407410063966449821610084142775235' + 
                                  '7233003036760330594069263882189572301703' + 
                                  '8317817419801282157496499589281916843408' + 
                                  '8598247206551552'),                          // (1108): 72 ^ 73
    (Info: triOk;            Val: '2770797173335246055843871559260582798169' + 
                                  '7207762186467438027729869995176492057226' + 
                                  '7588828542256923153397479704282980127254' + 
                                  '379073798871711744'),                        // (1109): 72 ^ 74
    (Info: triOk;            Val: '1994973964801377160207587522667619614682' + 
                                  '1989588774256555379965506396527074281203' + 
                                  '2663956550424984670446185387083745691623' + 
                                  '15293313518763245568'),                      // (1110): 72 ^ 75
    (Info: triOk;            Val: '1445189104892158902200265343710977426736' + 
                                  '9161171320182554455282336239138323313090' + 
                                  '5239853793338798812701146577117329915769' + 
                                  '9633655678469490479698481618320991787480' + 
                                  '76621824'),                                  // (1111): 72 ^ 90
    (Info: triOk;            Val: '5410652511578648872110411065009515468491' + 
                                  '9808365060517563123199931159571762703975' + 
                                  '0725653834516531293192786380424503345814' + 
                                  '9187853181114657791853103981013651795316' + 
                                  '60546590048939925491941376'),                // (1112): 72 ^ 100
    (Info: triOk;            Val: '2025697571477116523533530830701972880145' + 
                                  '1570231146098918479787145438385554008117' + 
                                  '3375424086725394225460575595174523658823' + 
                                  '9941137982875285394977727083466793353520' + 
                                  '7705888526402624549839407663056833946572' + 
                                  '55424'),                                     // (1113): 72 ^ 110
    (Info: triOk;            Val: '2069507156555844700394414592823231578270' + 
                                  '3278152086068046067959101588273973996911' + 
                                  '2204508716816481588312010941568623034231' + 
                                  '5567498665782932779984534930548768961224' + 
                                  '8234922546864690460401923192850441005185' + 
                                  '3526079972307150804763976075783184772772' + 
                                  '3471209733667841418921830357118965054969' + 
                                  '3937469523755008'),                          // (1114): 72 ^ 159
    (Info: triOk;            Val: '1490045152720208184283978506832726736354' + 
                                  '6360269501968993168930553143557261277776' + 
                                  '0787246276107866743584647877929408584646' + 
                                  '7208599039363711601588865149995113652081' + 
                                  '8729144233742577131489384698852317523733' + 
                                  '4538777580061148579430062774563893036396' + 
                                  '0899271008240845821623717857125654839577' + 
                                  '963497805710360576'),                        // (1115): 72 ^ 160
    (Info: triOk;            Val: '1072832509958549892684464524919563250175' + 
                                  '3379394041417675081629998263361228119998' + 
                                  '7766817318797664055380946472109174180945' + 
                                  '6390191308341872353143982907996481829498' + 
                                  '9484983848294655534672356983173668617088' + 
                                  '0867919857644026977189645197686002986205' + 
                                  '1847475125933408991569076857130471484496' + 
                                  '13371842011145961472'),                      // (1116): 72 ^ 161
    (Info: triOk;            Val: '7724394071701559227328144579420855401262' + 
                                  '4331637098207260587735987496200842463991' + 
                                  '1921084695343181198742814599186054102808' + 
                                  '6009377420061480942636676937574669172392' + 
                                  '4291883707721519849640970278850414043034' + 
                                  '2249022975036994235765445423339221500677' + 
                                  '3301820906720544739297353371339394688372' + 
                                  '162772624802509225984'),                     // (1117): 72 ^ 162
    (Info: triOk;            Val: '5561563731625122643676264097183015888908' + 
                                  '9518778710709227623169910997264606574073' + 
                                  '6583180980647090463094826511413958954022' + 
                                  '1926751742444266278698407395053761804122' + 
                                  '5490156269559494291741498600772298110984' + 
                                  '6419296542026635849751120704804239480487' + 
                                  '6777311052838792212294094427364364175627' + 
                                  '95719628985780664270848'),                   // (1118): 72 ^ 163
    (Info: triOk;            Val: '4004325886770088303446910149971771440014' + 
                                  '4453520671710643888682335918030516733333' + 
                                  '0339890306065905133428275088218050446895' + 
                                  '9787261254559871720662853324438708498968' + 
                                  '2352912514082835890053878992556054639908' + 
                                  '9421893510259177811820806907459052425951' + 
                                  '1279663958043930392851747987702342206452' + 
                                  '1291813286976207827501056'),                 // (1119): 72 ^ 164
    (Info: triOk;            Val: '73'),                                        // (1120): 73 ^ 1
    (Info: triOk;            Val: '5329'),                                      // (1121): 73 ^ 2
    (Info: triOk;            Val: '389017'),                                    // (1122): 73 ^ 3
    (Info: triOk;            Val: '28398241'),                                  // (1123): 73 ^ 4
    (Info: triOk;            Val: '2073071593'),                                // (1124): 73 ^ 5
    (Info: triOk;            Val: '151334226289'),                              // (1125): 73 ^ 6
    (Info: triOk;            Val: '11047398519097'),                            // (1126): 73 ^ 7
    (Info: triOk;            Val: '806460091894081'),                           // (1127): 73 ^ 8
    (Info: triOk;            Val: '58871586708267913'),                         // (1128): 73 ^ 9
    (Info: triOk;            Val: '4297625829703557649'),                       // (1129): 73 ^ 10
    (Info: triOk;            Val: '313726685568359708377'),                     // (1130): 73 ^ 11
    (Info: triOk;            Val: '22902048046490258711521'),                   // (1131): 73 ^ 12
    (Info: triOk;            Val: '1671849507393788885941033'),                 // (1132): 73 ^ 13
    (Info: triOk;            Val: '122045014039746588673695409'),               // (1133): 73 ^ 14
    (Info: triOk;            Val: '8909286024901500973179764857'),              // (1134): 73 ^ 15
    (Info: triOk;            Val: '18469587772135192290560825407466407201'),    // (1135): 73 ^ 20
    (Info: triOk;            Val: '3828877774483362409315424919085125887016' + 
                                  '3741193'),                                   // (1136): 73 ^ 25
    (Info: triOk;            Val: '7937537747350518861875845976479698025202' + 
                                  '5727125812230449'),                          // (1137): 73 ^ 30
    (Info: triOk;            Val: '5794402555565878769169367562830179558397' + 
                                  '878080184292822777'),                        // (1138): 73 ^ 31
    (Info: triOk;            Val: '4229913865563091501493638320866031077630' + 
                                  '45099853453376062721'),                      // (1139): 73 ^ 32
    (Info: triOk;            Val: '3087837121861056796090355974232202686670' + 
                                  '2292289302096452578633'),                    // (1140): 73 ^ 33
    (Info: triOk;            Val: '1645508402239757166636550698668340811726' + 
                                  '56515609690871995791535257'),                // (1141): 73 ^ 35
    (Info: triOk;            Val: '3411256724726058157372400608913640265232' + 
                                  '90350856811222245874647291144654401'),       // (1142): 73 ^ 40
    (Info: triOk;            Val: '1466030501193266624786348127484078622417' + 
                                  '2786008126039922941335120548122165258780' + 
                                  '74998285063249'),                            // (1143): 73 ^ 50
    (Info: triOk;            Val: '6300450549061434940347287680426209289835' + 
                                  '4855712602865353975103009677185357197511' + 
                                  '04212854744630240176552282741601'),          // (1144): 73 ^ 60
    (Info: triOk;            Val: '2707697901841638468337800008869036773652' + 
                                  '4057077743641321754572213643058502113391' + 
                                  '9288011458740932693169351576321358593834' + 
                                  '93074056049'),                               // (1145): 73 ^ 70
    (Info: triOk;            Val: '1976619468344396081886594006474396844766' + 
                                  '2561666752858164880837715959432706542776' + 
                                  '1080248364880880866013626650714591773499' + 
                                  '4994406091577'),                             // (1146): 73 ^ 71
    (Info: triOk;            Val: '1442932211891409139777213624726309696679' + 
                                  '3670016729586460363011532650385875776226' + 
                                  '5588581306363043032189947455021651994654' + 
                                  '634591644685121'),                           // (1147): 73 ^ 72
    (Info: triOk;            Val: '1053340514680728672037365946050206078575' + 
                                  '9379112212598116064998418834781689316645' + 
                                  '3879664353645021413498661642165805956097' + 
                                  '88325190062013833'),                         // (1148): 73 ^ 73
    (Info: triOk;            Val: '7689385757169319305872771406166504373604' + 
                                  '3467519151966247274488457493906332011511' + 
                                  '3321549781608656318540229987810383479514' + 
                                  '547738874527009809'),                        // (1149): 73 ^ 74
    (Info: triOk;            Val: '5613251602733603093287123126501548192731' + 
                                  '1731288980935360510376573970551622368403' + 
                                  '2724731340574319112534367891101579940045' + 
                                  '61984937840471716057'),                      // (1150): 73 ^ 75
    (Info: triOk;            Val: '5001006405849044201675335231017200556393' + 
                                  '3764276946623085262263469298913153557659' + 
                                  '1107388567422553628746581478042965004707' + 
                                  '2338755801681283013453988281594115103105' + 
                                  '31208849'),                                  // (1151): 73 ^ 90
    (Info: triOk;            Val: '2149245430428980534561569914848098377085' + 
                                  '0679122197947501195952376101840232523576' + 
                                  '6051660684639342303906427527610780645745' + 
                                  '1768466538198307146789480826629151772657' + 
                                  '629293277672358059930436001'),               // (1152): 73 ^ 100
    (Info: triOk;            Val: '9236652676183927357626636663203419571933' + 
                                  '4278760775804965192704978356039859770863' + 
                                  '1683897315583881438671216626019351229322' + 
                                  '4943865274068013128067736897996818690848' + 
                                  '3462407323249424896640401300599284854085' + 
                                  '21649'),                                     // (1153): 73 ^ 110
    (Info: triOk;            Val: '1854960897563568558808060506562856584758' + 
                                  '1464271087733788676240435221369876344270' + 
                                  '1247390061908399618471657608673317556470' + 
                                  '4214531940990461663063053126629821174135' + 
                                  '7401064359605920554299906449148576232883' + 
                                  '5731141809645861423667392182885013663413' + 
                                  '9112122083406172678247170486485997883038' + 
                                  '34066218843161337'),                         // (1154): 73 ^ 159
    (Info: triOk;            Val: '1354121455221405047929884169790885306873' + 
                                  '4468917894045665733655517711600009731317' + 
                                  '1910594745193131721484310054331521816223' + 
                                  '4076608316923037014036028782439769457119' + 
                                  '0902776982512322004638931707878460650005' + 
                                  '0083733521041478839277196293506059974292' + 
                                  '1551849120886506055120434455134778454617' + 
                                  '9886833975550777601'),                       // (1155): 73 ^ 160
    (Info: triOk;            Val: '9885086623116256849888154439473462740176' + 
                                  '1623100626533359855685279294680071038615' + 
                                  '4947341639909861566835463396620109258430' + 
                                  '8759240713538170202463010111810317036969' + 
                                  '3590271972339950633864201467512762745036' + 
                                  '5611254703602795526723532942594237812332' + 
                                  '7328498582471494202379171522483882718711' + 
                                  '31738880215206764873'),                      // (1156): 73 ^ 161
    (Info: triOk;            Val: '7216113234874867500418352740815627800328' + 
                                  '5984863457369352694650253885116451858189' + 
                                  '3111559397134198943789888279532679758654' + 
                                  '5394245720882864247797997381621531436987' + 
                                  '6320898539808163962720867071284316803876' + 
                                  '6896215933630040734508179048093793603002' + 
                                  '8949803965204190767736795211413234384659' + 
                                  '2616938255710093835729'),                    // (1157): 73 ^ 162
    (Info: triOk;            Val: '5267762661458653275305397500795408294239' + 
                                  '8768950323879627467094685336135009856478' + 
                                  '1971438359907965228966618444058856223817' + 
                                  '8137799376244490900892538088583717949000' + 
                                  '9714255934059959692786232962037551266829' + 
                                  '9834237631549929736190970705108469330192' + 
                                  '1133356894599059260447860504331661100801' + 
                                  '261036492666836850008217'),                  // (1158): 73 ^ 163
    (Info: triOk;            Val: '3845466742864816890972940175580648054795' + 
                                  '1101333736432128050979120295378557195229' + 
                                  '0839150002732814617145631464162965043387' + 
                                  '0040593544658478357651552804666114102770' + 
                                  '7091406831863770575733950062287412424785' + 
                                  '8878993471031448707419408614729182611040' + 
                                  '2427350533057313260126938168162112603584' + 
                                  '92055663964679090050599841'),                // (1159): 73 ^ 164
    (Info: triOk;            Val: '74'),                                        // (1160): 74 ^ 1
    (Info: triOk;            Val: '5476'),                                      // (1161): 74 ^ 2
    (Info: triOk;            Val: '405224'),                                    // (1162): 74 ^ 3
    (Info: triOk;            Val: '29986576'),                                  // (1163): 74 ^ 4
    (Info: triOk;            Val: '2219006624'),                                // (1164): 74 ^ 5
    (Info: triOk;            Val: '164206490176'),                              // (1165): 74 ^ 6
    (Info: triOk;            Val: '12151280273024'),                            // (1166): 74 ^ 7
    (Info: triOk;            Val: '899194740203776'),                           // (1167): 74 ^ 8
    (Info: triOk;            Val: '66540410775079424'),                         // (1168): 74 ^ 9
    (Info: triOk;            Val: '4923990397355877376'),                       // (1169): 74 ^ 10
    (Info: triOk;            Val: '364375289404334925824'),                     // (1170): 74 ^ 11
    (Info: triOk;            Val: '26963771415920784510976'),                   // (1171): 74 ^ 12
    (Info: triOk;            Val: '1995319084778138053812224'),                 // (1172): 74 ^ 13
    (Info: triOk;            Val: '147653612273582215982104576'),               // (1173): 74 ^ 14
    (Info: triOk;            Val: '10926367308245083982675738624'),             // (1174): 74 ^ 15
    (Info: triOk;            Val: '24245681433252891172993765250748645376'),    // (1175): 74 ^ 20
    (Info: triOk;            Val: '5380132770378197938002429500211226504837' + 
                                  '0970624'),                                   // (1176): 74 ^ 25
    (Info: triOk;            Val: '1193855025546869220961053238906172101339' + 
                                  '78864223965413376'),                         // (1177): 74 ^ 30
    (Info: triOk;            Val: '8834527189046832235111793967905673549914' + 
                                  '435952573440589824'),                        // (1178): 74 ^ 31
    (Info: triOk;            Val: '6537550119894655853982727536250198426936' + 
                                  '68260490434603646976'),                      // (1179): 74 ^ 32
    (Info: triOk;            Val: '4837787088722045331947218376825146835933' + 
                                  '1451276292160669876224'),                    // (1180): 74 ^ 33
    (Info: triOk;            Val: '2649172209784192023774296783149450407356' + 
                                  '99027188975871828242202624'),                // (1181): 74 ^ 35
    (Info: triOk;            Val: '5878530681627839711243130042750522035884' + 
                                  '65974602693559363044437899006181376'),       // (1182): 74 ^ 40
    (Info: triOk;            Val: '2894582862689738313972963226771157278907' + 
                                  '3777593809900315442694753371897788699575' + 
                                  '19107870949376'),                            // (1183): 74 ^ 50
    (Info: triOk;            Val: '1425289822023515760223443421955867404600' + 
                                  '4391144544229323725976093648682656842120' + 
                                  '149603361288974276116682559717376'),         // (1184): 74 ^ 60
    (Info: triOk;            Val: '7018113397092859113419625783026474276747' + 
                                  '9907013098970136790547592247541009237469' + 
                                  '4115408365109484492348715186616429172154' + 
                                  '55072485376'),                               // (1185): 74 ^ 70
    (Info: triOk;            Val: '5193403913848715743930523079439590964793' + 
                                  '5131189693237901225005218263180346835727' + 
                                  '3645402190181018524338049238096157587394' + 
                                  '3675363917824'),                             // (1186): 74 ^ 71
    (Info: triOk;            Val: '3843118896248049650508587078785297313947' + 
                                  '1997080372996046906503861514753456658438' + 
                                  '2497597620733953708010156436191156614671' + 
                                  '831976929918976'),                           // (1187): 74 ^ 72
    (Info: triOk;            Val: '2843907983223556741376354438301120012320' + 
                                  '9277839476017074710812857520917557927244' + 
                                  '3048222239343125743927515762781455894857' + 
                                  '15566292814004224'),                         // (1188): 74 ^ 73
    (Info: triOk;            Val: '2104491907585431988618502284342828809117' + 
                                  '4865601212252635286001514565478992866160' + 
                                  '7855684457113913050506361664458277362194' + 
                                  '2951905668236312576'),                       // (1189): 74 ^ 74
    (Info: triOk;            Val: '1557324011613219671577691690413693318746' + 
                                  '9400544897066950111641120778454454720958' + 
                                  '9813206498264295657374707631699125248023' + 
                                  '778441019449487130624'),                     // (1190): 74 ^ 75
    (Info: triOk;            Val: '1701589416883577093123171337392010565643' + 
                                  '1129814273748287716395220686973485776969' + 
                                  '6050816232876896421042824481735510115051' + 
                                  '0575793739189996455462382009371037735921' + 
                                  '570021376'),                                 // (1191): 74 ^ 90
    (Info: triOk;            Val: '8378609948977120450257567916898288910098' + 
                                  '7058531997798100929832012436356950276435' + 
                                  '4606826767340435703992971303166665260596' + 
                                  '3659512970709038830180971512907807197807' + 
                                  '005050275258007279554789376'),               // (1192): 74 ^ 100
    (Info: triOk;            Val: '4125619493195375879295005210925607041346' + 
                                  '5173059499234847444911802599649797353202' + 
                                  '4782255511629066965790500200932296678350' + 
                                  '4261760895937734831436511510005551793547' + 
                                  '3552882355342546252590774676418479163363' + 
                                  '557376'),                                    // (1193): 74 ^ 110
    (Info: triOk;            Val: '1613776686889467360971090853873127741664' + 
                                  '7875133993871499950639439184135350804517' + 
                                  '8309387691270304505541944623869397589612' + 
                                  '6613173014559510892476292273416180483944' + 
                                  '4056595155814427012326068700317865320177' + 
                                  '7366684577079918402799380570727513502253' + 
                                  '6911476586999230637798611988480827285738' + 
                                  '665017237699559424'),                        // (1194): 74 ^ 159
    (Info: triOk;            Val: '1194194748298205847118607231866114528831' + 
                                  '9427599155464909963473184996260159595343' + 
                                  '1948946891540025334101039021663354216313' + 
                                  '3693748030774038060432456282327973558118' + 
                                  '8601880415302675989121290838235220336931' + 
                                  '5251346587039139618071541622338359991667' + 
                                  '7314492674379430671970972871475812191446' + 
                                  '61211275589767397376'),                      // (1195): 74 ^ 160
    (Info: triOk;            Val: '8837041137406723268677693515809247513356' + 
                                  '3764233750440333729701568972325181005539' + 
                                  '6422206997396187472347688760308821200718' + 
                                  '9333735427727881647200176489227004330079' + 
                                  '5653915073239802319497552202940630493293' + 
                                  '2859964744089633173729408005303863938341' + 
                                  '2127245790407786972585199248921010216704' + 
                                  '929634393642787405824'),                     // (1196): 74 ^ 161
    (Info: triOk;            Val: '6539410441680975218821493201698843159883' + 
                                  '7185532975325846959979161039520633944099' + 
                                  '3352433178073178729537289682628527688532' + 
                                  '0106964216518632418928130602027983204258' + 
                                  '8783897154197453716428188630176066565037' + 
                                  '0316373910626328548559761923924859314372' + 
                                  '4974161884901762359713047444201547560361' + 
                                  '64792945129566268030976'),                   // (1197): 74 ^ 162
    (Info: triOk;            Val: '4839163726843921661927904969257143938313' + 
                                  '9517294401741126750384579169245269118633' + 
                                  '5080800551774152259857594365145110489513' + 
                                  '6879153520223787990006816645500707571151' + 
                                  '5700083894106115750156859586330289258127' + 
                                  '4034116693863483125934223823704395892635' + 
                                  '6480879794827304146187655108709145194667' + 
                                  '6194677939587903834292224'),                 // (1198): 74 ^ 163
    (Info: triOk;            Val: '3580981157864502029826649677250286514352' + 
                                  '3242797857288433795284588585241499147788' + 
                                  '7959792408312872672294619830207381762240' + 
                                  '1290573604965603112605044317670523602652' + 
                                  '1618062081638525655116076093884414051014' + 
                                  '2785246353458977513191325629541252960550' + 
                                  '3795851048172205068178864780444767444054' + 
                                  '038406167529504883737624576'),               // (1199): 74 ^ 164
    (Info: triOk;            Val: '75'),                                        // (1200): 75 ^ 1
    (Info: triOk;            Val: '5625'),                                      // (1201): 75 ^ 2
    (Info: triOk;            Val: '421875'),                                    // (1202): 75 ^ 3
    (Info: triOk;            Val: '31640625'),                                  // (1203): 75 ^ 4
    (Info: triOk;            Val: '2373046875'),                                // (1204): 75 ^ 5
    (Info: triOk;            Val: '177978515625'),                              // (1205): 75 ^ 6
    (Info: triOk;            Val: '13348388671875'),                            // (1206): 75 ^ 7
    (Info: triOk;            Val: '1001129150390625'),                          // (1207): 75 ^ 8
    (Info: triOk;            Val: '75084686279296875'),                         // (1208): 75 ^ 9
    (Info: triOk;            Val: '5631351470947265625'),                       // (1209): 75 ^ 10
    (Info: triOk;            Val: '422351360321044921875'),                     // (1210): 75 ^ 11
    (Info: triOk;            Val: '31676352024078369140625'),                   // (1211): 75 ^ 12
    (Info: triOk;            Val: '2375726401805877685546875'),                 // (1212): 75 ^ 13
    (Info: triOk;            Val: '178179480135440826416015625'),               // (1213): 75 ^ 14
    (Info: triOk;            Val: '13363461010158061981201171875'),             // (1214): 75 ^ 15
    (Info: triOk;            Val: '31712119389339932240545749664306640625'),    // (1215): 75 ^ 20
    (Info: triOk;            Val: '7525434581650003451613883953541517257690' + 
                                  '4296875'),                                   // (1216): 75 ^ 25
    (Info: triOk;            Val: '1785820901700147303459154102256434271112' + 
                                  '08438873291015625'),                         // (1217): 75 ^ 30
    (Info: triOk;            Val: '1339365676275110477594365576692325703334' + 
                                  '0632915496826171875'),                       // (1218): 75 ^ 31
    (Info: triOk;            Val: '1004524257206332858195774182519244277500' + 
                                  '547468662261962890625'),                     // (1219): 75 ^ 32
    (Info: triOk;            Val: '7533931929047496436468306368894332081254' + 
                                  '1060149669647216796875'),                    // (1220): 75 ^ 33
    (Info: triOk;            Val: '4237836710089216745513422332503061795705' + 
                                  '43463341891765594482421875'),                // (1221): 75 ^ 35
    (Info: triOk;            Val: '1005658516163749676913829713670160172223' + 
                                  '067007735153310932219028472900390625'),      // (1222): 75 ^ 40
    (Info: triOk;            Val: '5663216564269376246651146961451462555847' + 
                                  '1568813088481766926385319038672605529427' + 
                                  '52838134765625'),                            // (1223): 75 ^ 50
    (Info: triOk;            Val: '3189156292949127178082500237719987988092' + 
                                  '6014584007852171470986620940347468222686' + 
                                  '444505598046816885471343994140625'),         // (1224): 75 ^ 60
    (Info: triOk;            Val: '1795925998137979609857497754451060969437' + 
                                  '4086715422436360103514566229882980833829' + 
                                  '9928818803698205019969691420556046068668' + 
                                  '365478515625'),                              // (1225): 75 ^ 70
    (Info: triOk;            Val: '1346944498603484707393123315838295727078' + 
                                  '0565036566827270077635924672412235625372' + 
                                  '4946614102773653764977268565417034551501' + 
                                  '27410888671875'),                            // (1226): 75 ^ 71
    (Info: triOk;            Val: '1010208373952613530544842486878721795308' + 
                                  '5423777425120452558226943504309176719029' + 
                                  '3709960577080240323732951424062775913625' + 
                                  '9555816650390625'),                          // (1227): 75 ^ 72
    (Info: triOk;            Val: '7576562804644601479086318651590413464814' + 
                                  '0678330688403394186702076282318825392720' + 
                                  '2824704328101802427997135680470819352194' + 
                                  '66686248779296875'),                         // (1228): 75 ^ 73
    (Info: triOk;            Val: '5682422103483451109314738988692810098610' + 
                                  '5508748016302545640026557211739119044540' + 
                                  '2118528246076351820997851760353114514146' + 
                                  '0001468658447265625'),                       // (1229): 75 ^ 74
    (Info: triOk;            Val: '4261816577612588331986054241519607573957' + 
                                  '9131561012226909230019917908804339283405' + 
                                  '1588896184557263865748388820264835885609' + 
                                  '500110149383544921875'),                     // (1230): 75 ^ 75
    (Info: triOk;            Val: '5695261966737109423145001531440800778122' + 
                                  '4062471625327112473454085199261824188197' + 
                                  '7085235862514657469846691617911667143262' + 
                                  '3039369493034289604338482604362070560455' + 
                                  '322265625'),                                 // (1231): 75 ^ 90
    (Info: triOk;            Val: '3207202185381503814003841356564024402116' + 
                                  '2983559484519392628145125169098009648217' + 
                                  '0723973202186851586694500859699879008698' + 
                                  '4232442180578057926622229188012846989863' + 
                                  '6467405594885349273681640625'),              // (1232): 75 ^ 100
    (Info: triOk;            Val: '1806088274427341639643791468274584550099' + 
                                  '9956285514844757225984015427685435979057' + 
                                  '0250319420012773507525668919223958545538' + 
                                  '2651724608621156144229087937574106234592' + 
                                  '9954183892940378086677810642868280410766' + 
                                  '6015625'),                                   // (1233): 75 ^ 110
    (Info: triOk;            Val: '1363769204302615475813803051406362106626' + 
                                  '2372865019251815054923729105999693108063' + 
                                  '1904490877700460263058114304625492429505' + 
                                  '4164274585428346156094196086237734824863' + 
                                  '3665288167380284703249401295535578377052' + 
                                  '9263017590056022620451848280935399027545' + 
                                  '3173497832144538382398435416575921408366' + 
                                  '4119243621826171875'),                       // (1234): 75 ^ 159
    (Info: triOk;            Val: '1022826903226961606860352288554771579969' + 
                                  '6779648764438861291192796829499769831047' + 
                                  '3928368158275345197293585728469119322129' + 
                                  '0623205939071259617070647064678301118647' + 
                                  '5248966125535213527437050971651683782789' + 
                                  '6947263192542016965338886210701549270658' + 
                                  '9880123374108403786798826562431941056274' + 
                                  '808943271636962890625'),                     // (1235): 75 ^ 160
    (Info: triOk;            Val: '7671201774202212051452642164160786849772' + 
                                  '5847365733291459683945976221248273732855' + 
                                  '4462761187065088979701892963518394915967' + 
                                  '9674044543034447128029852985087258389856' + 
                                  '4367245941514101455777882287387628370922' + 
                                  '7104473944065127240041646580261619529942' + 
                                  '4100925305813028400991199218239557922061' + 
                                  '0670745372772216796875'),                    // (1236): 75 ^ 161
    (Info: triOk;            Val: '5753401330651659038589481623120590137329' + 
                                  '4385524299968594762959482165936205299641' + 
                                  '5847070890298816734776419722638796186975' + 
                                  '9755533407275835346022389738815443792392' + 
                                  '3275434456135576091833411715540721278192' + 
                                  '0328355458048845430031234935196214647456' + 
                                  '8075693979359771300743399413679668441545' + 
                                  '800305902957916259765625'),                  // (1237): 75 ^ 162
    (Info: triOk;            Val: '4315050997988744278942111217340442602997' + 
                                  '0789143224976446072219611624452153974731' + 
                                  '1885303167724112551082314791979097140231' + 
                                  '9816650055456876509516792304111582844294' + 
                                  '2456575842101682068875058786655540958644' + 
                                  '0246266593536634072523426201397160985592' + 
                                  '6056770484519828475557549560259751331159' + 
                                  '35022942721843719482421875'),                // (1238): 75 ^ 163
    (Info: triOk;            Val: '3236288248491558209206583413005331952247' + 
                                  '8091857418732334554164708718339115481048' + 
                                  '3913977375793084413311736093984322855173' + 
                                  '9862487541592657382137594228083687133220' + 
                                  '6842431881576261551656294089991655718983' + 
                                  '0184699945152475554392569651047870739194' + 
                                  '4542577863389871356668162170194813498369' + 
                                  '5126720704138278961181640625'),              // (1239): 75 ^ 164
    (Info: triOk;            Val: '90'),                                        // (1240): 90 ^ 1
    (Info: triOk;            Val: '8100'),                                      // (1241): 90 ^ 2
    (Info: triOk;            Val: '729000'),                                    // (1242): 90 ^ 3
    (Info: triOk;            Val: '65610000'),                                  // (1243): 90 ^ 4
    (Info: triOk;            Val: '5904900000'),                                // (1244): 90 ^ 5
    (Info: triOk;            Val: '531441000000'),                              // (1245): 90 ^ 6
    (Info: triOk;            Val: '47829690000000'),                            // (1246): 90 ^ 7
    (Info: triOk;            Val: '4304672100000000'),                          // (1247): 90 ^ 8
    (Info: triOk;            Val: '387420489000000000'),                        // (1248): 90 ^ 9
    (Info: triOk;            Val: '34867844010000000000'),                      // (1249): 90 ^ 10
    (Info: triOk;            Val: '3138105960900000000000'),                    // (1250): 90 ^ 11
    (Info: triOk;            Val: '282429536481000000000000'),                  // (1251): 90 ^ 12
    (Info: triOk;            Val: '25418658283290000000000000'),                // (1252): 90 ^ 13
    (Info: triOk;            Val: '2287679245496100000000000000'),              // (1253): 90 ^ 14
    (Info: triOk;            Val: '205891132094649000000000000000'),            // (1254): 90 ^ 15
    (Info: triOk;            Val: '1215766545905692880100000000000000000000'),  // (1255): 90 ^ 20
    (Info: triOk;            Val: '7178979876918525887702490000000000000000' + 
                                  '000000000'),                                 // (1256): 90 ^ 25
    (Info: triOk;            Val: '4239115827521620351429443320100000000000' + 
                                  '0000000000000000000'),                       // (1257): 90 ^ 30
    (Info: triOk;            Val: '3815204244769458316286498988090000000000' + 
                                  '000000000000000000000'),                     // (1258): 90 ^ 31
    (Info: triOk;            Val: '3433683820292512484657849089281000000000' + 
                                  '00000000000000000000000'),                   // (1259): 90 ^ 32
    (Info: triOk;            Val: '3090315438263261236192064180352900000000' + 
                                  '0000000000000000000000000'),                 // (1260): 90 ^ 33
    (Info: triOk;            Val: '2503155504993241601315571986085849000000' + 
                                  '00000000000000000000000000000'),             // (1261): 90 ^ 35
    (Info: triOk;            Val: '1478088294143459233160832102063832976010' + 
                                  '000000000000000000000000000000000000000'),   // (1262): 90 ^ 40
    (Info: triOk;            Val: '5153775207320113310364611297656212727021' + 
                                  '0752200100000000000000000000000000000000' + 
                                  '000000000000000000'),                        // (1263): 90 ^ 50
    (Info: triOk;            Val: '1797010299914431210413179829509605039731' + 
                                  '4756275378511064010000000000000000000000' + 
                                  '00000000000000000000000000000000000000'),    // (1264): 90 ^ 60
    (Info: triOk;            Val: '6265787482177970379256224194341930332206' + 
                                  '6944468106652748595980508010000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000'),                         // (1265): 90 ^ 70
    (Info: triOk;            Val: '5639208733960173341330601774907737298986' + 
                                  '0250021295987473736382457209000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000'),                       // (1266): 90 ^ 71
    (Info: triOk;            Val: '5075287860564156007197541597416963569087' + 
                                  '4225019166388726362744211488100000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1267): 90 ^ 72
    (Info: triOk;            Val: '4567759074507740406477787437675267212178' + 
                                  '6802517249749853726469790339290000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1268): 90 ^ 73
    (Info: triOk;            Val: '4110983167056966365830008693907740490960' + 
                                  '8122265524774868353822811305361000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1269): 90 ^ 74
    (Info: triOk;            Val: '3699884850351269729247007824516966441864' + 
                                  '7310038972297381518440530174824900000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (1270): 90 ^ 75
    (Info: triOk;            Val: '7617734804586639233928972772061556175042' + 
                                  '4801402395196724001565744957137343033038' + 
                                  '0196010000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000'),                          // (1271): 90 ^ 90
    (Info: triOk;            Val: '2656139888758747693387813220357796268292' + 
                                  '3345265339449597457496173909249090130218' + 
                                  '2994384699044001000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000'),      // (1272): 90 ^ 100
    (Info: triOk;            Val: '9261387130997876709599357980245139667017' + 
                                  '7229349922798826340526919703952917089488' + 
                                  '2252068039219702299428401000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000'),                           // (1273): 90 ^ 110
    (Info: triOk;            Val: '5303456375681156827627538928679604521291' + 
                                  '3872559915390427787289793974665208946312' + 
                                  '0510185302371378198045283415364633663044' + 
                                  '8589803873581217940759387019448900000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1274): 90 ^ 159
    (Info: triOk;            Val: '4773110738113041144864785035811644069162' + 
                                  '2485303923851385008560814577198688051680' + 
                                  '8459166772134240378240755073828170296740' + 
                                  '3730823486223096146683448317504010000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000'),         // (1275): 90 ^ 160
    (Info: triOk;            Val: '4295799664301737030378306532230479662246' + 
                                  '0236773531466246507704733119478819246512' + 
                                  '7613250094920816340416679566445353267066' + 
                                  '3357741137600786532015103485753609000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000'),       // (1276): 90 ^ 161
    (Info: triOk;            Val: '3866219697871563327340475879007431696021' + 
                                  '4213096178319621856934259807530937321861' + 
                                  '4851925085428734706375011609800817940359' + 
                                  '7021967023840707878813593137178248100000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000'),     // (1277): 90 ^ 162
    (Info: triOk;            Val: '3479597728084406994606428291106688526419' + 
                                  '2791786560487659671240833826777843589675' + 
                                  '3366732576885861235737510448820736146323' + 
                                  '7319770321456637090932233823460423290000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (1278): 90 ^ 163
    (Info: triOk;            Val: '3131637955275966295145785461996019673777' + 
                                  '3512607904438893704116750444100059230707' + 
                                  '8030059319197275112163759403938662531691' + 
                                  '3587793289310973381839010441114380961000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1279): 90 ^ 164
    (Info: triOk;            Val: '100'),                                       // (1280): 100 ^ 1
    (Info: triOk;            Val: '10000'),                                     // (1281): 100 ^ 2
    (Info: triOk;            Val: '1000000'),                                   // (1282): 100 ^ 3
    (Info: triOk;            Val: '100000000'),                                 // (1283): 100 ^ 4
    (Info: triOk;            Val: '10000000000'),                               // (1284): 100 ^ 5
    (Info: triOk;            Val: '1000000000000'),                             // (1285): 100 ^ 6
    (Info: triOk;            Val: '100000000000000'),                           // (1286): 100 ^ 7
    (Info: triOk;            Val: '10000000000000000'),                         // (1287): 100 ^ 8
    (Info: triOk;            Val: '1000000000000000000'),                       // (1288): 100 ^ 9
    (Info: triOk;            Val: '100000000000000000000'),                     // (1289): 100 ^ 10
    (Info: triOk;            Val: '10000000000000000000000'),                   // (1290): 100 ^ 11
    (Info: triOk;            Val: '1000000000000000000000000'),                 // (1291): 100 ^ 12
    (Info: triOk;            Val: '100000000000000000000000000'),               // (1292): 100 ^ 13
    (Info: triOk;            Val: '10000000000000000000000000000'),             // (1293): 100 ^ 14
    (Info: triOk;            Val: '1000000000000000000000000000000'),           // (1294): 100 ^ 15
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1295): 100 ^ 20
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (1296): 100 ^ 25
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1297): 100 ^ 30
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1298): 100 ^ 31
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1299): 100 ^ 32
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (1300): 100 ^ 33
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1301): 100 ^ 35
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1302): 100 ^ 40
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1303): 100 ^ 50
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1304): 100 ^ 60
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1305): 100 ^ 70
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1306): 100 ^ 71
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1307): 100 ^ 72
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (1308): 100 ^ 73
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000'),             // (1309): 100 ^ 74
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1310): 100 ^ 75
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1311): 100 ^ 90
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1312): 100 ^ 100
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1313): 100 ^ 110
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (1314): 100 ^ 159
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1315): 100 ^ 160
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (1316): 100 ^ 161
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (1317): 100 ^ 162
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (1318): 100 ^ 163
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (1319): 100 ^ 164
    (Info: triOk;            Val: '110'),                                       // (1320): 110 ^ 1
    (Info: triOk;            Val: '12100'),                                     // (1321): 110 ^ 2
    (Info: triOk;            Val: '1331000'),                                   // (1322): 110 ^ 3
    (Info: triOk;            Val: '146410000'),                                 // (1323): 110 ^ 4
    (Info: triOk;            Val: '16105100000'),                               // (1324): 110 ^ 5
    (Info: triOk;            Val: '1771561000000'),                             // (1325): 110 ^ 6
    (Info: triOk;            Val: '194871710000000'),                           // (1326): 110 ^ 7
    (Info: triOk;            Val: '21435888100000000'),                         // (1327): 110 ^ 8
    (Info: triOk;            Val: '2357947691000000000'),                       // (1328): 110 ^ 9
    (Info: triOk;            Val: '259374246010000000000'),                     // (1329): 110 ^ 10
    (Info: triOk;            Val: '28531167061100000000000'),                   // (1330): 110 ^ 11
    (Info: triOk;            Val: '3138428376721000000000000'),                 // (1331): 110 ^ 12
    (Info: triOk;            Val: '345227121439310000000000000'),               // (1332): 110 ^ 13
    (Info: triOk;            Val: '37974983358324100000000000000'),             // (1333): 110 ^ 14
    (Info: triOk;            Val: '4177248169415651000000000000000'),           // (1334): 110 ^ 15
    (Info: triOk;            Val: '6727499949325600092010000000000000000000' + 
                                  '0'),                                         // (1335): 110 ^ 20
    (Info: triOk;            Val: '1083470594338837220418302510000000000000' + 
                                  '000000000000'),                              // (1336): 110 ^ 25
    (Info: triOk;            Val: '1744940226888640731855880375380100000000' + 
                                  '0000000000000000000000'),                    // (1337): 110 ^ 30
    (Info: triOk;            Val: '1919434249577504805041468412918110000000' + 
                                  '000000000000000000000000'),                  // (1338): 110 ^ 31
    (Info: triOk;            Val: '2111377674535255285545615254209921000000' + 
                                  '00000000000000000000000000'),                // (1339): 110 ^ 32
    (Info: triOk;            Val: '2322515441988780814100176779630913100000' + 
                                  '0000000000000000000000000000'),              // (1340): 110 ^ 33
    (Info: triOk;            Val: '2810243684806424785061213903353404851000' + 
                                  '00000000000000000000000000000000'),          // (1341): 110 ^ 35
    (Info: triOk;            Val: '4525925556817595180588935603489692046584' + 
                                  '0100000000000000000000000000000000000000' + 
                                  '00'),                                        // (1342): 110 ^ 40
    (Info: triOk;            Val: '1173908528796953165066664959903583199389' + 
                                  '8213898723001000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1343): 110 ^ 50
    (Info: triOk;            Val: '3044816395414180995744492953602787746390' + 
                                  '3841506669808862194760100000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (1344): 110 ^ 60
    (Info: triOk;            Val: '7897469567994392174328988784504809847540' + 
                                  '7298819350240596625818947103322010000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000'),                   // (1345): 110 ^ 70
    (Info: triOk;            Val: '8687216524793831391761887662955290832294' + 
                                  '8028701285264656288400841813654211000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1346): 110 ^ 71
    (Info: triOk;            Val: '9555938177273214530938076429250819915524' + 
                                  '2831571413791121917240925995019632100000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000'),               // (1347): 110 ^ 72
    (Info: triOk;            Val: '1051153199500053598403188407217590190707' + 
                                  '6711472855517023410896501859452159531000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000'),            // (1348): 110 ^ 73
    (Info: triOk;            Val: '1156268519450058958243507247939349209778' + 
                                  '4382620141068725751986152045397375484100' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000'),          // (1349): 110 ^ 74
    (Info: triOk;            Val: '1271895371395064854067857972733284130756' + 
                                  '2820882155175598327184767249937113032510' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000'),        // (1350): 110 ^ 75
    (Info: triOk;            Val: '5313022611848274220306942020010322294782' + 
                                  '9982204787466104474392924539783646472402' + 
                                  '0459432658140100000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000'),                  // (1351): 110 ^ 90
    (Info: triOk;            Val: '1378061233982227018411833717208963677626' + 
                                  '4331200038466433146477552154985209552307' + 
                                  '6769401159497458526446001000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (1352): 110 ^ 100
    (Info: triOk;            Val: '3574335935197503226412197580625705154978' + 
                                  '3279694668957140940616869775897393903316' + 
                                  '5336187723838730558081771543547060100000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000'),                 // (1353): 110 ^ 110
    (Info: triOk;            Val: '3814494035557984307599965128460248566762' + 
                                  '2958138461557962902260069855121722497621' + 
                                  '0651643354916478758908809513449529839058' + 
                                  '1183490966962311944860732520308915106670' + 
                                  '7266910000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000'),                                     // (1354): 110 ^ 159
    (Info: triOk;            Val: '4195943439113782738359961641306273423438' + 
                                  '5253952307713759192486076840633894747383' + 
                                  '1716807690408126634799690464794482822963' + 
                                  '9301840063658543139346805772339806617337' + 
                                  '7993601000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000'),                                   // (1355): 110 ^ 160
    (Info: triOk;            Val: '4615537783025161012195957805436900765782' + 
                                  '3779347538485135111734684524697284222121' + 
                                  '4888488459448939298279659511273931105260' + 
                                  '3232024070024397453281486349573787279071' + 
                                  '5792961100000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000'),                                 // (1356): 110 ^ 161
    (Info: triOk;            Val: '5077091561327677113415553585980590842360' + 
                                  '6157282292333648622908152977167012644333' + 
                                  '6377337305393833228107625462401324215786' + 
                                  '3555226477026837198609634984531166006978' + 
                                  '7372257210000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000'),                               // (1357): 110 ^ 162
    (Info: triOk;            Val: '5584800717460444824757108944578649926596' + 
                                  '6773010521567013485198968274883713908767' + 
                                  '0015071035933216550918388008641456637364' + 
                                  '9910749124729520918470598482984282607676' + 
                                  '6109482931000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (1358): 110 ^ 163
    (Info: triOk;            Val: '6143280789206489307232819839036514919256' + 
                                  '3450311573723714833718865102372085299643' + 
                                  '7016578139526538206010226809505602301101' + 
                                  '4901824037202473010317658331282710868444' + 
                                  '2720431224100000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000'),                           // (1359): 110 ^ 164
    (Info: triOk;            Val: '159'),                                       // (1360): 159 ^ 1
    (Info: triOk;            Val: '25281'),                                     // (1361): 159 ^ 2
    (Info: triOk;            Val: '4019679'),                                   // (1362): 159 ^ 3
    (Info: triOk;            Val: '639128961'),                                 // (1363): 159 ^ 4
    (Info: triOk;            Val: '101621504799'),                              // (1364): 159 ^ 5
    (Info: triOk;            Val: '16157819263041'),                            // (1365): 159 ^ 6
    (Info: triOk;            Val: '2569093262823519'),                          // (1366): 159 ^ 7
    (Info: triOk;            Val: '408485828788939521'),                        // (1367): 159 ^ 8
    (Info: triOk;            Val: '64949246777441383839'),                      // (1368): 159 ^ 9
    (Info: triOk;            Val: '10326930237613180030401'),                   // (1369): 159 ^ 10
    (Info: triOk;            Val: '1641981907780495624833759'),                 // (1370): 159 ^ 11
    (Info: triOk;            Val: '261075123337098804348567681'),               // (1371): 159 ^ 12
    (Info: triOk;            Val: '41510944610598709891422261279'),             // (1372): 159 ^ 13
    (Info: triOk;            Val: '6600240193085194872736139543361'),           // (1373): 159 ^ 14
    (Info: triOk;            Val: '1049438190700545984765046187394399'),        // (1374): 159 ^ 15
    (Info: triOk;            Val: '1066454881325294109627213220197565712842' + 
                                  '20801'),                                     // (1375): 159 ^ 20
    (Info: triOk;            Val: '1083747498405153508415682803573031678157' + 
                                  '1229721797123999'),                          // (1376): 159 ^ 25
    (Info: triOk;            Val: '1101320516100835521017959969101586130288' + 
                                  '230955933937871368776571201'),               // (1377): 159 ^ 30
    (Info: triOk;            Val: '1751099620600328478418556350871521947158' + 
                                  '28721993496121547635474820959'),             // (1378): 159 ^ 31
    (Info: triOk;            Val: '2784248396754522280685504597885719895981' + 
                                  '6766796965883326074040496532481'),           // (1379): 159 ^ 32
    (Info: triOk;            Val: '4426954950839690426289952310638294634610' + 
                                  '865920717575448845772438948664479'),         // (1380): 159 ^ 33
    (Info: triOk;            Val: '1119178481121782136670362843652467266575' + 
                                  '97301341661024922269973029061186693599'),    // (1381): 159 ^ 35
    (Info: triOk;            Val: '1137326013902547143050797515973004890185' + 
                                  '4065388101054982769716666146341950048205' + 
                                  '721081601'),                                 // (1382): 159 ^ 40
    (Info: triOk;            Val: '1174508640299428206266985730049333839293' + 
                                  '6161743434801719310534780554440034742412' + 
                                  '9593079474118737755227781752001'),           // (1383): 159 ^ 50
    (Info: triOk;            Val: '1212906879184610712087424839175569233538' + 
                                  '2827294707806625473915329835604720488469' + 
                                  '4299956776996677728843462090661027986560' + 
                                  '8766222582401'),                             // (1384): 159 ^ 60
    (Info: triOk;            Val: '1252560472606059254478173058967616549056' + 
                                  '8884494424180304909777612747725925017340' + 
                                  '4411313857608660437446984453105883895124' + 
                                  '03665906103570577694215577907572801'),       // (1385): 159 ^ 70
    (Info: triOk;            Val: '1991571151443634214620295163758510313000' + 
                                  '4526346134446684806546404268884220777571' + 
                                  '3013989033597770095540705280438355393247' + 
                                  '2182879070467721853380276887304075359'),     // (1386): 159 ^ 71
    (Info: triOk;            Val: '3166598130795378401246269310376031397670' + 
                                  '7196890353770228842408782787525911036338' + 
                                  '3692242563420454451909721395896985075263' + 
                                  '077077772204367774687464025081347982081'),   // (1387): 159 ^ 72
    (Info: triOk;            Val: '5034891027964651657981568203497889922296' + 
                                  '4443055662494663859429964632166198547778' + 
                                  '0070665675838522578536457019476206269668' + 
                                  '2925536578049447617530677998793432915087' + 
                                  '9'),                                         // (1388): 159 ^ 73
    (Info: triOk;            Val: '8005476734463796136190693443561644976451' + 
                                  '3464458503366515536493643765144255690967' + 
                                  '0312358424583250899872966660967167968772' + 
                                  '5851603159098621711873778018081558334989' + 
                                  '761'),                                       // (1389): 159 ^ 74
    (Info: triOk;            Val: '1272870800779743585654320257526301551255' + 
                                  '7640848902035275970302489358657936654863' + 
                                  '7579664989508736893079801699093779707034' + 
                                  '8410404902296680852187930704874967775263' + 
                                  '371999'),                                    // (1390): 159 ^ 75
    (Info: triOk;            Val: '1335799230165849225804098207400828274003' + 
                                  '2133179552105345028328164497537575644311' + 
                                  '8855381126007280186571593409089429743260' + 
                                  '0829601153360051593343980216270261338734' + 
                                  '363405624295696482600100193616466033601'),   // (1391): 159 ^ 90
    (Info: triOk;            Val: '1379470546138011630730211024107564993413' + 
                                  '2734132598629380733700049053635556007772' + 
                                  '3787345237031505869600477501814483725130' + 
                                  '8165435643499693428022199833663675146113' + 
                                  '0938167005187001759225048622101635667725' + 
                                  '015522054645067504001'),                     // (1392): 159 ^ 100
    (Info: triOk;            Val: '1424569609480939967586368465911999125251' + 
                                  '3661095096709669965151021026959425787889' + 
                                  '5026479389031243731972221154324264508188' + 
                                  '4547807472347269540949118958374660975424' + 
                                  '9491026605337121939260512916678822366048' + 
                                  '8131915247905466231638193853605030369134' + 
                                  '401'),                                       // (1393): 159 ^ 110
    (Info: triOk;            Val: '1052307745310280647874747114665808854460' + 
                                  '4395515985698263015595071245830994856572' + 
                                  '3789886216913245767385285476170267154026' + 
                                  '3492523435590488946355782839106737789448' + 
                                  '1322154396180281120344834504376597806639' + 
                                  '5600688360726051517143658892945804188655' + 
                                  '0820853943227358797155771359972584036086' + 
                                  '5498425690548481860722999976899468314931' + 
                                  '5323493360613807283022727167839'),           // (1394): 159 ^ 159
    (Info: triOk;            Val: '1673169315043346230120847912318636078592' + 
                                  '0988870417260238194796163280871281821950' + 
                                  '0825919084892060770142603907110724774901' + 
                                  '8953112262588877424705694714179713085222' + 
                                  '5302225489926646981348286861958790512556' + 
                                  '9005094493554421912258417639783828659961' + 
                                  '5805157769731500487477676462356408617377' + 
                                  '6142496847972086158549569963270154620741' + 
                                  '136435444337595358000613619686401'),         // (1395): 159 ^ 160
    (Info: triOk;            Val: '2660339210918920505892148180586631364961' + 
                                  '4372303963443778729725899616585338096900' + 
                                  '6313211344978376624526740212306052392094' + 
                                  '0135448497516315105282054595545743805503' + 
                                  '8230538528983368700343776110514476914965' + 
                                  '4718100244751530840490884047256287569338' + 
                                  '9130200853873085775089505575146689701630' + 
                                  '4066569988275616992093816241599545846978' + 
                                  '40693235649677661922097565530137759'),       // (1396): 159 ^ 161
    (Info: triOk;            Val: '4229939345361083604368515607132743870288' + 
                                  '6851963301875608180264180390370687574072' + 
                                  '0038006038515618832997516937566623303429' + 
                                  '4815363111050941017398466806917732650751' + 
                                  '0786556261083556233546604015718018294795' + 
                                  '1001779389154934036380505635137497235248' + 
                                  '8717019357658206382392313864483236625592' + 
                                  '3465846281358231017429167824143277896695' + 
                                  '6670224468298748245613512919291903681'),     // (1397): 159 ^ 162
    (Info: triOk;            Val: '6725603559124122930945939815341062753759' + 
                                  '0094621649982217006620046820689393242774' + 
                                  '4860429601239833944466051930730931052452' + 
                                  '8756427346570996217663562222999194914694' + 
                                  '2150624455122854411339100384991649088724' + 
                                  '2092829228756345117845003959868620604045' + 
                                  '7060060778676548148003779044528346234691' + 
                                  '8310695587359587317712376840387811855746' + 
                                  '110565690459500971052548554167412685279'),   // (1398): 159 ^ 163
    (Info: triOk;            Val: '1069370965900735546020404430639228977847' + 
                                  '6825044842347172504052587444489613525601' + 
                                  '1432808306597133597170102256986218037340' + 
                                  '0072271948104788398608506393456871991436' + 
                                  '3801949288364533851402916961213672205107' + 
                                  '1492759847372258873737355629619110676043' + 
                                  '2672549663809571155532600868080007051316' + 
                                  '0011400598390174383516267917621662085063' + 
                                  '6315799447830606543973552201126186169593' + 
                                  '61'),                                        // (1399): 159 ^ 164
    (Info: triOk;            Val: '160'),                                       // (1400): 160 ^ 1
    (Info: triOk;            Val: '25600'),                                     // (1401): 160 ^ 2
    (Info: triOk;            Val: '4096000'),                                   // (1402): 160 ^ 3
    (Info: triOk;            Val: '655360000'),                                 // (1403): 160 ^ 4
    (Info: triOk;            Val: '104857600000'),                              // (1404): 160 ^ 5
    (Info: triOk;            Val: '16777216000000'),                            // (1405): 160 ^ 6
    (Info: triOk;            Val: '2684354560000000'),                          // (1406): 160 ^ 7
    (Info: triOk;            Val: '429496729600000000'),                        // (1407): 160 ^ 8
    (Info: triOk;            Val: '68719476736000000000'),                      // (1408): 160 ^ 9
    (Info: triOk;            Val: '10995116277760000000000'),                   // (1409): 160 ^ 10
    (Info: triOk;            Val: '1759218604441600000000000'),                 // (1410): 160 ^ 11
    (Info: triOk;            Val: '281474976710656000000000000'),               // (1411): 160 ^ 12
    (Info: triOk;            Val: '45035996273704960000000000000'),             // (1412): 160 ^ 13
    (Info: triOk;            Val: '7205759403792793600000000000000'),           // (1413): 160 ^ 14
    (Info: triOk;            Val: '1152921504606846976000000000000000'),        // (1414): 160 ^ 15
    (Info: triOk;            Val: '1208925819614629174706176000000000000000' + 
                                  '00000'),                                     // (1415): 160 ^ 20
    (Info: triOk;            Val: '1267650600228229401496703205376000000000' + 
                                  '0000000000000000'),                          // (1416): 160 ^ 25
    (Info: triOk;            Val: '1329227995784915872903807060280344576000' + 
                                  '000000000000000000000000000'),               // (1417): 160 ^ 30
    (Info: triOk;            Val: '2126764793255865396646091296448551321600' + 
                                  '00000000000000000000000000000'),             // (1418): 160 ^ 31
    (Info: triOk;            Val: '3402823669209384634633746074317682114560' + 
                                  '0000000000000000000000000000000'),           // (1419): 160 ^ 32
    (Info: triOk;            Val: '5444517870735015415413993718908291383296' + 
                                  '000000000000000000000000000000000'),         // (1420): 160 ^ 33
    (Info: triOk;            Val: '1393796574908163946345982392040522594123' + 
                                  '77600000000000000000000000000000000000'),    // (1421): 160 ^ 35
    (Info: triOk;            Val: '1461501637330902918203684832716283019655' + 
                                  '9325429760000000000000000000000000000000' + 
                                  '000000000'),                                 // (1422): 160 ^ 40
    (Info: triOk;            Val: '1606938044258990275541962092341162602522' + 
                                  '2029937827928353013760000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1423): 160 ^ 50
    (Info: triOk;            Val: '1766847064778384329583297500742918515827' + 
                                  '4838968756189581216062012926197760000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000'),                             // (1424): 160 ^ 60
    (Info: triOk;            Val: '1942668892225729070919461906823518906642' + 
                                  '4068390521395212518124097389042852052084' + 
                                  '9817600000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000'),       // (1425): 160 ^ 70
    (Info: triOk;            Val: '3108270227561166513471139050917630250627' + 
                                  '8509424834232340028998555822468563283335' + 
                                  '9708160000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000'),     // (1426): 160 ^ 71
    (Info: triOk;            Val: '4973232364097866421553822481468208401004' + 
                                  '5615079734771744046397689315949701253337' + 
                                  '5533056000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (1427): 160 ^ 72
    (Info: triOk;            Val: '7957171782556586274486115970349133441607' + 
                                  '2984127575634790474236302905519522005340' + 
                                  '0852889600000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0'),                                         // (1428): 160 ^ 73
    (Info: triOk;            Val: '1273147485209053803917778555255861350657' + 
                                  '1677460412101566475877808464883123520854' + 
                                  '4136462336000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000'),                                      // (1429): 160 ^ 74
    (Info: triOk;            Val: '2037035976334486086268445688409378161051' + 
                                  '4683936659362506361404493543812997633367' + 
                                  '0618339737600000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000'),                                    // (1430): 160 ^ 75
    (Info: triOk;            Val: '2348542582773833227889480596789337027375' + 
                                  '6825489083198707072909715322090251146084' + 
                                  '4346369899838476870303193497600000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000000000'),   // (1431): 160 ^ 90
    (Info: triOk;            Val: '2582249878086908589655919172003011874329' + 
                                  '7057928292235128306593565406476220168411' + 
                                  '9462964535328013783143590317197274749337' + 
                                  '6000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1432): 160 ^ 100
    (Info: triOk;            Val: '2839213766779714416208296124562517712318' + 
                                  '9115651848361729745710905493722191929606' + 
                                  '3799293379185063892797172860002447725755' + 
                                  '2869537611776000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000'),                                       // (1433): 160 ^ 110
    (Info: triOk;            Val: '2851525386013872011650732253562682078058' + 
                                  '2678170303499566119953236870469795054233' + 
                                  '6656619550707335712486165144348349650456' + 
                                  '9180440450859648748907913324826383867657' + 
                                  '4966714751655938017963701541273600000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000'),           // (1434): 160 ^ 159
    (Info: triOk;            Val: '4562440617622195218641171605700291324893' + 
                                  '2285072485599305791925178992751672086773' + 
                                  '8650591281131737139977864230957359440731' + 
                                  '0688704721375437998252661319722214188251' + 
                                  '9946743602649500828741922466037760000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '000000000000000000000000000000000'),         // (1435): 160 ^ 160
    (Info: triOk;            Val: '7299904988195512349825874569120466119829' + 
                                  '1656115976958889267080286388402675338838' + 
                                  '1840946049810779423964582769531775105169' + 
                                  '7101927554200700797204258111555542701203' + 
                                  '1914789764239201325987075945660416000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000'),       // (1436): 160 ^ 161
    (Info: triOk;            Val: '1167984798111281975972139931059274579172' + 
                                  '6664978556313422282732845822144428054214' + 
                                  '1094551367969724707834333243125084016827' + 
                                  '1536308408672112127552681297848886832192' + 
                                  '5106366362278272212157932151305666560000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00000000000000000000000000000000000000'),    // (1437): 160 ^ 162
    (Info: triOk;            Val: '1868775676978051161555423889694839326676' + 
                                  '2663965690101475652372553315431084886742' + 
                                  '5751282188751559532534933189000134426923' + 
                                  '4458093453875379404084290076558218931508' + 
                                  '0170186179645235539452691442089066496000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000'),  // (1438): 160 ^ 163
    (Info: triOk;            Val: '2990041083164881858488678223511742922682' + 
                                  '0262345104162361043796085304689735818788' + 
                                  '1202051502002495252055893102400215083077' + 
                                  '5132949526200607046534864122493150290412' + 
                                  '8272297887432376863124306307342506393600' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '0000000000000000000000000000000000000000' + 
                                  '00'),                                        // (1439): 160 ^ 164
    (Info: triOk;            Val: '161'),                                       // (1440): 161 ^ 1
    (Info: triOk;            Val: '25921'),                                     // (1441): 161 ^ 2
    (Info: triOk;            Val: '4173281'),                                   // (1442): 161 ^ 3
    (Info: triOk;            Val: '671898241'),                                 // (1443): 161 ^ 4
    (Info: triOk;            Val: '108175616801'),                              // (1444): 161 ^ 5
    (Info: triOk;            Val: '17416274304961'),                            // (1445): 161 ^ 6
    (Info: triOk;            Val: '2804020163098721'),                          // (1446): 161 ^ 7
    (Info: triOk;            Val: '451447246258894081'),                        // (1447): 161 ^ 8
    (Info: triOk;            Val: '72683006647681947041'),                      // (1448): 161 ^ 9
    (Info: triOk;            Val: '11701964070276793473601'),                   // (1449): 161 ^ 10
    (Info: triOk;            Val: '1884016215314563749249761'),                 // (1450): 161 ^ 11
    (Info: triOk;            Val: '303326610665644763629211521'),               // (1451): 161 ^ 12
    (Info: triOk;            Val: '48835584317168806944303054881'),             // (1452): 161 ^ 13
    (Info: triOk;            Val: '7862529075064177918032791835841'),           // (1453): 161 ^ 14
    (Info: triOk;            Val: '1265867181085332644803279485570401'),        // (1454): 161 ^ 15
    (Info: triOk;            Val: '1369359631020490194658554056591681074839' + 
                                  '07201'),                                     // (1455): 161 ^ 20
    (Info: triOk;            Val: '1481313227080312998765616406626057600761' + 
                                  '9525649620484001'),                          // (1456): 161 ^ 25
    (Info: triOk;            Val: '1602419720148926350056085064177390043213' + 
                                  '784262878736068372327300801'),               // (1457): 161 ^ 30
    (Info: triOk;            Val: '2579895749439771423590296953325597969574' + 
                                  '19266323476507007944695428961'),             // (1458): 161 ^ 31
    (Info: triOk;            Val: '4153632156598031991980378094854212731014' + 
                                  '4501878079717628279095964062721'),           // (1459): 161 ^ 32
    (Info: triOk;            Val: '6687347772122831507088408732715282496933' + 
                                  '264802370834538152934450214098081'),         // (1460): 161 ^ 33
    (Info: triOk;            Val: '1733427416011959154952386427607128376030' + 
                                  '07156942254402063462213883999636357601'),    // (1461): 161 ^ 35
    (Info: triOk;            Val: '1875145799068573051793931355933020465814' + 
                                  '4245574645779082672472132458646527843193' + 
                                  '179654401'),                                 // (1462): 161 ^ 40
    (Info: triOk;            Val: '2194288876723090943749534689657505036199' + 
                                  '5512094204738626970660599955314334137640' + 
                                  '1735313610722212283693496968001'),           // (1463): 161 ^ 50
    (Info: triOk;            Val: '2567748959522163440337166683411658354552' + 
                                  '8945950732255690707953883107524047500990' + 
                                  '1865178336083802279319284306849247559985' + 
                                  '7758335241601'),                             // (1464): 161 ^ 60
    (Info: triOk;            Val: '3004770606581897710133460637868166396901' + 
                                  '7335047420652356531287366548638040466220' + 
                                  '8349340725296717162200833804878921580252' + 
                                  '68093029556594742396803794350475201'),       // (1465): 161 ^ 70
    (Info: triOk;            Val: '4837680676596855313314871626967747899011' + 
                                  '7909426347250294015372660143307245150615' + 
                                  '5442438567727714631143342425855063744206' + 
                                  '8162977758611753525885410890426507361'),     // (1466): 161 ^ 71
    (Info: triOk;            Val: '7788665889320937054436943319418074117408' + 
                                  '9834176419072973364749982830724664692491' + 
                                  '0262326094041620556140781305626652628172' + 
                                  '974239419136492317667551153358667685121'),   // (1467): 161 ^ 72
    (Info: triOk;            Val: '1253975208180670865764347874426309932902' + 
                                  '8463302403470748711724747235746671015491' + 
                                  '0552234501140700909538665790205891073135' + 
                                  '8488525464809752631444757356907454973044' + 
                                  '81'),                                        // (1468): 161 ^ 73
    (Info: triOk;            Val: '2018900085170880093880600077826358991973' + 
                                  '5825916869587905425876843049552140334940' + 
                                  '5989097546836528464357251922231484627748' + 
                                  '7166525998343701736626059344621002506602' + 
                                  '1441'),                                      // (1469): 161 ^ 74
    (Info: triOk;            Val: '3250429137125116951147766125300437977077' + 
                                  '4679726160036527735661717309778945939254' + 
                                  '3642447050406810827615175594792690250675' + 
                                  '4338106857333359795967955544839814035629' + 
                                  '452001'),                                    // (1470): 161 ^ 75
    (Info: triOk;            Val: '4114611569130201954261265252884922273601' + 
                                  '9702341386557084895456302408235385519000' + 
                                  '8796926855986861346070085583605199717154' + 
                                  '8649677001591686194558330180087860895516' + 
                                  '780020750988561284793263932574535822401'),   // (1471): 161 ^ 90
    (Info: triOk;            Val: '4814903674510684204934751912315743842366' + 
                                  '4226483529220346029702723525051495333142' + 
                                  '9570368847145308699526650443596932571440' + 
                                  '1829004045610907731777385451425933495705' + 
                                  '2174785565706631061906796449649515733728' + 
                                  '098357192580017936001'),                     // (1472): 161 ^ 100
    (Info: triOk;            Val: '5634382980096773531038501453735367986606' + 
                                  '4673715468867041120937873663218094925412' + 
                                  '0706154838473951395118343730615429207396' + 
                                  '1430949960067660541475908678030037456171' + 
                                  '0019836455249123113529853197834674266879' + 
                                  '4437884239699978430555127151718599301009' + 
                                  '601'),                                       // (1473): 161 ^ 110
    (Info: triOk;            Val: '7679170124487112341101562838419739086985' + 
                                  '4073224266603027303287670331712626520518' + 
                                  '5388564985829979477937825840530298585702' + 
                                  '0365482042117590002046509725332977052953' + 
                                  '6169112654280452427371824916699966270040' + 
                                  '9953444987765054850927430048902260938353' + 
                                  '2721641370866594269779574184108306046955' + 
                                  '6854633320406909365715607023321907270240' + 
                                  '9338793266073756135895849011041'),           // (1474): 161 ^ 159
    (Info: triOk;            Val: '1236346390042425086917351616985577993004' + 
                                  '6505789106923087395829314923405732869803' + 
                                  '4847558962718626695947989960325378072298' + 
                                  '0278842608780931990329488065778609305525' + 
                                  '5323227137339152840806863811588694569476' + 
                                  '6002504643030173830999316237873264011074' + 
                                  '8768184260709521677434511443641437273559' + 
                                  '8653595964585512407880212730754827070508' + 
                                  '7903545715837874737879231690777601'),        // (1475): 161 ^ 160
    (Info: triOk;            Val: '1990517687968304389936936103346780568737' + 
                                  '4874320462146170707285197026683229920383' + 
                                  '6104569929976988980476263836123858696399' + 
                                  '8248936600137300504430475785903560981896' + 
                                  '1070395691116036073699050736657798256857' + 
                                  '3264032475278579867908899142975955057830' + 
                                  '5516776659742329900669563424262714010431' + 
                                  '3832289502982674976687142496515271583519' + 
                                  '152470860249897832798556302215193761'),      // (1476): 161 ^ 161
    (Info: triOk;            Val: '3204733477628970067798467126388316715667' + 
                                  '3547655944055334838729167212960000171817' + 
                                  '6128357587262952258566784776159412501203' + 
                                  '7180787926221053812133066015304733180852' + 
                                  '7323337062696818078655471686019055193540' + 
                                  '2955092285198513587333327620191287643107' + 
                                  '1882010422185151140077997113062969556794' + 
                                  '5269986099802106712466299419389587249465' + 
                                  '83547808500233551080567564656646195521'),    // (1477): 161 ^ 162
    (Info: triOk;            Val: '5159620898982641809155532073485189912224' + 
                                  '4411726069929089090353959212865600276626' + 
                                  '3566655715493353136292523489616654126937' + 
                                  '9861068561215896637534236284640620421172' + 
                                  '8990572670941877106635309414490678861599' + 
                                  '8757698579169606875606657468507973105402' + 
                                  '5730036779718093335525575352031380986439' + 
                                  '1884677620681391807070742065217235471639' + 
                                  '9951197168537601723971377909720037478881'),  // (1478): 161 ^ 163
    (Info: triOk;            Val: '8306989647362053312740406638311155758681' + 
                                  '3502878972585833435469874332713616445368' + 
                                  '4342315701944298549430962818282813144370' + 
                                  '1576320383557593586430120418271398878088' + 
                                  '3674822000216422141682848157329992967175' + 
                                  '7999894712463067069726718524297836699698' + 
                                  '1425359215346130270196176316770523388167' + 
                                  '0934330969297040809383894724999749109340' + 
                                  '3921427441345538775593918434649260340998' + 
                                  '41'),                                        // (1479): 161 ^ 164
    (Info: triOk;            Val: '162'),                                       // (1480): 162 ^ 1
    (Info: triOk;            Val: '26244'),                                     // (1481): 162 ^ 2
    (Info: triOk;            Val: '4251528'),                                   // (1482): 162 ^ 3
    (Info: triOk;            Val: '688747536'),                                 // (1483): 162 ^ 4
    (Info: triOk;            Val: '111577100832'),                              // (1484): 162 ^ 5
    (Info: triOk;            Val: '18075490334784'),                            // (1485): 162 ^ 6
    (Info: triOk;            Val: '2928229434235008'),                          // (1486): 162 ^ 7
    (Info: triOk;            Val: '474373168346071296'),                        // (1487): 162 ^ 8
    (Info: triOk;            Val: '76848453272063549952'),                      // (1488): 162 ^ 9
    (Info: triOk;            Val: '12449449430074295092224'),                   // (1489): 162 ^ 10
    (Info: triOk;            Val: '2016810807672035804940288'),                 // (1490): 162 ^ 11
    (Info: triOk;            Val: '326723350842869800400326656'),               // (1491): 162 ^ 12
    (Info: triOk;            Val: '52929182836544907664852918272'),             // (1492): 162 ^ 13
    (Info: triOk;            Val: '8574527619520275041706172760064'),           // (1493): 162 ^ 14
    (Info: triOk;            Val: '1389073474362284556756399987130368'),        // (1494): 162 ^ 15
    (Info: triOk;            Val: '1549887911119771908870852682253685726652' + 
                                  '66176'),                                     // (1495): 162 ^ 20
    (Info: triOk;            Val: '1729319997373086443049242449936371493263' + 
                                  '6323103671058432'),                          // (1496): 162 ^ 25
    (Info: triOk;            Val: '1929525117176908411791575503777652340880' + 
                                  '867110524036876027427815424'),               // (1497): 162 ^ 30
    (Info: triOk;            Val: '3125830689826591627102352316119796792227' + 
                                  '00471904893973916443306098688'),             // (1498): 162 ^ 31
    (Info: triOk;            Val: '5063845717519078435905810752114070803407' + 
                                  '7476448592823774463815587987456'),           // (1499): 162 ^ 32
    (Info: triOk;            Val: '8203430062380907066167413418424794701520' + 
                                  '551184672037451463138125253967872'),         // (1500): 162 ^ 33
    (Info: triOk;            Val: '2152908185571245250444975977531403121467' + 
                                  '05345290532950876198596959165132832768'),    // (1501): 162 ^ 35
    (Info: triOk;            Val: '2402152537035209988287001775128391325303' + 
                                  '6896688075171394932113601769696612620428' + 
                                  '929662976'),                                 // (1502): 162 ^ 40
    (Info: triOk;            Val: '2990547653314451702288506742739612831828' + 
                                  '2579467186832240730521158807808459152305' + 
                                  '4164191381824939428411158298624'),           // (1503): 162 ^ 50
    (Info: triOk;            Val: '3723067177816562136952144393244434800793' + 
                                  '2077130428615460967546390728630113996805' + 
                                  '6428989200354915527276889035870134743590' + 
                                  '6933012299776'),                             // (1504): 162 ^ 60
    (Info: triOk;            Val: '4635013655499671375977048484467411076737' + 
                                  '7823117112742676016468292487631758874854' + 
                                  '8945685319891946469750288412241746459612' + 
                                  '21389771647400829557481984254541824'),       // (1505): 162 ^ 70
    (Info: triOk;            Val: '7508722121909467629082818544837205944315' + 
                                  '2073449722643135146678633829963449377264' + 
                                  '9292010218224953280995467227831629264571' + 
                                  '7865143006878934388312081449235775488'),     // (1506): 162 ^ 71
    (Info: triOk;            Val: '1216412983749333755911416604263627362979' + 
                                  '0635898855068187893761938680454078799116' + 
                                  '9185305655352442431521265690908723940860' + 
                                  '6294153167114387370906557194776195629056'),  // (1507): 162 ^ 72
    (Info: triOk;            Val: '1970589033673920684576494898907076328026' + 
                                  '0830156145210464387894340662335607654569' + 
                                  '4080195161670956739064450419272132784194' + 
                                  '2196528130725307540868622655537436919070' + 
                                  '72'),                                        // (1508): 162 ^ 73
    (Info: triOk;            Val: '3192354234551751509013921736229463651402' + 
                                  '2544852955240952308388831872983684400402' + 
                                  '4409916161906949917284409679220855110394' + 
                                  '6358375571774998216207168701970647808894' + 
                                  '5664'),                                      // (1509): 162 ^ 74
    (Info: triOk;            Val: '5171613859973837444602553212691731115271' + 
                                  '6522661787490342739589907634233568728651' + 
                                  '9544064182289258866000743680337785278839' + 
                                  '3100568426275497110255613297192449450409' + 
                                  '197568'),                                    // (1510): 162 ^ 75
    (Info: triOk;            Val: '7183751632534003763261227667785017837625' + 
                                  '2395492932422944832040711925134816333438' + 
                                  '5440135084641514457664406284859177406443' + 
                                  '6429398297796536958899496159559079491742' + 
                                  '924854971251086355219243066577884545024'),   // (1511): 162 ^ 90
    (Info: triOk;            Val: '8943375266744574009620377009821387565374' + 
                                  '4919394614064415370650698969923397075808' + 
                                  '1679472128979492911825136131693971020149' + 
                                  '4506724651882190803074488822025923379452' + 
                                  '5221172270262152011455907449660698487025' + 
                                  '722640671382360293376'),                     // (1512): 162 ^ 100
    (Info: triOk;            Val: '1113400981175137837498978458076023172007' + 
                                  '3488575520454563833137287476476535596919' + 
                                  '4418382773642222042194406503232787152403' + 
                                  '0165537542164096884578866987738095870313' + 
                                  '2294828436957757275974096185056589602211' + 
                                  '8639535584626927371534964171124316561630' + 
                                  '8224'),                                      // (1513): 162 ^ 110
    (Info: triOk;            Val: '2055357216945257083792766148904253823190' + 
                                  '4900451554764560186607775375329130643480' + 
                                  '7926607192447486836325583252342589843715' + 
                                  '5862231405345322865952432349805726754637' + 
                                  '4690091471909362919713579559629629998606' + 
                                  '6595813016323910685409970476968141703673' + 
                                  '0067924355883361963061343149431904879838' + 
                                  '7289795379489237380289503051460281604135' + 
                                  '71972789670627438302578813698048'),          // (1514): 162 ^ 159
    (Info: triOk;            Val: '3329678691451316475744281161224891193568' + 
                                  '5938731518718587502304596108033191642438' + 
                                  '8841103651764928674847444868794995546819' + 
                                  '2496814876659423042842940406685277342512' + 
                                  '6997948184493167929935998886600000597742' + 
                                  '7885217086444735310364152172688389559950' + 
                                  '2710037456531046380159375902079685905338' + 
                                  '7409468514772564556068994943365656198699' + 
                                  '8659591926641645005017767819083776'),        // (1515): 162 ^ 160
    (Info: triOk;            Val: '5394079480151132690705735481184323733581' + 
                                  '1220745060324111753733445695013770460750' + 
                                  '9922587915859184453252860687447892785847' + 
                                  '1844840100188265329405563458830149294870' + 
                                  '5736676058878932046496318196292000968343' + 
                                  '3174051680040471202789926519755191087119' + 
                                  '4390260679580295135858188961369091166648' + 
                                  '7603338993931554580831771808252363041893' + 
                                  '782853892115946490812878386691571712'),      // (1516): 162 ^ 161
    (Info: triOk;            Val: '8738408757844834958943291479518604448401' + 
                                  '4177606997725061041048182025922308146416' + 
                                  '6074592423691878814269634313665586313072' + 
                                  '4388640962304989833637012803304841857690' + 
                                  '3293415215383869915324035477993041568716' + 
                                  '1741963721665563348519680962003409561133' + 
                                  '4912222300920078120090266117417927689970' + 
                                  '9917409170169118420947470329368828127867' + 
                                  '92822330522783331511686298644034617344'),    // (1517): 162 ^ 162
    (Info: triOk;            Val: '1415622218770863263348813219682013920641' + 
                                  '0296772333631459888649805488199413919719' + 
                                  '4904083972638084367911680758813824982717' + 
                                  '7350959835893408353049196074135384380945' + 
                                  '8333533264892186926282493747434872734132' + 
                                  '0202198122909821262460188315844552348903' + 
                                  '6255780012749052655454623111021704285775' + 
                                  '3006620285567397184193490193357750156714' + 
                                  '6043721754469089970489318038033360800972' + 
                                  '8'),                                         // (1518): 162 ^ 163
    (Info: triOk;            Val: '2293307994408798486625077415884862551438' + 
                                  '4680771180482965019612684890883050549945' + 
                                  '5744616035673696676016922829278396472002' + 
                                  '7308554934147321531939697640099322697132' + 
                                  '2500323889125342820577639870844493829293' + 
                                  '8727560959113910445185505071668174805223' + 
                                  '8734363620653465301836489439855160942955' + 
                                  '9870724862619183438393454113239555253877' + 
                                  '6590829242239925752192695221614044497575' + 
                                  '936'),                                       // (1519): 162 ^ 164
    (Info: triOk;            Val: '163'),                                       // (1520): 163 ^ 1
    (Info: triOk;            Val: '26569'),                                     // (1521): 163 ^ 2
    (Info: triOk;            Val: '4330747'),                                   // (1522): 163 ^ 3
    (Info: triOk;            Val: '705911761'),                                 // (1523): 163 ^ 4
    (Info: triOk;            Val: '115063617043'),                              // (1524): 163 ^ 5
    (Info: triOk;            Val: '18755369578009'),                            // (1525): 163 ^ 6
    (Info: triOk;            Val: '3057125241215467'),                          // (1526): 163 ^ 7
    (Info: triOk;            Val: '498311414318121121'),                        // (1527): 163 ^ 8
    (Info: triOk;            Val: '81224760533853742723'),                      // (1528): 163 ^ 9
    (Info: triOk;            Val: '13239635967018160063849'),                   // (1529): 163 ^ 10
    (Info: triOk;            Val: '2158060662623960090407387'),                 // (1530): 163 ^ 11
    (Info: triOk;            Val: '351763888007705494736404081'),               // (1531): 163 ^ 12
    (Info: triOk;            Val: '57337513745255995642033865203'),             // (1532): 163 ^ 13
    (Info: triOk;            Val: '9346014740476727289651520028089'),           // (1533): 163 ^ 14
    (Info: triOk;            Val: '1523400402697706548213197764578507'),        // (1534): 163 ^ 15
    (Info: triOk;            Val: '1752879605391608903579968035018849997566' + 
                                  '94801'),                                     // (1535): 163 ^ 20
    (Info: triOk;            Val: '2016926676372650449271545537075901694063' + 
                                  '0478757693093443'),                          // (1536): 163 ^ 25
    (Info: triOk;            Val: '2320748786939534476538830139948373105495' + 
                                  '854874748944494051366349049'),               // (1537): 163 ^ 30
    (Info: triOk;            Val: '3782820522711441196758293128115848161958' + 
                                  '24344584077952530372714894987'),             // (1538): 163 ^ 31
    (Info: triOk;            Val: '6165997452019649150716017798828832503991' + 
                                  '9368167204706262450752527882881'),           // (1539): 163 ^ 32
    (Info: triOk;            Val: '1005057584679202811566710901209099698150' + 
                                  '6857011254367120779472662044909603'),        // (1540): 163 ^ 33
    (Info: triOk;            Val: '2670337496734173950051594193422456988016' + 
                                  '55683932017280031989809157871203242107'),    // (1541): 163 ^ 35
    (Info: triOk;            Val: '3072586910997842545596832443636040603852' + 
                                  '7633630297884756059366190219946458967419' + 
                                  '860429601'),                                 // (1542): 163 ^ 40
    (Info: triOk;            Val: '4067993217863626240057198280296551060723' + 
                                  '0029784592588292102169504731944865860820' + 
                                  '7772382075274335359222729594249'),           // (1543): 163 ^ 50
    (Info: triOk;            Val: '5385874932081320788547996090895887537178' + 
                                  '2509623774547849565735853341637920054926' + 
                                  '6004857847552481373053092095424889987422' + 
                                  '6623703204401'),                             // (1544): 163 ^ 60
    (Info: triOk;            Val: '7130702346464534471357417607478087652662' + 
                                  '3892856931594599598222449205260595506962' + 
                                  '9479975072542455361042698447726379696501' + 
                                  '90515519473684188236655748057799449'),       // (1545): 163 ^ 70
    (Info: triOk;            Val: '1162304482473719118831259070018928287383' + 
                                  '9694535679849919734510259220457477067634' + 
                                  '9605235936824420223849959846979399890529' + 
                                  '81054029674210522682574886933421310187'),    // (1546): 163 ^ 71
    (Info: triOk;            Val: '1894556306432162163694952284130853108435' + 
                                  '8702093158155369167251722529345687620244' + 
                                  '9856534577023804964875434550576421821563' + 
                                  '5911806836896315197259706570147673560481'),  // (1547): 163 ^ 72
    (Info: triOk;            Val: '3088126779484424326822772223133290566750' + 
                                  '4684411847793251742620307722833470820999' + 
                                  '3266151360548802092746958317439567569148' + 
                                  '6536245144140993771533321709340707903584' + 
                                  '03'),                                        // (1548): 163 ^ 73
    (Info: triOk;            Val: '5033646650559611652721118723707263623803' + 
                                  '2635591311903000340471101588218557438228' + 
                                  '9023826717694547411177542057426495137712' + 
                                  '3054079584949819847599314386225353882841' + 
                                  '9689'),                                      // (1549): 163 ^ 74
    (Info: triOk;            Val: '8204844040412166993935423519642839706799' + 
                                  '3196013838401890554967895588796248624313' + 
                                  '1108837549842112280219393553605187074471' + 
                                  '0578149723468206351586882449547326829032' + 
                                  '409307'),                                    // (1550): 163 ^ 75
    (Info: triOk;            Val: '1249926271523577285831595569053353753735' + 
                                  '6016844764370866319205776811044687330975' + 
                                  '8235127801803714413723527095313258947309' + 
                                  '9968425275056169026208424448146757406665' + 
                                  '2150015636135389077237585668241558964649'),  // (1551): 163 ^ 90
    (Info: triOk;            Val: '1654856882058446046289764287505620239852' + 
                                  '7887062835444365039194620183435402575331' + 
                                  '4961317571522560950056575819632704114467' + 
                                  '4362386123018621794749942737866321699806' + 
                                  '8463766716933010806561224723474576546079' + 
                                  '6055972936324173874001'),                    // (1552): 163 ^ 100
    (Info: triOk;            Val: '2190970269596853157722604860756188217121' + 
                                  '4410197465087159046855120274291453124755' + 
                                  '1794136868402921384038274723746867564041' + 
                                  '8793289457879549896989944338385404754786' + 
                                  '4046513521446920948107021502218659167867' + 
                                  '6114790308337141602968682880288103584108' + 
                                  '9849'),                                      // (1553): 163 ^ 110
    (Info: triOk;            Val: '5468007482982110052864800049794671293510' + 
                                  '2748727946892657071705128124440038352890' + 
                                  '2653927629086511356740108131916675978732' + 
                                  '9992152552051511972140929656768136362214' + 
                                  '5886229836066941983823480510571107847466' + 
                                  '9941568905105897990222847387940400210528' + 
                                  '1376250176409843620976870189054349069464' + 
                                  '4204995097067136014675097173724188783150' + 
                                  '16699089688007311494230120998027'),          // (1554): 163 ^ 159
    (Info: triOk;            Val: '8912852197260839386169624081165314208421' + 
                                  '7480426553435031026879358842837262515211' + 
                                  '1325902035411013511486376255024181845334' + 
                                  '7887208659843964514589715340532062270409' + 
                                  '7794554632789115433632273232230905791371' + 
                                  '2004757315322613724063241242342852343160' + 
                                  '8643287787548045102192298408158588983227' + 
                                  '0054142008219431703920408393170427716534' + 
                                  '7721951619145191773559509722678401'),        // (1555): 163 ^ 160
    (Info: triOk;            Val: '1452794908153516819945648725229946215972' + 
                                  '7449309528209910057381335491382473789979' + 
                                  '4146122031771995202372279329568941640789' + 
                                  '5705615011554566215878123600506726150076' + 
                                  '7940512405144625815682060536853637643993' + 
                                  '5056775442397586037022308322501884931935' + 
                                  '2208855909370331351657344640529850004266' + 
                                  '0018825147339767367739026568086779717795' + 
                                  '1678678113920666259090200084796579363'),     // (1556): 163 ^ 161
    (Info: triOk;            Val: '2368055700290232416511407422124812332035' + 
                                  '5742374530982153393531576850953432277666' + 
                                  '4458178911788352179866815307197374874487' + 
                                  '0000152468833942931881341468825963624625' + 
                                  '1743035220385740079561758675071429359709' + 
                                  '4142543971108065240346362565678072439054' + 
                                  '4100435132273640103201471764063655506953' + 
                                  '5830684990163820809414613305981450940006' + 
                                  '123624532569068600231702613821842436169'),   // (1557): 163 ^ 162
    (Info: triOk;            Val: '3859930791473078838913594098063444101217' + 
                                  '9860070485500910031456470267054094612596' + 
                                  '3066831626215014053182908950731721045413' + 
                                  '8100248524199326978966586594186320708139' + 
                                  '0341147409228756329685666640366429856326' + 
                                  '3452346672906146341764570982055258075658' + 
                                  '6883709265606033368218398975423758476334' + 
                                  '3404016533967027919345819688749765032209' + 
                                  '9815079880875818183776752605296031709554' + 
                                  '7'),                                         // (1558): 163 ^ 163
    (Info: triOk;            Val: '6291687190101118507429158379843413884985' + 
                                  '3171914891366483351274046535298174218531' + 
                                  '9798935550730472906688141589692705304024' + 
                                  '5103405094444902975715536148523702754266' + 
                                  '6256070277042872817387636623797280665811' + 
                                  '9427325076837018537076250700750070663323' + 
                                  '6620446102937834390195990329940726316424' + 
                                  '9748546950366255508533686092662117002502' + 
                                  '2698580205827583639556106746632531686574' + 
                                  '161'),                                       // (1559): 163 ^ 164
    (Info: triOk;            Val: '164'),                                       // (1560): 164 ^ 1
    (Info: triOk;            Val: '26896'),                                     // (1561): 164 ^ 2
    (Info: triOk;            Val: '4410944'),                                   // (1562): 164 ^ 3
    (Info: triOk;            Val: '723394816'),                                 // (1563): 164 ^ 4
    (Info: triOk;            Val: '118636749824'),                              // (1564): 164 ^ 5
    (Info: triOk;            Val: '19456426971136'),                            // (1565): 164 ^ 6
    (Info: triOk;            Val: '3190854023266304'),                          // (1566): 164 ^ 7
    (Info: triOk;            Val: '523300059815673856'),                        // (1567): 164 ^ 8
    (Info: triOk;            Val: '85821209809770512384'),                      // (1568): 164 ^ 9
    (Info: triOk;            Val: '14074678408802364030976'),                   // (1569): 164 ^ 10
    (Info: triOk;            Val: '2308247259043587701080064'),                 // (1570): 164 ^ 11
    (Info: triOk;            Val: '378552550483148382977130496'),               // (1571): 164 ^ 12
    (Info: triOk;            Val: '62082618279236334808249401344'),             // (1572): 164 ^ 13
    (Info: triOk;            Val: '10181549397794758908552901820416'),          // (1573): 164 ^ 14
    (Info: triOk;            Val: '1669774101238340461002675898548224'),        // (1574): 164 ^ 15
    (Info: triOk;            Val: '1980965723112074458689112887706200554875' + 
                                  '12576'),                                     // (1575): 164 ^ 20
    (Info: triOk;            Val: '2350153349027664322691605086512947204422' + 
                                  '9027834965786624'),                          // (1576): 164 ^ 25
    (Info: triOk;            Val: '2788145549166307659062143589536423940280' + 
                                  '401038215568387310853554176'),               // (1577): 164 ^ 30
    (Info: triOk;            Val: '4572558700632744560861915486839735262059' + 
                                  '85770267353215518979982884864'),             // (1578): 164 ^ 31
    (Info: triOk;            Val: '7498996269037701079813541398417165829778' + 
                                  '1666323845927345112717193117696'),           // (1579): 164 ^ 32
    (Info: triOk;            Val: '1229835388122182977089420789340415196083' + 
                                  '6193277110732084598485619671302144'),        // (1580): 164 ^ 33
    (Info: triOk;            Val: '3307765259893423335179706155009980711386' + 
                                  '50254381170250147360869226679342465024'),    // (1581): 164 ^ 35
    (Info: triOk;            Val: '3924225196144944051186384971937520458798' + 
                                  '2605046052854903083950576292737498291871' + 
                                  '758155776'),                                 // (1582): 164 ^ 40
    (Info: triOk;            Val: '5523220763945946602243750091257660464767' + 
                                  '9268308267037476371293856547783355254554' + 
                                  '3397743394506134528635097317376'),           // (1583): 164 ^ 50
    (Info: triOk;            Val: '7773755603335891319785108564592456955738' + 
                                  '8648804710819427021724820834706550245537' + 
                                  '3454164193508655520700168143700650480036' + 
                                  '7851367038976'),                             // (1584): 164 ^ 60
    (Info: triOk;            Val: '1094131101455780642117289433858459556045' + 
                                  '9139824924624312927033793761851146053261' + 
                                  '9811054719563332422653852225504481696485' + 
                                  '892119503372601792087632884663320576'),      // (1585): 164 ^ 70
    (Info: triOk;            Val: '1794375006387480253072354671527873671915' + 
                                  '2989312876383873200335421769435879527349' + 
                                  '6490129740083865173152317649827349982236' + 
                                  '86307598553106693902371793084784574464'),    // (1586): 164 ^ 71
    (Info: triOk;            Val: '2942775010475467615038661661305712821941' + 
                                  '0902473117269552048550091701874842424853' + 
                                  '4243812773737538883969800945716853970868' + 
                                  '4554446162709497799988974065904670212096'),  // (1587): 164 ^ 72
    (Info: triOk;            Val: '4826151017179766888663405124541369027983' + 
                                  '3880055912322065359622150391074741576759' + 
                                  '6159852948929563769710473550975640512224' + 
                                  '2669291706843576391981917468083659147837' + 
                                  '44'),                                        // (1588): 164 ^ 73
    (Info: triOk;            Val: '7914887668174817697407984404247845205892' + 
                                  '7563291696208187189780326641362576185885' + 
                                  '7702158836244484582325176623600050440047' + 
                                  '7977638399223465282850344647657201002453' + 
                                  '4016'),                                      // (1589): 164 ^ 74
    (Info: triOk;            Val: '1298041577580670102374909442296646613766' + 
                                  '4120379838178142699123973569183462494485' + 
                                  '2663154049144095471501328966270408272167' + 
                                  '8388332697472648306387456522215780964402' + 
                                  '3578624'),                                   // (1590): 164 ^ 75
    (Info: triOk;            Val: '2167436208574761003171859983429230091919' + 
                                  '9306390303879009934617006636007021879525' + 
                                  '0294097730239154190198100460565270955717' + 
                                  '5310261291069306843081094296395964789367' + 
                                  '2368057537653930976972104277986719563776'),  // (1591): 164 ^ 90
    (Info: triOk;            Val: '3050596760728364599829878075633140566880' + 
                                  '5048650195717200543866779902953599783132' + 
                                  '4044389594094320726129950979948502346862' + 
                                  '4411012112599326180879830915450100575454' + 
                                  '8744669982670850781132673026047952297461' + 
                                  '9684519594191671525376'),                    // (1592): 164 ^ 100
    (Info: triOk;            Val: '4293616836218594470019748421848607660250' + 
                                  '9534208446592190863979104828830449533039' + 
                                  '7971772429309359594536301008134583773399' + 
                                  '8888005312607208238584761558004859660236' + 
                                  '0943374117608637894808857872240614562993' + 
                                  '9579424032567465313065969656287600603404' + 
                                  '6976'),                                      // (1593): 164 ^ 110
    (Info: triOk;            Val: '1446011808672588026893146034596072827548' + 
                                  '5584009279273898176505740479856063806483' + 
                                  '9701358111853073132388165997538044286923' + 
                                  '4314482555662056070262844614877223791811' + 
                                  '4859203800345472793228071805657668677778' + 
                                  '6288034624516902000743013810206697444563' + 
                                  '7373771352981075960190361580768934210002' + 
                                  '9106368569958254220675568806743434076290' + 
                                  '793016649321837019071654746128384'),         // (1594): 164 ^ 159
    (Info: triOk;            Val: '2371459366223044364104759496737559437179' + 
                                  '6357775218009193009469414386963944642633' + 
                                  '7110227303439039937116592235962392630554' + 
                                  '4275751391285771955231065168398647018570' + 
                                  '8369094232566575380894037761278576631556' + 
                                  '9512376784207719281218542648738983809084' + 
                                  '5292985018888964574712192992461052104404' + 
                                  '7734444454731536921907932843059231885116' + 
                                  '90054730488781271127751378365054976'),       // (1595): 164 ^ 160
    (Info: triOk;            Val: '3889193360605792757131805574649597476974' + 
                                  '6026751357535076535529839594620869213919' + 
                                  '2860772777640025496871211266978323914109' + 
                                  '2612232281708666006578946876173781110456' + 
                                  '1725314541409183624666221928496865675753' + 
                                  '4000297926100659621198409943931933446898' + 
                                  '6280495430977901902527996507636125451223' + 
                                  '8284488905759720551929009862617140291591' + 
                                  '7168975800160128464951226051869016064'),     // (1596): 164 ^ 161
    (Info: triOk;            Val: '6378277111393500121696161142425339862238' + 
                                  '3483872226357525518268936935178225510827' + 
                                  '6291667355329641814868786477844451219139' + 
                                  '1884060942002212250789472876925001021148' + 
                                  '1229515847911061144452603962734859708235' + 
                                  '5760488598805081778765392308048370852913' + 
                                  '7500012506803759120145914272523245740007' + 
                                  '0786561805445941705163576174692110078210' + 
                                  '415712031226261068252001072506518634496'),   // (1597): 164 ^ 162
    (Info: triOk;            Val: '1046037446268534019958170427357755737407' + 
                                  '0891355045122634184996105657369228983775' + 
                                  '7311833446274061257638480982366489999938' + 
                                  '8268985994488362809129473551815700167468' + 
                                  '2921640599057414027690227049888516992150' + 
                                  '6344720130204033411717524338519932819877' + 
                                  '8550002051115816495703929940693812301361' + 
                                  '1608996136093134439646826492649506052826' + 
                                  '5081767731211068151933281758910690560573' + 
                                  '44'),                                        // (1598): 164 ^ 163
    (Info: triOk;            Val: '1715501411880395792731399500866719409347' + 
                                  '6261822274001120063393613278085535533392' + 
                                  '1991406851889460462527108811081043599899' + 
                                  '6761137030960915006972336624977748274647' + 
                                  '9991490582454159005411972361817167867127' + 
                                  '0405341013534614795216739915172689824599' + 
                                  '6822003363829939052954445102737852174232' + 
                                  '3038753663192740481020795447945189926635' + 
                                  '4734099079186151769170582084613532519340' + 
                                  '4416')                                       // (1599): 164 ^ 164
  );

  ModPowResultsCount = 2197;
  ModPowResults: array[0..ModPowResultsCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '4999375250948550678363554043637900308573'),  // (0): ModPow(Arguments[2], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '3595084290562405637184401'),                 // (1): ModPow(Arguments[2], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '65601'),                                     // (2): ModPow(Arguments[2], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (3): ModPow(Arguments[2], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (4): ModPow(Arguments[2], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (5): ModPow(Arguments[2], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '65601'),                                     // (6): ModPow(Arguments[2], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '33760966348846439381'),                      // (7): ModPow(Arguments[2], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '18262135568902300021129'),                   // (8): ModPow(Arguments[2], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '2086155817585408099805985961'),              // (9): ModPow(Arguments[2], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '101659518760154918112462491078'),            // (10): ModPow(Arguments[2], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '623144988865023804136509459105809694721'),   // (11): ModPow(Arguments[2], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '3017228102630049953055021649891820937587' + 
                                  '1196337243290442763450860774081544964294' + 
                                  '65601'),                                     // (12): ModPow(Arguments[2], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1672827783772792499037415980368023321509' + 
                                  '1'),                                         // (13): ModPow(Arguments[2], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '3221061803960681598542961'),                 // (14): ModPow(Arguments[2], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '32161'),                                     // (15): ModPow(Arguments[2], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (16): ModPow(Arguments[2], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (17): ModPow(Arguments[2], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (18): ModPow(Arguments[2], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '32161'),                                     // (19): ModPow(Arguments[2], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '147035571460934449537'),                     // (20): ModPow(Arguments[2], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '70014944989009180278301'),                   // (21): ModPow(Arguments[2], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '7886682025398013666285527541'),              // (22): ModPow(Arguments[2], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '98197147922732500062566154946'),             // (23): ModPow(Arguments[2], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '248035195559612841420526991436193647841'),   // (24): ModPow(Arguments[2], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '2923451177973926632017243815818558777220' + 
                                  '1150601810940042281362385573670679691986' + 
                                  '32161'),                                     // (25): ModPow(Arguments[2], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '5744313821724577208550774533963571457252'),  // (26): ModPow(Arguments[2], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '3733950899847932849752121'),                 // (27): ModPow(Arguments[2], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '98721'),                                     // (28): ModPow(Arguments[2], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (29): ModPow(Arguments[2], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (30): ModPow(Arguments[2], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '21'),                                        // (31): ModPow(Arguments[2], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '98721'),                                     // (32): ModPow(Arguments[2], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '55652888229875224185'),                      // (33): ModPow(Arguments[2], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '73058444179650122766301'),                   // (34): ModPow(Arguments[2], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '1315909241564220539990291731'),              // (35): ModPow(Arguments[2], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '22803559611556462540027336039'),             // (36): ModPow(Arguments[2], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '141380825473926464433461039990251018081'),   // (37): ModPow(Arguments[2], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '1681764273464888380765737314470787947160' + 
                                  '3222994072023931796508321659385312722102' + 
                                  '98721'),                                     // (38): ModPow(Arguments[2], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1102386549607891174077218450679362325361' + 
                                  '0'),                                         // (39): ModPow(Arguments[2], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '5568450875979488080336601'),                 // (40): ModPow(Arguments[2], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '36001'),                                     // (41): ModPow(Arguments[2], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (42): ModPow(Arguments[2], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (43): ModPow(Arguments[2], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (44): ModPow(Arguments[2], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '36001'),                                     // (45): ModPow(Arguments[2], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '47103430565464432405'),                      // (46): ModPow(Arguments[2], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '16221911231080572848377'),                   // (47): ModPow(Arguments[2], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '2835394154003664248902001641'),              // (48): ModPow(Arguments[2], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '39822705060375637349021529565'),             // (49): ModPow(Arguments[2], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '567336980487575506272988922210919120961'),   // (50): ModPow(Arguments[2], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1805202608492879244036858696404904585730' + 
                                  '3706527133678649951865057786717360602825' + 
                                  '36001'),                                     // (51): ModPow(Arguments[2], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '779879232593610263927748006161'),            // (52): ModPow(Arguments[2], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '2286069621945027938180561'),                 // (53): ModPow(Arguments[2], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '6161'),                                      // (54): ModPow(Arguments[2], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '41'),                                        // (55): ModPow(Arguments[2], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (56): ModPow(Arguments[2], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (57): ModPow(Arguments[2], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '6161'),                                      // (58): ModPow(Arguments[2], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '148568671807277202053'),                     // (59): ModPow(Arguments[2], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '33899956312282180891133'),                   // (60): ModPow(Arguments[2], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '1907511191216944676964439841'),              // (61): ModPow(Arguments[2], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '101215879909282558928684371283'),            // (62): ModPow(Arguments[2], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '779879232593610263927748006161'),            // (63): ModPow(Arguments[2], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '779879232593610263927748006161'),            // (64): ModPow(Arguments[2], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '4270789602767955556283644985483013416138'),  // (65): ModPow(Arguments[2], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '4963888637489864787042201'),                 // (66): ModPow(Arguments[2], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '33601'),                                     // (67): ModPow(Arguments[2], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (68): ModPow(Arguments[2], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (69): ModPow(Arguments[2], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (70): ModPow(Arguments[2], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '33601'),                                     // (71): ModPow(Arguments[2], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '28967671980283776973'),                      // (72): ModPow(Arguments[2], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '44714796721468947075913'),                   // (73): ModPow(Arguments[2], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '1157566640660516059588019761'),              // (74): ModPow(Arguments[2], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '104824941401727652770182793839'),            // (75): ModPow(Arguments[2], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '385889008313710641885829463839979206561'),   // (76): ModPow(Arguments[2], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '2579592614546082253847389770179792372181' + 
                                  '4150533106825699610609422912249381515933' + 
                                  '601'),                                       // (77): ModPow(Arguments[2], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '8239403546693108442022624772434756814355'),  // (78): ModPow(Arguments[2], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '3525624123185315403877801'),                 // (79): ModPow(Arguments[2], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (80): ModPow(Arguments[2], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (81): ModPow(Arguments[2], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (82): ModPow(Arguments[2], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (83): ModPow(Arguments[2], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (84): ModPow(Arguments[2], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '162114997753784140457'),                     // (85): ModPow(Arguments[2], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '53058681102940421139505'),                   // (86): ModPow(Arguments[2], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '1344898509035617924417439161'),              // (87): ModPow(Arguments[2], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '66458279539422857241118938242'),             // (88): ModPow(Arguments[2], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '518320444687617981377768828878653323521'),   // (89): ModPow(Arguments[2], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '2222822120720991969432706221235275640105' + 
                                  '2695382991223694247452181306001081434536' + 
                                  '00001'),                                     // (90): ModPow(Arguments[2], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '6026148260460545660704249479200544026606'),  // (91): ModPow(Arguments[2], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '1022582357493751577621921'),                 // (92): ModPow(Arguments[2], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '94721'),                                     // (93): ModPow(Arguments[2], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (94): ModPow(Arguments[2], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (95): ModPow(Arguments[2], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '21'),                                        // (96): ModPow(Arguments[2], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '94721'),                                     // (97): ModPow(Arguments[2], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '13851565905729804053'),                      // (98): ModPow(Arguments[2], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '34514289353673580949317'),                   // (99): ModPow(Arguments[2], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '8049006729369560936865774001'),              // (100): ModPow(Arguments[2], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '28288069001418773172206936383'),             // (101): ModPow(Arguments[2], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '428569941614190810928000892437297889281'),   // (102): ModPow(Arguments[2], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1771422661243775710775007684132494484722' + 
                                  '0214629671157541093469385321910541725872' + 
                                  '94721'),                                     // (103): ModPow(Arguments[2], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1056521179623981160980214415649090688873' + 
                                  '7'),                                         // (104): ModPow(Arguments[2], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '1161637284032061252171641'),                 // (105): ModPow(Arguments[2], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '65441'),                                     // (106): ModPow(Arguments[2], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (107): ModPow(Arguments[2], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (108): ModPow(Arguments[2], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (109): ModPow(Arguments[2], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '65441'),                                     // (110): ModPow(Arguments[2], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '56453146701728445065'),                      // (111): ModPow(Arguments[2], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '21317091772513412920045'),                   // (112): ModPow(Arguments[2], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '5088648660972983645193159331'),              // (113): ModPow(Arguments[2], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '78446277176433957087179063708'),             // (114): ModPow(Arguments[2], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '250783808049798083654263988670864439201'),   // (115): ModPow(Arguments[2], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '3368373907497586057236531781896379966933' + 
                                  '1314413906244456741785453044187671678912' + 
                                  '65441'),                                     // (116): ModPow(Arguments[2], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '7985681372854920493517273854168163117770'),  // (117): ModPow(Arguments[2], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '5606047744473113425152041'),                 // (118): ModPow(Arguments[2], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '85441'),                                     // (119): ModPow(Arguments[2], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (120): ModPow(Arguments[2], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (121): ModPow(Arguments[2], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (122): ModPow(Arguments[2], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '85441'),                                     // (123): ModPow(Arguments[2], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '69772912155747966209'),                      // (124): ModPow(Arguments[2], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '13072520744837349900469'),                   // (125): ModPow(Arguments[2], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '7565773781538823576765261801'),              // (126): ModPow(Arguments[2], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '36475923826666712065759093512'),             // (127): ModPow(Arguments[2], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '238474831935679882029247169423171146081'),   // (128): ModPow(Arguments[2], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '6531230715162513702322010697748066514802' + 
                                  '8859235492891509016411958625213327264985' + 
                                  '441'),                                       // (129): ModPow(Arguments[2], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '7818599228770306072218065050917757857731'),  // (130): ModPow(Arguments[2], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '3461974280195384797169161'),                 // (131): ModPow(Arguments[2], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '19761'),                                     // (132): ModPow(Arguments[2], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '41'),                                        // (133): ModPow(Arguments[2], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (134): ModPow(Arguments[2], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (135): ModPow(Arguments[2], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '19761'),                                     // (136): ModPow(Arguments[2], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '92456760096162724849'),                      // (137): ModPow(Arguments[2], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '52034570475960878218685'),                   // (138): ModPow(Arguments[2], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '3753344014580323892624691881'),              // (139): ModPow(Arguments[2], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '80236372779595181842914831429'),             // (140): ModPow(Arguments[2], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '352843804466771124990168847139769629201'),   // (141): ModPow(Arguments[2], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '8134831902515482612337522967280327710418' + 
                                  '1349656989118970040434627348529369719519' + 
                                  '761'),                                       // (142): ModPow(Arguments[2], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1497536801607527516345179484285272185442' + 
                                  '0'),                                         // (143): ModPow(Arguments[2], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '6132257152278558207562401'),                 // (144): ModPow(Arguments[2], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (145): ModPow(Arguments[2], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (146): ModPow(Arguments[2], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (147): ModPow(Arguments[2], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (148): ModPow(Arguments[2], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (149): ModPow(Arguments[2], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '111261858236130873789'),                     // (150): ModPow(Arguments[2], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '56941127994662352259729'),                   // (151): ModPow(Arguments[2], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '7157950038102528250459365811'),              // (152): ModPow(Arguments[2], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '103877623863734355757081251332'),            // (153): ModPow(Arguments[2], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '27336776850553977509496556370669486881'),    // (154): ModPow(Arguments[2], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '3113663969462041214209217474632716652012' + 
                                  '2485457286870097152674745049513589391317' + 
                                  '00001'),                                     // (155): ModPow(Arguments[2], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '9495612939885365297509272797716541000541'),  // (156): ModPow(Arguments[2], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '5580374905414340048308801'),                 // (157): ModPow(Arguments[2], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '50001'),                                     // (158): ModPow(Arguments[2], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '41'),                                        // (159): ModPow(Arguments[2], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (160): ModPow(Arguments[2], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (161): ModPow(Arguments[2], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '50001'),                                     // (162): ModPow(Arguments[2], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '72432325696854564457'),                      // (163): ModPow(Arguments[2], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '38242575947332744974713'),                   // (164): ModPow(Arguments[2], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '3949771061682742869369190121'),              // (165): ModPow(Arguments[2], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '72893405025877625848114104350'),             // (166): ModPow(Arguments[2], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '94063590907012252011618587564798956721'),    // (167): ModPow(Arguments[2], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '2017020178462946532180723971397291858427' + 
                                  '2003839075182440865319222211837768554687' + 
                                  '50001'),                                     // (168): ModPow(Arguments[2], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '1275750078859514829814806044459880301189'),  // (169): ModPow(Arguments[7], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '1350645458631781802837576'),                 // (170): ModPow(Arguments[7], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '52576'),                                     // (171): ModPow(Arguments[7], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (172): ModPow(Arguments[7], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (173): ModPow(Arguments[7], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (174): ModPow(Arguments[7], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '52576'),                                     // (175): ModPow(Arguments[7], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '88411789406618007160'),                      // (176): ModPow(Arguments[7], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (177): ModPow(Arguments[7], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '5096412339167946673785068046'),              // (178): ModPow(Arguments[7], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '4203166652099698431697076736'),              // (179): ModPow(Arguments[7], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '136777390394027172647770185345936654336'),   // (180): ModPow(Arguments[7], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '2629630939620353380814478649377074309962' + 
                                  '0426678582240393949813881367420865630415' + 
                                  '2576'),                                      // (181): ModPow(Arguments[7], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1105684223617535089345535319799697560145' + 
                                  '8'),                                         // (182): ModPow(Arguments[7], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '3579593807215756582796504'),                 // (183): ModPow(Arguments[7], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '25504'),                                     // (184): ModPow(Arguments[7], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (185): ModPow(Arguments[7], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (186): ModPow(Arguments[7], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '4'),                                         // (187): ModPow(Arguments[7], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '25504'),                                     // (188): ModPow(Arguments[7], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '68454077081735934536'),                      // (189): ModPow(Arguments[7], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (190): ModPow(Arguments[7], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '4692507452381941241810910414'),              // (191): ModPow(Arguments[7], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '50402074393906641353419924009'),             // (192): ModPow(Arguments[7], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '668538116808114839735506300635482947584'),   // (193): ModPow(Arguments[7], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '3116464306600963755686773811736758294060' + 
                                  '8580023195494608548735022436692122086071' + 
                                  '25504'),                                     // (194): ModPow(Arguments[7], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1497480839495015124717923599710118409910' + 
                                  '6'),                                         // (195): ModPow(Arguments[7], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '3024338689395967344747184'),                 // (196): ModPow(Arguments[7], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '20384'),                                     // (197): ModPow(Arguments[7], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (198): ModPow(Arguments[7], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (199): ModPow(Arguments[7], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '84'),                                        // (200): ModPow(Arguments[7], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '20384'),                                     // (201): ModPow(Arguments[7], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '137737900407051370180'),                     // (202): ModPow(Arguments[7], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (203): ModPow(Arguments[7], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '3860449784680620749522422044'),              // (204): ModPow(Arguments[7], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '60769127988277334243349728495'),             // (205): ModPow(Arguments[7], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '614883638914902820346108960500994801664'),   // (206): ModPow(Arguments[7], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '3336532478596525373096531426047967928243' + 
                                  '3133146425019685015095225034595452654807' + 
                                  '20384'),                                     // (207): ModPow(Arguments[7], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1482035525316536100741869259080346557603' + 
                                  '7'),                                         // (208): ModPow(Arguments[7], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '1029993576224556964172976'),                 // (209): ModPow(Arguments[7], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '1376'),                                      // (210): ModPow(Arguments[7], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (211): ModPow(Arguments[7], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (212): ModPow(Arguments[7], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (213): ModPow(Arguments[7], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '1376'),                                      // (214): ModPow(Arguments[7], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '115203695305391980932'),                     // (215): ModPow(Arguments[7], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (216): ModPow(Arguments[7], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '4189633532224077759531256536'),              // (217): ModPow(Arguments[7], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '78021461454469128134401516478'),             // (218): ModPow(Arguments[7], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '135448486916795915201593161441676886016'),   // (219): ModPow(Arguments[7], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '6460481094128681285819147606868477007219' + 
                                  '0473565433530214183615364849326798467301' + 
                                  '376'),                                       // (220): ModPow(Arguments[7], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (221): ModPow(Arguments[7], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (222): ModPow(Arguments[7], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '56772'),                                     // (223): ModPow(Arguments[7], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '28'),                                        // (224): ModPow(Arguments[7], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (225): ModPow(Arguments[7], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '72'),                                        // (226): ModPow(Arguments[7], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '56772'),                                     // (227): ModPow(Arguments[7], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '125038874954611816848'),                     // (228): ModPow(Arguments[7], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (229): ModPow(Arguments[7], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (230): ModPow(Arguments[7], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (231): ModPow(Arguments[7], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (232): ModPow(Arguments[7], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '74287305190053403856772'),                   // (233): ModPow(Arguments[7], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '1023529775843641872964535118658413432665' + 
                                  '9'),                                         // (234): ModPow(Arguments[7], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '1976800967391133121174224'),                 // (235): ModPow(Arguments[7], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '51424'),                                     // (236): ModPow(Arguments[7], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (237): ModPow(Arguments[7], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (238): ModPow(Arguments[7], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '24'),                                        // (239): ModPow(Arguments[7], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '51424'),                                     // (240): ModPow(Arguments[7], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '20117412922253515028'),                      // (241): ModPow(Arguments[7], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (242): ModPow(Arguments[7], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '3348046809622046268675334644'),              // (243): ModPow(Arguments[7], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '32487807553653609200051136237'),             // (244): ModPow(Arguments[7], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '88760546660799477274124787614387011584'),    // (245): ModPow(Arguments[7], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '2478116522261507289110986469329970363189' + 
                                  '4337686299948135445081146028714905363957' + 
                                  '51424'),                                     // (246): ModPow(Arguments[7], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '4419064711529290063882042804843484290579'),  // (247): ModPow(Arguments[7], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '3250806517955365201266576'),                 // (248): ModPow(Arguments[7], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '9376'),                                      // (249): ModPow(Arguments[7], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (250): ModPow(Arguments[7], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (251): ModPow(Arguments[7], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (252): ModPow(Arguments[7], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '9376'),                                      // (253): ModPow(Arguments[7], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '82777328422474880336'),                      // (254): ModPow(Arguments[7], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (255): ModPow(Arguments[7], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '3899696543333234050553748696'),              // (256): ModPow(Arguments[7], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '7008828966559595100272676531'),              // (257): ModPow(Arguments[7], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '136777390394027172647770185345936654336'),   // (258): ModPow(Arguments[7], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '3081810914830747563212120493196671288320' + 
                                  '5094099609768807341447427006245278266063' + 
                                  '09376'),                                     // (259): ModPow(Arguments[7], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '9902272974257371231290306788537609402864'),  // (260): ModPow(Arguments[7], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '77285751641538153398616'),                   // (261): ModPow(Arguments[7], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '31616'),                                     // (262): ModPow(Arguments[7], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (263): ModPow(Arguments[7], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (264): ModPow(Arguments[7], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '16'),                                        // (265): ModPow(Arguments[7], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '31616'),                                     // (266): ModPow(Arguments[7], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '29804466034052291624'),                      // (267): ModPow(Arguments[7], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (268): ModPow(Arguments[7], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '6248900465781061122944171106'),              // (269): ModPow(Arguments[7], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '63390984624554615559980911125'),             // (270): ModPow(Arguments[7], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '272325545071615432157826623580433022976'),   // (271): ModPow(Arguments[7], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1101033007995861980119302297825609160217' + 
                                  '1608534068899166277412845118011458123540' + 
                                  '31616'),                                     // (272): ModPow(Arguments[7], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1175231212366561116336566812028977273822' + 
                                  '6'),                                         // (273): ModPow(Arguments[7], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '2242805104143187209889144'),                 // (274): ModPow(Arguments[7], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '73344'),                                     // (275): ModPow(Arguments[7], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (276): ModPow(Arguments[7], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (277): ModPow(Arguments[7], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '44'),                                        // (278): ModPow(Arguments[7], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '73344'),                                     // (279): ModPow(Arguments[7], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '33008378150784506788'),                      // (280): ModPow(Arguments[7], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (281): ModPow(Arguments[7], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '6232060665689814056196086454'),              // (282): ModPow(Arguments[7], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '56975632663561982429232389558'),             // (283): ModPow(Arguments[7], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '397774033322246135076937680142555152384'),   // (284): ModPow(Arguments[7], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '9526935183159281107946242959882258832424' + 
                                  '2213450561878492114945148473481023171487' + 
                                  '3344'),                                      // (285): ModPow(Arguments[7], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '5094977865131820802599655861354096423980'),  // (286): ModPow(Arguments[7], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '4105727714412202701113744'),                 // (287): ModPow(Arguments[7], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '33344'),                                     // (288): ModPow(Arguments[7], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (289): ModPow(Arguments[7], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (290): ModPow(Arguments[7], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '44'),                                        // (291): ModPow(Arguments[7], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '33344'),                                     // (292): ModPow(Arguments[7], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '66283437921588616756'),                      // (293): ModPow(Arguments[7], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (294): ModPow(Arguments[7], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '1573290144353632568348124774'),              // (295): ModPow(Arguments[7], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '104837757849392205587403209227'),            // (296): ModPow(Arguments[7], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '10564782643988496697107340038865158144'),    // (297): ModPow(Arguments[7], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '1609484581993801571210481415469717222157' + 
                                  '1123607339235112750852748871548850047734' + 
                                  '33344'),                                     // (298): ModPow(Arguments[7], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '7831215178363134094809220051018420003803'),  // (299): ModPow(Arguments[7], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '1792647179356361823098272'),                 // (300): ModPow(Arguments[7], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '32672'),                                     // (301): ModPow(Arguments[7], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (302): ModPow(Arguments[7], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (303): ModPow(Arguments[7], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '72'),                                        // (304): ModPow(Arguments[7], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '32672'),                                     // (305): ModPow(Arguments[7], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '50325618937451223872'),                      // (306): ModPow(Arguments[7], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (307): ModPow(Arguments[7], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '7912767210904890545431119372'),              // (308): ModPow(Arguments[7], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '27509334116408887134429699942'),             // (309): ModPow(Arguments[7], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '664418516028697941652357526532277665792'),   // (310): ModPow(Arguments[7], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '1266062429002877800662171475667494879472' + 
                                  '5231937004461477641445997450346953229399' + 
                                  '32672'),                                     // (311): ModPow(Arguments[7], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '6047326200164376003261728475803023617817'),  // (312): ModPow(Arguments[7], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '2888624921518251291844024'),                 // (313): ModPow(Arguments[7], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '90624'),                                     // (314): ModPow(Arguments[7], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (315): ModPow(Arguments[7], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (316): ModPow(Arguments[7], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '24'),                                        // (317): ModPow(Arguments[7], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '90624'),                                     // (318): ModPow(Arguments[7], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '26573720112735983760'),                      // (319): ModPow(Arguments[7], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (320): ModPow(Arguments[7], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '1882427862082042216992809904'),              // (321): ModPow(Arguments[7], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '45979600576895736692450839564'),             // (322): ModPow(Arguments[7], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '301760757092287784590647703059786891264'),   // (323): ModPow(Arguments[7], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '5073249376169019449721496152267370206797' + 
                                  '5475691389212768610042143305321783710490' + 
                                  '624'),                                       // (324): ModPow(Arguments[7], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '7904689414417342367171078905562657154590'),  // (325): ModPow(Arguments[7], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '3839718188742534211917568'),                 // (326): ModPow(Arguments[7], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '13568'),                                     // (327): ModPow(Arguments[7], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (328): ModPow(Arguments[7], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (329): ModPow(Arguments[7], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '68'),                                        // (330): ModPow(Arguments[7], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '13568'),                                     // (331): ModPow(Arguments[7], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '112176576394104686596'),                     // (332): ModPow(Arguments[7], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '0'),                                         // (333): ModPow(Arguments[7], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '5617098243943829819190806928'),              // (334): ModPow(Arguments[7], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '37062297053631558296578615636'),             // (335): ModPow(Arguments[7], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '93388691862426617030090354871855218688'),    // (336): ModPow(Arguments[7], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '2019909230931011752256717607783823249742' + 
                                  '4496588782021177099104585357404865001208' + 
                                  '13568'),                                     // (337): ModPow(Arguments[7], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '6797674787053700231787095317962258074864'),  // (338): ModPow(Arguments[12], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '6437186432304703160064776'),                 // (339): ModPow(Arguments[12], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '10176'),                                     // (340): ModPow(Arguments[12], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (341): ModPow(Arguments[12], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (342): ModPow(Arguments[12], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (343): ModPow(Arguments[12], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '10176'),                                     // (344): ModPow(Arguments[12], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '124385970061010051496'),                     // (345): ModPow(Arguments[12], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '59850995268507895729312'),                   // (346): ModPow(Arguments[12], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '3937837888733343725784754366'),              // (347): ModPow(Arguments[12], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '610677762316499830511362479'),               // (348): ModPow(Arguments[12], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '405098051994943960570365880476438102016'),   // (349): ModPow(Arguments[12], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '2804289585442417540755291300122975156180' + 
                                  '4077292140611114535587826398603421251066' + 
                                  '10176'),                                     // (350): ModPow(Arguments[12], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1562388987204667382742435249098310340599' + 
                                  '6'),                                         // (351): ModPow(Arguments[12], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '4664395679806490043099344'),                 // (352): ModPow(Arguments[12], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '94944'),                                     // (353): ModPow(Arguments[12], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (354): ModPow(Arguments[12], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (355): ModPow(Arguments[12], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '44'),                                        // (356): ModPow(Arguments[12], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '94944'),                                     // (357): ModPow(Arguments[12], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '46354035532284728992'),                      // (358): ModPow(Arguments[12], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '58952750199865264059604'),                   // (359): ModPow(Arguments[12], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '8074744294061640327273348814'),              // (360): ModPow(Arguments[12], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '33681477613455472000694405761'),             // (361): ModPow(Arguments[12], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '201314963067547398049908293680972693504'),   // (362): ModPow(Arguments[12], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '1502135665085352974809870705054796623810' + 
                                  '8914810074387328461244627137858879561189' + 
                                  '94944'),                                     // (363): ModPow(Arguments[12], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '481830947852140296126132782624677511732'),   // (364): ModPow(Arguments[12], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '4283332446164574497991264'),                 // (365): ModPow(Arguments[12], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '22464'),                                     // (366): ModPow(Arguments[12], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (367): ModPow(Arguments[12], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (368): ModPow(Arguments[12], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '64'),                                        // (369): ModPow(Arguments[12], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '22464'),                                     // (370): ModPow(Arguments[12], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '149511567453413987292'),                     // (371): ModPow(Arguments[12], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '6325539009230576456608'),                    // (372): ModPow(Arguments[12], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '8826892126192574663179701634'),              // (373): ModPow(Arguments[12], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '83895143416813655208339996198'),             // (374): ModPow(Arguments[12], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '405301646822545416038081462984847130624'),   // (375): ModPow(Arguments[12], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '2695847505351693716903074142113189586924' + 
                                  '2904861704016951453112262734631114063738' + 
                                  '22464'),                                     // (376): ModPow(Arguments[12], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1721801089745115619305044412943289082846' + 
                                  '4'),                                         // (377): ModPow(Arguments[12], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3846503568174368595812576'),                 // (378): ModPow(Arguments[12], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '57376'),                                     // (379): ModPow(Arguments[12], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (380): ModPow(Arguments[12], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (381): ModPow(Arguments[12], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (382): ModPow(Arguments[12], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '57376'),                                     // (383): ModPow(Arguments[12], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '159997123044507498124'),                     // (384): ModPow(Arguments[12], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '29850320938608085599628'),                   // (385): ModPow(Arguments[12], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '3567919196808756181087515526'),              // (386): ModPow(Arguments[12], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '12442677610680126579966621240'),             // (387): ModPow(Arguments[12], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '104931979075333684915130606101762932736'),   // (388): ModPow(Arguments[12], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '3035272479054095667234051760051170201460' + 
                                  '3999875200118496468636643914912618280931' + 
                                  '57376'),                                     // (389): ModPow(Arguments[12], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '45808'),                                     // (390): ModPow(Arguments[12], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '45808'),                                     // (391): ModPow(Arguments[12], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '45808'),                                     // (392): ModPow(Arguments[12], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (393): ModPow(Arguments[12], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (394): ModPow(Arguments[12], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '8'),                                         // (395): ModPow(Arguments[12], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '45808'),                                     // (396): ModPow(Arguments[12], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '45808'),                                     // (397): ModPow(Arguments[12], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '45808'),                                     // (398): ModPow(Arguments[12], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '45808'),                                     // (399): ModPow(Arguments[12], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '45808'),                                     // (400): ModPow(Arguments[12], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '45808'),                                     // (401): ModPow(Arguments[12], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '45808'),                                     // (402): ModPow(Arguments[12], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '8918089847618583751322738976791019547562'),  // (403): ModPow(Arguments[12], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '374181019803511105397624'),                  // (404): ModPow(Arguments[12], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '65824'),                                     // (405): ModPow(Arguments[12], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (406): ModPow(Arguments[12], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (407): ModPow(Arguments[12], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '24'),                                        // (408): ModPow(Arguments[12], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '65824'),                                     // (409): ModPow(Arguments[12], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '42445118177636963976'),                      // (410): ModPow(Arguments[12], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '38121847305814829215876'),                   // (411): ModPow(Arguments[12], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '2986055971660640593548170734'),              // (412): ModPow(Arguments[12], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '36764404599515350029885787139'),             // (413): ModPow(Arguments[12], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '453951863585358549352781637328750772224'),   // (414): ModPow(Arguments[12], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '4068303148348700053391992478934314718333' + 
                                  '3965824'),                                   // (415): ModPow(Arguments[12], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1271088356576019777297834048714348475289' + 
                                  '0'),                                         // (416): ModPow(Arguments[12], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '1644668584290556558230376'),                 // (417): ModPow(Arguments[12], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '9376'),                                      // (418): ModPow(Arguments[12], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (419): ModPow(Arguments[12], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (420): ModPow(Arguments[12], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '76'),                                        // (421): ModPow(Arguments[12], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '9376'),                                      // (422): ModPow(Arguments[12], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '37871153926165827072'),                      // (423): ModPow(Arguments[12], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '8447828282589413519200'),                    // (424): ModPow(Arguments[12], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '6344896251036353892830306896'),              // (425): ModPow(Arguments[12], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '106748400679050197268034401259'),            // (426): ModPow(Arguments[12], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '405098051994943960570365880476438102016'),   // (427): ModPow(Arguments[12], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '3168521914600104166917704003015448633572' + 
                                  '7113664568037193348201906731847137171919' + 
                                  '09376'),                                     // (428): ModPow(Arguments[12], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '8593018750167886880729564111346838212843'),  // (429): ModPow(Arguments[12], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '6800106232646259428944336'),                 // (430): ModPow(Arguments[12], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '25536'),                                     // (431): ModPow(Arguments[12], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (432): ModPow(Arguments[12], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (433): ModPow(Arguments[12], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '36'),                                        // (434): ModPow(Arguments[12], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '25536'),                                     // (435): ModPow(Arguments[12], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '123904670277630195496'),                     // (436): ModPow(Arguments[12], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '49070987083602612604420'),                   // (437): ModPow(Arguments[12], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '6302430300572541039680609896'),              // (438): ModPow(Arguments[12], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '52759765847781936029889360744'),             // (439): ModPow(Arguments[12], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '21044947075110558625205972145365057536'),    // (440): ModPow(Arguments[12], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1304041101342426283310504817406895852718' + 
                                  '0873353235030760154722440823136940192154' + 
                                  '25536'),                                     // (441): ModPow(Arguments[12], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1054392754472691780618649938806522711235' + 
                                  '7'),                                         // (442): ModPow(Arguments[12], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '3279682499455802471543704'),                 // (443): ModPow(Arguments[12], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '51904'),                                     // (444): ModPow(Arguments[12], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (445): ModPow(Arguments[12], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (446): ModPow(Arguments[12], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '4'),                                         // (447): ModPow(Arguments[12], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '51904'),                                     // (448): ModPow(Arguments[12], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '46311640005774359688'),                      // (449): ModPow(Arguments[12], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '33984437271976803421096'),                   // (450): ModPow(Arguments[12], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '161480396660205278483909254'),               // (451): ModPow(Arguments[12], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '77825916091839232786180906433'),             // (452): ModPow(Arguments[12], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '8125620065053346811923443599208873984'),     // (453): ModPow(Arguments[12], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '1489672807632949184157325765761036371915' + 
                                  '9042989441354206823539766524430841254722' + 
                                  '51904'),                                     // (454): ModPow(Arguments[12], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1240124664117433981318434624401979585366'),  // (455): ModPow(Arguments[12], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '4562442779205888714690904'),                 // (456): ModPow(Arguments[12], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '91904'),                                     // (457): ModPow(Arguments[12], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (458): ModPow(Arguments[12], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (459): ModPow(Arguments[12], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '4'),                                         // (460): ModPow(Arguments[12], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '91904'),                                     // (461): ModPow(Arguments[12], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '125843650612842586788'),                     // (462): ModPow(Arguments[12], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '66898242023746457825536'),                   // (463): ModPow(Arguments[12], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '480131628893267420081008894'),               // (464): ModPow(Arguments[12], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '60414767628961913086407742558'),             // (465): ModPow(Arguments[12], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '474234255397900129207725549095552548864'),   // (466): ModPow(Arguments[12], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '2039402147121219188589642822364288906383' + 
                                  '6037491754058414110573614648689624481704' + 
                                  '91904'),                                     // (467): ModPow(Arguments[12], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '7569889834536885850706400887239858971681'),  // (468): ModPow(Arguments[12], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '1526836498993482600032008'),                 // (469): ModPow(Arguments[12], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '50208'),                                     // (470): ModPow(Arguments[12], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (471): ModPow(Arguments[12], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (472): ModPow(Arguments[12], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '8'),                                         // (473): ModPow(Arguments[12], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '50208'),                                     // (474): ModPow(Arguments[12], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '38858464893029126904'),                      // (475): ModPow(Arguments[12], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '39025321738655997252004'),                   // (476): ModPow(Arguments[12], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '4009378230399974168813805568'),              // (477): ModPow(Arguments[12], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '93842180562310148087607699149'),             // (478): ModPow(Arguments[12], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '454638892137162555467719086999599054848'),   // (479): ModPow(Arguments[12], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '2715998249138353446847424747518969464409' + 
                                  '4688938711905309668575320827954109225795' + 
                                  '50208'),                                     // (480): ModPow(Arguments[12], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '9848979184298839655557471438144897041905'),  // (481): ModPow(Arguments[12], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '3846667797590720694477224'),                 // (482): ModPow(Arguments[12], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '90624'),                                     // (483): ModPow(Arguments[12], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (484): ModPow(Arguments[12], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (485): ModPow(Arguments[12], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '24'),                                        // (486): ModPow(Arguments[12], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '90624'),                                     // (487): ModPow(Arguments[12], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '80621462525329064808'),                      // (488): ModPow(Arguments[12], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '4535331912368172103048'),                    // (489): ModPow(Arguments[12], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '756182696677539765830513104'),               // (490): ModPow(Arguments[12], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '94694369570194622590308341942'),             // (491): ModPow(Arguments[12], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '331449539797824990207108971074718531584'),   // (492): ModPow(Arguments[12], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '9209413973187298926057094393012454115970' + 
                                  '9065714663853372502191019710203742187290' + 
                                  '624'),                                       // (493): ModPow(Arguments[12], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1956891539520713560219907587324583811373'),  // (494): ModPow(Arguments[12], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '1027002777750728213916232'),                 // (495): ModPow(Arguments[12], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '86432'),                                     // (496): ModPow(Arguments[12], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '0'),                                         // (497): ModPow(Arguments[12], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (498): ModPow(Arguments[12], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '32'),                                        // (499): ModPow(Arguments[12], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '86432'),                                     // (500): ModPow(Arguments[12], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '40773763397276844644'),                      // (501): ModPow(Arguments[12], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '27821155313154486671584'),                   // (502): ModPow(Arguments[12], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '5354166090556563092150857372'),              // (503): ModPow(Arguments[12], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '87760669240569415478916901275'),             // (504): ModPow(Arguments[12], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '659985998233915905597908094236231729152'),   // (505): ModPow(Arguments[12], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '2647027446913730133491749741067690716581' + 
                                  '0735048590614127828721342376970134998791' + 
                                  '86432'),                                     // (506): ModPow(Arguments[12], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '8982749609412898644450970072948657006816'),  // (507): ModPow(Arguments[17], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '6516823921087353678919600'),                 // (508): ModPow(Arguments[17], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (509): ModPow(Arguments[17], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (510): ModPow(Arguments[17], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (511): ModPow(Arguments[17], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (512): ModPow(Arguments[17], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (513): ModPow(Arguments[17], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '135304674063126091844'),                     // (514): ModPow(Arguments[17], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '28503641633560131048364'),                   // (515): ModPow(Arguments[17], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '5708200971452672780043139060'),              // (516): ModPow(Arguments[17], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '15450085939479282000691218332'),             // (517): ModPow(Arguments[17], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '512049104381501961972859587549221355520'),   // (518): ModPow(Arguments[17], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '8721199470045148346562066195460094508717' + 
                                  '9297843249514698982238769531250000000000' + 
                                  '0000'),                                      // (519): ModPow(Arguments[17], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '4797434669723166025943722872438458714219'),  // (520): ModPow(Arguments[17], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '6709951799448777882587800'),                 // (521): ModPow(Arguments[17], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (522): ModPow(Arguments[17], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (523): ModPow(Arguments[17], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (524): ModPow(Arguments[17], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (525): ModPow(Arguments[17], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (526): ModPow(Arguments[17], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '127013309591264686376'),                     // (527): ModPow(Arguments[17], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '59459492429719512826060'),                   // (528): ModPow(Arguments[17], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '4021852149867951308063849650'),              // (529): ModPow(Arguments[17], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '42340793276917476453903052923'),             // (530): ModPow(Arguments[17], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '485481987338062784951348040979720437760'),   // (531): ModPow(Arguments[17], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '1020456568189050680434151239942344724376' + 
                                  '2552716361824423074722290039062500000000' + 
                                  '00000'),                                     // (532): ModPow(Arguments[17], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1227118765314497462638923107113912452848' + 
                                  '1'),                                         // (533): ModPow(Arguments[17], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '49167451676318869608000'),                   // (534): ModPow(Arguments[17], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (535): ModPow(Arguments[17], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (536): ModPow(Arguments[17], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (537): ModPow(Arguments[17], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (538): ModPow(Arguments[17], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (539): ModPow(Arguments[17], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '105288332900151157792'),                     // (540): ModPow(Arguments[17], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '14427136690673891187004'),                   // (541): ModPow(Arguments[17], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '7119579321156705942132382480'),              // (542): ModPow(Arguments[17], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '63562926269765003041998260004'),             // (543): ModPow(Arguments[17], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '522857397635191900625076838287026421760'),   // (544): ModPow(Arguments[17], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '2103505603859465529543661967007764368453' + 
                                  '5928514378610998392105102539062500000000' + 
                                  '00000'),                                     // (545): ModPow(Arguments[17], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1704838754678090157604450237436067289700' + 
                                  '3'),                                         // (546): ModPow(Arguments[17], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '5544685114437156777477400'),                 // (547): ModPow(Arguments[17], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (548): ModPow(Arguments[17], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (549): ModPow(Arguments[17], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (550): ModPow(Arguments[17], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (551): ModPow(Arguments[17], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (552): ModPow(Arguments[17], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '125488686955626292644'),                     // (553): ModPow(Arguments[17], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '56052170882909187653020'),                   // (554): ModPow(Arguments[17], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '5515556475788249183643989410'),              // (555): ModPow(Arguments[17], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '110215539921884512192396664646'),            // (556): ModPow(Arguments[17], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '310631980084431570687255273060224204800'),   // (557): ModPow(Arguments[17], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1241513984000126217744835361873195767046' + 
                                  '2406895239837467670440673828125000000000' + 
                                  '00000'),                                     // (558): ModPow(Arguments[17], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '10'),                                        // (559): ModPow(Arguments[17], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '10'),                                        // (560): ModPow(Arguments[17], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '10'),                                        // (561): ModPow(Arguments[17], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '10'),                                        // (562): ModPow(Arguments[17], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (563): ModPow(Arguments[17], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '10'),                                        // (564): ModPow(Arguments[17], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '10'),                                        // (565): ModPow(Arguments[17], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '10'),                                        // (566): ModPow(Arguments[17], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '10'),                                        // (567): ModPow(Arguments[17], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '10'),                                        // (568): ModPow(Arguments[17], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '10'),                                        // (569): ModPow(Arguments[17], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '10'),                                        // (570): ModPow(Arguments[17], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '10'),                                        // (571): ModPow(Arguments[17], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '10000000000'),                               // (572): ModPow(Arguments[17], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '10000000000'),                               // (573): ModPow(Arguments[17], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (574): ModPow(Arguments[17], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (575): ModPow(Arguments[17], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (576): ModPow(Arguments[17], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (577): ModPow(Arguments[17], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (578): ModPow(Arguments[17], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '10000000000'),                               // (579): ModPow(Arguments[17], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '10000000000'),                               // (580): ModPow(Arguments[17], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '10000000000'),                               // (581): ModPow(Arguments[17], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '10000000000'),                               // (582): ModPow(Arguments[17], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '10000000000'),                               // (583): ModPow(Arguments[17], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '10000000000'),                               // (584): ModPow(Arguments[17], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '7604671330119272159048890612397422851624'),  // (585): ModPow(Arguments[17], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '6578299924290630474247400'),                 // (586): ModPow(Arguments[17], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (587): ModPow(Arguments[17], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (588): ModPow(Arguments[17], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (589): ModPow(Arguments[17], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (590): ModPow(Arguments[17], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (591): ModPow(Arguments[17], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '63779950905103152192'),                      // (592): ModPow(Arguments[17], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '66386370451519384651648'),                   // (593): ModPow(Arguments[17], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '1970266034117308886179285720'),              // (594): ModPow(Arguments[17], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '54339222070118703454882720457'),             // (595): ModPow(Arguments[17], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '512049104381501961972859587549221355520'),   // (596): ModPow(Arguments[17], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '5183958853198015633574436825722203669997' + 
                                  '1567941247485578060150146484375000000000' + 
                                  '0000'),                                      // (597): ModPow(Arguments[17], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1730520686556284510058963450226697802706'),  // (598): ModPow(Arguments[17], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '1741558496495018460134400'),                 // (599): ModPow(Arguments[17], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (600): ModPow(Arguments[17], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (601): ModPow(Arguments[17], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (602): ModPow(Arguments[17], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (603): ModPow(Arguments[17], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (604): ModPow(Arguments[17], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '123685360648249284532'),                     // (605): ModPow(Arguments[17], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '67594457806675669019140'),                   // (606): ModPow(Arguments[17], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '2801446848863216068045474270'),              // (607): ModPow(Arguments[17], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '80774590705054374916587907411'),             // (608): ModPow(Arguments[17], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '678660377839370864287303959545789808640'),   // (609): ModPow(Arguments[17], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1985985071153853090756240916533656437614' + 
                                  '7521215898450464010238647460937500000000' + 
                                  '00000'),                                     // (610): ModPow(Arguments[17], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1605852200435205418604484431052035770027' + 
                                  '5'),                                         // (611): ModPow(Arguments[17], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '2851396849204288210903200'),                 // (612): ModPow(Arguments[17], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (613): ModPow(Arguments[17], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (614): ModPow(Arguments[17], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (615): ModPow(Arguments[17], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (616): ModPow(Arguments[17], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (617): ModPow(Arguments[17], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '37002145191724877264'),                      // (618): ModPow(Arguments[17], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '20102756873246656379044'),                   // (619): ModPow(Arguments[17], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '4831078123064091073554168250'),              // (620): ModPow(Arguments[17], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '41727229552613253558513793231'),             // (621): ModPow(Arguments[17], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '249933845998822402616470553949676503040'),   // (622): ModPow(Arguments[17], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '1916603635092963616625721508680141313973' + 
                                  '8770041731186211109161376953125000000000' + 
                                  '00000'),                                     // (623): ModPow(Arguments[17], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1769478856345858070662067208858197885861' + 
                                  '1'),                                         // (624): ModPow(Arguments[17], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '4645914036653583075343600'),                 // (625): ModPow(Arguments[17], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (626): ModPow(Arguments[17], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (627): ModPow(Arguments[17], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (628): ModPow(Arguments[17], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (629): ModPow(Arguments[17], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (630): ModPow(Arguments[17], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '80452561129246797052'),                      // (631): ModPow(Arguments[17], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '52169704277423269287832'),                   // (632): ModPow(Arguments[17], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '758433811119385462456175140'),               // (633): ModPow(Arguments[17], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '7033629099567428774175368783'),              // (634): ModPow(Arguments[17], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '401584002836653686759394475507628113920'),   // (635): ModPow(Arguments[17], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '7367593015598162304234829424708086431650' + 
                                  '1447319751605391502380371093750000000000' + 
                                  '0000'),                                      // (636): ModPow(Arguments[17], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '969392398789444286210731284932940076268'),   // (637): ModPow(Arguments[17], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '5013514528124758867459400'),                 // (638): ModPow(Arguments[17], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (639): ModPow(Arguments[17], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '40'),                                        // (640): ModPow(Arguments[17], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (641): ModPow(Arguments[17], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (642): ModPow(Arguments[17], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (643): ModPow(Arguments[17], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '105160526953761385488'),                     // (644): ModPow(Arguments[17], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '1385357096914215810376'),                    // (645): ModPow(Arguments[17], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '6283757533555259566260211360'),              // (646): ModPow(Arguments[17], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '84282419828249234422308494545'),             // (647): ModPow(Arguments[17], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '356538190875615582364737306708976599040'),   // (648): ModPow(Arguments[17], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '3065322359552059661139166736642039379212' + 
                                  '5764775846619158983230590820312500000000' + 
                                  '00000'),                                     // (649): ModPow(Arguments[17], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1010103203570887060653137973061123434929' + 
                                  '3'),                                         // (650): ModPow(Arguments[17], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '1384962297011912847031400'),                 // (651): ModPow(Arguments[17], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (652): ModPow(Arguments[17], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '16'),                                        // (653): ModPow(Arguments[17], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (654): ModPow(Arguments[17], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (655): ModPow(Arguments[17], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (656): ModPow(Arguments[17], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '47837768291228200476'),                      // (657): ModPow(Arguments[17], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '4685239753409076619312'),                    // (658): ModPow(Arguments[17], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '551602381051823304375360910'),               // (659): ModPow(Arguments[17], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '111404322540685814245877928278'),            // (660): ModPow(Arguments[17], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '76444401796163145827857190096994304000'),    // (661): ModPow(Arguments[17], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '2649661685706602534176564495453295999816' + 
                                  '1345538392197340726852416992187500000000' + 
                                  '00000'),                                     // (662): ModPow(Arguments[17], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1442394582456577839518488100561188628805' + 
                                  '3'),                                         // (663): ModPow(Arguments[17], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '5440784802829854785872200'),                 // (664): ModPow(Arguments[17], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (665): ModPow(Arguments[17], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '48'),                                        // (666): ModPow(Arguments[17], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (667): ModPow(Arguments[17], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (668): ModPow(Arguments[17], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (669): ModPow(Arguments[17], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '104795436702417974944'),                     // (670): ModPow(Arguments[17], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '66328059484896587938468'),                   // (671): ModPow(Arguments[17], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '3415653887721153972572732920'),              // (672): ModPow(Arguments[17], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '41650009508748029460295397513'),             // (673): ModPow(Arguments[17], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '423912501921121737695709525503377408000'),   // (674): ModPow(Arguments[17], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1974061905964831671709740177744069056231' + 
                                  '5239731105975806713104248046875000000000' + 
                                  '00000'),                                     // (675): ModPow(Arguments[17], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (676): ModPow(Arguments[22], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (677): ModPow(Arguments[22], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (678): ModPow(Arguments[22], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (679): ModPow(Arguments[22], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (680): ModPow(Arguments[22], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (681): ModPow(Arguments[22], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (682): ModPow(Arguments[22], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (683): ModPow(Arguments[22], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (684): ModPow(Arguments[22], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (685): ModPow(Arguments[22], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (686): ModPow(Arguments[22], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (687): ModPow(Arguments[22], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (688): ModPow(Arguments[22], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (689): ModPow(Arguments[22], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (690): ModPow(Arguments[22], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (691): ModPow(Arguments[22], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (692): ModPow(Arguments[22], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (693): ModPow(Arguments[22], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (694): ModPow(Arguments[22], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (695): ModPow(Arguments[22], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (696): ModPow(Arguments[22], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (697): ModPow(Arguments[22], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (698): ModPow(Arguments[22], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (699): ModPow(Arguments[22], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (700): ModPow(Arguments[22], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (701): ModPow(Arguments[22], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (702): ModPow(Arguments[22], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (703): ModPow(Arguments[22], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (704): ModPow(Arguments[22], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (705): ModPow(Arguments[22], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (706): ModPow(Arguments[22], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (707): ModPow(Arguments[22], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (708): ModPow(Arguments[22], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (709): ModPow(Arguments[22], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (710): ModPow(Arguments[22], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (711): ModPow(Arguments[22], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (712): ModPow(Arguments[22], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (713): ModPow(Arguments[22], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (714): ModPow(Arguments[22], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (715): ModPow(Arguments[22], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (716): ModPow(Arguments[22], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (717): ModPow(Arguments[22], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (718): ModPow(Arguments[22], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (719): ModPow(Arguments[22], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (720): ModPow(Arguments[22], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (721): ModPow(Arguments[22], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (722): ModPow(Arguments[22], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (723): ModPow(Arguments[22], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (724): ModPow(Arguments[22], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (725): ModPow(Arguments[22], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (726): ModPow(Arguments[22], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (727): ModPow(Arguments[22], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (728): ModPow(Arguments[22], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (729): ModPow(Arguments[22], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (730): ModPow(Arguments[22], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (731): ModPow(Arguments[22], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (732): ModPow(Arguments[22], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (733): ModPow(Arguments[22], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (734): ModPow(Arguments[22], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (735): ModPow(Arguments[22], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (736): ModPow(Arguments[22], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (737): ModPow(Arguments[22], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (738): ModPow(Arguments[22], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (739): ModPow(Arguments[22], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (740): ModPow(Arguments[22], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (741): ModPow(Arguments[22], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (742): ModPow(Arguments[22], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (743): ModPow(Arguments[22], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (744): ModPow(Arguments[22], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (745): ModPow(Arguments[22], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (746): ModPow(Arguments[22], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (747): ModPow(Arguments[22], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (748): ModPow(Arguments[22], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (749): ModPow(Arguments[22], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (750): ModPow(Arguments[22], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (751): ModPow(Arguments[22], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (752): ModPow(Arguments[22], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (753): ModPow(Arguments[22], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (754): ModPow(Arguments[22], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (755): ModPow(Arguments[22], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (756): ModPow(Arguments[22], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (757): ModPow(Arguments[22], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (758): ModPow(Arguments[22], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (759): ModPow(Arguments[22], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (760): ModPow(Arguments[22], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (761): ModPow(Arguments[22], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (762): ModPow(Arguments[22], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (763): ModPow(Arguments[22], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (764): ModPow(Arguments[22], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (765): ModPow(Arguments[22], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (766): ModPow(Arguments[22], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (767): ModPow(Arguments[22], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (768): ModPow(Arguments[22], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (769): ModPow(Arguments[22], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (770): ModPow(Arguments[22], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (771): ModPow(Arguments[22], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (772): ModPow(Arguments[22], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (773): ModPow(Arguments[22], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (774): ModPow(Arguments[22], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (775): ModPow(Arguments[22], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (776): ModPow(Arguments[22], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (777): ModPow(Arguments[22], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (778): ModPow(Arguments[22], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (779): ModPow(Arguments[22], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (780): ModPow(Arguments[22], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (781): ModPow(Arguments[22], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (782): ModPow(Arguments[22], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (783): ModPow(Arguments[22], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (784): ModPow(Arguments[22], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (785): ModPow(Arguments[22], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (786): ModPow(Arguments[22], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (787): ModPow(Arguments[22], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (788): ModPow(Arguments[22], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (789): ModPow(Arguments[22], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (790): ModPow(Arguments[22], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (791): ModPow(Arguments[22], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (792): ModPow(Arguments[22], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (793): ModPow(Arguments[22], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (794): ModPow(Arguments[22], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (795): ModPow(Arguments[22], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (796): ModPow(Arguments[22], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (797): ModPow(Arguments[22], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (798): ModPow(Arguments[22], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (799): ModPow(Arguments[22], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (800): ModPow(Arguments[22], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (801): ModPow(Arguments[22], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (802): ModPow(Arguments[22], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (803): ModPow(Arguments[22], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (804): ModPow(Arguments[22], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (805): ModPow(Arguments[22], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (806): ModPow(Arguments[22], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (807): ModPow(Arguments[22], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (808): ModPow(Arguments[22], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (809): ModPow(Arguments[22], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (810): ModPow(Arguments[22], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (811): ModPow(Arguments[22], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (812): ModPow(Arguments[22], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (813): ModPow(Arguments[22], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (814): ModPow(Arguments[22], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (815): ModPow(Arguments[22], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (816): ModPow(Arguments[22], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (817): ModPow(Arguments[22], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (818): ModPow(Arguments[22], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (819): ModPow(Arguments[22], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (820): ModPow(Arguments[22], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (821): ModPow(Arguments[22], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (822): ModPow(Arguments[22], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (823): ModPow(Arguments[22], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (824): ModPow(Arguments[22], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (825): ModPow(Arguments[22], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (826): ModPow(Arguments[22], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (827): ModPow(Arguments[22], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (828): ModPow(Arguments[22], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (829): ModPow(Arguments[22], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (830): ModPow(Arguments[22], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (831): ModPow(Arguments[22], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1'),                                         // (832): ModPow(Arguments[22], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '1'),                                         // (833): ModPow(Arguments[22], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (834): ModPow(Arguments[22], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (835): ModPow(Arguments[22], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (836): ModPow(Arguments[22], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (837): ModPow(Arguments[22], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (838): ModPow(Arguments[22], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '1'),                                         // (839): ModPow(Arguments[22], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '1'),                                         // (840): ModPow(Arguments[22], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '1'),                                         // (841): ModPow(Arguments[22], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '1'),                                         // (842): ModPow(Arguments[22], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '1'),                                         // (843): ModPow(Arguments[22], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1'),                                         // (844): ModPow(Arguments[22], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '7988833890318685901212726311926806761725'),  // (845): ModPow(Arguments[27], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '5148568294787445239866201'),                 // (846): ModPow(Arguments[27], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '38401'),                                     // (847): ModPow(Arguments[27], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (848): ModPow(Arguments[27], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (849): ModPow(Arguments[27], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (850): ModPow(Arguments[27], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '38401'),                                     // (851): ModPow(Arguments[27], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '130490207006992999157'),                     // (852): ModPow(Arguments[27], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '34506353743010818232365'),                   // (853): ModPow(Arguments[27], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '7253247581171106794000084371'),              // (854): ModPow(Arguments[27], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '16245866318374822721080820001'),             // (855): ModPow(Arguments[27], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '169517945578168223202900252578367406081'),   // (856): ModPow(Arguments[27], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '3421735504823433937792029650276980146304' + 
                                  '2258241166493763346897218570556357229072' + 
                                  '38401'),                                     // (857): ModPow(Arguments[27], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1187131483794548087057251031888088129196' + 
                                  '7'),                                         // (858): ModPow(Arguments[27], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '6735697371644631054340641'),                 // (859): ModPow(Arguments[27], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '89841'),                                     // (860): ModPow(Arguments[27], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (861): ModPow(Arguments[27], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (862): ModPow(Arguments[27], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (863): ModPow(Arguments[27], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '89841'),                                     // (864): ModPow(Arguments[27], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '110006898600848429501'),                     // (865): ModPow(Arguments[27], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '11171402529830345992981'),                   // (866): ModPow(Arguments[27], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '5830358195706577919308071991'),              // (867): ModPow(Arguments[27], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '110374694932603505664010002570'),            // (868): ModPow(Arguments[27], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '412888889373111418036887193481196477841'),   // (869): ModPow(Arguments[27], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '3344086897113807654753542056328012446226' + 
                                  '8224845218015886795626667607103165861825' + 
                                  '89841'),                                     // (870): ModPow(Arguments[27], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '5958366508614372012765343992591971123958'),  // (871): ModPow(Arguments[27], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '3256249020612886152513081'),                 // (872): ModPow(Arguments[27], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '50481'),                                     // (873): ModPow(Arguments[27], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (874): ModPow(Arguments[27], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (875): ModPow(Arguments[27], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (876): ModPow(Arguments[27], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '50481'),                                     // (877): ModPow(Arguments[27], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '30209307788225589625'),                      // (878): ModPow(Arguments[27], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '52585385726947229476657'),                   // (879): ModPow(Arguments[27], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '7126163670405837993218201521'),              // (880): ModPow(Arguments[27], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '7429765682136129605383764114'),              // (881): ModPow(Arguments[27], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '257348726978361023711428404438401159761'),   // (882): ModPow(Arguments[27], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '5547447332868100013602315707433025650027' + 
                                  '6160296916006439734444000550169688327415' + 
                                  '0481'),                                      // (883): ModPow(Arguments[27], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1456745483830064558835697099230802948779' + 
                                  '3'),                                         // (884): ModPow(Arguments[27], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3465261169834066658873001'),                 // (885): ModPow(Arguments[27], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '4001'),                                      // (886): ModPow(Arguments[27], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (887): ModPow(Arguments[27], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (888): ModPow(Arguments[27], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (889): ModPow(Arguments[27], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '4001'),                                      // (890): ModPow(Arguments[27], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '92459981910295706085'),                      // (891): ModPow(Arguments[27], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '72561073571592773476201'),                   // (892): ModPow(Arguments[27], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '3797139709219619501533949251'),              // (893): ModPow(Arguments[27], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '106980778407771931437199813569'),            // (894): ModPow(Arguments[27], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '78192658067380956257311769393278253281'),    // (895): ModPow(Arguments[27], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1408889324440726764561789970712341963161' + 
                                  '4466819896432148595726903740765609223266' + 
                                  '04001'),                                     // (896): ModPow(Arguments[27], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '409'),                                       // (897): ModPow(Arguments[27], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '409'),                                       // (898): ModPow(Arguments[27], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '409'),                                       // (899): ModPow(Arguments[27], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '17'),                                        // (900): ModPow(Arguments[27], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (901): ModPow(Arguments[27], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '9'),                                         // (902): ModPow(Arguments[27], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '409'),                                       // (903): ModPow(Arguments[27], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '409'),                                       // (904): ModPow(Arguments[27], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '409'),                                       // (905): ModPow(Arguments[27], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '409'),                                       // (906): ModPow(Arguments[27], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '409'),                                       // (907): ModPow(Arguments[27], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '409'),                                       // (908): ModPow(Arguments[27], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '409'),                                       // (909): ModPow(Arguments[27], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '130988473210595027479940401'),               // (910): ModPow(Arguments[27], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '3251476073012315277525601'),                 // (911): ModPow(Arguments[27], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '40401'),                                     // (912): ModPow(Arguments[27], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (913): ModPow(Arguments[27], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (914): ModPow(Arguments[27], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (915): ModPow(Arguments[27], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '40401'),                                     // (916): ModPow(Arguments[27], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '105039318310910907549'),                     // (917): ModPow(Arguments[27], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '19954160530876480451365'),                   // (918): ModPow(Arguments[27], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '130988473210595027479940401'),               // (919): ModPow(Arguments[27], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '130988473210595027479940401'),               // (920): ModPow(Arguments[27], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '130988473210595027479940401'),               // (921): ModPow(Arguments[27], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '130988473210595027479940401'),               // (922): ModPow(Arguments[27], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '6333426942037180061468876085711466663448'),  // (923): ModPow(Arguments[27], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '5586449842304745837348801'),                 // (924): ModPow(Arguments[27], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (925): ModPow(Arguments[27], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (926): ModPow(Arguments[27], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (927): ModPow(Arguments[27], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (928): ModPow(Arguments[27], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (929): ModPow(Arguments[27], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '102000585877195389601'),                     // (930): ModPow(Arguments[27], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '32430192288655393882633'),                   // (931): ModPow(Arguments[27], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '7708909514174894778630168871'),              // (932): ModPow(Arguments[27], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '63326746731630688835380428840'),             // (933): ModPow(Arguments[27], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '449200434813741342062036853796236627841'),   // (934): ModPow(Arguments[27], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '6163295137584433972665632262375637415859' + 
                                  '2050234697016489076465616792406471860400' + 
                                  '001'),                                       // (935): ModPow(Arguments[27], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1123009315077908261400473015693756786024' + 
                                  '1'),                                         // (936): ModPow(Arguments[27], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '2524666843570695986145081'),                 // (937): ModPow(Arguments[27], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '84481'),                                     // (938): ModPow(Arguments[27], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (939): ModPow(Arguments[27], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (940): ModPow(Arguments[27], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (941): ModPow(Arguments[27], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '84481'),                                     // (942): ModPow(Arguments[27], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '8926951237233399525'),                       // (943): ModPow(Arguments[27], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '61075329131778720537853'),                   // (944): ModPow(Arguments[27], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '1456005770418730953131748661'),              // (945): ModPow(Arguments[27], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '34380836096572375178445377699'),             // (946): ModPow(Arguments[27], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '588883970014590685059472971362032680961'),   // (947): ModPow(Arguments[27], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1389493549589383088178176266891069464971' + 
                                  '2003405554682798315608307964565685543920' + 
                                  '84481'),                                     // (948): ModPow(Arguments[27], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1688890019543834619912581533982082363479'),  // (949): ModPow(Arguments[27], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '3428774201945865184086161'),                 // (950): ModPow(Arguments[27], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '83761'),                                     // (951): ModPow(Arguments[27], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (952): ModPow(Arguments[27], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (953): ModPow(Arguments[27], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (954): ModPow(Arguments[27], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '83761'),                                     // (955): ModPow(Arguments[27], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '53900616314065251585'),                      // (956): ModPow(Arguments[27], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '72916814383969410359569'),                   // (957): ModPow(Arguments[27], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '3130573998159467565932095981'),              // (958): ModPow(Arguments[27], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '78332213348878167487470888646'),             // (959): ModPow(Arguments[27], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '557953389609156553450269981917915688241'),   // (960): ModPow(Arguments[27], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '4751289477008526931865738484288600626134' + 
                                  '6881646494126600332011705363143296799848' + 
                                  '3761'),                                      // (961): ModPow(Arguments[27], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1122313443732541882198803137204368691089' + 
                                  '7'),                                         // (962): ModPow(Arguments[27], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '1028099348668120864148361'),                 // (963): ModPow(Arguments[27], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '63761'),                                     // (964): ModPow(Arguments[27], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '25'),                                        // (965): ModPow(Arguments[27], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (966): ModPow(Arguments[27], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (967): ModPow(Arguments[27], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '63761'),                                     // (968): ModPow(Arguments[27], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '142682957565063629733'),                     // (969): ModPow(Arguments[27], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '64560848482948541481853'),                   // (970): ModPow(Arguments[27], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '210393679004408834590806691'),               // (971): ModPow(Arguments[27], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '20135048560348646144329911054'),             // (972): ModPow(Arguments[27], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '369245470873681569287620583957406588241'),   // (973): ModPow(Arguments[27], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '2651525061060879582235185525904269620475' + 
                                  '8956403909462586458745479858602996539866' + 
                                  '63761'),                                     // (974): ModPow(Arguments[27], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1046295120353288076507151188566813717091' + 
                                  '8'),                                         // (975): ModPow(Arguments[27], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '7010537727956888263826209'),                 // (976): ModPow(Arguments[27], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '38009'),                                     // (977): ModPow(Arguments[27], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '33'),                                        // (978): ModPow(Arguments[27], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (979): ModPow(Arguments[27], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '9'),                                         // (980): ModPow(Arguments[27], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '38009'),                                     // (981): ModPow(Arguments[27], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '158673662747099809761'),                     // (982): ModPow(Arguments[27], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '68023592141793048369481'),                   // (983): ModPow(Arguments[27], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '5093389146620729739215185729'),              // (984): ModPow(Arguments[27], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '34142438411051610688694553249'),             // (985): ModPow(Arguments[27], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '144887188940816290943540888293460538649'),   // (986): ModPow(Arguments[27], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '4021193877981536461360739491419286094047' + 
                                  '1245897271296463562092181135035454893800' + 
                                  '9'),                                         // (987): ModPow(Arguments[27], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '4108336291611266797066686457031522535911'),  // (988): ModPow(Arguments[27], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '488209665875601649141401'),                  // (989): ModPow(Arguments[27], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '50001'),                                     // (990): ModPow(Arguments[27], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '9'),                                         // (991): ModPow(Arguments[27], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (992): ModPow(Arguments[27], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (993): ModPow(Arguments[27], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '50001'),                                     // (994): ModPow(Arguments[27], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '119766213219198486801'),                     // (995): ModPow(Arguments[27], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '13118371691943090318769'),                   // (996): ModPow(Arguments[27], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '5528030777002400504032883341'),              // (997): ModPow(Arguments[27], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '63110565706010577218044060731'),             // (998): ModPow(Arguments[27], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '189472921804489949628668281611217964401'),   // (999): ModPow(Arguments[27], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '1785500433260221701999852757467524035631' + 
                                  '3794095558826124069242789083793274145325' + 
                                  '50001'),                                     // (1000): ModPow(Arguments[27], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1798293815762308392062511430007858719244' + 
                                  '4'),                                         // (1001): ModPow(Arguments[27], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '331729943749055123225249'),                  // (1002): ModPow(Arguments[27], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '6249'),                                      // (1003): ModPow(Arguments[27], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '41'),                                        // (1004): ModPow(Arguments[27], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1005): ModPow(Arguments[27], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1006): ModPow(Arguments[27], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '6249'),                                      // (1007): ModPow(Arguments[27], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '170923299849154402957'),                     // (1008): ModPow(Arguments[27], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '52372444501170500635417'),                   // (1009): ModPow(Arguments[27], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '8628137390983769312388908119'),              // (1010): ModPow(Arguments[27], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '44758489951705260078436321575'),             // (1011): ModPow(Arguments[27], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '123401325321054935425634103598688303689'),   // (1012): ModPow(Arguments[27], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1774523821642882615255307733967793668723' + 
                                  '5924179129042954627948347479104995727539' + 
                                  '06249'),                                     // (1013): ModPow(Arguments[27], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '1239671455230210738373154673842619360743' + 
                                  '9'),                                         // (1014): ModPow(Arguments[32], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '1270743299610513543185200'),                 // (1015): ModPow(Arguments[32], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1016): ModPow(Arguments[32], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1017): ModPow(Arguments[32], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1018): ModPow(Arguments[32], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1019): ModPow(Arguments[32], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1020): ModPow(Arguments[32], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '29430163721681943152'),                      // (1021): ModPow(Arguments[32], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '19926308872266075565924'),                   // (1022): ModPow(Arguments[32], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '6518712535172079907692811480'),              // (1023): ModPow(Arguments[32], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '8858968315902558242747080695'),              // (1024): ModPow(Arguments[32], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '545780982617431091571630500635507425280'),   // (1025): ModPow(Arguments[32], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '1550257700378684013910404035233372987967' + 
                                  '4706353398505598306655883789062500000000' + 
                                  '00000'),                                     // (1026): ModPow(Arguments[32], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1431393628653752310672036200665647474786' + 
                                  '4'),                                         // (1027): ModPow(Arguments[32], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '1436866894899835958647600'),                 // (1028): ModPow(Arguments[32], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1029): ModPow(Arguments[32], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1030): ModPow(Arguments[32], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1031): ModPow(Arguments[32], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1032): ModPow(Arguments[32], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1033): ModPow(Arguments[32], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '20849744308707920864'),                      // (1034): ModPow(Arguments[32], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '62751410257261874324632'),                   // (1035): ModPow(Arguments[32], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '904204827378144355461344320'),               // (1036): ModPow(Arguments[32], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '19007317790048347947989102863'),             // (1037): ModPow(Arguments[32], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '45116597570554848724436744705639710720'),    // (1038): ModPow(Arguments[32], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '7867435988202401812023301394625335314358' + 
                                  '9492901810444891452789306640625000000000' + 
                                  '0000'),                                      // (1039): ModPow(Arguments[32], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1368641540918476372413949733403010001224' + 
                                  '5'),                                         // (1040): ModPow(Arguments[32], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '1071218250292498820880000'),                 // (1041): ModPow(Arguments[32], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1042): ModPow(Arguments[32], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1043): ModPow(Arguments[32], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1044): ModPow(Arguments[32], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1045): ModPow(Arguments[32], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1046): ModPow(Arguments[32], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '135144096041229344672'),                     // (1047): ModPow(Arguments[32], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '29421136407207059208604'),                   // (1048): ModPow(Arguments[32], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '3004764282035096972134845520'),              // (1049): ModPow(Arguments[32], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '48842852480058364583214453535'),             // (1050): ModPow(Arguments[32], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '482824180383600270058993993171200901120'),   // (1051): ModPow(Arguments[32], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '4006847584722346752728233093120840946355' + 
                                  '0879081594757735729217529296875000000000' + 
                                  '0000'),                                      // (1052): ModPow(Arguments[32], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1048786772198849127278797791692427685191' + 
                                  '1'),                                         // (1053): ModPow(Arguments[32], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3792961172643882264553400'),                 // (1054): ModPow(Arguments[32], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1055): ModPow(Arguments[32], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1056): ModPow(Arguments[32], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1057): ModPow(Arguments[32], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1058): ModPow(Arguments[32], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1059): ModPow(Arguments[32], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '17235871229612910956'),                      // (1060): ModPow(Arguments[32], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '35344438954254739951552'),                   // (1061): ModPow(Arguments[32], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '4949783197066050139618693750'),              // (1062): ModPow(Arguments[32], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '63363948955570773100025660892'),             // (1063): ModPow(Arguments[32], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '665880634372205983269879035982983987200'),   // (1064): ModPow(Arguments[32], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1044856613937669349453557558976904418024' + 
                                  '3895425519440323114395141601562500000000' + 
                                  '00000'),                                     // (1065): ModPow(Arguments[32], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '1000000'),                                   // (1066): ModPow(Arguments[32], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '1000000'),                                   // (1067): ModPow(Arguments[32], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1068): ModPow(Arguments[32], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1069): ModPow(Arguments[32], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1070): ModPow(Arguments[32], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1071): ModPow(Arguments[32], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1072): ModPow(Arguments[32], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '1000000'),                                   // (1073): ModPow(Arguments[32], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '1000000'),                                   // (1074): ModPow(Arguments[32], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '1000000'),                                   // (1075): ModPow(Arguments[32], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '1000000'),                                   // (1076): ModPow(Arguments[32], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '1000000'),                                   // (1077): ModPow(Arguments[32], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '1000000'),                                   // (1078): ModPow(Arguments[32], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '8453071012459416007582441832780797014117'),  // (1079): ModPow(Arguments[32], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '3372293128792268489059200'),                 // (1080): ModPow(Arguments[32], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1081): ModPow(Arguments[32], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1082): ModPow(Arguments[32], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1083): ModPow(Arguments[32], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1084): ModPow(Arguments[32], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1085): ModPow(Arguments[32], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '102969770367949509964'),                     // (1086): ModPow(Arguments[32], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '42737805797996593276084'),                   // (1087): ModPow(Arguments[32], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '2701294624255678764804334480'),              // (1088): ModPow(Arguments[32], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '53480787612199329126331898732'),             // (1089): ModPow(Arguments[32], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '594237690933481014995323799245265305600'),   // (1090): ModPow(Arguments[32], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000000'),                     // (1091): ModPow(Arguments[32], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1381239135403071133020128638444586729738' + 
                                  '5'),                                         // (1092): ModPow(Arguments[32], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '6718033252394271362378600'),                 // (1093): ModPow(Arguments[32], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1094): ModPow(Arguments[32], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1095): ModPow(Arguments[32], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1096): ModPow(Arguments[32], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1097): ModPow(Arguments[32], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1098): ModPow(Arguments[32], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '6443994309319133800'),                       // (1099): ModPow(Arguments[32], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '12938546573337402394924'),                   // (1100): ModPow(Arguments[32], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '608074208664909754814202340'),               // (1101): ModPow(Arguments[32], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '18620218397080429043803053597'),             // (1102): ModPow(Arguments[32], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '545780982617431091571630500635507425280'),   // (1103): ModPow(Arguments[32], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '5570856329592880288047423579037009666592' + 
                                  '4393164459615945816040039062500000000000' + 
                                  '0000'),                                      // (1104): ModPow(Arguments[32], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '7275128965311123387695924807586431524434'),  // (1105): ModPow(Arguments[32], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '5788419751601433689932600'),                 // (1106): ModPow(Arguments[32], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1107): ModPow(Arguments[32], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1108): ModPow(Arguments[32], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1109): ModPow(Arguments[32], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1110): ModPow(Arguments[32], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1111): ModPow(Arguments[32], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '4391319926980461748'),                       // (1112): ModPow(Arguments[32], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '63710323767511737636412'),                   // (1113): ModPow(Arguments[32], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '6859490076251459418421972870'),              // (1114): ModPow(Arguments[32], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '96877840020399241077012567760'),             // (1115): ModPow(Arguments[32], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '322691311377233747794662612707898818560'),   // (1116): ModPow(Arguments[32], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '2843916452895598236481909822396738074523' + 
                                  '6255279451142996549606323242187500000000' + 
                                  '00000'),                                     // (1117): ModPow(Arguments[32], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1080680247078345980511980119815660903500' + 
                                  '5'),                                         // (1118): ModPow(Arguments[32], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '2198667809407528942487000'),                 // (1119): ModPow(Arguments[32], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1120): ModPow(Arguments[32], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1121): ModPow(Arguments[32], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1122): ModPow(Arguments[32], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1123): ModPow(Arguments[32], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1124): ModPow(Arguments[32], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '150448837261418220716'),                     // (1125): ModPow(Arguments[32], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '43677831069556673916928'),                   // (1126): ModPow(Arguments[32], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '1990677342493887366348385180'),              // (1127): ModPow(Arguments[32], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '96271331437638390128306360674'),             // (1128): ModPow(Arguments[32], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '610232801263147077711216159992106188800'),   // (1129): ModPow(Arguments[32], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '4450545645229852147802813240509006709189' + 
                                  '0659867203794419765472412109375000000000' + 
                                  '0000'),                                      // (1130): ModPow(Arguments[32], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1150982497389232565518592920038598559071'),  // (1131): ModPow(Arguments[32], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '5501166704180402900569200'),                 // (1132): ModPow(Arguments[32], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1133): ModPow(Arguments[32], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1134): ModPow(Arguments[32], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1135): ModPow(Arguments[32], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1136): ModPow(Arguments[32], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1137): ModPow(Arguments[32], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '1616977996381595824'),                       // (1138): ModPow(Arguments[32], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '1646961355912967004184'),                    // (1139): ModPow(Arguments[32], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '792843189141094206068879770'),               // (1140): ModPow(Arguments[32], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '39760367049568425485988877127'),             // (1141): ModPow(Arguments[32], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '129834194244047510918222018602199941120'),   // (1142): ModPow(Arguments[32], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '1044425597258533498028599786639630808693' + 
                                  '3686354313977062702178955078125000000000' + 
                                  '00000'),                                     // (1143): ModPow(Arguments[32], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1421846240599713285887365591589688477804' + 
                                  '8'),                                         // (1144): ModPow(Arguments[32], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '4615690327592547832852200'),                 // (1145): ModPow(Arguments[32], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1146): ModPow(Arguments[32], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1147): ModPow(Arguments[32], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1148): ModPow(Arguments[32], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1149): ModPow(Arguments[32], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1150): ModPow(Arguments[32], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '106988029248012645168'),                     // (1151): ModPow(Arguments[32], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '66605291591551453008724'),                   // (1152): ModPow(Arguments[32], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '2232088996664921270862722680'),              // (1153): ModPow(Arguments[32], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '106592491470049951725047170243'),            // (1154): ModPow(Arguments[32], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '85149814822146479290519589821465231360'),    // (1155): ModPow(Arguments[32], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '2818605503556229926402464747896628449730' + 
                                  '3718126204330474138259887695312500000000' + 
                                  '00000'),                                     // (1156): ModPow(Arguments[32], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1594601871723568948201269118750686046768' + 
                                  '7'),                                         // (1157): ModPow(Arguments[32], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '3680599664523282318460600'),                 // (1158): ModPow(Arguments[32], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1159): ModPow(Arguments[32], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1160): ModPow(Arguments[32], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1161): ModPow(Arguments[32], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1162): ModPow(Arguments[32], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1163): ModPow(Arguments[32], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '117192783851699581084'),                     // (1164): ModPow(Arguments[32], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '48650190950653476388660'),                   // (1165): ModPow(Arguments[32], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '7884331907120116864016469010'),              // (1166): ModPow(Arguments[32], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '35990504563387943735466719986'),             // (1167): ModPow(Arguments[32], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '505747765365839461005547655519681904640'),   // (1168): ModPow(Arguments[32], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '1277059677650822993727257061678803662374' + 
                                  '5483666425570845603942871093750000000000' + 
                                  '0000'),                                      // (1169): ModPow(Arguments[32], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '7861856982867576119427210258134162329524'),  // (1170): ModPow(Arguments[32], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '723432017651510314628800'),                  // (1171): ModPow(Arguments[32], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1172): ModPow(Arguments[32], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1173): ModPow(Arguments[32], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1174): ModPow(Arguments[32], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1175): ModPow(Arguments[32], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1176): ModPow(Arguments[32], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '157605447728905019852'),                     // (1177): ModPow(Arguments[32], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '12733721705073300165508'),                   // (1178): ModPow(Arguments[32], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '2681591973992321846718722680'),              // (1179): ModPow(Arguments[32], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '74451097439571181274560667300'),             // (1180): ModPow(Arguments[32], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '385648113611064569307299120172205342720'),   // (1181): ModPow(Arguments[32], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '2649888206854510302662748135685971684338' + 
                                  '8241613865830004215240478515625000000000' + 
                                  '00000'),                                     // (1182): ModPow(Arguments[32], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '1516069521151327368099557160375872789407'),  // (1183): ModPow(Arguments[37], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '6450010713733832871021801'),                 // (1184): ModPow(Arguments[37], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '3201'),                                      // (1185): ModPow(Arguments[37], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1186): ModPow(Arguments[37], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1187): ModPow(Arguments[37], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1188): ModPow(Arguments[37], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '3201'),                                      // (1189): ModPow(Arguments[37], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '46751565478586538737'),                      // (1190): ModPow(Arguments[37], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '34127911259979348114709'),                   // (1191): ModPow(Arguments[37], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '8226927340119404306609468671'),              // (1192): ModPow(Arguments[37], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '5032676919882317979970445223'),              // (1193): ModPow(Arguments[37], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '269234384153561295675194518800936468481'),   // (1194): ModPow(Arguments[37], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '2171460772350328136867499149497038504580' + 
                                  '0166564593212727339951254079933396459948' + 
                                  '03201'),                                     // (1195): ModPow(Arguments[37], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '567827018478200731518037055545756891167'),   // (1196): ModPow(Arguments[37], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '5115760747570085444088529'),                 // (1197): ModPow(Arguments[37], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '40129'),                                     // (1198): ModPow(Arguments[37], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1199): ModPow(Arguments[37], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1200): ModPow(Arguments[37], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1201): ModPow(Arguments[37], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '40129'),                                     // (1202): ModPow(Arguments[37], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '91172183292596694145'),                      // (1203): ModPow(Arguments[37], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '63360031621109745739021'),                   // (1204): ModPow(Arguments[37], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '5936221178133358837875316609'),              // (1205): ModPow(Arguments[37], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '108385493254429339975669444667'),            // (1206): ModPow(Arguments[37], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '436213832408915386815963382648865292289'),   // (1207): ModPow(Arguments[37], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '2442337481950332032194192707437156084051' + 
                                  '9179703263874501043843211227970989519858' + 
                                  '40129'),                                     // (1208): ModPow(Arguments[37], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1732411557716637056637180111103272443273' + 
                                  '9'),                                         // (1209): ModPow(Arguments[37], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '6958142038839334115421609'),                 // (1210): ModPow(Arguments[37], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '39009'),                                     // (1211): ModPow(Arguments[37], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1212): ModPow(Arguments[37], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1213): ModPow(Arguments[37], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '9'),                                         // (1214): ModPow(Arguments[37], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '39009'),                                     // (1215): ModPow(Arguments[37], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '71714213944594583177'),                      // (1216): ModPow(Arguments[37], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '943751564212858671529'),                     // (1217): ModPow(Arguments[37], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '7791070508136773930706631249'),              // (1218): ModPow(Arguments[37], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '7255461103402066018496775277'),              // (1219): ModPow(Arguments[37], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '434559525871193534289801386431566839809'),   // (1220): ModPow(Arguments[37], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '2115640167727279199526601570675903981351' + 
                                  '8437168232390410909420232759692477356777' + 
                                  '39009'),                                     // (1221): ModPow(Arguments[37], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1444820971366227544407879877716651308031' + 
                                  '1'),                                         // (1222): ModPow(Arguments[37], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '6482036434173976736576201'),                 // (1223): ModPow(Arguments[37], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '92001'),                                     // (1224): ModPow(Arguments[37], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1225): ModPow(Arguments[37], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1226): ModPow(Arguments[37], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1227): ModPow(Arguments[37], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '92001'),                                     // (1228): ModPow(Arguments[37], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '72246405425859726893'),                      // (1229): ModPow(Arguments[37], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '28225903500507674361169'),                   // (1230): ModPow(Arguments[37], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '7553513587257723754245406441'),              // (1231): ModPow(Arguments[37], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '41209807272796962358915265107'),             // (1232): ModPow(Arguments[37], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '93431325487413395073577901333434859521'),    // (1233): ModPow(Arguments[37], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1655779649668801177774707967458788206030' + 
                                  '4150841946485096515147910521197508536657' + 
                                  '92001'),                                     // (1234): ModPow(Arguments[37], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1235): ModPow(Arguments[37], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1236): ModPow(Arguments[37], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '35647'),                                     // (1237): ModPow(Arguments[37], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '7'),                                         // (1238): ModPow(Arguments[37], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1239): ModPow(Arguments[37], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '47'),                                        // (1240): ModPow(Arguments[37], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '35647'),                                     // (1241): ModPow(Arguments[37], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '113315357642051549867'),                     // (1242): ModPow(Arguments[37], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1243): ModPow(Arguments[37], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1244): ModPow(Arguments[37], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1245): ModPow(Arguments[37], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1246): ModPow(Arguments[37], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '977677435906606235647'),                     // (1247): ModPow(Arguments[37], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '1803496544671443037482583305050601483212' + 
                                  '7'),                                         // (1248): ModPow(Arguments[37], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '3112430717607034583238849'),                 // (1249): ModPow(Arguments[37], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '82049'),                                     // (1250): ModPow(Arguments[37], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1251): ModPow(Arguments[37], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1252): ModPow(Arguments[37], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1253): ModPow(Arguments[37], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '82049'),                                     // (1254): ModPow(Arguments[37], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '125232633407324447909'),                     // (1255): ModPow(Arguments[37], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '839107280885216488285'),                     // (1256): ModPow(Arguments[37], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '4885583386937506825673314489'),              // (1257): ModPow(Arguments[37], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '66581387940020785736238909720'),             // (1258): ModPow(Arguments[37], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '320818393109613335467600116563583172609'),   // (1259): ModPow(Arguments[37], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '1329413284563065293452996792308048925527' + 
                                  '6057977425222835526631603573026433200780' + 
                                  '82049'),                                     // (1260): ModPow(Arguments[37], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1748365971487872071639102574746373906847' + 
                                  '0'),                                         // (1261): ModPow(Arguments[37], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '6598502150470478218253601'),                 // (1262): ModPow(Arguments[37], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (1263): ModPow(Arguments[37], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1264): ModPow(Arguments[37], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1265): ModPow(Arguments[37], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1266): ModPow(Arguments[37], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (1267): ModPow(Arguments[37], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '156852667681557530625'),                     // (1268): ModPow(Arguments[37], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '67415045287597378185493'),                   // (1269): ModPow(Arguments[37], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '143403419410679723800435141'),               // (1270): ModPow(Arguments[37], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '29225723507092890937804085895'),             // (1271): ModPow(Arguments[37], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '298892946068779283528365039349095464961'),   // (1272): ModPow(Arguments[37], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '3428305614577778722188490154649341951198' + 
                                  '7691841251781108667035788767069019233792' + 
                                  '00001'),                                     // (1273): ModPow(Arguments[37], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '9028397070438233796631836764466433217315'),  // (1274): ModPow(Arguments[37], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '5404994550769303016213841'),                 // (1275): ModPow(Arguments[37], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '94241'),                                     // (1276): ModPow(Arguments[37], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1277): ModPow(Arguments[37], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1278): ModPow(Arguments[37], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (1279): ModPow(Arguments[37], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '94241'),                                     // (1280): ModPow(Arguments[37], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '119923482272065946673'),                     // (1281): ModPow(Arguments[37], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '56809149234958607665129'),                   // (1282): ModPow(Arguments[37], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '793488961213924268979980191'),               // (1283): ModPow(Arguments[37], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '65265560252878059464043666110'),             // (1284): ModPow(Arguments[37], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '339681313795779382742900612821847900161'),   // (1285): ModPow(Arguments[37], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1118293698040449791714998192885508828079' + 
                                  '4269247488027674412338538562360223477603' + 
                                  '94241'),                                     // (1286): ModPow(Arguments[37], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1026803006581764335075132761767172287769' + 
                                  '4'),                                         // (1287): ModPow(Arguments[37], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '346132810113867282401969'),                  // (1288): ModPow(Arguments[37], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '99969'),                                     // (1289): ModPow(Arguments[37], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1290): ModPow(Arguments[37], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1291): ModPow(Arguments[37], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '69'),                                        // (1292): ModPow(Arguments[37], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '99969'),                                     // (1293): ModPow(Arguments[37], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '58886247309562269249'),                      // (1294): ModPow(Arguments[37], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '30882713178769411728937'),                   // (1295): ModPow(Arguments[37], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '5776352785654807226493121489'),              // (1296): ModPow(Arguments[37], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '79078310616492842598104622846'),             // (1297): ModPow(Arguments[37], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '280378430365084835135066921029953650689'),   // (1298): ModPow(Arguments[37], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '2602855152517330869615268205644857432163' + 
                                  '3503732240516245542432659431982486712609' + 
                                  '9969'),                                      // (1299): ModPow(Arguments[37], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1404160768992021712360100414952840870001'),  // (1300): ModPow(Arguments[37], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '6750652967695965215909169'),                 // (1301): ModPow(Arguments[37], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '59969'),                                     // (1302): ModPow(Arguments[37], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1303): ModPow(Arguments[37], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1304): ModPow(Arguments[37], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '69'),                                        // (1305): ModPow(Arguments[37], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '59969'),                                     // (1306): ModPow(Arguments[37], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '61997335400723468261'),                      // (1307): ModPow(Arguments[37], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '455253929706373030009'),                     // (1308): ModPow(Arguments[37], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '2489001130270348855870422229'),              // (1309): ModPow(Arguments[37], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '51155973729569826733384620230'),             // (1310): ModPow(Arguments[37], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '165033945752787530788377926997783871489'),   // (1311): ModPow(Arguments[37], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '7162644421432004739922087328296923635967' + 
                                  '2695096777898108257697494397472530943265' + 
                                  '9969'),                                      // (1312): ModPow(Arguments[37], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '8050551520734296989499045027755118970470'),  // (1313): ModPow(Arguments[37], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '5538159463845273405430847'),                 // (1314): ModPow(Arguments[37], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '94047'),                                     // (1315): ModPow(Arguments[37], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '7'),                                         // (1316): ModPow(Arguments[37], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1317): ModPow(Arguments[37], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '47'),                                        // (1318): ModPow(Arguments[37], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '94047'),                                     // (1319): ModPow(Arguments[37], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '38596066691880141687'),                      // (1320): ModPow(Arguments[37], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '34574201631437832347431'),                   // (1321): ModPow(Arguments[37], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '5789435192463507065374668577'),              // (1322): ModPow(Arguments[37], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '102042187679220839795195139481'),            // (1323): ModPow(Arguments[37], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '231741628765783377853353994531779903487'),   // (1324): ModPow(Arguments[37], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '1176499098024390125149229735097896510519' + 
                                  '7652806658153929912811526320013365385233' + 
                                  '94047'),                                     // (1325): ModPow(Arguments[37], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '6726273779353753642334044834040436225758'),  // (1326): ModPow(Arguments[37], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '3128245551847204743825049'),                 // (1327): ModPow(Arguments[37], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '81249'),                                     // (1328): ModPow(Arguments[37], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1329): ModPow(Arguments[37], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1330): ModPow(Arguments[37], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1331): ModPow(Arguments[37], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '81249'),                                     // (1332): ModPow(Arguments[37], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '97465972361178412981'),                      // (1333): ModPow(Arguments[37], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '13731828631980809171605'),                   // (1334): ModPow(Arguments[37], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '8531187070083545535209614699'),              // (1335): ModPow(Arguments[37], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '32843804444190128135271978179'),             // (1336): ModPow(Arguments[37], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '340339319927105515398570179500166873089'),   // (1337): ModPow(Arguments[37], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '5481662766902394178581583112384336499889' + 
                                  '4256010310277885858964986404812909603381' + 
                                  '249'),                                       // (1338): ModPow(Arguments[37], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '4848545545853696469910411532815419151232'),  // (1339): ModPow(Arguments[37], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '6445136261853642285129143'),                 // (1340): ModPow(Arguments[37], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '22943'),                                     // (1341): ModPow(Arguments[37], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '7'),                                         // (1342): ModPow(Arguments[37], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1343): ModPow(Arguments[37], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '43'),                                        // (1344): ModPow(Arguments[37], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '22943'),                                     // (1345): ModPow(Arguments[37], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '82488583925638654819'),                      // (1346): ModPow(Arguments[37], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '58573651762026035867071'),                   // (1347): ModPow(Arguments[37], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '3936310231898699109718995373'),              // (1348): ModPow(Arguments[37], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '62673941600994586021178285287'),             // (1349): ModPow(Arguments[37], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '363178360709761500385421390280837300223'),   // (1350): ModPow(Arguments[37], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1514547410687608461172618992989158137687' + 
                                  '5238312333331435343589015536404765819079' + 
                                  '22943'),                                     // (1351): ModPow(Arguments[37], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '4068823655256147711045228539984667980352'),  // (1352): ModPow(Arguments[42], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '3441936450988278695507200'),                 // (1353): ModPow(Arguments[42], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1354): ModPow(Arguments[42], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1355): ModPow(Arguments[42], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1356): ModPow(Arguments[42], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1357): ModPow(Arguments[42], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1358): ModPow(Arguments[42], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '152369797895736781716'),                     // (1359): ModPow(Arguments[42], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '57898844080768083253732'),                   // (1360): ModPow(Arguments[42], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '2533542661624259484856749010'),              // (1361): ModPow(Arguments[42], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '28554392140664715502511134962'),             // (1362): ModPow(Arguments[42], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '610596667691436588678621773680177315840'),   // (1363): ModPow(Arguments[42], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '6351169832430677292430502112012546955810' + 
                                  '4214229388162493705749511718750000000000' + 
                                  '0000'),                                      // (1364): ModPow(Arguments[42], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '2459416040967507778221411574580703848967'),  // (1365): ModPow(Arguments[42], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '6096124235943743407656200'),                 // (1366): ModPow(Arguments[42], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1367): ModPow(Arguments[42], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1368): ModPow(Arguments[42], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1369): ModPow(Arguments[42], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1370): ModPow(Arguments[42], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1371): ModPow(Arguments[42], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '47392923733568046004'),                      // (1372): ModPow(Arguments[42], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '55598501523132497896576'),                   // (1373): ModPow(Arguments[42], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '4596504892864768070276834170'),              // (1374): ModPow(Arguments[42], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '75932668505508150601220696519'),             // (1375): ModPow(Arguments[42], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '159057292825084874181749457727604654080'),   // (1376): ModPow(Arguments[42], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '8698662581655513277201727381435225616712' + 
                                  '6142827328294515609741210937500000000000' + 
                                  '00'),                                        // (1377): ModPow(Arguments[42], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '6961679610620985636352439026956080632031'),  // (1378): ModPow(Arguments[42], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '4184501610487863147203000'),                 // (1379): ModPow(Arguments[42], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1380): ModPow(Arguments[42], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1381): ModPow(Arguments[42], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1382): ModPow(Arguments[42], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1383): ModPow(Arguments[42], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1384): ModPow(Arguments[42], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '64147054238208762784'),                      // (1385): ModPow(Arguments[42], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '43507647049256165782252'),                   // (1386): ModPow(Arguments[42], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '7046891866739102119968921970'),              // (1387): ModPow(Arguments[42], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '60604240808055048440908875862'),             // (1388): ModPow(Arguments[42], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '596764875638130295516306706193165844480'),   // (1389): ModPow(Arguments[42], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '2063802342305319257278503741054320741454' + 
                                  '8305678181350231170654296875000000000000' + 
                                  '0000'),                                      // (1390): ModPow(Arguments[42], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '3066784150359887196939857150094239651238'),  // (1391): ModPow(Arguments[42], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '6820683814409775193895200'),                 // (1392): ModPow(Arguments[42], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1393): ModPow(Arguments[42], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1394): ModPow(Arguments[42], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1395): ModPow(Arguments[42], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1396): ModPow(Arguments[42], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1397): ModPow(Arguments[42], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '43899972124344813464'),                      // (1398): ModPow(Arguments[42], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '2306512432250538287920'),                    // (1399): ModPow(Arguments[42], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '6308486797831910398862447560'),              // (1400): ModPow(Arguments[42], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '25621347112162186896645760760'),             // (1401): ModPow(Arguments[42], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '50131626169153760753461942058620026880'),    // (1402): ModPow(Arguments[42], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '1895558477369752709951394315911893384551' + 
                                  '9450187566690146923065185546875000000000' + 
                                  '0000'),                                      // (1403): ModPow(Arguments[42], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1404): ModPow(Arguments[42], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1405): ModPow(Arguments[42], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '30560'),                                     // (1406): ModPow(Arguments[42], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '24'),                                        // (1407): ModPow(Arguments[42], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1408): ModPow(Arguments[42], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '60'),                                        // (1409): ModPow(Arguments[42], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '30560'),                                     // (1410): ModPow(Arguments[42], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '44236803989774764028'),                      // (1411): ModPow(Arguments[42], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '11674522193433106673788'),                   // (1412): ModPow(Arguments[42], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1413): ModPow(Arguments[42], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1414): ModPow(Arguments[42], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1415): ModPow(Arguments[42], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '85961827383486510530560'),                   // (1416): ModPow(Arguments[42], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '1466721856780042689907511651194453020885' + 
                                  '5'),                                         // (1417): ModPow(Arguments[42], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '805976071721230873880400'),                  // (1418): ModPow(Arguments[42], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1419): ModPow(Arguments[42], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1420): ModPow(Arguments[42], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1421): ModPow(Arguments[42], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1422): ModPow(Arguments[42], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1423): ModPow(Arguments[42], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '105571960525212358584'),                     // (1424): ModPow(Arguments[42], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '73416367369795263763156'),                   // (1425): ModPow(Arguments[42], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '7503333975914263503921309820'),              // (1426): ModPow(Arguments[42], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '7665933797683420827018511486'),              // (1427): ModPow(Arguments[42], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '404271624933233569607271725775538094080'),   // (1428): ModPow(Arguments[42], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '2755063198144464469548581675599677459375' + 
                                  '9446801206957095935652962969036917600000' + 
                                  '00000'),                                     // (1429): ModPow(Arguments[42], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '3173732882966402483161049952568855576742'),  // (1430): ModPow(Arguments[42], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '61413295166434240245000'),                   // (1431): ModPow(Arguments[42], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1432): ModPow(Arguments[42], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1433): ModPow(Arguments[42], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1434): ModPow(Arguments[42], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1435): ModPow(Arguments[42], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1436): ModPow(Arguments[42], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '92757688330429653164'),                      // (1437): ModPow(Arguments[42], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '42815896966977405932896'),                   // (1438): ModPow(Arguments[42], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '1176806628895779485961200770'),              // (1439): ModPow(Arguments[42], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '62391451837241869961791744574'),             // (1440): ModPow(Arguments[42], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '610596667691436588678621773680177315840'),   // (1441): ModPow(Arguments[42], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '1185207945238202825698790658127956820777' + 
                                  '6264898711815476417541503906250000000000' + 
                                  '00000'),                                     // (1442): ModPow(Arguments[42], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '8615045537868014531389345230713953301716'),  // (1443): ModPow(Arguments[42], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '7026748427791193828771000'),                 // (1444): ModPow(Arguments[42], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1445): ModPow(Arguments[42], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1446): ModPow(Arguments[42], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1447): ModPow(Arguments[42], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1448): ModPow(Arguments[42], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1449): ModPow(Arguments[42], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '66840970243147027996'),                      // (1450): ModPow(Arguments[42], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '62853258260423865494404'),                   // (1451): ModPow(Arguments[42], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '8386403632673014230953189260'),              // (1452): ModPow(Arguments[42], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '51129169862474586853909518738'),             // (1453): ModPow(Arguments[42], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '387506996451239244901653885752568709120'),   // (1454): ModPow(Arguments[42], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '9547869916979614863364400252371960720054' + 
                                  '7443426330573856830596923828125000000000' + 
                                  '0000'),                                      // (1455): ModPow(Arguments[42], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1182858219689988936627792261916664468585' + 
                                  '1'),                                         // (1456): ModPow(Arguments[42], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '1044557558471862378511000'),                 // (1457): ModPow(Arguments[42], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1458): ModPow(Arguments[42], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (1459): ModPow(Arguments[42], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1460): ModPow(Arguments[42], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1461): ModPow(Arguments[42], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1462): ModPow(Arguments[42], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '117471012568749772128'),                     // (1463): ModPow(Arguments[42], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '4961367592868527200424'),                    // (1464): ModPow(Arguments[42], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '326447139098639968000195630'),               // (1465): ModPow(Arguments[42], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '7016969700668850720314774645'),              // (1466): ModPow(Arguments[42], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '443940975756535689205948957203292487680'),   // (1467): ModPow(Arguments[42], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '2007077519947560948694982867375469215431' + 
                                  '8490793230012059211730957031250000000000' + 
                                  '000'),                                       // (1468): ModPow(Arguments[42], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '8414297581459507031068651839987820046811'),  // (1469): ModPow(Arguments[42], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '1243188430028467834561600'),                 // (1470): ModPow(Arguments[42], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1471): ModPow(Arguments[42], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (1472): ModPow(Arguments[42], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1473): ModPow(Arguments[42], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1474): ModPow(Arguments[42], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1475): ModPow(Arguments[42], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '19781558224055070892'),                      // (1476): ModPow(Arguments[42], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '16528749406110117275488'),                   // (1477): ModPow(Arguments[42], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '7423774511685170295056074150'),              // (1478): ModPow(Arguments[42], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '17591494454764534685301358664'),             // (1479): ModPow(Arguments[42], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '308590574572583033482526004668834775040'),   // (1480): ModPow(Arguments[42], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '7112056148780182431708037622906243280240' + 
                                  '8011411898769438266754150390625000000000' + 
                                  '0000'),                                      // (1481): ModPow(Arguments[42], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1465707130875012358332777895720151843880' + 
                                  '2'),                                         // (1482): ModPow(Arguments[42], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '2094302010080130130390000'),                 // (1483): ModPow(Arguments[42], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1484): ModPow(Arguments[42], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '40'),                                        // (1485): ModPow(Arguments[42], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1486): ModPow(Arguments[42], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1487): ModPow(Arguments[42], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1488): ModPow(Arguments[42], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '46733022639754335324'),                      // (1489): ModPow(Arguments[42], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '17964835503627243596188'),                   // (1490): ModPow(Arguments[42], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '1114486294296553232518913680'),              // (1491): ModPow(Arguments[42], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '95274779723406823225848637954'),             // (1492): ModPow(Arguments[42], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '672352954100827267818864843340864552960'),   // (1493): ModPow(Arguments[42], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '2992516453662174248149037374469583205893' + 
                                  '7412512023001909255981445312500000000000' + 
                                  '00000'),                                     // (1494): ModPow(Arguments[42], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '3386936683493271441956509525515966449575'),  // (1495): ModPow(Arguments[42], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '2483582471676060796121200'),                 // (1496): ModPow(Arguments[42], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1497): ModPow(Arguments[42], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '16'),                                        // (1498): ModPow(Arguments[42], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1499): ModPow(Arguments[42], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1500): ModPow(Arguments[42], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1501): ModPow(Arguments[42], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '117589082547202913488'),                     // (1502): ModPow(Arguments[42], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '49388310810096240438052'),                   // (1503): ModPow(Arguments[42], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '8405192105978174648648558470'),              // (1504): ModPow(Arguments[42], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '43039867919064535243831219664'),             // (1505): ModPow(Arguments[42], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '663534365229255558035236817954217656320'),   // (1506): ModPow(Arguments[42], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '3025297257853871613726869153849705074144' + 
                                  '0830279316287487745285034179687500000000' + 
                                  '00000'),                                     // (1507): ModPow(Arguments[42], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '4337982209415945071854733265695015895681'),  // (1508): ModPow(Arguments[42], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '603075304036170083189200'),                  // (1509): ModPow(Arguments[42], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (1510): ModPow(Arguments[42], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '48'),                                        // (1511): ModPow(Arguments[42], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1512): ModPow(Arguments[42], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (1513): ModPow(Arguments[42], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (1514): ModPow(Arguments[42], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '83999115674653792152'),                      // (1515): ModPow(Arguments[42], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '41813036339510138485180'),                   // (1516): ModPow(Arguments[42], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '3094826145454942917474120940'),              // (1517): ModPow(Arguments[42], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '112115767372758681585115472387'),            // (1518): ModPow(Arguments[42], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '411594588920632005213837880852354170880'),   // (1519): ModPow(Arguments[42], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '3720025037692102775714665056222552053100' + 
                                  '1166091300547122955322265625000000000000' + 
                                  '0000'),                                      // (1520): ModPow(Arguments[42], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '7724494241665877037299869424283500600123'),  // (1521): ModPow(Arguments[47], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '1774829186871355252324401'),                 // (1522): ModPow(Arguments[47], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '43201'),                                     // (1523): ModPow(Arguments[47], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1524): ModPow(Arguments[47], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1525): ModPow(Arguments[47], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1526): ModPow(Arguments[47], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '43201'),                                     // (1527): ModPow(Arguments[47], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '142374148319563069969'),                     // (1528): ModPow(Arguments[47], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '39014598071946922897213'),                   // (1529): ModPow(Arguments[47], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '1543960381653744680068240291'),              // (1530): ModPow(Arguments[47], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '106296436315938213307935845274'),            // (1531): ModPow(Arguments[47], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '299066563494996318601553093882460241921'),   // (1532): ModPow(Arguments[47], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '2976603884603373601150645561160810556175' + 
                                  '8863778027338384328139071593017287590584' + 
                                  '3201'),                                      // (1533): ModPow(Arguments[47], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1083335839373708398335097084008885847341' + 
                                  '3'),                                         // (1534): ModPow(Arguments[47], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '6016758348698366115585521'),                 // (1535): ModPow(Arguments[47], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '45121'),                                     // (1536): ModPow(Arguments[47], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1537): ModPow(Arguments[47], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1538): ModPow(Arguments[47], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '21'),                                        // (1539): ModPow(Arguments[47], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '45121'),                                     // (1540): ModPow(Arguments[47], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '170904262347687240541'),                     // (1541): ModPow(Arguments[47], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '14762135695616498340865'),                   // (1542): ModPow(Arguments[47], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '5681268789355989524338177621'),              // (1543): ModPow(Arguments[47], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '29892447765098128022843485389'),             // (1544): ModPow(Arguments[47], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '4102151856579446077536418029864222721'),     // (1545): ModPow(Arguments[47], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '3398948477321649058456187959576272958241' + 
                                  '4136963741945802903471662894467253431366' + 
                                  '45121'),                                     // (1546): ModPow(Arguments[47], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1598360193825555656279331433631390200086' + 
                                  '9'),                                         // (1547): ModPow(Arguments[47], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '5677666878487034702981441'),                 // (1548): ModPow(Arguments[47], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '30241'),                                     // (1549): ModPow(Arguments[47], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1550): ModPow(Arguments[47], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1551): ModPow(Arguments[47], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (1552): ModPow(Arguments[47], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '30241'),                                     // (1553): ModPow(Arguments[47], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '81512551790383547981'),                      // (1554): ModPow(Arguments[47], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '68058699996888423966493'),                   // (1555): ModPow(Arguments[47], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '3532349396763390305827416811'),              // (1556): ModPow(Arguments[47], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '36682129168293410986678103028'),             // (1557): ModPow(Arguments[47], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '227204777597130822914868336900660264961'),   // (1558): ModPow(Arguments[47], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '3194053165319812566164346388858477336922' + 
                                  '6939270220980608695765583087627048651530' + 
                                  '241'),                                       // (1559): ModPow(Arguments[47], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '5869353287769402652195134140131367457644'),  // (1560): ModPow(Arguments[47], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3751675697300587996181201'),                 // (1561): ModPow(Arguments[47], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '92001'),                                     // (1562): ModPow(Arguments[47], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1563): ModPow(Arguments[47], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1564): ModPow(Arguments[47], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1565): ModPow(Arguments[47], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '92001'),                                     // (1566): ModPow(Arguments[47], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '77343386435576896573'),                      // (1567): ModPow(Arguments[47], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '29009491052693006228569'),                   // (1568): ModPow(Arguments[47], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '6042597004397847931040547751'),              // (1569): ModPow(Arguments[47], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '550394604078119608992788217'),               // (1570): ModPow(Arguments[47], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '564927390899025975550491104352707543041'),   // (1571): ModPow(Arguments[47], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '2389776505876764324647704907108389383752' + 
                                  '5143311253318698882957400482951508160819' + 
                                  '2001'),                                      // (1572): ModPow(Arguments[47], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '19807040619342712359383728129'),             // (1573): ModPow(Arguments[47], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '709563176415150664855529'),                  // (1574): ModPow(Arguments[47], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '28129'),                                     // (1575): ModPow(Arguments[47], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1576): ModPow(Arguments[47], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1577): ModPow(Arguments[47], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1578): ModPow(Arguments[47], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '28129'),                                     // (1579): ModPow(Arguments[47], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '5405018343319768457'),                       // (1580): ModPow(Arguments[47], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '39298434343449264180085'),                   // (1581): ModPow(Arguments[47], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '2125865132924682376411374349'),              // (1582): ModPow(Arguments[47], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '19807040619342712359383728129'),             // (1583): ModPow(Arguments[47], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '19807040619342712359383728129'),             // (1584): ModPow(Arguments[47], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '19807040619342712359383728129'),             // (1585): ModPow(Arguments[47], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '1274209852027089906851827990933517895834'),  // (1586): ModPow(Arguments[47], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '4351918441067680550637201'),                 // (1587): ModPow(Arguments[47], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '39201'),                                     // (1588): ModPow(Arguments[47], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1589): ModPow(Arguments[47], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1590): ModPow(Arguments[47], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1591): ModPow(Arguments[47], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '39201'),                                     // (1592): ModPow(Arguments[47], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '103619709830967515369'),                     // (1593): ModPow(Arguments[47], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '64457850940324211055217'),                   // (1594): ModPow(Arguments[47], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '7141082028522013890109300501'),              // (1595): ModPow(Arguments[47], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '36057792190695379398693254485'),             // (1596): ModPow(Arguments[47], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '9732515040593879310866614904244142081'),     // (1597): ModPow(Arguments[47], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '7913159481217856766138934099473022922815' + 
                                  '8826865210926087457932677591559399846993' + 
                                  '9201'),                                      // (1598): ModPow(Arguments[47], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1387704573007014718241790861847260930004'),  // (1599): ModPow(Arguments[47], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '4239076114340964497343001'),                 // (1600): ModPow(Arguments[47], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (1601): ModPow(Arguments[47], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1602): ModPow(Arguments[47], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1603): ModPow(Arguments[47], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1604): ModPow(Arguments[47], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (1605): ModPow(Arguments[47], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '20491446481448715857'),                      // (1606): ModPow(Arguments[47], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '3123857916385201262281'),                    // (1607): ModPow(Arguments[47], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '4074819276454589621251755871'),              // (1608): ModPow(Arguments[47], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '7818374861776459272469598541'),              // (1609): ModPow(Arguments[47], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '642489141331175643579206181201956044801'),   // (1610): ModPow(Arguments[47], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '1075386690009776162882240666207001602060' + 
                                  '9447295804300712278552770491472666376192' + 
                                  '00001'),                                     // (1611): ModPow(Arguments[47], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1753786384163372248489965057307009296094' + 
                                  '1'),                                         // (1612): ModPow(Arguments[47], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '1803617014567169192664241'),                 // (1613): ModPow(Arguments[47], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '82241'),                                     // (1614): ModPow(Arguments[47], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1615): ModPow(Arguments[47], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1616): ModPow(Arguments[47], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (1617): ModPow(Arguments[47], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '82241'),                                     // (1618): ModPow(Arguments[47], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '150753309024955652197'),                     // (1619): ModPow(Arguments[47], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '57916469769871813839025'),                   // (1620): ModPow(Arguments[47], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '4173634730890588960953333751'),              // (1621): ModPow(Arguments[47], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '104128093521139544044170005802'),            // (1622): ModPow(Arguments[47], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '79031585370676695808997354703547269121'),    // (1623): ModPow(Arguments[47], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '2175153004942487692633225873409962291470' + 
                                  '8511378275482275223027479255300791563742' + 
                                  '82241'),                                     // (1624): ModPow(Arguments[47], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '9056675674240336033231235707540632688011'),  // (1625): ModPow(Arguments[47], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '5821510900508790264592681'),                 // (1626): ModPow(Arguments[47], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '37281'),                                     // (1627): ModPow(Arguments[47], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1628): ModPow(Arguments[47], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1629): ModPow(Arguments[47], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (1630): ModPow(Arguments[47], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '37281'),                                     // (1631): ModPow(Arguments[47], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '19445122816070288657'),                      // (1632): ModPow(Arguments[47], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '28737577056653213513569'),                   // (1633): ModPow(Arguments[47], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '4883880658265846089301557261'),              // (1634): ModPow(Arguments[47], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '107592473108881730636752019209'),            // (1635): ModPow(Arguments[47], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '344897073104328726615193611575482122241'),   // (1636): ModPow(Arguments[47], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '2839981429241465555130436446391596943285' + 
                                  '2485577327973930176895293738558959398663' + 
                                  '37281'),                                     // (1637): ModPow(Arguments[47], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1772245065396379201553451205135617406013' + 
                                  '5'),                                         // (1638): ModPow(Arguments[47], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '4347264977410134838764281'),                 // (1639): ModPow(Arguments[47], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '77281'),                                     // (1640): ModPow(Arguments[47], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1641): ModPow(Arguments[47], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1642): ModPow(Arguments[47], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (1643): ModPow(Arguments[47], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '77281'),                                     // (1644): ModPow(Arguments[47], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '12558568041042116473'),                      // (1645): ModPow(Arguments[47], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '16587578029982724338833'),                   // (1646): ModPow(Arguments[47], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '2449390102238969557295320651'),              // (1647): ModPow(Arguments[47], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '79208679557144130160042119491'),             // (1648): ModPow(Arguments[47], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '42711901613743454681557313774545797121'),    // (1649): ModPow(Arguments[47], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '2963437272911612636067311167029263843850' + 
                                  '3091431878908270200686871645028617805677' + 
                                  '77281'),                                     // (1650): ModPow(Arguments[47], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1725827241304425240349059972970664249718' + 
                                  '0'),                                         // (1651): ModPow(Arguments[47], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '4615373800354316823329529'),                 // (1652): ModPow(Arguments[47], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '16929'),                                     // (1653): ModPow(Arguments[47], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1654): ModPow(Arguments[47], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1655): ModPow(Arguments[47], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1656): ModPow(Arguments[47], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '16929'),                                     // (1657): ModPow(Arguments[47], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '54078534018319898737'),                      // (1658): ModPow(Arguments[47], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '71433703193331655608229'),                   // (1659): ModPow(Arguments[47], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '7691218187471721343985387749'),              // (1660): ModPow(Arguments[47], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '42753424577562770848109804057'),             // (1661): ModPow(Arguments[47], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '508975547834520769158951017895992229889'),   // (1662): ModPow(Arguments[47], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '3152760886130702898588843620774043387304' + 
                                  '2596276363066434844495949345924448073491' + 
                                  '16929'),                                     // (1663): ModPow(Arguments[47], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '8219862100032917599671780291073893295946'),  // (1664): ModPow(Arguments[47], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '1596335639758944037518001'),                 // (1665): ModPow(Arguments[47], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (1666): ModPow(Arguments[47], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1667): ModPow(Arguments[47], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1668): ModPow(Arguments[47], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1669): ModPow(Arguments[47], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (1670): ModPow(Arguments[47], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '96026337212083890353'),                      // (1671): ModPow(Arguments[47], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '17189890581135968979997'),                   // (1672): ModPow(Arguments[47], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '4784295233168204141689354441'),              // (1673): ModPow(Arguments[47], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '109962465376925577221533146430'),            // (1674): ModPow(Arguments[47], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '442772587387749974837068500176449044481'),   // (1675): ModPow(Arguments[47], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '2835123780631280318233652869063451202369' + 
                                  '1707277918646916072598796443932080961024' + 
                                  '00001'),                                     // (1676): ModPow(Arguments[47], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '4748059938395195331135115493777488853948'),  // (1677): ModPow(Arguments[47], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '5889933145739384195128449'),                 // (1678): ModPow(Arguments[47], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '81249'),                                     // (1679): ModPow(Arguments[47], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '49'),                                        // (1680): ModPow(Arguments[47], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1681): ModPow(Arguments[47], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1682): ModPow(Arguments[47], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '81249'),                                     // (1683): ModPow(Arguments[47], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '114686638300145857205'),                     // (1684): ModPow(Arguments[47], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '38385283950367934037661'),                   // (1685): ModPow(Arguments[47], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '2806879240414535930041584499'),              // (1686): ModPow(Arguments[47], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '107813248469193118585291892726'),            // (1687): ModPow(Arguments[47], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '666444441025227763343175957379943497729'),   // (1688): ModPow(Arguments[47], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1420208568447549716556839123131444374615' + 
                                  '8466402862430300046980846673250198364257' + 
                                  '81249'),                                     // (1689): ModPow(Arguments[47], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '3726014975505454182359825755910417834955'),  // (1690): ModPow(Arguments[52], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '4118821109774283707225201'),                 // (1691): ModPow(Arguments[52], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '95201'),                                     // (1692): ModPow(Arguments[52], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1693): ModPow(Arguments[52], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1694): ModPow(Arguments[52], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1695): ModPow(Arguments[52], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '95201'),                                     // (1696): ModPow(Arguments[52], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '87204734087293904589'),                      // (1697): ModPow(Arguments[52], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '38482777662379250920021'),                   // (1698): ModPow(Arguments[52], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '8765451489022651140354378841'),              // (1699): ModPow(Arguments[52], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '104480094635879865165343898315'),            // (1700): ModPow(Arguments[52], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '582017129967123092917646180838077890561'),   // (1701): ModPow(Arguments[52], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '2929397417067647580281844163548004801701' + 
                                  '4940447320482641856571097214948519981053' + 
                                  '95201'),                                     // (1702): ModPow(Arguments[52], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1434871122726621537087951241786862939084' + 
                                  '5'),                                         // (1703): ModPow(Arguments[52], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '6194402542149200462336721'),                 // (1704): ModPow(Arguments[52], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '25321'),                                     // (1705): ModPow(Arguments[52], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1706): ModPow(Arguments[52], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1707): ModPow(Arguments[52], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '21'),                                        // (1708): ModPow(Arguments[52], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '25321'),                                     // (1709): ModPow(Arguments[52], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '87229017520706295993'),                      // (1710): ModPow(Arguments[52], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '62214038008404872512441'),                   // (1711): ModPow(Arguments[52], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '1007206129849420475423114791'),              // (1712): ModPow(Arguments[52], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '102144385252801732979234359868'),            // (1713): ModPow(Arguments[52], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '492401437140797442477032293677330481321'),   // (1714): ModPow(Arguments[52], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '1957541112122161468297754156080968933507' + 
                                  '2322521752596170144344870526778764117238' + 
                                  '25321'),                                     // (1715): ModPow(Arguments[52], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '8029621795334685008545181479447387540222'),  // (1716): ModPow(Arguments[52], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '1503926472793453948323041'),                 // (1717): ModPow(Arguments[52], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '9641'),                                      // (1718): ModPow(Arguments[52], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1719): ModPow(Arguments[52], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1720): ModPow(Arguments[52], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (1721): ModPow(Arguments[52], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '9641'),                                      // (1722): ModPow(Arguments[52], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '119665016178639807265'),                     // (1723): ModPow(Arguments[52], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '40013762826000916416073'),                   // (1724): ModPow(Arguments[52], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '4296645192016461661612712551'),              // (1725): ModPow(Arguments[52], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '90105631658932121560168164105'),             // (1726): ModPow(Arguments[52], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '19803915981350971508152077781872143881'),    // (1727): ModPow(Arguments[52], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '1357994123490841158889881869228512268511' + 
                                  '8518010233487191667114866793945195932823' + 
                                  '09641'),                                     // (1728): ModPow(Arguments[52], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '1318701236306279479229504587326554902301'),  // (1729): ModPow(Arguments[52], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3531500684150459313052601'),                 // (1730): ModPow(Arguments[52], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '62001'),                                     // (1731): ModPow(Arguments[52], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1732): ModPow(Arguments[52], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1733): ModPow(Arguments[52], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1734): ModPow(Arguments[52], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '62001'),                                     // (1735): ModPow(Arguments[52], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '101214390891195955793'),                     // (1736): ModPow(Arguments[52], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '27386451481792628044849'),                   // (1737): ModPow(Arguments[52], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '6591978911448196390954309561'),              // (1738): ModPow(Arguments[52], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '64447134085422330863915770586'),             // (1739): ModPow(Arguments[52], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '367721790831726548037093824332914489841'),   // (1740): ModPow(Arguments[52], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '3300680878142159770480846913470064265856' + 
                                  '1956052219605638293050068004492789245190' + 
                                  '62001'),                                     // (1741): ModPow(Arguments[52], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // (1742): ModPow(Arguments[52], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '3764916284902833869324029'),                 // (1743): ModPow(Arguments[52], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '55429'),                                     // (1744): ModPow(Arguments[52], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '13'),                                        // (1745): ModPow(Arguments[52], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1746): ModPow(Arguments[52], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1747): ModPow(Arguments[52], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '55429'),                                     // (1748): ModPow(Arguments[52], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '104742544103585963549'),                     // (1749): ModPow(Arguments[52], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '53658884381385539915189'),                   // (1750): ModPow(Arguments[52], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '40318391012480416061631059'),                // (1751): ModPow(Arguments[52], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '6821650047754282860860927688'),              // (1752): ModPow(Arguments[52], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // (1753): ModPow(Arguments[52], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // (1754): ModPow(Arguments[52], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '247322523822430570394896795810153676531'),   // (1755): ModPow(Arguments[52], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '4410023814453555238664801'),                 // (1756): ModPow(Arguments[52], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '26201'),                                     // (1757): ModPow(Arguments[52], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1758): ModPow(Arguments[52], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1759): ModPow(Arguments[52], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1760): ModPow(Arguments[52], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '26201'),                                     // (1761): ModPow(Arguments[52], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '152329289894689617025'),                     // (1762): ModPow(Arguments[52], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '58955239206805219055905'),                   // (1763): ModPow(Arguments[52], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '6376975172402741531744595961'),              // (1764): ModPow(Arguments[52], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '84998641900474703949243284402'),             // (1765): ModPow(Arguments[52], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '314684369094450290090904702898623079801'),   // (1766): ModPow(Arguments[52], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '3088982752159720286461088581586252705769' + 
                                  '9700321779986361221533957401622056950069' + 
                                  '26201'),                                     // (1767): ModPow(Arguments[52], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '209862024048108182892022160925204749260'),   // (1768): ModPow(Arguments[52], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '5026562783845679344546001'),                 // (1769): ModPow(Arguments[52], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (1770): ModPow(Arguments[52], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1771): ModPow(Arguments[52], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1772): ModPow(Arguments[52], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1773): ModPow(Arguments[52], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (1774): ModPow(Arguments[52], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '170659326789362803097'),                     // (1775): ModPow(Arguments[52], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '39579063548771047639549'),                   // (1776): ModPow(Arguments[52], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '8114682754059699518200947901'),              // (1777): ModPow(Arguments[52], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '100663688227945818601037649498'),            // (1778): ModPow(Arguments[52], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '167218608107041395255357622700063340481'),   // (1779): ModPow(Arguments[52], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '2715814187367651213375008745485469400996' + 
                                  '2894397862913313616042793506887112797062' + 
                                  '00001'),                                     // (1780): ModPow(Arguments[52], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1552317721824223518634143410230819018890' + 
                                  '8'),                                         // (1781): ModPow(Arguments[52], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '2214884206767758231373641'),                 // (1782): ModPow(Arguments[52], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '56641'),                                     // (1783): ModPow(Arguments[52], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1784): ModPow(Arguments[52], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1785): ModPow(Arguments[52], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '41'),                                        // (1786): ModPow(Arguments[52], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '56641'),                                     // (1787): ModPow(Arguments[52], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '167857315488037568745'),                     // (1788): ModPow(Arguments[52], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '71847171594766650369589'),                   // (1789): ModPow(Arguments[52], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '7412775924582434966833237471'),              // (1790): ModPow(Arguments[52], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '112001278285381787335370373964'),            // (1791): ModPow(Arguments[52], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '315997986295386211022478208671681085441'),   // (1792): ModPow(Arguments[52], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '3042944129860536420592183737983904768124' + 
                                  '1209430426384218595149912181959284592254' + 
                                  '56641'),                                     // (1793): ModPow(Arguments[52], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1040727188562886661425249773255215806569' + 
                                  '6'),                                         // (1794): ModPow(Arguments[52], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '3281835867684171454969481'),                 // (1795): ModPow(Arguments[52], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '65081'),                                     // (1796): ModPow(Arguments[52], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1797): ModPow(Arguments[52], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1798): ModPow(Arguments[52], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (1799): ModPow(Arguments[52], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '65081'),                                     // (1800): ModPow(Arguments[52], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '17037807788316992241'),                      // (1801): ModPow(Arguments[52], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '64817291282751690294949'),                   // (1802): ModPow(Arguments[52], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '2372653168719546436919364451'),              // (1803): ModPow(Arguments[52], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '92705956379635329024985158533'),             // (1804): ModPow(Arguments[52], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '259365670153480789134158990647380399481'),   // (1805): ModPow(Arguments[52], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '1273142518545297757208458297843779325042' + 
                                  '3738155334449251912161535379269004588050' + 
                                  '65081'),                                     // (1806): ModPow(Arguments[52], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '2311329308655467803570763175221232888064'),  // (1807): ModPow(Arguments[52], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '5279319700066056586453681'),                 // (1808): ModPow(Arguments[52], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '55081'),                                     // (1809): ModPow(Arguments[52], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1810): ModPow(Arguments[52], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1811): ModPow(Arguments[52], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '81'),                                        // (1812): ModPow(Arguments[52], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '55081'),                                     // (1813): ModPow(Arguments[52], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '145035928663115769573'),                     // (1814): ModPow(Arguments[52], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '6749451347501563795585'),                    // (1815): ModPow(Arguments[52], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '6363904377900712787203729441'),              // (1816): ModPow(Arguments[52], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '109978407222641978658364412437'),            // (1817): ModPow(Arguments[52], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '317404379877896262058673768761864550281'),   // (1818): ModPow(Arguments[52], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '2356106422535853455655962978130780180484' + 
                                  '2893966561418757540725556234870137855831' + 
                                  '55081'),                                     // (1819): ModPow(Arguments[52], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '2719345175481317649959366331884567661323'),  // (1820): ModPow(Arguments[52], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '6071554995736322170794429'),                 // (1821): ModPow(Arguments[52], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '72229'),                                     // (1822): ModPow(Arguments[52], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '13'),                                        // (1823): ModPow(Arguments[52], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1824): ModPow(Arguments[52], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1825): ModPow(Arguments[52], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '72229'),                                     // (1826): ModPow(Arguments[52], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '157177893808107997745'),                     // (1827): ModPow(Arguments[52], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '46957628810087727497513'),                   // (1828): ModPow(Arguments[52], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '8355407696068868030522952209'),              // (1829): ModPow(Arguments[52], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '75166729548105269477779795889'),             // (1830): ModPow(Arguments[52], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '275972310368176045794310290037192303109'),   // (1831): ModPow(Arguments[52], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '3127744301796590511701426993768780652951' + 
                                  '9654162994168892196157118641515044102947' + 
                                  '72229'),                                     // (1832): ModPow(Arguments[52], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1109871980119512578586591768476969896367' + 
                                  '3'),                                         // (1833): ModPow(Arguments[52], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '1225836008893425229072801'),                 // (1834): ModPow(Arguments[52], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '75001'),                                     // (1835): ModPow(Arguments[52], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1836): ModPow(Arguments[52], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1837): ModPow(Arguments[52], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1838): ModPow(Arguments[52], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '75001'),                                     // (1839): ModPow(Arguments[52], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '168081879046185509237'),                     // (1840): ModPow(Arguments[52], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '52395593736305127185557'),                   // (1841): ModPow(Arguments[52], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '3679756165066925260133013181'),              // (1842): ModPow(Arguments[52], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '16831950850791237966020748564'),             // (1843): ModPow(Arguments[52], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '509663442367289126262468735320654737561'),   // (1844): ModPow(Arguments[52], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '1401166774464017823392536909587067063570' + 
                                  '6232046802103292943620547618963648069257' + 
                                  '75001'),                                     // (1845): ModPow(Arguments[52], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1069586362853844009385529735700702104074' + 
                                  '7'),                                         // (1846): ModPow(Arguments[52], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '4526624530721390280515949'),                 // (1847): ModPow(Arguments[52], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '18749'),                                     // (1848): ModPow(Arguments[52], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '13'),                                        // (1849): ModPow(Arguments[52], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1850): ModPow(Arguments[52], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1851): ModPow(Arguments[52], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '18749'),                                     // (1852): ModPow(Arguments[52], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '20713711197035070537'),                      // (1853): ModPow(Arguments[52], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '9633442840701633599729'),                    // (1854): ModPow(Arguments[52], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '728882247606177873782634299'),               // (1855): ModPow(Arguments[52], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '730566136558757348178161706'),               // (1856): ModPow(Arguments[52], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '67236842108478332152236135747499998749'),    // (1857): ModPow(Arguments[52], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '1546098356757756320226195630229981712660' + 
                                  '7011513739209362938709091395139694213867' + 
                                  '18749'),                                     // (1858): ModPow(Arguments[52], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1859): ModPow(Arguments[57], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '6919198065790430761419201'),                 // (1860): ModPow(Arguments[57], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '68801'),                                     // (1861): ModPow(Arguments[57], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1862): ModPow(Arguments[57], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1863): ModPow(Arguments[57], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1864): ModPow(Arguments[57], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '68801'),                                     // (1865): ModPow(Arguments[57], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '34845245020825238993'),                      // (1866): ModPow(Arguments[57], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '8696800064334967184965'),                    // (1867): ModPow(Arguments[57], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '8419148860102626067106179531'),              // (1868): ModPow(Arguments[57], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '110801883275531836671444867501'),            // (1869): ModPow(Arguments[57], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '442414115961572791456434208126481203201'),   // (1870): ModPow(Arguments[57], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '1655403073197062738100092788501835643204' + 
                                  '9949424159633875186264521632398631650418' + 
                                  '68801'),                                     // (1871): ModPow(Arguments[57], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1872): ModPow(Arguments[57], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '681728265821480355147969'),                  // (1873): ModPow(Arguments[57], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '40769'),                                     // (1874): ModPow(Arguments[57], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1875): ModPow(Arguments[57], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1876): ModPow(Arguments[57], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '69'),                                        // (1877): ModPow(Arguments[57], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '40769'),                                     // (1878): ModPow(Arguments[57], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '151639443864084726645'),                     // (1879): ModPow(Arguments[57], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '15539293398310054318009'),                   // (1880): ModPow(Arguments[57], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '5706132472924999126529785909'),              // (1881): ModPow(Arguments[57], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '94812199564355781423640008617'),             // (1882): ModPow(Arguments[57], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '112478901429575642266517986727279198209'),   // (1883): ModPow(Arguments[57], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '1703395430203607089457922100492343423142' + 
                                  '9060672707766156734024940120514193067182' + 
                                  '40769'),                                     // (1884): ModPow(Arguments[57], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1885): ModPow(Arguments[57], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '1664197609428825202216089'),                 // (1886): ModPow(Arguments[57], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '91489'),                                     // (1887): ModPow(Arguments[57], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1888): ModPow(Arguments[57], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1889): ModPow(Arguments[57], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '89'),                                        // (1890): ModPow(Arguments[57], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '91489'),                                     // (1891): ModPow(Arguments[57], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '125707490505674334517'),                     // (1892): ModPow(Arguments[57], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '63258791204446817292013'),                   // (1893): ModPow(Arguments[57], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '2873478922436103856438322299'),              // (1894): ModPow(Arguments[57], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '31043891672557604851587093287'),             // (1895): ModPow(Arguments[57], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '284738014665677388727214710316951666689'),   // (1896): ModPow(Arguments[57], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '1804289424491197216227552537289058496891' + 
                                  '8430240291956402616243988111299362093601' + 
                                  '91489'),                                     // (1897): ModPow(Arguments[57], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1898): ModPow(Arguments[57], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '3528282675910517771696601'),                 // (1899): ModPow(Arguments[57], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '28001'),                                     // (1900): ModPow(Arguments[57], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1901): ModPow(Arguments[57], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1902): ModPow(Arguments[57], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1903): ModPow(Arguments[57], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '28001'),                                     // (1904): ModPow(Arguments[57], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '138896775617894255969'),                     // (1905): ModPow(Arguments[57], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '49346980154950719391333'),                   // (1906): ModPow(Arguments[57], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '7412544674884772958489896941'),              // (1907): ModPow(Arguments[57], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '46525333374617414516514700830'),             // (1908): ModPow(Arguments[57], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '292746361838402421580746890909224796161'),   // (1909): ModPow(Arguments[57], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '3219912118529130724908565439597741332295' + 
                                  '2104491340412066076916393729328576257761' + 
                                  '28001'),                                     // (1910): ModPow(Arguments[57], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1911): ModPow(Arguments[57], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '1142600462398555170225167'),                 // (1912): ModPow(Arguments[57], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '7167'),                                      // (1913): ModPow(Arguments[57], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '15'),                                        // (1914): ModPow(Arguments[57], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1915): ModPow(Arguments[57], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '67'),                                        // (1916): ModPow(Arguments[57], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '7167'),                                      // (1917): ModPow(Arguments[57], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '99856224334221187003'),                      // (1918): ModPow(Arguments[57], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '68462660210030881360483'),                   // (1919): ModPow(Arguments[57], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '6594139647121516613340872047'),              // (1920): ModPow(Arguments[57], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '44850918292320704829958554714'),             // (1921): ModPow(Arguments[57], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '340283421606237853350236652688835084287'),   // (1922): ModPow(Arguments[57], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // (1923): ModPow(Arguments[57], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1924): ModPow(Arguments[57], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '3520997712458437641369049'),                 // (1925): ModPow(Arguments[57], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '48449'),                                     // (1926): ModPow(Arguments[57], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1927): ModPow(Arguments[57], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1928): ModPow(Arguments[57], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (1929): ModPow(Arguments[57], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '48449'),                                     // (1930): ModPow(Arguments[57], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '155246034487462195365'),                     // (1931): ModPow(Arguments[57], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '20850443323104947756905'),                   // (1932): ModPow(Arguments[57], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '8809314598444622915377518139'),              // (1933): ModPow(Arguments[57], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '7280388133814154393124750585'),              // (1934): ModPow(Arguments[57], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '653730213510223206282368347733080670209'),   // (1935): ModPow(Arguments[57], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '4360036330086063521945469727331640062658' + 
                                  '9876617109341992401818435859023627887344' + 
                                  '8449'),                                      // (1936): ModPow(Arguments[57], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1937): ModPow(Arguments[57], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '4464277900242905503860401'),                 // (1938): ModPow(Arguments[57], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '1'),                                         // (1939): ModPow(Arguments[57], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1940): ModPow(Arguments[57], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1941): ModPow(Arguments[57], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '1'),                                         // (1942): ModPow(Arguments[57], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '1'),                                         // (1943): ModPow(Arguments[57], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '131559404947573341485'),                     // (1944): ModPow(Arguments[57], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '23866404553253966944969'),                   // (1945): ModPow(Arguments[57], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '7807436815250565166960964221'),              // (1946): ModPow(Arguments[57], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '103188859128574268901389249570'),            // (1947): ModPow(Arguments[57], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '442414115961572791456434208126481203201'),   // (1948): ModPow(Arguments[57], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '6258970305394040461403837411204809842278' + 
                                  '6774970352178206823377484063311927841280' + 
                                  '0001'),                                      // (1949): ModPow(Arguments[57], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1950): ModPow(Arguments[57], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '3007609771726629257967561'),                 // (1951): ModPow(Arguments[57], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '17761'),                                     // (1952): ModPow(Arguments[57], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1953): ModPow(Arguments[57], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1954): ModPow(Arguments[57], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '61'),                                        // (1955): ModPow(Arguments[57], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '17761'),                                     // (1956): ModPow(Arguments[57], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '31581734032429028141'),                      // (1957): ModPow(Arguments[57], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '931234876897274221273'),                     // (1958): ModPow(Arguments[57], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '8417501107677213180615711481'),              // (1959): ModPow(Arguments[57], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '52944914985800859868303243368'),             // (1960): ModPow(Arguments[57], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '126135088380533519266302518912656343041'),   // (1961): ModPow(Arguments[57], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1278827407365969324102828606376340096076' + 
                                  '9953430125908150845662969351558048411937' + 
                                  '17761'),                                     // (1962): ModPow(Arguments[57], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1963): ModPow(Arguments[57], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '5143940411929852593952529'),                 // (1964): ModPow(Arguments[57], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '39329'),                                     // (1965): ModPow(Arguments[57], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1966): ModPow(Arguments[57], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1967): ModPow(Arguments[57], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1968): ModPow(Arguments[57], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '39329'),                                     // (1969): ModPow(Arguments[57], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '31613147656563693113'),                      // (1970): ModPow(Arguments[57], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '73720369652831756923405'),                   // (1971): ModPow(Arguments[57], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '6018042429938784954696781759'),              // (1972): ModPow(Arguments[57], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '33740127491049953988719620324'),             // (1973): ModPow(Arguments[57], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '428757929010614914456649675941104058369'),   // (1974): ModPow(Arguments[57], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '2194811205602455817617918810686228835727' + 
                                  '9536322215666622650957500326463126904775' + 
                                  '39329'),                                     // (1975): ModPow(Arguments[57], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1976): ModPow(Arguments[57], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '3909344294869854233743129'),                 // (1977): ModPow(Arguments[57], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '79329'),                                     // (1978): ModPow(Arguments[57], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (1979): ModPow(Arguments[57], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1980): ModPow(Arguments[57], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '29'),                                        // (1981): ModPow(Arguments[57], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '79329'),                                     // (1982): ModPow(Arguments[57], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '137054094375812602913'),                     // (1983): ModPow(Arguments[57], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '26598733602995638426861'),                   // (1984): ModPow(Arguments[57], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '5725052766041886764307586549'),              // (1985): ModPow(Arguments[57], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '100949391743869585312348756081'),            // (1986): ModPow(Arguments[57], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '461703661050306505309788393567544147969'),   // (1987): ModPow(Arguments[57], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '8120487241798622152732052054981370257849' + 
                                  '0231024423047310928930782248185100649417' + 
                                  '9329'),                                      // (1988): ModPow(Arguments[57], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (1989): ModPow(Arguments[57], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '322097116916754672921567'),                  // (1990): ModPow(Arguments[57], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '8767'),                                      // (1991): ModPow(Arguments[57], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '15'),                                        // (1992): ModPow(Arguments[57], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (1993): ModPow(Arguments[57], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '67'),                                        // (1994): ModPow(Arguments[57], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '8767'),                                      // (1995): ModPow(Arguments[57], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '155919118693160017727'),                     // (1996): ModPow(Arguments[57], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '51738467495983324924603'),                   // (1997): ModPow(Arguments[57], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '7660872809075302999594040287'),              // (1998): ModPow(Arguments[57], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '19952014520785345364999385652'),             // (1999): ModPow(Arguments[57], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '672564661892270183954750004749787987967'),   // (2000): ModPow(Arguments[57], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '1640603958663914541710814331467029461490' + 
                                  '7274924835363821036851792807844767454620' + 
                                  '8767'),                                      // (2001): ModPow(Arguments[57], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (2002): ModPow(Arguments[57], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '3686941476516251729789249'),                 // (2003): ModPow(Arguments[57], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '81249'),                                     // (2004): ModPow(Arguments[57], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '1'),                                         // (2005): ModPow(Arguments[57], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2006): ModPow(Arguments[57], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '49'),                                        // (2007): ModPow(Arguments[57], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '81249'),                                     // (2008): ModPow(Arguments[57], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '31141818182246013373'),                      // (2009): ModPow(Arguments[57], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '55139899326824687037181'),                   // (2010): ModPow(Arguments[57], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '181723630758473256857578669'),               // (2011): ModPow(Arguments[57], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '95275765138557416939616490001'),             // (2012): ModPow(Arguments[57], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '647141067102284888111740604207792652289'),   // (2013): ModPow(Arguments[57], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '1808861846453412590640201643247498395334' + 
                                  '8910765465283677876886471483085385190241' + 
                                  '81249'),                                     // (2014): ModPow(Arguments[57], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '0'),                                         // (2015): ModPow(Arguments[57], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '2654626585507555975155143'),                 // (2016): ModPow(Arguments[57], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '22943'),                                     // (2017): ModPow(Arguments[57], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '15'),                                        // (2018): ModPow(Arguments[57], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2019): ModPow(Arguments[57], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '43'),                                        // (2020): ModPow(Arguments[57], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '22943'),                                     // (2021): ModPow(Arguments[57], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '8739152137597900919'),                       // (2022): ModPow(Arguments[57], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '15675048791694779027143'),                   // (2023): ModPow(Arguments[57], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '7662191794849959912053035033'),              // (2024): ModPow(Arguments[57], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '31392576055761036374908038451'),             // (2025): ModPow(Arguments[57], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '555972974572904470566345690195735609343'),   // (2026): ModPow(Arguments[57], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '6530451985236501681616519733707242632814' + 
                                  '3006696896376008003608661223422658190792' + 
                                  '2943'),                                      // (2027): ModPow(Arguments[57], Arguments[60], Arguments[61])
    (Info: triOk;            Val: '1218672384725987240417338865971114505632'),  // (2028): ModPow(Arguments[62], Arguments[0], Arguments[1])
    (Info: triOk;            Val: '1330419914026043861278400'),                 // (2029): ModPow(Arguments[62], Arguments[0], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2030): ModPow(Arguments[62], Arguments[0], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2031): ModPow(Arguments[62], Arguments[0], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2032): ModPow(Arguments[62], Arguments[0], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2033): ModPow(Arguments[62], Arguments[0], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2034): ModPow(Arguments[62], Arguments[0], Arguments[31])
    (Info: triOk;            Val: '162024455757262687792'),                     // (2035): ModPow(Arguments[62], Arguments[0], Arguments[36])
    (Info: triOk;            Val: '47707248181021601750932'),                   // (2036): ModPow(Arguments[62], Arguments[0], Arguments[41])
    (Info: triOk;            Val: '5525576104652019286290288100'),              // (2037): ModPow(Arguments[62], Arguments[0], Arguments[46])
    (Info: triOk;            Val: '9218388891281490567123478008'),              // (2038): ModPow(Arguments[62], Arguments[0], Arguments[51])
    (Info: triOk;            Val: '512049104381501961972859587549221355520'),   // (2039): ModPow(Arguments[62], Arguments[0], Arguments[56])
    (Info: triOk;            Val: '7956339240309515093887752037495053603066' + 
                                  '7080922285094857215881347656250000000000' + 
                                  '0000'),                                      // (2040): ModPow(Arguments[62], Arguments[0], Arguments[61])
    (Info: triOk;            Val: '1196588598701741117770474599230172815561' + 
                                  '7'),                                         // (2041): ModPow(Arguments[62], Arguments[5], Arguments[1])
    (Info: triOk;            Val: '2511033107297498676213600'),                 // (2042): ModPow(Arguments[62], Arguments[5], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2043): ModPow(Arguments[62], Arguments[5], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (2044): ModPow(Arguments[62], Arguments[5], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2045): ModPow(Arguments[62], Arguments[5], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2046): ModPow(Arguments[62], Arguments[5], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2047): ModPow(Arguments[62], Arguments[5], Arguments[31])
    (Info: triOk;            Val: '119567438556860382988'),                     // (2048): ModPow(Arguments[62], Arguments[5], Arguments[36])
    (Info: triOk;            Val: '46170999139010513902408'),                   // (2049): ModPow(Arguments[62], Arguments[5], Arguments[41])
    (Info: triOk;            Val: '8019251961099636157710164770'),              // (2050): ModPow(Arguments[62], Arguments[5], Arguments[46])
    (Info: triOk;            Val: '93715311251587360434073477429'),             // (2051): ModPow(Arguments[62], Arguments[5], Arguments[51])
    (Info: triOk;            Val: '200930530275919784288692797480097546240'),   // (2052): ModPow(Arguments[62], Arguments[5], Arguments[56])
    (Info: triOk;            Val: '3260470232862722927030000776927112782210' + 
                                  '8269356249365955591201782226562500000000' + 
                                  '00000'),                                     // (2053): ModPow(Arguments[62], Arguments[5], Arguments[61])
    (Info: triOk;            Val: '1590052391419244586973927892347318558443' + 
                                  '1'),                                         // (2054): ModPow(Arguments[62], Arguments[10], Arguments[1])
    (Info: triOk;            Val: '6584082581731010894945600'),                 // (2055): ModPow(Arguments[62], Arguments[10], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2056): ModPow(Arguments[62], Arguments[10], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (2057): ModPow(Arguments[62], Arguments[10], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2058): ModPow(Arguments[62], Arguments[10], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2059): ModPow(Arguments[62], Arguments[10], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2060): ModPow(Arguments[62], Arguments[10], Arguments[31])
    (Info: triOk;            Val: '4637788322936624484'),                       // (2061): ModPow(Arguments[62], Arguments[10], Arguments[36])
    (Info: triOk;            Val: '34367508440659432483264'),                   // (2062): ModPow(Arguments[62], Arguments[10], Arguments[41])
    (Info: triOk;            Val: '3410018159560707947378472940'),              // (2063): ModPow(Arguments[62], Arguments[10], Arguments[46])
    (Info: triOk;            Val: '89825944490326276959776783395'),             // (2064): ModPow(Arguments[62], Arguments[10], Arguments[51])
    (Info: triOk;            Val: '485481987338062784951348040979720437760'),   // (2065): ModPow(Arguments[62], Arguments[10], Arguments[56])
    (Info: triOk;            Val: '3300391693268616951531972245623483552812' + 
                                  '1607239881996065378189086914062500000000' + 
                                  '00000'),                                     // (2066): ModPow(Arguments[62], Arguments[10], Arguments[61])
    (Info: triOk;            Val: '2354971326145481865539904420243934652041'),  // (2067): ModPow(Arguments[62], Arguments[15], Arguments[1])
    (Info: triOk;            Val: '6761046517826426274445200'),                 // (2068): ModPow(Arguments[62], Arguments[15], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2069): ModPow(Arguments[62], Arguments[15], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2070): ModPow(Arguments[62], Arguments[15], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2071): ModPow(Arguments[62], Arguments[15], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2072): ModPow(Arguments[62], Arguments[15], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2073): ModPow(Arguments[62], Arguments[15], Arguments[31])
    (Info: triOk;            Val: '105618375600910480596'),                     // (2074): ModPow(Arguments[62], Arguments[15], Arguments[36])
    (Info: triOk;            Val: '58725627887435107646128'),                   // (2075): ModPow(Arguments[62], Arguments[15], Arguments[41])
    (Info: triOk;            Val: '5273797100612776021321736590'),              // (2076): ModPow(Arguments[62], Arguments[15], Arguments[46])
    (Info: triOk;            Val: '50020397592288810997597314168'),             // (2077): ModPow(Arguments[62], Arguments[15], Arguments[51])
    (Info: triOk;            Val: '672181973387868484237190968012523438080'),   // (2078): ModPow(Arguments[62], Arguments[15], Arguments[56])
    (Info: triOk;            Val: '5491276437152426768357225484243344659773' + 
                                  '8111449871212244033813476562500000000000' + 
                                  '0000'),                                      // (2079): ModPow(Arguments[62], Arguments[15], Arguments[61])
    (Info: triOk;            Val: '10000000000000'),                            // (2080): ModPow(Arguments[62], Arguments[20], Arguments[1])
    (Info: triOk;            Val: '10000000000000'),                            // (2081): ModPow(Arguments[62], Arguments[20], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2082): ModPow(Arguments[62], Arguments[20], Arguments[11])
    (Info: triOk;            Val: '24'),                                        // (2083): ModPow(Arguments[62], Arguments[20], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2084): ModPow(Arguments[62], Arguments[20], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2085): ModPow(Arguments[62], Arguments[20], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2086): ModPow(Arguments[62], Arguments[20], Arguments[31])
    (Info: triOk;            Val: '10000000000000'),                            // (2087): ModPow(Arguments[62], Arguments[20], Arguments[36])
    (Info: triOk;            Val: '10000000000000'),                            // (2088): ModPow(Arguments[62], Arguments[20], Arguments[41])
    (Info: triOk;            Val: '10000000000000'),                            // (2089): ModPow(Arguments[62], Arguments[20], Arguments[46])
    (Info: triOk;            Val: '10000000000000'),                            // (2090): ModPow(Arguments[62], Arguments[20], Arguments[51])
    (Info: triOk;            Val: '10000000000000'),                            // (2091): ModPow(Arguments[62], Arguments[20], Arguments[56])
    (Info: triOk;            Val: '10000000000000'),                            // (2092): ModPow(Arguments[62], Arguments[20], Arguments[61])
    (Info: triOk;            Val: '3698161251611987450426438848955447921659'),  // (2093): ModPow(Arguments[62], Arguments[25], Arguments[1])
    (Info: triOk;            Val: '3451160379407703105889200'),                 // (2094): ModPow(Arguments[62], Arguments[25], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2095): ModPow(Arguments[62], Arguments[25], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2096): ModPow(Arguments[62], Arguments[25], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2097): ModPow(Arguments[62], Arguments[25], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2098): ModPow(Arguments[62], Arguments[25], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2099): ModPow(Arguments[62], Arguments[25], Arguments[31])
    (Info: triOk;            Val: '165316931541199758828'),                     // (2100): ModPow(Arguments[62], Arguments[25], Arguments[36])
    (Info: triOk;            Val: '29853914698226219728936'),                   // (2101): ModPow(Arguments[62], Arguments[25], Arguments[41])
    (Info: triOk;            Val: '1677510531954348392637574030'),              // (2102): ModPow(Arguments[62], Arguments[25], Arguments[46])
    (Info: triOk;            Val: '65236721231011380446770429080'),             // (2103): ModPow(Arguments[62], Arguments[25], Arguments[51])
    (Info: triOk;            Val: '351916235375135439708528207085919272960'),   // (2104): ModPow(Arguments[62], Arguments[25], Arguments[56])
    (Info: triOk;            Val: '2144126759246838888658845481867409876741' + 
                                  '7035560356453061103820800781250000000000' + 
                                  '00000'),                                     // (2105): ModPow(Arguments[62], Arguments[25], Arguments[61])
    (Info: triOk;            Val: '1610186184411637546405718541020892345635' + 
                                  '2'),                                         // (2106): ModPow(Arguments[62], Arguments[30], Arguments[1])
    (Info: triOk;            Val: '5423868629293065641730400'),                 // (2107): ModPow(Arguments[62], Arguments[30], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2108): ModPow(Arguments[62], Arguments[30], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2109): ModPow(Arguments[62], Arguments[30], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2110): ModPow(Arguments[62], Arguments[30], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2111): ModPow(Arguments[62], Arguments[30], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2112): ModPow(Arguments[62], Arguments[30], Arguments[31])
    (Info: triOk;            Val: '72680261836869203700'),                      // (2113): ModPow(Arguments[62], Arguments[30], Arguments[36])
    (Info: triOk;            Val: '70171028279778366600832'),                   // (2114): ModPow(Arguments[62], Arguments[30], Arguments[41])
    (Info: triOk;            Val: '4661023647181430335744471090'),              // (2115): ModPow(Arguments[62], Arguments[30], Arguments[46])
    (Info: triOk;            Val: '5739932473972429675807757969'),              // (2116): ModPow(Arguments[62], Arguments[30], Arguments[51])
    (Info: triOk;            Val: '512049104381501961972859587549221355520'),   // (2117): ModPow(Arguments[62], Arguments[30], Arguments[56])
    (Info: triOk;            Val: '1785764420016757517671533910278910961544' + 
                                  '3408074497710913419723510742187500000000' + 
                                  '00000'),                                     // (2118): ModPow(Arguments[62], Arguments[30], Arguments[61])
    (Info: triOk;            Val: '1253275081817172677279393105140990499277' + 
                                  '0'),                                         // (2119): ModPow(Arguments[62], Arguments[35], Arguments[1])
    (Info: triOk;            Val: '1908346668622098224948200'),                 // (2120): ModPow(Arguments[62], Arguments[35], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2121): ModPow(Arguments[62], Arguments[35], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2122): ModPow(Arguments[62], Arguments[35], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2123): ModPow(Arguments[62], Arguments[35], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2124): ModPow(Arguments[62], Arguments[35], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2125): ModPow(Arguments[62], Arguments[35], Arguments[31])
    (Info: triOk;            Val: '31735170025271177208'),                      // (2126): ModPow(Arguments[62], Arguments[35], Arguments[36])
    (Info: triOk;            Val: '41097667191207485647324'),                   // (2127): ModPow(Arguments[62], Arguments[35], Arguments[41])
    (Info: triOk;            Val: '1963770852669147495168364630'),              // (2128): ModPow(Arguments[62], Arguments[35], Arguments[46])
    (Info: triOk;            Val: '46781574092953469244468222130'),             // (2129): ModPow(Arguments[62], Arguments[35], Arguments[51])
    (Info: triOk;            Val: '195770076800462689782727898335396495360'),   // (2130): ModPow(Arguments[62], Arguments[35], Arguments[56])
    (Info: triOk;            Val: '1141467518695268039275377351150775329102' + 
                                  '7711384231224656105041503906250000000000' + 
                                  '00000'),                                     // (2131): ModPow(Arguments[62], Arguments[35], Arguments[61])
    (Info: triOk;            Val: '1579194741457498017184526300215826073073' + 
                                  '6'),                                         // (2132): ModPow(Arguments[62], Arguments[40], Arguments[1])
    (Info: triOk;            Val: '5280555453084984227848200'),                 // (2133): ModPow(Arguments[62], Arguments[40], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2134): ModPow(Arguments[62], Arguments[40], Arguments[11])
    (Info: triOk;            Val: '8'),                                         // (2135): ModPow(Arguments[62], Arguments[40], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2136): ModPow(Arguments[62], Arguments[40], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2137): ModPow(Arguments[62], Arguments[40], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2138): ModPow(Arguments[62], Arguments[40], Arguments[31])
    (Info: triOk;            Val: '167440248955198568872'),                     // (2139): ModPow(Arguments[62], Arguments[40], Arguments[36])
    (Info: triOk;            Val: '10298282833546339787884'),                   // (2140): ModPow(Arguments[62], Arguments[40], Arguments[41])
    (Info: triOk;            Val: '5394859610679314537968616590'),              // (2141): ModPow(Arguments[62], Arguments[40], Arguments[46])
    (Info: triOk;            Val: '4069856286578386060725923224'),              // (2142): ModPow(Arguments[62], Arguments[40], Arguments[51])
    (Info: triOk;            Val: '162558442370867225530331232244596736000'),   // (2143): ModPow(Arguments[62], Arguments[40], Arguments[56])
    (Info: triOk;            Val: '1367930801789569252170917871289437806048' + 
                                  '2836190203670412302017211914062500000000' + 
                                  '00000'),                                     // (2144): ModPow(Arguments[62], Arguments[40], Arguments[61])
    (Info: triOk;            Val: '1520776274825468511084480568579850165956' + 
                                  '6'),                                         // (2145): ModPow(Arguments[62], Arguments[45], Arguments[1])
    (Info: triOk;            Val: '1087439028248932772506400'),                 // (2146): ModPow(Arguments[62], Arguments[45], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2147): ModPow(Arguments[62], Arguments[45], Arguments[11])
    (Info: triOk;            Val: '32'),                                        // (2148): ModPow(Arguments[62], Arguments[45], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2149): ModPow(Arguments[62], Arguments[45], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2150): ModPow(Arguments[62], Arguments[45], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2151): ModPow(Arguments[62], Arguments[45], Arguments[31])
    (Info: triOk;            Val: '143202063665610264296'),                     // (2152): ModPow(Arguments[62], Arguments[45], Arguments[36])
    (Info: triOk;            Val: '50489491481339920816888'),                   // (2153): ModPow(Arguments[62], Arguments[45], Arguments[41])
    (Info: triOk;            Val: '4900131398996128179600626080'),              // (2154): ModPow(Arguments[62], Arguments[45], Arguments[46])
    (Info: triOk;            Val: '1915875678915607299826444742'),              // (2155): ModPow(Arguments[62], Arguments[45], Arguments[51])
    (Info: triOk;            Val: '598593943336187603155138269314138767360'),   // (2156): ModPow(Arguments[62], Arguments[45], Arguments[56])
    (Info: triOk;            Val: '1272670542315332243680220867827063147004' + 
                                  '1962529649026691913604736328125000000000' + 
                                  '00000'),                                     // (2157): ModPow(Arguments[62], Arguments[45], Arguments[61])
    (Info: triOk;            Val: '1741965382844804678754219087471075971379' + 
                                  '5'),                                         // (2158): ModPow(Arguments[62], Arguments[50], Arguments[1])
    (Info: triOk;            Val: '5116019461915072354446200'),                 // (2159): ModPow(Arguments[62], Arguments[50], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2160): ModPow(Arguments[62], Arguments[50], Arguments[11])
    (Info: triOk;            Val: '40'),                                        // (2161): ModPow(Arguments[62], Arguments[50], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2162): ModPow(Arguments[62], Arguments[50], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2163): ModPow(Arguments[62], Arguments[50], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2164): ModPow(Arguments[62], Arguments[50], Arguments[31])
    (Info: triOk;            Val: '134854894154503197332'),                     // (2165): ModPow(Arguments[62], Arguments[50], Arguments[36])
    (Info: triOk;            Val: '64580509411322152322884'),                   // (2166): ModPow(Arguments[62], Arguments[50], Arguments[41])
    (Info: triOk;            Val: '4860681800874091864957545490'),              // (2167): ModPow(Arguments[62], Arguments[50], Arguments[46])
    (Info: triOk;            Val: '107356021889891824956122369085'),            // (2168): ModPow(Arguments[62], Arguments[50], Arguments[51])
    (Info: triOk;            Val: '261189366384272860601535841578338222080'),   // (2169): ModPow(Arguments[62], Arguments[50], Arguments[56])
    (Info: triOk;            Val: '1311496745587138783539016575769436956377' + 
                                  '9446252738125622272491455078125000000000' + 
                                  '00000'),                                     // (2170): ModPow(Arguments[62], Arguments[50], Arguments[61])
    (Info: triOk;            Val: '1137141229660598726124250831197251295320' + 
                                  '3'),                                         // (2171): ModPow(Arguments[62], Arguments[55], Arguments[1])
    (Info: triOk;            Val: '3664567789037223135361400'),                 // (2172): ModPow(Arguments[62], Arguments[55], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2173): ModPow(Arguments[62], Arguments[55], Arguments[11])
    (Info: triOk;            Val: '16'),                                        // (2174): ModPow(Arguments[62], Arguments[55], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2175): ModPow(Arguments[62], Arguments[55], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2176): ModPow(Arguments[62], Arguments[55], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2177): ModPow(Arguments[62], Arguments[55], Arguments[31])
    (Info: triOk;            Val: '72679027123124633448'),                      // (2178): ModPow(Arguments[62], Arguments[55], Arguments[36])
    (Info: triOk;            Val: '70041279633578990666848'),                   // (2179): ModPow(Arguments[62], Arguments[55], Arguments[41])
    (Info: triOk;            Val: '4767807789752979875197213360'),              // (2180): ModPow(Arguments[62], Arguments[55], Arguments[46])
    (Info: triOk;            Val: '106496444843400422721351840684'),            // (2181): ModPow(Arguments[62], Arguments[55], Arguments[51])
    (Info: triOk;            Val: '516809791563671082054768486371075031040'),   // (2182): ModPow(Arguments[62], Arguments[55], Arguments[56])
    (Info: triOk;            Val: '3180332528835573709965616490602177690583' + 
                                  '1188742013182491064071655273437500000000' + 
                                  '00000'),                                     // (2183): ModPow(Arguments[62], Arguments[55], Arguments[61])
    (Info: triOk;            Val: '1596487186834418062126517757671790770813' + 
                                  '4'),                                         // (2184): ModPow(Arguments[62], Arguments[60], Arguments[1])
    (Info: triOk;            Val: '4493053262174371051844000'),                 // (2185): ModPow(Arguments[62], Arguments[60], Arguments[6])
    (Info: triOk;            Val: '0'),                                         // (2186): ModPow(Arguments[62], Arguments[60], Arguments[11])
    (Info: triOk;            Val: '48'),                                        // (2187): ModPow(Arguments[62], Arguments[60], Arguments[16])
    (Info: triDivideByZero;  Val: 'BigInteger: modulus not positive'),          // (2188): ModPow(Arguments[62], Arguments[60], Arguments[21])
    (Info: triOk;            Val: '0'),                                         // (2189): ModPow(Arguments[62], Arguments[60], Arguments[26])
    (Info: triOk;            Val: '0'),                                         // (2190): ModPow(Arguments[62], Arguments[60], Arguments[31])
    (Info: triOk;            Val: '134331608769624467684'),                     // (2191): ModPow(Arguments[62], Arguments[60], Arguments[36])
    (Info: triOk;            Val: '61159922848641791235424'),                   // (2192): ModPow(Arguments[62], Arguments[60], Arguments[41])
    (Info: triOk;            Val: '5388285883165781972037173740'),              // (2193): ModPow(Arguments[62], Arguments[60], Arguments[46])
    (Info: triOk;            Val: '6932609296516898966349122024'),              // (2194): ModPow(Arguments[62], Arguments[60], Arguments[51])
    (Info: triOk;            Val: '223746415663163584865295299924249804800'),   // (2195): ModPow(Arguments[62], Arguments[60], Arguments[56])
    (Info: triOk;            Val: '7067842313770692464857083297385953457592' + 
                                  '2225485555827617645263671875000000000000' + 
                                  '00')                                         // (2196): ModPow(Arguments[62], Arguments[60], Arguments[61])
  );

  ComparisonResults: array[0..ArgumentCount * ArgumentCount - 1, TComparisonResult] of Boolean =
  (
    (False,  True,  True,  True, False, False),         // Arguments[0] <-> Arguments[0]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[1]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[2]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[3]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[4]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[0] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[1] <-> Arguments[0]
    (False,  True,  True,  True, False, False),         // Arguments[1] <-> Arguments[1]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[2]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[3]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[4]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[1] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[2] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[2] <-> Arguments[1]
    (False,  True,  True,  True, False, False),         // Arguments[2] <-> Arguments[2]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[3]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[4]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[2] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[3] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[3] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[3] <-> Arguments[2]
    (False,  True,  True,  True, False, False),         // Arguments[3] <-> Arguments[3]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[4]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[3] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[4] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[4] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[4] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[4] <-> Arguments[3]
    (False,  True,  True,  True, False, False),         // Arguments[4] <-> Arguments[4]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[4] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[5] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[5] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[5] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[5] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[5] <-> Arguments[4]
    (False,  True,  True,  True, False, False),         // Arguments[5] <-> Arguments[5]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[5] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[6] <-> Arguments[5]
    (False,  True,  True,  True, False, False),         // Arguments[6] <-> Arguments[6]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[6] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[7] <-> Arguments[6]
    (False,  True,  True,  True, False, False),         // Arguments[7] <-> Arguments[7]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[7] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[8] <-> Arguments[7]
    (False,  True,  True,  True, False, False),         // Arguments[8] <-> Arguments[8]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[8] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[9] <-> Arguments[8]
    (False,  True,  True,  True, False, False),         // Arguments[9] <-> Arguments[9]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[9] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[10] <-> Arguments[9]
    (False,  True,  True,  True, False, False),         // Arguments[10] <-> Arguments[10]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[10] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[11] <-> Arguments[10]
    (False,  True,  True,  True, False, False),         // Arguments[11] <-> Arguments[11]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[11] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[12] <-> Arguments[11]
    (False,  True,  True,  True, False, False),         // Arguments[12] <-> Arguments[12]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[12] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[13] <-> Arguments[12]
    (False,  True,  True,  True, False, False),         // Arguments[13] <-> Arguments[13]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[13] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[14] <-> Arguments[13]
    (False,  True,  True,  True, False, False),         // Arguments[14] <-> Arguments[14]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[14] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[15] <-> Arguments[14]
    (False,  True,  True,  True, False, False),         // Arguments[15] <-> Arguments[15]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[15] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[16] <-> Arguments[15]
    (False,  True,  True,  True, False, False),         // Arguments[16] <-> Arguments[16]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[16] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[17] <-> Arguments[16]
    (False,  True,  True,  True, False, False),         // Arguments[17] <-> Arguments[17]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[17] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[18] <-> Arguments[17]
    (False,  True,  True,  True, False, False),         // Arguments[18] <-> Arguments[18]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[18] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[19] <-> Arguments[18]
    (False,  True,  True,  True, False, False),         // Arguments[19] <-> Arguments[19]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[19] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[20] <-> Arguments[19]
    (False,  True,  True,  True, False, False),         // Arguments[20] <-> Arguments[20]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[20] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[21] <-> Arguments[20]
    (False,  True,  True,  True, False, False),         // Arguments[21] <-> Arguments[21]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[21] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[22] <-> Arguments[21]
    (False,  True,  True,  True, False, False),         // Arguments[22] <-> Arguments[22]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[22] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[23] <-> Arguments[22]
    (False,  True,  True,  True, False, False),         // Arguments[23] <-> Arguments[23]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[23] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[24] <-> Arguments[23]
    (False,  True,  True,  True, False, False),         // Arguments[24] <-> Arguments[24]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[24] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[25] <-> Arguments[24]
    (False,  True,  True,  True, False, False),         // Arguments[25] <-> Arguments[25]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[25] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[26] <-> Arguments[25]
    (False,  True,  True,  True, False, False),         // Arguments[26] <-> Arguments[26]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[26] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[27] <-> Arguments[26]
    (False,  True,  True,  True, False, False),         // Arguments[27] <-> Arguments[27]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[27] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[28] <-> Arguments[27]
    (False,  True,  True,  True, False, False),         // Arguments[28] <-> Arguments[28]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[28] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[29] <-> Arguments[28]
    (False,  True,  True,  True, False, False),         // Arguments[29] <-> Arguments[29]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[29] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[30] <-> Arguments[29]
    (False,  True,  True,  True, False, False),         // Arguments[30] <-> Arguments[30]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[30] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[31] <-> Arguments[30]
    (False,  True,  True,  True, False, False),         // Arguments[31] <-> Arguments[31]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[31] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[32] <-> Arguments[31]
    (False,  True,  True,  True, False, False),         // Arguments[32] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[61]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[32] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[32]
    (False,  True,  True,  True, False, False),         // Arguments[33] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[33] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[33] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[33]
    (False,  True,  True,  True, False, False),         // Arguments[34] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[34] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[34] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[34]
    (False,  True,  True,  True, False, False),         // Arguments[35] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[35] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[35] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[35]
    (False,  True,  True,  True, False, False),         // Arguments[36] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[36] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[36] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[36]
    (False,  True,  True,  True, False, False),         // Arguments[37] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[37] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[37] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[37]
    (False,  True,  True,  True, False, False),         // Arguments[38] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[38] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[38] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[38]
    (False,  True,  True,  True, False, False),         // Arguments[39] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[39] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[39] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[39]
    (False,  True,  True,  True, False, False),         // Arguments[40] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[40] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[40] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[40]
    (False,  True,  True,  True, False, False),         // Arguments[41] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[41] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[41] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[41]
    (False,  True,  True,  True, False, False),         // Arguments[42] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[42] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[42] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[42]
    (False,  True,  True,  True, False, False),         // Arguments[43] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[43] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[43] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[43]
    (False,  True,  True,  True, False, False),         // Arguments[44] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[44] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[44] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[44]
    (False,  True,  True,  True, False, False),         // Arguments[45] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[45] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[45] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[45]
    (False,  True,  True,  True, False, False),         // Arguments[46] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[46] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[46] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[46]
    (False,  True,  True,  True, False, False),         // Arguments[47] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[47] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[47] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[47]
    (False,  True,  True,  True, False, False),         // Arguments[48] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[48] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[48] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[48]
    (False,  True,  True,  True, False, False),         // Arguments[49] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[49] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[49] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[49]
    (False,  True,  True,  True, False, False),         // Arguments[50] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[50] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[50] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[50]
    (False,  True,  True,  True, False, False),         // Arguments[51] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[51] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[51] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[51]
    (False,  True,  True,  True, False, False),         // Arguments[52] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[52] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[52] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[52]
    (False,  True,  True,  True, False, False),         // Arguments[53] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[53] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[53] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[53]
    (False,  True,  True,  True, False, False),         // Arguments[54] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[54] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[54] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[54]
    (False,  True,  True,  True, False, False),         // Arguments[55] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[55] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[55] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[55]
    (False,  True,  True,  True, False, False),         // Arguments[56] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[56] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[56] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[56]
    (False,  True,  True,  True, False, False),         // Arguments[57] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[57] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[57] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[57] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[57] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[57] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[57] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[56]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[57]
    (False,  True,  True,  True, False, False),         // Arguments[58] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[58] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[58] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[58] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[58] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[58] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[56]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[57]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[58]
    (False,  True,  True,  True, False, False),         // Arguments[59] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[59] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[59] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[62]
    ( True,  True, False, False, False,  True),         // Arguments[59] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[56]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[57]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[58]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[59]
    (False,  True,  True,  True, False, False),         // Arguments[60] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[60] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[62]
    ( True,  True, False, False, False,  True),         // Arguments[60] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[56]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[57]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[58]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[59]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[60]
    (False,  True,  True,  True, False, False),         // Arguments[61] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[62]
    ( True,  True, False, False, False,  True),         // Arguments[61] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[62] <-> Arguments[32]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[33]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[34]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[35]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[36]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[37]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[38]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[39]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[40]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[41]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[42]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[43]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[44]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[45]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[46]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[47]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[48]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[49]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[50]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[51]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[52]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[53]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[54]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[55]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[56]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[57]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[61]
    (False,  True,  True,  True, False, False),         // Arguments[62] <-> Arguments[62]
    (False, False, False,  True,  True,  True),         // Arguments[62] <-> Arguments[63]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[0]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[1]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[2]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[3]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[4]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[5]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[6]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[7]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[8]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[9]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[10]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[11]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[12]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[13]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[14]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[15]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[16]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[17]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[18]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[19]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[20]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[21]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[22]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[23]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[24]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[25]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[26]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[27]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[28]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[29]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[30]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[31]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[32]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[33]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[34]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[35]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[36]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[37]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[38]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[39]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[40]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[41]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[42]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[43]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[44]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[45]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[46]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[47]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[48]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[49]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[50]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[51]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[52]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[53]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[54]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[55]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[56]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[57]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[58]
    (False, False, False,  True,  True,  True),         // Arguments[63] <-> Arguments[59]
    (False, False, False,  True,  True,  True),         // Arguments[63] <-> Arguments[60]
    (False, False, False,  True,  True,  True),         // Arguments[63] <-> Arguments[61]
    ( True,  True, False, False, False,  True),         // Arguments[63] <-> Arguments[62]
    (False,  True,  True,  True, False, False)          // Arguments[63] <-> Arguments[63]
  );

  GCDResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //    0: Arguments[0] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //    1: Arguments[0] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //    2: Arguments[0] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //    3: Arguments[0] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //    4: Arguments[0] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //    5: Arguments[0] gcd Arguments[5]
    (Info: triOk;            Val: '40'),                                        //    6: Arguments[0] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //    7: Arguments[0] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //    8: Arguments[0] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //    9: Arguments[0] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //   10: Arguments[0] gcd Arguments[10]
    (Info: triOk;            Val: '160'),                                       //   11: Arguments[0] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        //   12: Arguments[0] gcd Arguments[12]
    (Info: triOk;            Val: '80'),                                        //   13: Arguments[0] gcd Arguments[13]
    (Info: triOk;            Val: '40'),                                        //   14: Arguments[0] gcd Arguments[14]
    (Info: triOk;            Val: '20'),                                        //   15: Arguments[0] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         //   16: Arguments[0] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //   17: Arguments[0] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //   18: Arguments[0] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //   19: Arguments[0] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //   20: Arguments[0] gcd Arguments[20]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //   21: Arguments[0] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //   22: Arguments[0] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //   23: Arguments[0] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //   24: Arguments[0] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //   25: Arguments[0] gcd Arguments[25]
    (Info: triOk;            Val: '20'),                                        //   26: Arguments[0] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //   27: Arguments[0] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //   28: Arguments[0] gcd Arguments[28]
    (Info: triOk;            Val: '40'),                                        //   29: Arguments[0] gcd Arguments[29]
    (Info: triOk;            Val: '80'),                                        //   30: Arguments[0] gcd Arguments[30]
    (Info: triOk;            Val: '160'),                                       //   31: Arguments[0] gcd Arguments[31]
    (Info: triOk;            Val: '320'),                                       //   32: Arguments[0] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //   33: Arguments[0] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //   34: Arguments[0] gcd Arguments[34]
    (Info: triOk;            Val: '131072'),                                    //   35: Arguments[0] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //   36: Arguments[0] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //   37: Arguments[0] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //   38: Arguments[0] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //   39: Arguments[0] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //   40: Arguments[0] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         //   41: Arguments[0] gcd Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //   42: Arguments[0] gcd Arguments[42]
    (Info: triOk;            Val: '40'),                                        //   43: Arguments[0] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //   44: Arguments[0] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //   45: Arguments[0] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //   46: Arguments[0] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //   47: Arguments[0] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //   48: Arguments[0] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //   49: Arguments[0] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //   50: Arguments[0] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //   51: Arguments[0] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //   52: Arguments[0] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //   53: Arguments[0] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //   54: Arguments[0] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        //   55: Arguments[0] gcd Arguments[55]
    (Info: triOk;            Val: '202824096036516704239472512860160'),         //   56: Arguments[0] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //   57: Arguments[0] gcd Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //   58: Arguments[0] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //   59: Arguments[0] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         //   60: Arguments[0] gcd Arguments[60]
    (Info: triOk;            Val: '40960'),                                     //   61: Arguments[0] gcd Arguments[61]
    (Info: triOk;            Val: '40960'),                                     //   62: Arguments[0] gcd Arguments[62]
    (Info: triOk;            Val: '720575940379279360'),                        //   63: Arguments[0] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         //   64: Arguments[1] gcd Arguments[0]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //   65: Arguments[1] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //   66: Arguments[1] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         //   67: Arguments[1] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         //   68: Arguments[1] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         //   69: Arguments[1] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         //   70: Arguments[1] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         //   71: Arguments[1] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         //   72: Arguments[1] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         //   73: Arguments[1] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         //   74: Arguments[1] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         //   75: Arguments[1] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         //   76: Arguments[1] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         //   77: Arguments[1] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         //   78: Arguments[1] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         //   79: Arguments[1] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         //   80: Arguments[1] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         //   81: Arguments[1] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //   82: Arguments[1] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         //   83: Arguments[1] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //   84: Arguments[1] gcd Arguments[20]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //   85: Arguments[1] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //   86: Arguments[1] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         //   87: Arguments[1] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //   88: Arguments[1] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         //   89: Arguments[1] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         //   90: Arguments[1] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //   91: Arguments[1] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         //   92: Arguments[1] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         //   93: Arguments[1] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         //   94: Arguments[1] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         //   95: Arguments[1] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         //   96: Arguments[1] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         //   97: Arguments[1] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //   98: Arguments[1] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         //   99: Arguments[1] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         //  100: Arguments[1] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  101: Arguments[1] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         //  102: Arguments[1] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         //  103: Arguments[1] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         //  104: Arguments[1] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         //  105: Arguments[1] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         //  106: Arguments[1] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         //  107: Arguments[1] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         //  108: Arguments[1] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         //  109: Arguments[1] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         //  110: Arguments[1] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  111: Arguments[1] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  112: Arguments[1] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         //  113: Arguments[1] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  114: Arguments[1] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  115: Arguments[1] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  116: Arguments[1] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  117: Arguments[1] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  118: Arguments[1] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         //  119: Arguments[1] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         //  120: Arguments[1] gcd Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  121: Arguments[1] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         //  122: Arguments[1] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         //  123: Arguments[1] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         //  124: Arguments[1] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         //  125: Arguments[1] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         //  126: Arguments[1] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         //  127: Arguments[1] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         //  128: Arguments[2] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  129: Arguments[2] gcd Arguments[1]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  130: Arguments[2] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         //  131: Arguments[2] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         //  132: Arguments[2] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         //  133: Arguments[2] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         //  134: Arguments[2] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         //  135: Arguments[2] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         //  136: Arguments[2] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         //  137: Arguments[2] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         //  138: Arguments[2] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         //  139: Arguments[2] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         //  140: Arguments[2] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         //  141: Arguments[2] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         //  142: Arguments[2] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         //  143: Arguments[2] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         //  144: Arguments[2] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         //  145: Arguments[2] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  146: Arguments[2] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         //  147: Arguments[2] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  148: Arguments[2] gcd Arguments[20]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  149: Arguments[2] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  150: Arguments[2] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         //  151: Arguments[2] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  152: Arguments[2] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         //  153: Arguments[2] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         //  154: Arguments[2] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  155: Arguments[2] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         //  156: Arguments[2] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         //  157: Arguments[2] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         //  158: Arguments[2] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         //  159: Arguments[2] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         //  160: Arguments[2] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         //  161: Arguments[2] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  162: Arguments[2] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         //  163: Arguments[2] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         //  164: Arguments[2] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  165: Arguments[2] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         //  166: Arguments[2] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         //  167: Arguments[2] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         //  168: Arguments[2] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         //  169: Arguments[2] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         //  170: Arguments[2] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         //  171: Arguments[2] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         //  172: Arguments[2] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         //  173: Arguments[2] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         //  174: Arguments[2] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  175: Arguments[2] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  176: Arguments[2] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         //  177: Arguments[2] gcd Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  178: Arguments[2] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  179: Arguments[2] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  180: Arguments[2] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  181: Arguments[2] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  182: Arguments[2] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         //  183: Arguments[2] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         //  184: Arguments[2] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  185: Arguments[2] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         //  186: Arguments[2] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         //  187: Arguments[2] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         //  188: Arguments[2] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         //  189: Arguments[2] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         //  190: Arguments[2] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         //  191: Arguments[2] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        //  192: Arguments[3] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  193: Arguments[3] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  194: Arguments[3] gcd Arguments[2]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  195: Arguments[3] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  196: Arguments[3] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  197: Arguments[3] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        //  198: Arguments[3] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         //  199: Arguments[3] gcd Arguments[7]
    (Info: triOk;            Val: '22'),                                        //  200: Arguments[3] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  201: Arguments[3] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  202: Arguments[3] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        //  203: Arguments[3] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         //  204: Arguments[3] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        //  205: Arguments[3] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        //  206: Arguments[3] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        //  207: Arguments[3] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         //  208: Arguments[3] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  209: Arguments[3] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  210: Arguments[3] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  211: Arguments[3] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  212: Arguments[3] gcd Arguments[20]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  213: Arguments[3] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  214: Arguments[3] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  215: Arguments[3] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  216: Arguments[3] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  217: Arguments[3] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        //  218: Arguments[3] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  219: Arguments[3] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  220: Arguments[3] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        //  221: Arguments[3] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        //  222: Arguments[3] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        //  223: Arguments[3] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        //  224: Arguments[3] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  225: Arguments[3] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  226: Arguments[3] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  227: Arguments[3] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  228: Arguments[3] gcd Arguments[36]
    (Info: triOk;            Val: '11'),                                        //  229: Arguments[3] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  230: Arguments[3] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  231: Arguments[3] gcd Arguments[39]
    (Info: triOk;            Val: '22'),                                        //  232: Arguments[3] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         //  233: Arguments[3] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        //  234: Arguments[3] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        //  235: Arguments[3] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //  236: Arguments[3] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  237: Arguments[3] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //  238: Arguments[3] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  239: Arguments[3] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  240: Arguments[3] gcd Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  241: Arguments[3] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  242: Arguments[3] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  243: Arguments[3] gcd Arguments[51]
    (Info: triOk;            Val: '11'),                                        //  244: Arguments[3] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  245: Arguments[3] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  246: Arguments[3] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        //  247: Arguments[3] gcd Arguments[55]
    (Info: triOk;            Val: '10'),                                        //  248: Arguments[3] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  249: Arguments[3] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        //  250: Arguments[3] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //  251: Arguments[3] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         //  252: Arguments[3] gcd Arguments[60]
    (Info: triOk;            Val: '10'),                                        //  253: Arguments[3] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        //  254: Arguments[3] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        //  255: Arguments[3] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        //  256: Arguments[4] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  257: Arguments[4] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  258: Arguments[4] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  259: Arguments[4] gcd Arguments[3]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  260: Arguments[4] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         //  261: Arguments[4] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        //  262: Arguments[4] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         //  263: Arguments[4] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         //  264: Arguments[4] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         //  265: Arguments[4] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         //  266: Arguments[4] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        //  267: Arguments[4] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         //  268: Arguments[4] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        //  269: Arguments[4] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        //  270: Arguments[4] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        //  271: Arguments[4] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         //  272: Arguments[4] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  273: Arguments[4] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  274: Arguments[4] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  275: Arguments[4] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  276: Arguments[4] gcd Arguments[20]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  277: Arguments[4] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  278: Arguments[4] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  279: Arguments[4] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  280: Arguments[4] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  281: Arguments[4] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        //  282: Arguments[4] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  283: Arguments[4] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  284: Arguments[4] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        //  285: Arguments[4] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        //  286: Arguments[4] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        //  287: Arguments[4] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        //  288: Arguments[4] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  289: Arguments[4] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  290: Arguments[4] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  291: Arguments[4] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  292: Arguments[4] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  293: Arguments[4] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         //  294: Arguments[4] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         //  295: Arguments[4] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         //  296: Arguments[4] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         //  297: Arguments[4] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        //  298: Arguments[4] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        //  299: Arguments[4] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         //  300: Arguments[4] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  301: Arguments[4] gcd Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  302: Arguments[4] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  303: Arguments[4] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  304: Arguments[4] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //  305: Arguments[4] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  306: Arguments[4] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  307: Arguments[4] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  308: Arguments[4] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  309: Arguments[4] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  310: Arguments[4] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        //  311: Arguments[4] gcd Arguments[55]
    (Info: triOk;            Val: '30'),                                        //  312: Arguments[4] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  313: Arguments[4] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        //  314: Arguments[4] gcd Arguments[58]
    (Info: triOk;            Val: '30'),                                        //  315: Arguments[4] gcd Arguments[59]
    (Info: triOk;            Val: '15'),                                        //  316: Arguments[4] gcd Arguments[60]
    (Info: triOk;            Val: '30'),                                        //  317: Arguments[4] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        //  318: Arguments[4] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        //  319: Arguments[4] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         //  320: Arguments[5] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  321: Arguments[5] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  322: Arguments[5] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         //  323: Arguments[5] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         //  324: Arguments[5] gcd Arguments[4]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  325: Arguments[5] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         //  326: Arguments[5] gcd Arguments[6]
    (Info: triOk;            Val: '42'),                                        //  327: Arguments[5] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         //  328: Arguments[5] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         //  329: Arguments[5] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         //  330: Arguments[5] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         //  331: Arguments[5] gcd Arguments[11]
    (Info: triOk;            Val: '14'),                                        //  332: Arguments[5] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         //  333: Arguments[5] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         //  334: Arguments[5] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         //  335: Arguments[5] gcd Arguments[15]
    (Info: triOk;            Val: '14'),                                        //  336: Arguments[5] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  337: Arguments[5] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         //  338: Arguments[5] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  339: Arguments[5] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  340: Arguments[5] gcd Arguments[20]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  341: Arguments[5] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  342: Arguments[5] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  343: Arguments[5] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  344: Arguments[5] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  345: Arguments[5] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         //  346: Arguments[5] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  347: Arguments[5] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  348: Arguments[5] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         //  349: Arguments[5] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         //  350: Arguments[5] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         //  351: Arguments[5] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         //  352: Arguments[5] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  353: Arguments[5] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  354: Arguments[5] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  355: Arguments[5] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  356: Arguments[5] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         //  357: Arguments[5] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         //  358: Arguments[5] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         //  359: Arguments[5] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         //  360: Arguments[5] gcd Arguments[40]
    (Info: triOk;            Val: '42'),                                        //  361: Arguments[5] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         //  362: Arguments[5] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         //  363: Arguments[5] gcd Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  364: Arguments[5] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  365: Arguments[5] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         //  366: Arguments[5] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         //  367: Arguments[5] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  368: Arguments[5] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         //  369: Arguments[5] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  370: Arguments[5] gcd Arguments[50]
    (Info: triOk;            Val: '23'),                                        //  371: Arguments[5] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  372: Arguments[5] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  373: Arguments[5] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         //  374: Arguments[5] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  375: Arguments[5] gcd Arguments[55]
    (Info: triOk;            Val: '714'),                                       //  376: Arguments[5] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  377: Arguments[5] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         //  378: Arguments[5] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         //  379: Arguments[5] gcd Arguments[59]
    (Info: triOk;            Val: '357'),                                       //  380: Arguments[5] gcd Arguments[60]
    (Info: triOk;            Val: '714'),                                       //  381: Arguments[5] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         //  382: Arguments[5] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         //  383: Arguments[5] gcd Arguments[63]
    (Info: triOk;            Val: '40'),                                        //  384: Arguments[6] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  385: Arguments[6] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  386: Arguments[6] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  387: Arguments[6] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  388: Arguments[6] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  389: Arguments[6] gcd Arguments[5]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  390: Arguments[6] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //  391: Arguments[6] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  392: Arguments[6] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  393: Arguments[6] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  394: Arguments[6] gcd Arguments[10]
    (Info: triOk;            Val: '200'),                                       //  395: Arguments[6] gcd Arguments[11]
    (Info: triOk;            Val: '8'),                                         //  396: Arguments[6] gcd Arguments[12]
    (Info: triOk;            Val: '200'),                                       //  397: Arguments[6] gcd Arguments[13]
    (Info: triOk;            Val: '200'),                                       //  398: Arguments[6] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       //  399: Arguments[6] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         //  400: Arguments[6] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  401: Arguments[6] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  402: Arguments[6] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  403: Arguments[6] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  404: Arguments[6] gcd Arguments[20]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  405: Arguments[6] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  406: Arguments[6] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  407: Arguments[6] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  408: Arguments[6] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  409: Arguments[6] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  410: Arguments[6] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  411: Arguments[6] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  412: Arguments[6] gcd Arguments[28]
    (Info: triOk;            Val: '200'),                                       //  413: Arguments[6] gcd Arguments[29]
    (Info: triOk;            Val: '200'),                                       //  414: Arguments[6] gcd Arguments[30]
    (Info: triOk;            Val: '200'),                                       //  415: Arguments[6] gcd Arguments[31]
    (Info: triOk;            Val: '200'),                                       //  416: Arguments[6] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  417: Arguments[6] gcd Arguments[33]
    (Info: triOk;            Val: '155'),                                       //  418: Arguments[6] gcd Arguments[34]
    (Info: triOk;            Val: '8'),                                         //  419: Arguments[6] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  420: Arguments[6] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  421: Arguments[6] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  422: Arguments[6] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  423: Arguments[6] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //  424: Arguments[6] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         //  425: Arguments[6] gcd Arguments[41]
    (Info: triOk;            Val: '40'),                                        //  426: Arguments[6] gcd Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  427: Arguments[6] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //  428: Arguments[6] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  429: Arguments[6] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //  430: Arguments[6] gcd Arguments[46]
    (Info: triOk;            Val: '73'),                                        //  431: Arguments[6] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  432: Arguments[6] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //  433: Arguments[6] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  434: Arguments[6] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  435: Arguments[6] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  436: Arguments[6] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  437: Arguments[6] gcd Arguments[53]
    (Info: triOk;            Val: '73'),                                        //  438: Arguments[6] gcd Arguments[54]
    (Info: triOk;            Val: '50'),                                        //  439: Arguments[6] gcd Arguments[55]
    (Info: triOk;            Val: '40'),                                        //  440: Arguments[6] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  441: Arguments[6] gcd Arguments[57]
    (Info: triOk;            Val: '40'),                                        //  442: Arguments[6] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //  443: Arguments[6] gcd Arguments[59]
    (Info: triOk;            Val: '25'),                                        //  444: Arguments[6] gcd Arguments[60]
    (Info: triOk;            Val: '200'),                                       //  445: Arguments[6] gcd Arguments[61]
    (Info: triOk;            Val: '200'),                                       //  446: Arguments[6] gcd Arguments[62]
    (Info: triOk;            Val: '200'),                                       //  447: Arguments[6] gcd Arguments[63]
    (Info: triOk;            Val: '4'),                                         //  448: Arguments[7] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  449: Arguments[7] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  450: Arguments[7] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         //  451: Arguments[7] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         //  452: Arguments[7] gcd Arguments[4]
    (Info: triOk;            Val: '42'),                                        //  453: Arguments[7] gcd Arguments[5]
    (Info: triOk;            Val: '4'),                                         //  454: Arguments[7] gcd Arguments[6]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  455: Arguments[7] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         //  456: Arguments[7] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         //  457: Arguments[7] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         //  458: Arguments[7] gcd Arguments[10]
    (Info: triOk;            Val: '4'),                                         //  459: Arguments[7] gcd Arguments[11]
    (Info: triOk;            Val: '28'),                                        //  460: Arguments[7] gcd Arguments[12]
    (Info: triOk;            Val: '4'),                                         //  461: Arguments[7] gcd Arguments[13]
    (Info: triOk;            Val: '4'),                                         //  462: Arguments[7] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         //  463: Arguments[7] gcd Arguments[15]
    (Info: triOk;            Val: '28'),                                        //  464: Arguments[7] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  465: Arguments[7] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         //  466: Arguments[7] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  467: Arguments[7] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  468: Arguments[7] gcd Arguments[20]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  469: Arguments[7] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  470: Arguments[7] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  471: Arguments[7] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  472: Arguments[7] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  473: Arguments[7] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         //  474: Arguments[7] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  475: Arguments[7] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  476: Arguments[7] gcd Arguments[28]
    (Info: triOk;            Val: '4'),                                         //  477: Arguments[7] gcd Arguments[29]
    (Info: triOk;            Val: '4'),                                         //  478: Arguments[7] gcd Arguments[30]
    (Info: triOk;            Val: '4'),                                         //  479: Arguments[7] gcd Arguments[31]
    (Info: triOk;            Val: '4'),                                         //  480: Arguments[7] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  481: Arguments[7] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  482: Arguments[7] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         //  483: Arguments[7] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  484: Arguments[7] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         //  485: Arguments[7] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         //  486: Arguments[7] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         //  487: Arguments[7] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         //  488: Arguments[7] gcd Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  489: Arguments[7] gcd Arguments[41]
    (Info: triOk;            Val: '4'),                                         //  490: Arguments[7] gcd Arguments[42]
    (Info: triOk;            Val: '4'),                                         //  491: Arguments[7] gcd Arguments[43]
    (Info: triOk;            Val: '42'),                                        //  492: Arguments[7] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  493: Arguments[7] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         //  494: Arguments[7] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         //  495: Arguments[7] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  496: Arguments[7] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         //  497: Arguments[7] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  498: Arguments[7] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  499: Arguments[7] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  500: Arguments[7] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  501: Arguments[7] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         //  502: Arguments[7] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  503: Arguments[7] gcd Arguments[55]
    (Info: triOk;            Val: '1092'),                                      //  504: Arguments[7] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  505: Arguments[7] gcd Arguments[57]
    (Info: triOk;            Val: '4'),                                         //  506: Arguments[7] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         //  507: Arguments[7] gcd Arguments[59]
    (Info: triOk;            Val: '273'),                                       //  508: Arguments[7] gcd Arguments[60]
    (Info: triOk;            Val: '1092'),                                      //  509: Arguments[7] gcd Arguments[61]
    (Info: triOk;            Val: '4'),                                         //  510: Arguments[7] gcd Arguments[62]
    (Info: triOk;            Val: '4'),                                         //  511: Arguments[7] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         //  512: Arguments[8] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  513: Arguments[8] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  514: Arguments[8] gcd Arguments[2]
    (Info: triOk;            Val: '22'),                                        //  515: Arguments[8] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         //  516: Arguments[8] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         //  517: Arguments[8] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         //  518: Arguments[8] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         //  519: Arguments[8] gcd Arguments[7]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  520: Arguments[8] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         //  521: Arguments[8] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         //  522: Arguments[8] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         //  523: Arguments[8] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         //  524: Arguments[8] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         //  525: Arguments[8] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         //  526: Arguments[8] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         //  527: Arguments[8] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         //  528: Arguments[8] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  529: Arguments[8] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  530: Arguments[8] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  531: Arguments[8] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  532: Arguments[8] gcd Arguments[20]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  533: Arguments[8] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  534: Arguments[8] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  535: Arguments[8] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  536: Arguments[8] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  537: Arguments[8] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         //  538: Arguments[8] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  539: Arguments[8] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  540: Arguments[8] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         //  541: Arguments[8] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         //  542: Arguments[8] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         //  543: Arguments[8] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         //  544: Arguments[8] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  545: Arguments[8] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  546: Arguments[8] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  547: Arguments[8] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  548: Arguments[8] gcd Arguments[36]
    (Info: triOk;            Val: '11'),                                        //  549: Arguments[8] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         //  550: Arguments[8] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         //  551: Arguments[8] gcd Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  552: Arguments[8] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         //  553: Arguments[8] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         //  554: Arguments[8] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         //  555: Arguments[8] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         //  556: Arguments[8] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  557: Arguments[8] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         //  558: Arguments[8] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  559: Arguments[8] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  560: Arguments[8] gcd Arguments[48]
    (Info: triOk;            Val: '22'),                                        //  561: Arguments[8] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  562: Arguments[8] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  563: Arguments[8] gcd Arguments[51]
    (Info: triOk;            Val: '11'),                                        //  564: Arguments[8] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  565: Arguments[8] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  566: Arguments[8] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  567: Arguments[8] gcd Arguments[55]
    (Info: triOk;            Val: '6'),                                         //  568: Arguments[8] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  569: Arguments[8] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         //  570: Arguments[8] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         //  571: Arguments[8] gcd Arguments[59]
    (Info: triOk;            Val: '3'),                                         //  572: Arguments[8] gcd Arguments[60]
    (Info: triOk;            Val: '6'),                                         //  573: Arguments[8] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         //  574: Arguments[8] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         //  575: Arguments[8] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         //  576: Arguments[9] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  577: Arguments[9] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  578: Arguments[9] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         //  579: Arguments[9] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         //  580: Arguments[9] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         //  581: Arguments[9] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         //  582: Arguments[9] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         //  583: Arguments[9] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         //  584: Arguments[9] gcd Arguments[8]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  585: Arguments[9] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         //  586: Arguments[9] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         //  587: Arguments[9] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         //  588: Arguments[9] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         //  589: Arguments[9] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         //  590: Arguments[9] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         //  591: Arguments[9] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         //  592: Arguments[9] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  593: Arguments[9] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  594: Arguments[9] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  595: Arguments[9] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  596: Arguments[9] gcd Arguments[20]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  597: Arguments[9] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  598: Arguments[9] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  599: Arguments[9] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  600: Arguments[9] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  601: Arguments[9] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         //  602: Arguments[9] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  603: Arguments[9] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  604: Arguments[9] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         //  605: Arguments[9] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         //  606: Arguments[9] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         //  607: Arguments[9] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         //  608: Arguments[9] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  609: Arguments[9] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  610: Arguments[9] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  611: Arguments[9] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  612: Arguments[9] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  613: Arguments[9] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         //  614: Arguments[9] gcd Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  615: Arguments[9] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         //  616: Arguments[9] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         //  617: Arguments[9] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         //  618: Arguments[9] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         //  619: Arguments[9] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         //  620: Arguments[9] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  621: Arguments[9] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         //  622: Arguments[9] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  623: Arguments[9] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  624: Arguments[9] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         //  625: Arguments[9] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  626: Arguments[9] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  627: Arguments[9] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  628: Arguments[9] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  629: Arguments[9] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  630: Arguments[9] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  631: Arguments[9] gcd Arguments[55]
    (Info: triOk;            Val: '6'),                                         //  632: Arguments[9] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  633: Arguments[9] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         //  634: Arguments[9] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         //  635: Arguments[9] gcd Arguments[59]
    (Info: triOk;            Val: '3'),                                         //  636: Arguments[9] gcd Arguments[60]
    (Info: triOk;            Val: '6'),                                         //  637: Arguments[9] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         //  638: Arguments[9] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         //  639: Arguments[9] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         //  640: Arguments[10] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  641: Arguments[10] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  642: Arguments[10] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         //  643: Arguments[10] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         //  644: Arguments[10] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         //  645: Arguments[10] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         //  646: Arguments[10] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         //  647: Arguments[10] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         //  648: Arguments[10] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         //  649: Arguments[10] gcd Arguments[9]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  650: Arguments[10] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         //  651: Arguments[10] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         //  652: Arguments[10] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         //  653: Arguments[10] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         //  654: Arguments[10] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         //  655: Arguments[10] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         //  656: Arguments[10] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  657: Arguments[10] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  658: Arguments[10] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  659: Arguments[10] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  660: Arguments[10] gcd Arguments[20]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  661: Arguments[10] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  662: Arguments[10] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  663: Arguments[10] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  664: Arguments[10] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  665: Arguments[10] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         //  666: Arguments[10] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  667: Arguments[10] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  668: Arguments[10] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         //  669: Arguments[10] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         //  670: Arguments[10] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         //  671: Arguments[10] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         //  672: Arguments[10] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         //  673: Arguments[10] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  674: Arguments[10] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         //  675: Arguments[10] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         //  676: Arguments[10] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  677: Arguments[10] gcd Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  678: Arguments[10] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         //  679: Arguments[10] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         //  680: Arguments[10] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         //  681: Arguments[10] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         //  682: Arguments[10] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         //  683: Arguments[10] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         //  684: Arguments[10] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  685: Arguments[10] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         //  686: Arguments[10] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  687: Arguments[10] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         //  688: Arguments[10] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         //  689: Arguments[10] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  690: Arguments[10] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  691: Arguments[10] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  692: Arguments[10] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  693: Arguments[10] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  694: Arguments[10] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  695: Arguments[10] gcd Arguments[55]
    (Info: triOk;            Val: '18'),                                        //  696: Arguments[10] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  697: Arguments[10] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         //  698: Arguments[10] gcd Arguments[58]
    (Info: triOk;            Val: '18'),                                        //  699: Arguments[10] gcd Arguments[59]
    (Info: triOk;            Val: '9'),                                         //  700: Arguments[10] gcd Arguments[60]
    (Info: triOk;            Val: '18'),                                        //  701: Arguments[10] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         //  702: Arguments[10] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         //  703: Arguments[10] gcd Arguments[63]
    (Info: triOk;            Val: '160'),                                       //  704: Arguments[11] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  705: Arguments[11] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  706: Arguments[11] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  707: Arguments[11] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  708: Arguments[11] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  709: Arguments[11] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       //  710: Arguments[11] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //  711: Arguments[11] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  712: Arguments[11] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  713: Arguments[11] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  714: Arguments[11] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    //  715: Arguments[11] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        //  716: Arguments[11] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     //  717: Arguments[11] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      //  718: Arguments[11] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       //  719: Arguments[11] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         //  720: Arguments[11] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  721: Arguments[11] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  722: Arguments[11] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  723: Arguments[11] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  724: Arguments[11] gcd Arguments[20]
    (Info: triOk;            Val: '100000'),                                    //  725: Arguments[11] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  726: Arguments[11] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  727: Arguments[11] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  728: Arguments[11] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  729: Arguments[11] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  730: Arguments[11] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  731: Arguments[11] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  732: Arguments[11] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  733: Arguments[11] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  734: Arguments[11] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  735: Arguments[11] gcd Arguments[31]
    (Info: triOk;            Val: '100000'),                                    //  736: Arguments[11] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  737: Arguments[11] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  738: Arguments[11] gcd Arguments[34]
    (Info: triOk;            Val: '32'),                                        //  739: Arguments[11] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  740: Arguments[11] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  741: Arguments[11] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  742: Arguments[11] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  743: Arguments[11] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //  744: Arguments[11] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         //  745: Arguments[11] gcd Arguments[41]
    (Info: triOk;            Val: '160'),                                       //  746: Arguments[11] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       //  747: Arguments[11] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //  748: Arguments[11] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  749: Arguments[11] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //  750: Arguments[11] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  751: Arguments[11] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  752: Arguments[11] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //  753: Arguments[11] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  754: Arguments[11] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  755: Arguments[11] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  756: Arguments[11] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  757: Arguments[11] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  758: Arguments[11] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      //  759: Arguments[11] gcd Arguments[55]
    (Info: triOk;            Val: '160'),                                       //  760: Arguments[11] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  761: Arguments[11] gcd Arguments[57]
    (Info: triOk;            Val: '160'),                                       //  762: Arguments[11] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //  763: Arguments[11] gcd Arguments[59]
    (Info: triOk;            Val: '3125'),                                      //  764: Arguments[11] gcd Arguments[60]
    (Info: triOk;            Val: '100000'),                                    //  765: Arguments[11] gcd Arguments[61]
    (Info: triOk;            Val: '100000'),                                    //  766: Arguments[11] gcd Arguments[62]
    (Info: triOk;            Val: '100000'),                                    //  767: Arguments[11] gcd Arguments[63]
    (Info: triOk;            Val: '16'),                                        //  768: Arguments[12] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  769: Arguments[12] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  770: Arguments[12] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         //  771: Arguments[12] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         //  772: Arguments[12] gcd Arguments[4]
    (Info: triOk;            Val: '14'),                                        //  773: Arguments[12] gcd Arguments[5]
    (Info: triOk;            Val: '8'),                                         //  774: Arguments[12] gcd Arguments[6]
    (Info: triOk;            Val: '28'),                                        //  775: Arguments[12] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  776: Arguments[12] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  777: Arguments[12] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  778: Arguments[12] gcd Arguments[10]
    (Info: triOk;            Val: '16'),                                        //  779: Arguments[12] gcd Arguments[11]
    (Info: triOk;            Val: '45808'),                                     //  780: Arguments[12] gcd Arguments[12]
    (Info: triOk;            Val: '16'),                                        //  781: Arguments[12] gcd Arguments[13]
    (Info: triOk;            Val: '8'),                                         //  782: Arguments[12] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         //  783: Arguments[12] gcd Arguments[15]
    (Info: triOk;            Val: '56'),                                        //  784: Arguments[12] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         //  785: Arguments[12] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         //  786: Arguments[12] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  787: Arguments[12] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  788: Arguments[12] gcd Arguments[20]
    (Info: triOk;            Val: '45808'),                                     //  789: Arguments[12] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  790: Arguments[12] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  791: Arguments[12] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  792: Arguments[12] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         //  793: Arguments[12] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         //  794: Arguments[12] gcd Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  795: Arguments[12] gcd Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  796: Arguments[12] gcd Arguments[28]
    (Info: triOk;            Val: '8'),                                         //  797: Arguments[12] gcd Arguments[29]
    (Info: triOk;            Val: '16'),                                        //  798: Arguments[12] gcd Arguments[30]
    (Info: triOk;            Val: '16'),                                        //  799: Arguments[12] gcd Arguments[31]
    (Info: triOk;            Val: '16'),                                        //  800: Arguments[12] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  801: Arguments[12] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         //  802: Arguments[12] gcd Arguments[34]
    (Info: triOk;            Val: '16'),                                        //  803: Arguments[12] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  804: Arguments[12] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         //  805: Arguments[12] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  806: Arguments[12] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  807: Arguments[12] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //  808: Arguments[12] gcd Arguments[40]
    (Info: triOk;            Val: '28'),                                        //  809: Arguments[12] gcd Arguments[41]
    (Info: triOk;            Val: '16'),                                        //  810: Arguments[12] gcd Arguments[42]
    (Info: triOk;            Val: '8'),                                         //  811: Arguments[12] gcd Arguments[43]
    (Info: triOk;            Val: '14'),                                        //  812: Arguments[12] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  813: Arguments[12] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         //  814: Arguments[12] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         //  815: Arguments[12] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  816: Arguments[12] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         //  817: Arguments[12] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  818: Arguments[12] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  819: Arguments[12] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  820: Arguments[12] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  821: Arguments[12] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         //  822: Arguments[12] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         //  823: Arguments[12] gcd Arguments[55]
    (Info: triOk;            Val: '112'),                                       //  824: Arguments[12] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  825: Arguments[12] gcd Arguments[57]
    (Info: triOk;            Val: '16'),                                        //  826: Arguments[12] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         //  827: Arguments[12] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         //  828: Arguments[12] gcd Arguments[60]
    (Info: triOk;            Val: '112'),                                       //  829: Arguments[12] gcd Arguments[61]
    (Info: triOk;            Val: '16'),                                        //  830: Arguments[12] gcd Arguments[62]
    (Info: triOk;            Val: '16'),                                        //  831: Arguments[12] gcd Arguments[63]
    (Info: triOk;            Val: '80'),                                        //  832: Arguments[13] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  833: Arguments[13] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  834: Arguments[13] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  835: Arguments[13] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  836: Arguments[13] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  837: Arguments[13] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       //  838: Arguments[13] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //  839: Arguments[13] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  840: Arguments[13] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  841: Arguments[13] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  842: Arguments[13] gcd Arguments[10]
    (Info: triOk;            Val: '10000'),                                     //  843: Arguments[13] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        //  844: Arguments[13] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     //  845: Arguments[13] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      //  846: Arguments[13] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       //  847: Arguments[13] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         //  848: Arguments[13] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  849: Arguments[13] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  850: Arguments[13] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  851: Arguments[13] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  852: Arguments[13] gcd Arguments[20]
    (Info: triOk;            Val: '10000'),                                     //  853: Arguments[13] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  854: Arguments[13] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  855: Arguments[13] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  856: Arguments[13] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  857: Arguments[13] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  858: Arguments[13] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  859: Arguments[13] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  860: Arguments[13] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  861: Arguments[13] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  862: Arguments[13] gcd Arguments[30]
    (Info: triOk;            Val: '10000'),                                     //  863: Arguments[13] gcd Arguments[31]
    (Info: triOk;            Val: '10000'),                                     //  864: Arguments[13] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  865: Arguments[13] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  866: Arguments[13] gcd Arguments[34]
    (Info: triOk;            Val: '16'),                                        //  867: Arguments[13] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  868: Arguments[13] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  869: Arguments[13] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  870: Arguments[13] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  871: Arguments[13] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //  872: Arguments[13] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         //  873: Arguments[13] gcd Arguments[41]
    (Info: triOk;            Val: '80'),                                        //  874: Arguments[13] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       //  875: Arguments[13] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //  876: Arguments[13] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  877: Arguments[13] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //  878: Arguments[13] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  879: Arguments[13] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  880: Arguments[13] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //  881: Arguments[13] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  882: Arguments[13] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  883: Arguments[13] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  884: Arguments[13] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  885: Arguments[13] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  886: Arguments[13] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      //  887: Arguments[13] gcd Arguments[55]
    (Info: triOk;            Val: '80'),                                        //  888: Arguments[13] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  889: Arguments[13] gcd Arguments[57]
    (Info: triOk;            Val: '80'),                                        //  890: Arguments[13] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //  891: Arguments[13] gcd Arguments[59]
    (Info: triOk;            Val: '625'),                                       //  892: Arguments[13] gcd Arguments[60]
    (Info: triOk;            Val: '10000'),                                     //  893: Arguments[13] gcd Arguments[61]
    (Info: triOk;            Val: '10000'),                                     //  894: Arguments[13] gcd Arguments[62]
    (Info: triOk;            Val: '10000'),                                     //  895: Arguments[13] gcd Arguments[63]
    (Info: triOk;            Val: '40'),                                        //  896: Arguments[14] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  897: Arguments[14] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  898: Arguments[14] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  899: Arguments[14] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  900: Arguments[14] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  901: Arguments[14] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       //  902: Arguments[14] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //  903: Arguments[14] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  904: Arguments[14] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  905: Arguments[14] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  906: Arguments[14] gcd Arguments[10]
    (Info: triOk;            Val: '1000'),                                      //  907: Arguments[14] gcd Arguments[11]
    (Info: triOk;            Val: '8'),                                         //  908: Arguments[14] gcd Arguments[12]
    (Info: triOk;            Val: '1000'),                                      //  909: Arguments[14] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      //  910: Arguments[14] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       //  911: Arguments[14] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         //  912: Arguments[14] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  913: Arguments[14] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  914: Arguments[14] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  915: Arguments[14] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  916: Arguments[14] gcd Arguments[20]
    (Info: triOk;            Val: '1000'),                                      //  917: Arguments[14] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  918: Arguments[14] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  919: Arguments[14] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  920: Arguments[14] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  921: Arguments[14] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  922: Arguments[14] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  923: Arguments[14] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  924: Arguments[14] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  925: Arguments[14] gcd Arguments[29]
    (Info: triOk;            Val: '1000'),                                      //  926: Arguments[14] gcd Arguments[30]
    (Info: triOk;            Val: '1000'),                                      //  927: Arguments[14] gcd Arguments[31]
    (Info: triOk;            Val: '1000'),                                      //  928: Arguments[14] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  929: Arguments[14] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  930: Arguments[14] gcd Arguments[34]
    (Info: triOk;            Val: '8'),                                         //  931: Arguments[14] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  932: Arguments[14] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  933: Arguments[14] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  934: Arguments[14] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  935: Arguments[14] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         //  936: Arguments[14] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         //  937: Arguments[14] gcd Arguments[41]
    (Info: triOk;            Val: '40'),                                        //  938: Arguments[14] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       //  939: Arguments[14] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         //  940: Arguments[14] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         //  941: Arguments[14] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        //  942: Arguments[14] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         //  943: Arguments[14] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         //  944: Arguments[14] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        //  945: Arguments[14] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         //  946: Arguments[14] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         //  947: Arguments[14] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         //  948: Arguments[14] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         //  949: Arguments[14] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         //  950: Arguments[14] gcd Arguments[54]
    (Info: triOk;            Val: '250'),                                       //  951: Arguments[14] gcd Arguments[55]
    (Info: triOk;            Val: '40'),                                        //  952: Arguments[14] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         //  953: Arguments[14] gcd Arguments[57]
    (Info: triOk;            Val: '40'),                                        //  954: Arguments[14] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        //  955: Arguments[14] gcd Arguments[59]
    (Info: triOk;            Val: '125'),                                       //  956: Arguments[14] gcd Arguments[60]
    (Info: triOk;            Val: '1000'),                                      //  957: Arguments[14] gcd Arguments[61]
    (Info: triOk;            Val: '1000'),                                      //  958: Arguments[14] gcd Arguments[62]
    (Info: triOk;            Val: '1000'),                                      //  959: Arguments[14] gcd Arguments[63]
    (Info: triOk;            Val: '20'),                                        //  960: Arguments[15] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         //  961: Arguments[15] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         //  962: Arguments[15] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        //  963: Arguments[15] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        //  964: Arguments[15] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         //  965: Arguments[15] gcd Arguments[5]
    (Info: triOk;            Val: '100'),                                       //  966: Arguments[15] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         //  967: Arguments[15] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         //  968: Arguments[15] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         //  969: Arguments[15] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         //  970: Arguments[15] gcd Arguments[10]
    (Info: triOk;            Val: '100'),                                       //  971: Arguments[15] gcd Arguments[11]
    (Info: triOk;            Val: '4'),                                         //  972: Arguments[15] gcd Arguments[12]
    (Info: triOk;            Val: '100'),                                       //  973: Arguments[15] gcd Arguments[13]
    (Info: triOk;            Val: '100'),                                       //  974: Arguments[15] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       //  975: Arguments[15] gcd Arguments[15]
    (Info: triOk;            Val: '4'),                                         //  976: Arguments[15] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        //  977: Arguments[15] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         //  978: Arguments[15] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         //  979: Arguments[15] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         //  980: Arguments[15] gcd Arguments[20]
    (Info: triOk;            Val: '100'),                                       //  981: Arguments[15] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  982: Arguments[15] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  983: Arguments[15] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         //  984: Arguments[15] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  985: Arguments[15] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  986: Arguments[15] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         //  987: Arguments[15] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         //  988: Arguments[15] gcd Arguments[28]
    (Info: triOk;            Val: '100'),                                       //  989: Arguments[15] gcd Arguments[29]
    (Info: triOk;            Val: '100'),                                       //  990: Arguments[15] gcd Arguments[30]
    (Info: triOk;            Val: '100'),                                       //  991: Arguments[15] gcd Arguments[31]
    (Info: triOk;            Val: '100'),                                       //  992: Arguments[15] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         //  993: Arguments[15] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         //  994: Arguments[15] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         //  995: Arguments[15] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         //  996: Arguments[15] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         //  997: Arguments[15] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         //  998: Arguments[15] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         //  999: Arguments[15] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1000: Arguments[15] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 1001: Arguments[15] gcd Arguments[41]
    (Info: triOk;            Val: '20'),                                        // 1002: Arguments[15] gcd Arguments[42]
    (Info: triOk;            Val: '100'),                                       // 1003: Arguments[15] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1004: Arguments[15] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1005: Arguments[15] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1006: Arguments[15] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1007: Arguments[15] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1008: Arguments[15] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1009: Arguments[15] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1010: Arguments[15] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1011: Arguments[15] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1012: Arguments[15] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1013: Arguments[15] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1014: Arguments[15] gcd Arguments[54]
    (Info: triOk;            Val: '50'),                                        // 1015: Arguments[15] gcd Arguments[55]
    (Info: triOk;            Val: '20'),                                        // 1016: Arguments[15] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1017: Arguments[15] gcd Arguments[57]
    (Info: triOk;            Val: '20'),                                        // 1018: Arguments[15] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1019: Arguments[15] gcd Arguments[59]
    (Info: triOk;            Val: '25'),                                        // 1020: Arguments[15] gcd Arguments[60]
    (Info: triOk;            Val: '100'),                                       // 1021: Arguments[15] gcd Arguments[61]
    (Info: triOk;            Val: '100'),                                       // 1022: Arguments[15] gcd Arguments[62]
    (Info: triOk;            Val: '100'),                                       // 1023: Arguments[15] gcd Arguments[63]
    (Info: triOk;            Val: '8'),                                         // 1024: Arguments[16] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1025: Arguments[16] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1026: Arguments[16] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 1027: Arguments[16] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 1028: Arguments[16] gcd Arguments[4]
    (Info: triOk;            Val: '14'),                                        // 1029: Arguments[16] gcd Arguments[5]
    (Info: triOk;            Val: '8'),                                         // 1030: Arguments[16] gcd Arguments[6]
    (Info: triOk;            Val: '28'),                                        // 1031: Arguments[16] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1032: Arguments[16] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1033: Arguments[16] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1034: Arguments[16] gcd Arguments[10]
    (Info: triOk;            Val: '8'),                                         // 1035: Arguments[16] gcd Arguments[11]
    (Info: triOk;            Val: '56'),                                        // 1036: Arguments[16] gcd Arguments[12]
    (Info: triOk;            Val: '8'),                                         // 1037: Arguments[16] gcd Arguments[13]
    (Info: triOk;            Val: '8'),                                         // 1038: Arguments[16] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         // 1039: Arguments[16] gcd Arguments[15]
    (Info: triOk;            Val: '56'),                                        // 1040: Arguments[16] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 1041: Arguments[16] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 1042: Arguments[16] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1043: Arguments[16] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1044: Arguments[16] gcd Arguments[20]
    (Info: triOk;            Val: '56'),                                        // 1045: Arguments[16] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1046: Arguments[16] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1047: Arguments[16] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1048: Arguments[16] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 1049: Arguments[16] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         // 1050: Arguments[16] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1051: Arguments[16] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1052: Arguments[16] gcd Arguments[28]
    (Info: triOk;            Val: '8'),                                         // 1053: Arguments[16] gcd Arguments[29]
    (Info: triOk;            Val: '8'),                                         // 1054: Arguments[16] gcd Arguments[30]
    (Info: triOk;            Val: '8'),                                         // 1055: Arguments[16] gcd Arguments[31]
    (Info: triOk;            Val: '8'),                                         // 1056: Arguments[16] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 1057: Arguments[16] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1058: Arguments[16] gcd Arguments[34]
    (Info: triOk;            Val: '8'),                                         // 1059: Arguments[16] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 1060: Arguments[16] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 1061: Arguments[16] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1062: Arguments[16] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1063: Arguments[16] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1064: Arguments[16] gcd Arguments[40]
    (Info: triOk;            Val: '28'),                                        // 1065: Arguments[16] gcd Arguments[41]
    (Info: triOk;            Val: '8'),                                         // 1066: Arguments[16] gcd Arguments[42]
    (Info: triOk;            Val: '8'),                                         // 1067: Arguments[16] gcd Arguments[43]
    (Info: triOk;            Val: '14'),                                        // 1068: Arguments[16] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1069: Arguments[16] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 1070: Arguments[16] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 1071: Arguments[16] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1072: Arguments[16] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 1073: Arguments[16] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1074: Arguments[16] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1075: Arguments[16] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1076: Arguments[16] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1077: Arguments[16] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 1078: Arguments[16] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 1079: Arguments[16] gcd Arguments[55]
    (Info: triOk;            Val: '56'),                                        // 1080: Arguments[16] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1081: Arguments[16] gcd Arguments[57]
    (Info: triOk;            Val: '8'),                                         // 1082: Arguments[16] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 1083: Arguments[16] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 1084: Arguments[16] gcd Arguments[60]
    (Info: triOk;            Val: '56'),                                        // 1085: Arguments[16] gcd Arguments[61]
    (Info: triOk;            Val: '8'),                                         // 1086: Arguments[16] gcd Arguments[62]
    (Info: triOk;            Val: '8'),                                         // 1087: Arguments[16] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 1088: Arguments[17] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1089: Arguments[17] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1090: Arguments[17] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1091: Arguments[17] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1092: Arguments[17] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1093: Arguments[17] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 1094: Arguments[17] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1095: Arguments[17] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1096: Arguments[17] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1097: Arguments[17] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1098: Arguments[17] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 1099: Arguments[17] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 1100: Arguments[17] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 1101: Arguments[17] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 1102: Arguments[17] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 1103: Arguments[17] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1104: Arguments[17] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1105: Arguments[17] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1106: Arguments[17] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1107: Arguments[17] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1108: Arguments[17] gcd Arguments[20]
    (Info: triOk;            Val: '10'),                                        // 1109: Arguments[17] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1110: Arguments[17] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1111: Arguments[17] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1112: Arguments[17] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1113: Arguments[17] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 1114: Arguments[17] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1115: Arguments[17] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1116: Arguments[17] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 1117: Arguments[17] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 1118: Arguments[17] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 1119: Arguments[17] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 1120: Arguments[17] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1121: Arguments[17] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 1122: Arguments[17] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1123: Arguments[17] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1124: Arguments[17] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1125: Arguments[17] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1126: Arguments[17] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1127: Arguments[17] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1128: Arguments[17] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1129: Arguments[17] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 1130: Arguments[17] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 1131: Arguments[17] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1132: Arguments[17] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1133: Arguments[17] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1134: Arguments[17] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1135: Arguments[17] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1136: Arguments[17] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1137: Arguments[17] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1138: Arguments[17] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1139: Arguments[17] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1140: Arguments[17] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1141: Arguments[17] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1142: Arguments[17] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 1143: Arguments[17] gcd Arguments[55]
    (Info: triOk;            Val: '10'),                                        // 1144: Arguments[17] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1145: Arguments[17] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 1146: Arguments[17] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1147: Arguments[17] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 1148: Arguments[17] gcd Arguments[60]
    (Info: triOk;            Val: '10'),                                        // 1149: Arguments[17] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 1150: Arguments[17] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 1151: Arguments[17] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1152: Arguments[18] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1153: Arguments[18] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1154: Arguments[18] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1155: Arguments[18] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1156: Arguments[18] gcd Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 1157: Arguments[18] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1158: Arguments[18] gcd Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 1159: Arguments[18] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1160: Arguments[18] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1161: Arguments[18] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1162: Arguments[18] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1163: Arguments[18] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 1164: Arguments[18] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1165: Arguments[18] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1166: Arguments[18] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1167: Arguments[18] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 1168: Arguments[18] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1169: Arguments[18] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 1170: Arguments[18] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1171: Arguments[18] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1172: Arguments[18] gcd Arguments[20]
    (Info: triOk;            Val: '7'),                                         // 1173: Arguments[18] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1174: Arguments[18] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1175: Arguments[18] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1176: Arguments[18] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1177: Arguments[18] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1178: Arguments[18] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1179: Arguments[18] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1180: Arguments[18] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1181: Arguments[18] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1182: Arguments[18] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1183: Arguments[18] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1184: Arguments[18] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1185: Arguments[18] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1186: Arguments[18] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1187: Arguments[18] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1188: Arguments[18] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 1189: Arguments[18] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1190: Arguments[18] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1191: Arguments[18] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1192: Arguments[18] gcd Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 1193: Arguments[18] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1194: Arguments[18] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1195: Arguments[18] gcd Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 1196: Arguments[18] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1197: Arguments[18] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1198: Arguments[18] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 1199: Arguments[18] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1200: Arguments[18] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1201: Arguments[18] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1202: Arguments[18] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1203: Arguments[18] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1204: Arguments[18] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1205: Arguments[18] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 1206: Arguments[18] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1207: Arguments[18] gcd Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 1208: Arguments[18] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1209: Arguments[18] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1210: Arguments[18] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1211: Arguments[18] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 1212: Arguments[18] gcd Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 1213: Arguments[18] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1214: Arguments[18] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1215: Arguments[18] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 1216: Arguments[19] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1217: Arguments[19] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1218: Arguments[19] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 1219: Arguments[19] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 1220: Arguments[19] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1221: Arguments[19] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 1222: Arguments[19] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1223: Arguments[19] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1224: Arguments[19] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1225: Arguments[19] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1226: Arguments[19] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 1227: Arguments[19] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 1228: Arguments[19] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 1229: Arguments[19] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 1230: Arguments[19] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 1231: Arguments[19] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1232: Arguments[19] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 1233: Arguments[19] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1234: Arguments[19] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1235: Arguments[19] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1236: Arguments[19] gcd Arguments[20]
    (Info: triOk;            Val: '2'),                                         // 1237: Arguments[19] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1238: Arguments[19] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1239: Arguments[19] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1240: Arguments[19] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 1241: Arguments[19] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 1242: Arguments[19] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1243: Arguments[19] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1244: Arguments[19] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 1245: Arguments[19] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 1246: Arguments[19] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 1247: Arguments[19] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 1248: Arguments[19] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1249: Arguments[19] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1250: Arguments[19] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1251: Arguments[19] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1252: Arguments[19] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1253: Arguments[19] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1254: Arguments[19] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1255: Arguments[19] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1256: Arguments[19] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1257: Arguments[19] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 1258: Arguments[19] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 1259: Arguments[19] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1260: Arguments[19] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1261: Arguments[19] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 1262: Arguments[19] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1263: Arguments[19] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1264: Arguments[19] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 1265: Arguments[19] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1266: Arguments[19] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1267: Arguments[19] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1268: Arguments[19] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1269: Arguments[19] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1270: Arguments[19] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 1271: Arguments[19] gcd Arguments[55]
    (Info: triOk;            Val: '2'),                                         // 1272: Arguments[19] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1273: Arguments[19] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 1274: Arguments[19] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 1275: Arguments[19] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1276: Arguments[19] gcd Arguments[60]
    (Info: triOk;            Val: '2'),                                         // 1277: Arguments[19] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 1278: Arguments[19] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 1279: Arguments[19] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1280: Arguments[20] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1281: Arguments[20] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1282: Arguments[20] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1283: Arguments[20] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1284: Arguments[20] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 1285: Arguments[20] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1286: Arguments[20] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 1287: Arguments[20] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1288: Arguments[20] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1289: Arguments[20] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1290: Arguments[20] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1291: Arguments[20] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 1292: Arguments[20] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1293: Arguments[20] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1294: Arguments[20] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1295: Arguments[20] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 1296: Arguments[20] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1297: Arguments[20] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1298: Arguments[20] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1299: Arguments[20] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1300: Arguments[20] gcd Arguments[20]
    (Info: triOk;            Val: '1'),                                         // 1301: Arguments[20] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1302: Arguments[20] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1303: Arguments[20] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1304: Arguments[20] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1305: Arguments[20] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1306: Arguments[20] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1307: Arguments[20] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1308: Arguments[20] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1309: Arguments[20] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1310: Arguments[20] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1311: Arguments[20] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1312: Arguments[20] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1313: Arguments[20] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1314: Arguments[20] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1315: Arguments[20] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1316: Arguments[20] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1317: Arguments[20] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1318: Arguments[20] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1319: Arguments[20] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1320: Arguments[20] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 1321: Arguments[20] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1322: Arguments[20] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1323: Arguments[20] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 1324: Arguments[20] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1325: Arguments[20] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1326: Arguments[20] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1327: Arguments[20] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1328: Arguments[20] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1329: Arguments[20] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1330: Arguments[20] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1331: Arguments[20] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1332: Arguments[20] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1333: Arguments[20] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1334: Arguments[20] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1335: Arguments[20] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 1336: Arguments[20] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1337: Arguments[20] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1338: Arguments[20] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1339: Arguments[20] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1340: Arguments[20] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 1341: Arguments[20] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1342: Arguments[20] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1343: Arguments[20] gcd Arguments[63]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1344: Arguments[21] gcd Arguments[0]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1345: Arguments[21] gcd Arguments[1]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1346: Arguments[21] gcd Arguments[2]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1347: Arguments[21] gcd Arguments[3]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1348: Arguments[21] gcd Arguments[4]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1349: Arguments[21] gcd Arguments[5]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1350: Arguments[21] gcd Arguments[6]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1351: Arguments[21] gcd Arguments[7]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1352: Arguments[21] gcd Arguments[8]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1353: Arguments[21] gcd Arguments[9]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1354: Arguments[21] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 1355: Arguments[21] gcd Arguments[11]
    (Info: triOk;            Val: '45808'),                                     // 1356: Arguments[21] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 1357: Arguments[21] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 1358: Arguments[21] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1359: Arguments[21] gcd Arguments[15]
    (Info: triOk;            Val: '56'),                                        // 1360: Arguments[21] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1361: Arguments[21] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 1362: Arguments[21] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1363: Arguments[21] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1364: Arguments[21] gcd Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1365: Arguments[21] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1366: Arguments[21] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1367: Arguments[21] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1368: Arguments[21] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1369: Arguments[21] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1370: Arguments[21] gcd Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1371: Arguments[21] gcd Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1372: Arguments[21] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1373: Arguments[21] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1374: Arguments[21] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1375: Arguments[21] gcd Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1376: Arguments[21] gcd Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1377: Arguments[21] gcd Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1378: Arguments[21] gcd Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1379: Arguments[21] gcd Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1380: Arguments[21] gcd Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1381: Arguments[21] gcd Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1382: Arguments[21] gcd Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1383: Arguments[21] gcd Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1384: Arguments[21] gcd Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1385: Arguments[21] gcd Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1386: Arguments[21] gcd Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1387: Arguments[21] gcd Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1388: Arguments[21] gcd Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1389: Arguments[21] gcd Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1390: Arguments[21] gcd Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1391: Arguments[21] gcd Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1392: Arguments[21] gcd Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1393: Arguments[21] gcd Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1394: Arguments[21] gcd Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1395: Arguments[21] gcd Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1396: Arguments[21] gcd Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1397: Arguments[21] gcd Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1398: Arguments[21] gcd Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1399: Arguments[21] gcd Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1400: Arguments[21] gcd Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1401: Arguments[21] gcd Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1402: Arguments[21] gcd Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1403: Arguments[21] gcd Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1404: Arguments[21] gcd Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1405: Arguments[21] gcd Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1406: Arguments[21] gcd Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1407: Arguments[21] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1408: Arguments[22] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1409: Arguments[22] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1410: Arguments[22] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1411: Arguments[22] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1412: Arguments[22] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 1413: Arguments[22] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1414: Arguments[22] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 1415: Arguments[22] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1416: Arguments[22] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1417: Arguments[22] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1418: Arguments[22] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1419: Arguments[22] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 1420: Arguments[22] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1421: Arguments[22] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1422: Arguments[22] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1423: Arguments[22] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 1424: Arguments[22] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1425: Arguments[22] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1426: Arguments[22] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1427: Arguments[22] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1428: Arguments[22] gcd Arguments[20]
    (Info: triOk;            Val: '1'),                                         // 1429: Arguments[22] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1430: Arguments[22] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1431: Arguments[22] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1432: Arguments[22] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1433: Arguments[22] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1434: Arguments[22] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1435: Arguments[22] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1436: Arguments[22] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1437: Arguments[22] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1438: Arguments[22] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1439: Arguments[22] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1440: Arguments[22] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1441: Arguments[22] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1442: Arguments[22] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1443: Arguments[22] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1444: Arguments[22] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1445: Arguments[22] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1446: Arguments[22] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1447: Arguments[22] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1448: Arguments[22] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 1449: Arguments[22] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1450: Arguments[22] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1451: Arguments[22] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 1452: Arguments[22] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1453: Arguments[22] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1454: Arguments[22] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1455: Arguments[22] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1456: Arguments[22] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1457: Arguments[22] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1458: Arguments[22] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1459: Arguments[22] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1460: Arguments[22] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1461: Arguments[22] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1462: Arguments[22] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1463: Arguments[22] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 1464: Arguments[22] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1465: Arguments[22] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1466: Arguments[22] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1467: Arguments[22] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1468: Arguments[22] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 1469: Arguments[22] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1470: Arguments[22] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1471: Arguments[22] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 1472: Arguments[23] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1473: Arguments[23] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1474: Arguments[23] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 1475: Arguments[23] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 1476: Arguments[23] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1477: Arguments[23] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 1478: Arguments[23] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1479: Arguments[23] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1480: Arguments[23] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1481: Arguments[23] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1482: Arguments[23] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 1483: Arguments[23] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 1484: Arguments[23] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 1485: Arguments[23] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 1486: Arguments[23] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 1487: Arguments[23] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1488: Arguments[23] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 1489: Arguments[23] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1490: Arguments[23] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1491: Arguments[23] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1492: Arguments[23] gcd Arguments[20]
    (Info: triOk;            Val: '2'),                                         // 1493: Arguments[23] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1494: Arguments[23] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1495: Arguments[23] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1496: Arguments[23] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 1497: Arguments[23] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 1498: Arguments[23] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1499: Arguments[23] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1500: Arguments[23] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 1501: Arguments[23] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 1502: Arguments[23] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 1503: Arguments[23] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 1504: Arguments[23] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1505: Arguments[23] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1506: Arguments[23] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1507: Arguments[23] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1508: Arguments[23] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1509: Arguments[23] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1510: Arguments[23] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1511: Arguments[23] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1512: Arguments[23] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1513: Arguments[23] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 1514: Arguments[23] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 1515: Arguments[23] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1516: Arguments[23] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1517: Arguments[23] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 1518: Arguments[23] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1519: Arguments[23] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1520: Arguments[23] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 1521: Arguments[23] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1522: Arguments[23] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1523: Arguments[23] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1524: Arguments[23] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1525: Arguments[23] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1526: Arguments[23] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 1527: Arguments[23] gcd Arguments[55]
    (Info: triOk;            Val: '2'),                                         // 1528: Arguments[23] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1529: Arguments[23] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 1530: Arguments[23] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 1531: Arguments[23] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1532: Arguments[23] gcd Arguments[60]
    (Info: triOk;            Val: '2'),                                         // 1533: Arguments[23] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 1534: Arguments[23] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 1535: Arguments[23] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1536: Arguments[24] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1537: Arguments[24] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1538: Arguments[24] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1539: Arguments[24] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1540: Arguments[24] gcd Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 1541: Arguments[24] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1542: Arguments[24] gcd Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 1543: Arguments[24] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1544: Arguments[24] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1545: Arguments[24] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1546: Arguments[24] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1547: Arguments[24] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 1548: Arguments[24] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1549: Arguments[24] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1550: Arguments[24] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1551: Arguments[24] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 1552: Arguments[24] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1553: Arguments[24] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 1554: Arguments[24] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1555: Arguments[24] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1556: Arguments[24] gcd Arguments[20]
    (Info: triOk;            Val: '7'),                                         // 1557: Arguments[24] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1558: Arguments[24] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1559: Arguments[24] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1560: Arguments[24] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1561: Arguments[24] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1562: Arguments[24] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1563: Arguments[24] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1564: Arguments[24] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1565: Arguments[24] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1566: Arguments[24] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1567: Arguments[24] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1568: Arguments[24] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1569: Arguments[24] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1570: Arguments[24] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1571: Arguments[24] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1572: Arguments[24] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 1573: Arguments[24] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1574: Arguments[24] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1575: Arguments[24] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1576: Arguments[24] gcd Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 1577: Arguments[24] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1578: Arguments[24] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1579: Arguments[24] gcd Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 1580: Arguments[24] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1581: Arguments[24] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1582: Arguments[24] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 1583: Arguments[24] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1584: Arguments[24] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1585: Arguments[24] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1586: Arguments[24] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1587: Arguments[24] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1588: Arguments[24] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1589: Arguments[24] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 1590: Arguments[24] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1591: Arguments[24] gcd Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 1592: Arguments[24] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1593: Arguments[24] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1594: Arguments[24] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1595: Arguments[24] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 1596: Arguments[24] gcd Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 1597: Arguments[24] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1598: Arguments[24] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1599: Arguments[24] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 1600: Arguments[25] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1601: Arguments[25] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1602: Arguments[25] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1603: Arguments[25] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1604: Arguments[25] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1605: Arguments[25] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 1606: Arguments[25] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1607: Arguments[25] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1608: Arguments[25] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1609: Arguments[25] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1610: Arguments[25] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 1611: Arguments[25] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 1612: Arguments[25] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 1613: Arguments[25] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 1614: Arguments[25] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 1615: Arguments[25] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1616: Arguments[25] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1617: Arguments[25] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1618: Arguments[25] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1619: Arguments[25] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1620: Arguments[25] gcd Arguments[20]
    (Info: triOk;            Val: '10'),                                        // 1621: Arguments[25] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1622: Arguments[25] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1623: Arguments[25] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1624: Arguments[25] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1625: Arguments[25] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 1626: Arguments[25] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1627: Arguments[25] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1628: Arguments[25] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 1629: Arguments[25] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 1630: Arguments[25] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 1631: Arguments[25] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 1632: Arguments[25] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1633: Arguments[25] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 1634: Arguments[25] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1635: Arguments[25] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1636: Arguments[25] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1637: Arguments[25] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1638: Arguments[25] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1639: Arguments[25] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1640: Arguments[25] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1641: Arguments[25] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 1642: Arguments[25] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 1643: Arguments[25] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1644: Arguments[25] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1645: Arguments[25] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1646: Arguments[25] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1647: Arguments[25] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1648: Arguments[25] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1649: Arguments[25] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1650: Arguments[25] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1651: Arguments[25] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1652: Arguments[25] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1653: Arguments[25] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1654: Arguments[25] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 1655: Arguments[25] gcd Arguments[55]
    (Info: triOk;            Val: '10'),                                        // 1656: Arguments[25] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1657: Arguments[25] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 1658: Arguments[25] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1659: Arguments[25] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 1660: Arguments[25] gcd Arguments[60]
    (Info: triOk;            Val: '10'),                                        // 1661: Arguments[25] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 1662: Arguments[25] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 1663: Arguments[25] gcd Arguments[63]
    (Info: triOk;            Val: '20'),                                        // 1664: Arguments[26] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1665: Arguments[26] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1666: Arguments[26] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1667: Arguments[26] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1668: Arguments[26] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1669: Arguments[26] gcd Arguments[5]
    (Info: triOk;            Val: '100'),                                       // 1670: Arguments[26] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 1671: Arguments[26] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1672: Arguments[26] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1673: Arguments[26] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1674: Arguments[26] gcd Arguments[10]
    (Info: triOk;            Val: '100'),                                       // 1675: Arguments[26] gcd Arguments[11]
    (Info: triOk;            Val: '4'),                                         // 1676: Arguments[26] gcd Arguments[12]
    (Info: triOk;            Val: '100'),                                       // 1677: Arguments[26] gcd Arguments[13]
    (Info: triOk;            Val: '100'),                                       // 1678: Arguments[26] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1679: Arguments[26] gcd Arguments[15]
    (Info: triOk;            Val: '4'),                                         // 1680: Arguments[26] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1681: Arguments[26] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1682: Arguments[26] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1683: Arguments[26] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1684: Arguments[26] gcd Arguments[20]
    (Info: triOk;            Val: '100'),                                       // 1685: Arguments[26] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1686: Arguments[26] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1687: Arguments[26] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1688: Arguments[26] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1689: Arguments[26] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1690: Arguments[26] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1691: Arguments[26] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1692: Arguments[26] gcd Arguments[28]
    (Info: triOk;            Val: '100'),                                       // 1693: Arguments[26] gcd Arguments[29]
    (Info: triOk;            Val: '100'),                                       // 1694: Arguments[26] gcd Arguments[30]
    (Info: triOk;            Val: '100'),                                       // 1695: Arguments[26] gcd Arguments[31]
    (Info: triOk;            Val: '100'),                                       // 1696: Arguments[26] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 1697: Arguments[26] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 1698: Arguments[26] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         // 1699: Arguments[26] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 1700: Arguments[26] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1701: Arguments[26] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1702: Arguments[26] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1703: Arguments[26] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1704: Arguments[26] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 1705: Arguments[26] gcd Arguments[41]
    (Info: triOk;            Val: '20'),                                        // 1706: Arguments[26] gcd Arguments[42]
    (Info: triOk;            Val: '100'),                                       // 1707: Arguments[26] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1708: Arguments[26] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1709: Arguments[26] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1710: Arguments[26] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1711: Arguments[26] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1712: Arguments[26] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1713: Arguments[26] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1714: Arguments[26] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1715: Arguments[26] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1716: Arguments[26] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1717: Arguments[26] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1718: Arguments[26] gcd Arguments[54]
    (Info: triOk;            Val: '50'),                                        // 1719: Arguments[26] gcd Arguments[55]
    (Info: triOk;            Val: '20'),                                        // 1720: Arguments[26] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1721: Arguments[26] gcd Arguments[57]
    (Info: triOk;            Val: '20'),                                        // 1722: Arguments[26] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1723: Arguments[26] gcd Arguments[59]
    (Info: triOk;            Val: '25'),                                        // 1724: Arguments[26] gcd Arguments[60]
    (Info: triOk;            Val: '100'),                                       // 1725: Arguments[26] gcd Arguments[61]
    (Info: triOk;            Val: '100'),                                       // 1726: Arguments[26] gcd Arguments[62]
    (Info: triOk;            Val: '100'),                                       // 1727: Arguments[26] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1728: Arguments[27] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1729: Arguments[27] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1730: Arguments[27] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1731: Arguments[27] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1732: Arguments[27] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 1733: Arguments[27] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1734: Arguments[27] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 1735: Arguments[27] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1736: Arguments[27] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1737: Arguments[27] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1738: Arguments[27] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1739: Arguments[27] gcd Arguments[11]
    (Info: triOk;            Val: '409'),                                       // 1740: Arguments[27] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1741: Arguments[27] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1742: Arguments[27] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1743: Arguments[27] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 1744: Arguments[27] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1745: Arguments[27] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1746: Arguments[27] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1747: Arguments[27] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1748: Arguments[27] gcd Arguments[20]
    (Info: triOk;            Val: '409'),                                       // 1749: Arguments[27] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1750: Arguments[27] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1751: Arguments[27] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1752: Arguments[27] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1753: Arguments[27] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1754: Arguments[27] gcd Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1755: Arguments[27] gcd Arguments[27]
    (Info: triOk;            Val: '409'),                                       // 1756: Arguments[27] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1757: Arguments[27] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1758: Arguments[27] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1759: Arguments[27] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1760: Arguments[27] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1761: Arguments[27] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1762: Arguments[27] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1763: Arguments[27] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1764: Arguments[27] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1765: Arguments[27] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1766: Arguments[27] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1767: Arguments[27] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1768: Arguments[27] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 1769: Arguments[27] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1770: Arguments[27] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1771: Arguments[27] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 1772: Arguments[27] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1773: Arguments[27] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1774: Arguments[27] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1775: Arguments[27] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1776: Arguments[27] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1777: Arguments[27] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1778: Arguments[27] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1779: Arguments[27] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1780: Arguments[27] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1781: Arguments[27] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1782: Arguments[27] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1783: Arguments[27] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 1784: Arguments[27] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1785: Arguments[27] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1786: Arguments[27] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1787: Arguments[27] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1788: Arguments[27] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 1789: Arguments[27] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1790: Arguments[27] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1791: Arguments[27] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 1792: Arguments[28] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1793: Arguments[28] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1794: Arguments[28] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 1795: Arguments[28] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 1796: Arguments[28] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1797: Arguments[28] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 1798: Arguments[28] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1799: Arguments[28] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1800: Arguments[28] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1801: Arguments[28] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1802: Arguments[28] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 1803: Arguments[28] gcd Arguments[11]
    (Info: triOk;            Val: '818'),                                       // 1804: Arguments[28] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 1805: Arguments[28] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 1806: Arguments[28] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 1807: Arguments[28] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1808: Arguments[28] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 1809: Arguments[28] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1810: Arguments[28] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1811: Arguments[28] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1812: Arguments[28] gcd Arguments[20]
    (Info: triOk;            Val: '818'),                                       // 1813: Arguments[28] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1814: Arguments[28] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1815: Arguments[28] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1816: Arguments[28] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 1817: Arguments[28] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 1818: Arguments[28] gcd Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1819: Arguments[28] gcd Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1820: Arguments[28] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 1821: Arguments[28] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 1822: Arguments[28] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 1823: Arguments[28] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 1824: Arguments[28] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1825: Arguments[28] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1826: Arguments[28] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1827: Arguments[28] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1828: Arguments[28] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1829: Arguments[28] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1830: Arguments[28] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1831: Arguments[28] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1832: Arguments[28] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1833: Arguments[28] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 1834: Arguments[28] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 1835: Arguments[28] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1836: Arguments[28] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1837: Arguments[28] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 1838: Arguments[28] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1839: Arguments[28] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1840: Arguments[28] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 1841: Arguments[28] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1842: Arguments[28] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1843: Arguments[28] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1844: Arguments[28] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1845: Arguments[28] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1846: Arguments[28] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 1847: Arguments[28] gcd Arguments[55]
    (Info: triOk;            Val: '2'),                                         // 1848: Arguments[28] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1849: Arguments[28] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 1850: Arguments[28] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 1851: Arguments[28] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1852: Arguments[28] gcd Arguments[60]
    (Info: triOk;            Val: '2'),                                         // 1853: Arguments[28] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 1854: Arguments[28] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 1855: Arguments[28] gcd Arguments[63]
    (Info: triOk;            Val: '40'),                                        // 1856: Arguments[29] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1857: Arguments[29] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1858: Arguments[29] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1859: Arguments[29] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1860: Arguments[29] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1861: Arguments[29] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 1862: Arguments[29] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 1863: Arguments[29] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1864: Arguments[29] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1865: Arguments[29] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1866: Arguments[29] gcd Arguments[10]
    (Info: triOk;            Val: '1000'),                                      // 1867: Arguments[29] gcd Arguments[11]
    (Info: triOk;            Val: '8'),                                         // 1868: Arguments[29] gcd Arguments[12]
    (Info: triOk;            Val: '1000'),                                      // 1869: Arguments[29] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 1870: Arguments[29] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1871: Arguments[29] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 1872: Arguments[29] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1873: Arguments[29] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1874: Arguments[29] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1875: Arguments[29] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1876: Arguments[29] gcd Arguments[20]
    (Info: triOk;            Val: '1000'),                                      // 1877: Arguments[29] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1878: Arguments[29] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1879: Arguments[29] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1880: Arguments[29] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1881: Arguments[29] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1882: Arguments[29] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1883: Arguments[29] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1884: Arguments[29] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1885: Arguments[29] gcd Arguments[29]
    (Info: triOk;            Val: '1000'),                                      // 1886: Arguments[29] gcd Arguments[30]
    (Info: triOk;            Val: '1000'),                                      // 1887: Arguments[29] gcd Arguments[31]
    (Info: triOk;            Val: '1000'),                                      // 1888: Arguments[29] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 1889: Arguments[29] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 1890: Arguments[29] gcd Arguments[34]
    (Info: triOk;            Val: '8'),                                         // 1891: Arguments[29] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 1892: Arguments[29] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1893: Arguments[29] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1894: Arguments[29] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1895: Arguments[29] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1896: Arguments[29] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 1897: Arguments[29] gcd Arguments[41]
    (Info: triOk;            Val: '40'),                                        // 1898: Arguments[29] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 1899: Arguments[29] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1900: Arguments[29] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1901: Arguments[29] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1902: Arguments[29] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1903: Arguments[29] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1904: Arguments[29] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1905: Arguments[29] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1906: Arguments[29] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1907: Arguments[29] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1908: Arguments[29] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1909: Arguments[29] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1910: Arguments[29] gcd Arguments[54]
    (Info: triOk;            Val: '250'),                                       // 1911: Arguments[29] gcd Arguments[55]
    (Info: triOk;            Val: '40'),                                        // 1912: Arguments[29] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1913: Arguments[29] gcd Arguments[57]
    (Info: triOk;            Val: '40'),                                        // 1914: Arguments[29] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1915: Arguments[29] gcd Arguments[59]
    (Info: triOk;            Val: '125'),                                       // 1916: Arguments[29] gcd Arguments[60]
    (Info: triOk;            Val: '1000'),                                      // 1917: Arguments[29] gcd Arguments[61]
    (Info: triOk;            Val: '1000'),                                      // 1918: Arguments[29] gcd Arguments[62]
    (Info: triOk;            Val: '1000'),                                      // 1919: Arguments[29] gcd Arguments[63]
    (Info: triOk;            Val: '80'),                                        // 1920: Arguments[30] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1921: Arguments[30] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1922: Arguments[30] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1923: Arguments[30] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1924: Arguments[30] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1925: Arguments[30] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 1926: Arguments[30] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 1927: Arguments[30] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1928: Arguments[30] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1929: Arguments[30] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1930: Arguments[30] gcd Arguments[10]
    (Info: triOk;            Val: '10000'),                                     // 1931: Arguments[30] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 1932: Arguments[30] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 1933: Arguments[30] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 1934: Arguments[30] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1935: Arguments[30] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 1936: Arguments[30] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1937: Arguments[30] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1938: Arguments[30] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1939: Arguments[30] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1940: Arguments[30] gcd Arguments[20]
    (Info: triOk;            Val: '10000'),                                     // 1941: Arguments[30] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1942: Arguments[30] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1943: Arguments[30] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1944: Arguments[30] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1945: Arguments[30] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1946: Arguments[30] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1947: Arguments[30] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1948: Arguments[30] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1949: Arguments[30] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1950: Arguments[30] gcd Arguments[30]
    (Info: triOk;            Val: '10000'),                                     // 1951: Arguments[30] gcd Arguments[31]
    (Info: triOk;            Val: '10000'),                                     // 1952: Arguments[30] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 1953: Arguments[30] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 1954: Arguments[30] gcd Arguments[34]
    (Info: triOk;            Val: '16'),                                        // 1955: Arguments[30] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 1956: Arguments[30] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1957: Arguments[30] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1958: Arguments[30] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1959: Arguments[30] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1960: Arguments[30] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 1961: Arguments[30] gcd Arguments[41]
    (Info: triOk;            Val: '80'),                                        // 1962: Arguments[30] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 1963: Arguments[30] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1964: Arguments[30] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1965: Arguments[30] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1966: Arguments[30] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1967: Arguments[30] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1968: Arguments[30] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1969: Arguments[30] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1970: Arguments[30] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1971: Arguments[30] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1972: Arguments[30] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1973: Arguments[30] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1974: Arguments[30] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 1975: Arguments[30] gcd Arguments[55]
    (Info: triOk;            Val: '80'),                                        // 1976: Arguments[30] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1977: Arguments[30] gcd Arguments[57]
    (Info: triOk;            Val: '80'),                                        // 1978: Arguments[30] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1979: Arguments[30] gcd Arguments[59]
    (Info: triOk;            Val: '625'),                                       // 1980: Arguments[30] gcd Arguments[60]
    (Info: triOk;            Val: '10000'),                                     // 1981: Arguments[30] gcd Arguments[61]
    (Info: triOk;            Val: '10000'),                                     // 1982: Arguments[30] gcd Arguments[62]
    (Info: triOk;            Val: '10000'),                                     // 1983: Arguments[30] gcd Arguments[63]
    (Info: triOk;            Val: '160'),                                       // 1984: Arguments[31] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1985: Arguments[31] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1986: Arguments[31] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1987: Arguments[31] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1988: Arguments[31] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1989: Arguments[31] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 1990: Arguments[31] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 1991: Arguments[31] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1992: Arguments[31] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1993: Arguments[31] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1994: Arguments[31] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 1995: Arguments[31] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 1996: Arguments[31] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 1997: Arguments[31] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 1998: Arguments[31] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1999: Arguments[31] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 2000: Arguments[31] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 2001: Arguments[31] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2002: Arguments[31] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2003: Arguments[31] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2004: Arguments[31] gcd Arguments[20]
    (Info: triOk;            Val: '100000'),                                    // 2005: Arguments[31] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2006: Arguments[31] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2007: Arguments[31] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2008: Arguments[31] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2009: Arguments[31] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2010: Arguments[31] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2011: Arguments[31] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2012: Arguments[31] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2013: Arguments[31] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2014: Arguments[31] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2015: Arguments[31] gcd Arguments[31]
    (Info: triOk;            Val: '100000'),                                    // 2016: Arguments[31] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2017: Arguments[31] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 2018: Arguments[31] gcd Arguments[34]
    (Info: triOk;            Val: '32'),                                        // 2019: Arguments[31] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2020: Arguments[31] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2021: Arguments[31] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2022: Arguments[31] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2023: Arguments[31] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2024: Arguments[31] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2025: Arguments[31] gcd Arguments[41]
    (Info: triOk;            Val: '160'),                                       // 2026: Arguments[31] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 2027: Arguments[31] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2028: Arguments[31] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2029: Arguments[31] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 2030: Arguments[31] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2031: Arguments[31] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2032: Arguments[31] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 2033: Arguments[31] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2034: Arguments[31] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2035: Arguments[31] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2036: Arguments[31] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2037: Arguments[31] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2038: Arguments[31] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 2039: Arguments[31] gcd Arguments[55]
    (Info: triOk;            Val: '160'),                                       // 2040: Arguments[31] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2041: Arguments[31] gcd Arguments[57]
    (Info: triOk;            Val: '160'),                                       // 2042: Arguments[31] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 2043: Arguments[31] gcd Arguments[59]
    (Info: triOk;            Val: '3125'),                                      // 2044: Arguments[31] gcd Arguments[60]
    (Info: triOk;            Val: '100000'),                                    // 2045: Arguments[31] gcd Arguments[61]
    (Info: triOk;            Val: '100000'),                                    // 2046: Arguments[31] gcd Arguments[62]
    (Info: triOk;            Val: '100000'),                                    // 2047: Arguments[31] gcd Arguments[63]
    (Info: triOk;            Val: '320'),                                       // 2048: Arguments[32] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2049: Arguments[32] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2050: Arguments[32] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 2051: Arguments[32] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 2052: Arguments[32] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2053: Arguments[32] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 2054: Arguments[32] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2055: Arguments[32] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2056: Arguments[32] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2057: Arguments[32] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2058: Arguments[32] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 2059: Arguments[32] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 2060: Arguments[32] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 2061: Arguments[32] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 2062: Arguments[32] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 2063: Arguments[32] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 2064: Arguments[32] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 2065: Arguments[32] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2066: Arguments[32] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2067: Arguments[32] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2068: Arguments[32] gcd Arguments[20]
    (Info: triOk;            Val: '1000000'),                                   // 2069: Arguments[32] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2070: Arguments[32] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2071: Arguments[32] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2072: Arguments[32] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2073: Arguments[32] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2074: Arguments[32] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2075: Arguments[32] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2076: Arguments[32] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2077: Arguments[32] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2078: Arguments[32] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2079: Arguments[32] gcd Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2080: Arguments[32] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2081: Arguments[32] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 2082: Arguments[32] gcd Arguments[34]
    (Info: triOk;            Val: '64'),                                        // 2083: Arguments[32] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2084: Arguments[32] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2085: Arguments[32] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2086: Arguments[32] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2087: Arguments[32] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2088: Arguments[32] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2089: Arguments[32] gcd Arguments[41]
    (Info: triOk;            Val: '320'),                                       // 2090: Arguments[32] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 2091: Arguments[32] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2092: Arguments[32] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2093: Arguments[32] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 2094: Arguments[32] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2095: Arguments[32] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2096: Arguments[32] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 2097: Arguments[32] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2098: Arguments[32] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2099: Arguments[32] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2100: Arguments[32] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2101: Arguments[32] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2102: Arguments[32] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 2103: Arguments[32] gcd Arguments[55]
    (Info: triOk;            Val: '320'),                                       // 2104: Arguments[32] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2105: Arguments[32] gcd Arguments[57]
    (Info: triOk;            Val: '320'),                                       // 2106: Arguments[32] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 2107: Arguments[32] gcd Arguments[59]
    (Info: triOk;            Val: '15625'),                                     // 2108: Arguments[32] gcd Arguments[60]
    (Info: triOk;            Val: '1000000'),                                   // 2109: Arguments[32] gcd Arguments[61]
    (Info: triOk;            Val: '1000000'),                                   // 2110: Arguments[32] gcd Arguments[62]
    (Info: triOk;            Val: '1000000'),                                   // 2111: Arguments[32] gcd Arguments[63]
    (Info: triOk;            Val: '4'),                                         // 2112: Arguments[33] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2113: Arguments[33] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2114: Arguments[33] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2115: Arguments[33] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 2116: Arguments[33] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2117: Arguments[33] gcd Arguments[5]
    (Info: triOk;            Val: '4'),                                         // 2118: Arguments[33] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2119: Arguments[33] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2120: Arguments[33] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2121: Arguments[33] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2122: Arguments[33] gcd Arguments[10]
    (Info: triOk;            Val: '4'),                                         // 2123: Arguments[33] gcd Arguments[11]
    (Info: triOk;            Val: '4'),                                         // 2124: Arguments[33] gcd Arguments[12]
    (Info: triOk;            Val: '4'),                                         // 2125: Arguments[33] gcd Arguments[13]
    (Info: triOk;            Val: '4'),                                         // 2126: Arguments[33] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         // 2127: Arguments[33] gcd Arguments[15]
    (Info: triOk;            Val: '4'),                                         // 2128: Arguments[33] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2129: Arguments[33] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2130: Arguments[33] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2131: Arguments[33] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2132: Arguments[33] gcd Arguments[20]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2133: Arguments[33] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2134: Arguments[33] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2135: Arguments[33] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2136: Arguments[33] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2137: Arguments[33] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         // 2138: Arguments[33] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2139: Arguments[33] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2140: Arguments[33] gcd Arguments[28]
    (Info: triOk;            Val: '4'),                                         // 2141: Arguments[33] gcd Arguments[29]
    (Info: triOk;            Val: '4'),                                         // 2142: Arguments[33] gcd Arguments[30]
    (Info: triOk;            Val: '4'),                                         // 2143: Arguments[33] gcd Arguments[31]
    (Info: triOk;            Val: '4'),                                         // 2144: Arguments[33] gcd Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2145: Arguments[33] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2146: Arguments[33] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         // 2147: Arguments[33] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2148: Arguments[33] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2149: Arguments[33] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2150: Arguments[33] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2151: Arguments[33] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2152: Arguments[33] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2153: Arguments[33] gcd Arguments[41]
    (Info: triOk;            Val: '4'),                                         // 2154: Arguments[33] gcd Arguments[42]
    (Info: triOk;            Val: '4'),                                         // 2155: Arguments[33] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2156: Arguments[33] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2157: Arguments[33] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 2158: Arguments[33] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2159: Arguments[33] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2160: Arguments[33] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2161: Arguments[33] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2162: Arguments[33] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2163: Arguments[33] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2164: Arguments[33] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2165: Arguments[33] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2166: Arguments[33] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2167: Arguments[33] gcd Arguments[55]
    (Info: triOk;            Val: '4'),                                         // 2168: Arguments[33] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2169: Arguments[33] gcd Arguments[57]
    (Info: triOk;            Val: '4'),                                         // 2170: Arguments[33] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 2171: Arguments[33] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 2172: Arguments[33] gcd Arguments[60]
    (Info: triOk;            Val: '4'),                                         // 2173: Arguments[33] gcd Arguments[61]
    (Info: triOk;            Val: '4'),                                         // 2174: Arguments[33] gcd Arguments[62]
    (Info: triOk;            Val: '4'),                                         // 2175: Arguments[33] gcd Arguments[63]
    (Info: triOk;            Val: '5'),                                         // 2176: Arguments[34] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2177: Arguments[34] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2178: Arguments[34] gcd Arguments[2]
    (Info: triOk;            Val: '5'),                                         // 2179: Arguments[34] gcd Arguments[3]
    (Info: triOk;            Val: '5'),                                         // 2180: Arguments[34] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 2181: Arguments[34] gcd Arguments[5]
    (Info: triOk;            Val: '155'),                                       // 2182: Arguments[34] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 2183: Arguments[34] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 2184: Arguments[34] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 2185: Arguments[34] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 2186: Arguments[34] gcd Arguments[10]
    (Info: triOk;            Val: '5'),                                         // 2187: Arguments[34] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 2188: Arguments[34] gcd Arguments[12]
    (Info: triOk;            Val: '5'),                                         // 2189: Arguments[34] gcd Arguments[13]
    (Info: triOk;            Val: '5'),                                         // 2190: Arguments[34] gcd Arguments[14]
    (Info: triOk;            Val: '5'),                                         // 2191: Arguments[34] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 2192: Arguments[34] gcd Arguments[16]
    (Info: triOk;            Val: '5'),                                         // 2193: Arguments[34] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2194: Arguments[34] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 2195: Arguments[34] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2196: Arguments[34] gcd Arguments[20]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2197: Arguments[34] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2198: Arguments[34] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 2199: Arguments[34] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2200: Arguments[34] gcd Arguments[24]
    (Info: triOk;            Val: '5'),                                         // 2201: Arguments[34] gcd Arguments[25]
    (Info: triOk;            Val: '5'),                                         // 2202: Arguments[34] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2203: Arguments[34] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 2204: Arguments[34] gcd Arguments[28]
    (Info: triOk;            Val: '5'),                                         // 2205: Arguments[34] gcd Arguments[29]
    (Info: triOk;            Val: '5'),                                         // 2206: Arguments[34] gcd Arguments[30]
    (Info: triOk;            Val: '5'),                                         // 2207: Arguments[34] gcd Arguments[31]
    (Info: triOk;            Val: '5'),                                         // 2208: Arguments[34] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 2209: Arguments[34] gcd Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2210: Arguments[34] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 2211: Arguments[34] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 2212: Arguments[34] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2213: Arguments[34] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 2214: Arguments[34] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 2215: Arguments[34] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 2216: Arguments[34] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 2217: Arguments[34] gcd Arguments[41]
    (Info: triOk;            Val: '5'),                                         // 2218: Arguments[34] gcd Arguments[42]
    (Info: triOk;            Val: '155'),                                       // 2219: Arguments[34] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 2220: Arguments[34] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 2221: Arguments[34] gcd Arguments[45]
    (Info: triOk;            Val: '5'),                                         // 2222: Arguments[34] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2223: Arguments[34] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2224: Arguments[34] gcd Arguments[48]
    (Info: triOk;            Val: '5'),                                         // 2225: Arguments[34] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2226: Arguments[34] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2227: Arguments[34] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2228: Arguments[34] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2229: Arguments[34] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2230: Arguments[34] gcd Arguments[54]
    (Info: triOk;            Val: '5'),                                         // 2231: Arguments[34] gcd Arguments[55]
    (Info: triOk;            Val: '5'),                                         // 2232: Arguments[34] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2233: Arguments[34] gcd Arguments[57]
    (Info: triOk;            Val: '5'),                                         // 2234: Arguments[34] gcd Arguments[58]
    (Info: triOk;            Val: '5'),                                         // 2235: Arguments[34] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 2236: Arguments[34] gcd Arguments[60]
    (Info: triOk;            Val: '5'),                                         // 2237: Arguments[34] gcd Arguments[61]
    (Info: triOk;            Val: '5'),                                         // 2238: Arguments[34] gcd Arguments[62]
    (Info: triOk;            Val: '5'),                                         // 2239: Arguments[34] gcd Arguments[63]
    (Info: triOk;            Val: '131072'),                                    // 2240: Arguments[35] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2241: Arguments[35] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2242: Arguments[35] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2243: Arguments[35] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 2244: Arguments[35] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2245: Arguments[35] gcd Arguments[5]
    (Info: triOk;            Val: '8'),                                         // 2246: Arguments[35] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2247: Arguments[35] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2248: Arguments[35] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2249: Arguments[35] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2250: Arguments[35] gcd Arguments[10]
    (Info: triOk;            Val: '32'),                                        // 2251: Arguments[35] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 2252: Arguments[35] gcd Arguments[12]
    (Info: triOk;            Val: '16'),                                        // 2253: Arguments[35] gcd Arguments[13]
    (Info: triOk;            Val: '8'),                                         // 2254: Arguments[35] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         // 2255: Arguments[35] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 2256: Arguments[35] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2257: Arguments[35] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2258: Arguments[35] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2259: Arguments[35] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2260: Arguments[35] gcd Arguments[20]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2261: Arguments[35] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2262: Arguments[35] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2263: Arguments[35] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2264: Arguments[35] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2265: Arguments[35] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         // 2266: Arguments[35] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2267: Arguments[35] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2268: Arguments[35] gcd Arguments[28]
    (Info: triOk;            Val: '8'),                                         // 2269: Arguments[35] gcd Arguments[29]
    (Info: triOk;            Val: '16'),                                        // 2270: Arguments[35] gcd Arguments[30]
    (Info: triOk;            Val: '32'),                                        // 2271: Arguments[35] gcd Arguments[31]
    (Info: triOk;            Val: '64'),                                        // 2272: Arguments[35] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2273: Arguments[35] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2274: Arguments[35] gcd Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2275: Arguments[35] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2276: Arguments[35] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2277: Arguments[35] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2278: Arguments[35] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2279: Arguments[35] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2280: Arguments[35] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2281: Arguments[35] gcd Arguments[41]
    (Info: triOk;            Val: '131072'),                                    // 2282: Arguments[35] gcd Arguments[42]
    (Info: triOk;            Val: '8'),                                         // 2283: Arguments[35] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2284: Arguments[35] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2285: Arguments[35] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 2286: Arguments[35] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2287: Arguments[35] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2288: Arguments[35] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2289: Arguments[35] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2290: Arguments[35] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2291: Arguments[35] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2292: Arguments[35] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2293: Arguments[35] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2294: Arguments[35] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2295: Arguments[35] gcd Arguments[55]
    (Info: triOk;            Val: '131072'),                                    // 2296: Arguments[35] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2297: Arguments[35] gcd Arguments[57]
    (Info: triOk;            Val: '131072'),                                    // 2298: Arguments[35] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 2299: Arguments[35] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 2300: Arguments[35] gcd Arguments[60]
    (Info: triOk;            Val: '8192'),                                      // 2301: Arguments[35] gcd Arguments[61]
    (Info: triOk;            Val: '8192'),                                      // 2302: Arguments[35] gcd Arguments[62]
    (Info: triOk;            Val: '131072'),                                    // 2303: Arguments[35] gcd Arguments[63]
    (Info: triOk;            Val: '4'),                                         // 2304: Arguments[36] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2305: Arguments[36] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2306: Arguments[36] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2307: Arguments[36] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 2308: Arguments[36] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2309: Arguments[36] gcd Arguments[5]
    (Info: triOk;            Val: '4'),                                         // 2310: Arguments[36] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2311: Arguments[36] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2312: Arguments[36] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2313: Arguments[36] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2314: Arguments[36] gcd Arguments[10]
    (Info: triOk;            Val: '4'),                                         // 2315: Arguments[36] gcd Arguments[11]
    (Info: triOk;            Val: '4'),                                         // 2316: Arguments[36] gcd Arguments[12]
    (Info: triOk;            Val: '4'),                                         // 2317: Arguments[36] gcd Arguments[13]
    (Info: triOk;            Val: '4'),                                         // 2318: Arguments[36] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         // 2319: Arguments[36] gcd Arguments[15]
    (Info: triOk;            Val: '4'),                                         // 2320: Arguments[36] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2321: Arguments[36] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2322: Arguments[36] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2323: Arguments[36] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2324: Arguments[36] gcd Arguments[20]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2325: Arguments[36] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2326: Arguments[36] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2327: Arguments[36] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2328: Arguments[36] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2329: Arguments[36] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         // 2330: Arguments[36] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2331: Arguments[36] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2332: Arguments[36] gcd Arguments[28]
    (Info: triOk;            Val: '4'),                                         // 2333: Arguments[36] gcd Arguments[29]
    (Info: triOk;            Val: '4'),                                         // 2334: Arguments[36] gcd Arguments[30]
    (Info: triOk;            Val: '4'),                                         // 2335: Arguments[36] gcd Arguments[31]
    (Info: triOk;            Val: '4'),                                         // 2336: Arguments[36] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2337: Arguments[36] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2338: Arguments[36] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         // 2339: Arguments[36] gcd Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2340: Arguments[36] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2341: Arguments[36] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2342: Arguments[36] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2343: Arguments[36] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2344: Arguments[36] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2345: Arguments[36] gcd Arguments[41]
    (Info: triOk;            Val: '4'),                                         // 2346: Arguments[36] gcd Arguments[42]
    (Info: triOk;            Val: '4'),                                         // 2347: Arguments[36] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2348: Arguments[36] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2349: Arguments[36] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 2350: Arguments[36] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2351: Arguments[36] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2352: Arguments[36] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2353: Arguments[36] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2354: Arguments[36] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2355: Arguments[36] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2356: Arguments[36] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2357: Arguments[36] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2358: Arguments[36] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2359: Arguments[36] gcd Arguments[55]
    (Info: triOk;            Val: '4'),                                         // 2360: Arguments[36] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2361: Arguments[36] gcd Arguments[57]
    (Info: triOk;            Val: '4'),                                         // 2362: Arguments[36] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 2363: Arguments[36] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 2364: Arguments[36] gcd Arguments[60]
    (Info: triOk;            Val: '4'),                                         // 2365: Arguments[36] gcd Arguments[61]
    (Info: triOk;            Val: '4'),                                         // 2366: Arguments[36] gcd Arguments[62]
    (Info: triOk;            Val: '4'),                                         // 2367: Arguments[36] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 2368: Arguments[37] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2369: Arguments[37] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2370: Arguments[37] gcd Arguments[2]
    (Info: triOk;            Val: '11'),                                        // 2371: Arguments[37] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 2372: Arguments[37] gcd Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 2373: Arguments[37] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 2374: Arguments[37] gcd Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 2375: Arguments[37] gcd Arguments[7]
    (Info: triOk;            Val: '11'),                                        // 2376: Arguments[37] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 2377: Arguments[37] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 2378: Arguments[37] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 2379: Arguments[37] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 2380: Arguments[37] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 2381: Arguments[37] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 2382: Arguments[37] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 2383: Arguments[37] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 2384: Arguments[37] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 2385: Arguments[37] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 2386: Arguments[37] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 2387: Arguments[37] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2388: Arguments[37] gcd Arguments[20]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2389: Arguments[37] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2390: Arguments[37] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 2391: Arguments[37] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2392: Arguments[37] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 2393: Arguments[37] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 2394: Arguments[37] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2395: Arguments[37] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 2396: Arguments[37] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 2397: Arguments[37] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 2398: Arguments[37] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 2399: Arguments[37] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 2400: Arguments[37] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 2401: Arguments[37] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2402: Arguments[37] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 2403: Arguments[37] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 2404: Arguments[37] gcd Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2405: Arguments[37] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 2406: Arguments[37] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 2407: Arguments[37] gcd Arguments[39]
    (Info: triOk;            Val: '11'),                                        // 2408: Arguments[37] gcd Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 2409: Arguments[37] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 2410: Arguments[37] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 2411: Arguments[37] gcd Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 2412: Arguments[37] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 2413: Arguments[37] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 2414: Arguments[37] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 2415: Arguments[37] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2416: Arguments[37] gcd Arguments[48]
    (Info: triOk;            Val: '11'),                                        // 2417: Arguments[37] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2418: Arguments[37] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2419: Arguments[37] gcd Arguments[51]
    (Info: triOk;            Val: '11'),                                        // 2420: Arguments[37] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2421: Arguments[37] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 2422: Arguments[37] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 2423: Arguments[37] gcd Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 2424: Arguments[37] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2425: Arguments[37] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 2426: Arguments[37] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 2427: Arguments[37] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 2428: Arguments[37] gcd Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 2429: Arguments[37] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 2430: Arguments[37] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 2431: Arguments[37] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 2432: Arguments[38] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2433: Arguments[38] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2434: Arguments[38] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2435: Arguments[38] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         // 2436: Arguments[38] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         // 2437: Arguments[38] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 2438: Arguments[38] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         // 2439: Arguments[38] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 2440: Arguments[38] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 2441: Arguments[38] gcd Arguments[9]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2442: Arguments[38] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 2443: Arguments[38] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 2444: Arguments[38] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 2445: Arguments[38] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 2446: Arguments[38] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 2447: Arguments[38] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 2448: Arguments[38] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2449: Arguments[38] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2450: Arguments[38] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2451: Arguments[38] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2452: Arguments[38] gcd Arguments[20]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2453: Arguments[38] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2454: Arguments[38] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2455: Arguments[38] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2456: Arguments[38] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2457: Arguments[38] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 2458: Arguments[38] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2459: Arguments[38] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2460: Arguments[38] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 2461: Arguments[38] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 2462: Arguments[38] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 2463: Arguments[38] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 2464: Arguments[38] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2465: Arguments[38] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2466: Arguments[38] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2467: Arguments[38] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2468: Arguments[38] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2469: Arguments[38] gcd Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2470: Arguments[38] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 2471: Arguments[38] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 2472: Arguments[38] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         // 2473: Arguments[38] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 2474: Arguments[38] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 2475: Arguments[38] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         // 2476: Arguments[38] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2477: Arguments[38] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         // 2478: Arguments[38] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2479: Arguments[38] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2480: Arguments[38] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2481: Arguments[38] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2482: Arguments[38] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2483: Arguments[38] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2484: Arguments[38] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2485: Arguments[38] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2486: Arguments[38] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2487: Arguments[38] gcd Arguments[55]
    (Info: triOk;            Val: '18'),                                        // 2488: Arguments[38] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2489: Arguments[38] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 2490: Arguments[38] gcd Arguments[58]
    (Info: triOk;            Val: '18'),                                        // 2491: Arguments[38] gcd Arguments[59]
    (Info: triOk;            Val: '9'),                                         // 2492: Arguments[38] gcd Arguments[60]
    (Info: triOk;            Val: '18'),                                        // 2493: Arguments[38] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 2494: Arguments[38] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 2495: Arguments[38] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 2496: Arguments[39] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2497: Arguments[39] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2498: Arguments[39] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2499: Arguments[39] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         // 2500: Arguments[39] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         // 2501: Arguments[39] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 2502: Arguments[39] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         // 2503: Arguments[39] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 2504: Arguments[39] gcd Arguments[8]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2505: Arguments[39] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         // 2506: Arguments[39] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 2507: Arguments[39] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 2508: Arguments[39] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 2509: Arguments[39] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 2510: Arguments[39] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 2511: Arguments[39] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 2512: Arguments[39] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2513: Arguments[39] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2514: Arguments[39] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2515: Arguments[39] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2516: Arguments[39] gcd Arguments[20]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2517: Arguments[39] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2518: Arguments[39] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2519: Arguments[39] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2520: Arguments[39] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2521: Arguments[39] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 2522: Arguments[39] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2523: Arguments[39] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2524: Arguments[39] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 2525: Arguments[39] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 2526: Arguments[39] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 2527: Arguments[39] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 2528: Arguments[39] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2529: Arguments[39] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2530: Arguments[39] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2531: Arguments[39] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2532: Arguments[39] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2533: Arguments[39] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         // 2534: Arguments[39] gcd Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2535: Arguments[39] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 2536: Arguments[39] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         // 2537: Arguments[39] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 2538: Arguments[39] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 2539: Arguments[39] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         // 2540: Arguments[39] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2541: Arguments[39] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         // 2542: Arguments[39] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2543: Arguments[39] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2544: Arguments[39] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2545: Arguments[39] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2546: Arguments[39] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2547: Arguments[39] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2548: Arguments[39] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2549: Arguments[39] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2550: Arguments[39] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2551: Arguments[39] gcd Arguments[55]
    (Info: triOk;            Val: '6'),                                         // 2552: Arguments[39] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2553: Arguments[39] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 2554: Arguments[39] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         // 2555: Arguments[39] gcd Arguments[59]
    (Info: triOk;            Val: '3'),                                         // 2556: Arguments[39] gcd Arguments[60]
    (Info: triOk;            Val: '6'),                                         // 2557: Arguments[39] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 2558: Arguments[39] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 2559: Arguments[39] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 2560: Arguments[40] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2561: Arguments[40] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2562: Arguments[40] gcd Arguments[2]
    (Info: triOk;            Val: '22'),                                        // 2563: Arguments[40] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         // 2564: Arguments[40] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         // 2565: Arguments[40] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 2566: Arguments[40] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         // 2567: Arguments[40] gcd Arguments[7]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2568: Arguments[40] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 2569: Arguments[40] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         // 2570: Arguments[40] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 2571: Arguments[40] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 2572: Arguments[40] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 2573: Arguments[40] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 2574: Arguments[40] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 2575: Arguments[40] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 2576: Arguments[40] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2577: Arguments[40] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2578: Arguments[40] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2579: Arguments[40] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2580: Arguments[40] gcd Arguments[20]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2581: Arguments[40] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2582: Arguments[40] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2583: Arguments[40] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2584: Arguments[40] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2585: Arguments[40] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 2586: Arguments[40] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2587: Arguments[40] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2588: Arguments[40] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 2589: Arguments[40] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 2590: Arguments[40] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 2591: Arguments[40] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 2592: Arguments[40] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2593: Arguments[40] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2594: Arguments[40] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2595: Arguments[40] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2596: Arguments[40] gcd Arguments[36]
    (Info: triOk;            Val: '11'),                                        // 2597: Arguments[40] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         // 2598: Arguments[40] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 2599: Arguments[40] gcd Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2600: Arguments[40] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         // 2601: Arguments[40] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 2602: Arguments[40] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 2603: Arguments[40] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         // 2604: Arguments[40] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2605: Arguments[40] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         // 2606: Arguments[40] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2607: Arguments[40] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2608: Arguments[40] gcd Arguments[48]
    (Info: triOk;            Val: '22'),                                        // 2609: Arguments[40] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2610: Arguments[40] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2611: Arguments[40] gcd Arguments[51]
    (Info: triOk;            Val: '11'),                                        // 2612: Arguments[40] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2613: Arguments[40] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2614: Arguments[40] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2615: Arguments[40] gcd Arguments[55]
    (Info: triOk;            Val: '6'),                                         // 2616: Arguments[40] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2617: Arguments[40] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 2618: Arguments[40] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         // 2619: Arguments[40] gcd Arguments[59]
    (Info: triOk;            Val: '3'),                                         // 2620: Arguments[40] gcd Arguments[60]
    (Info: triOk;            Val: '6'),                                         // 2621: Arguments[40] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 2622: Arguments[40] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 2623: Arguments[40] gcd Arguments[63]
    (Info: triOk;            Val: '4'),                                         // 2624: Arguments[41] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2625: Arguments[41] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2626: Arguments[41] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2627: Arguments[41] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         // 2628: Arguments[41] gcd Arguments[4]
    (Info: triOk;            Val: '42'),                                        // 2629: Arguments[41] gcd Arguments[5]
    (Info: triOk;            Val: '4'),                                         // 2630: Arguments[41] gcd Arguments[6]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2631: Arguments[41] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 2632: Arguments[41] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 2633: Arguments[41] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         // 2634: Arguments[41] gcd Arguments[10]
    (Info: triOk;            Val: '4'),                                         // 2635: Arguments[41] gcd Arguments[11]
    (Info: triOk;            Val: '28'),                                        // 2636: Arguments[41] gcd Arguments[12]
    (Info: triOk;            Val: '4'),                                         // 2637: Arguments[41] gcd Arguments[13]
    (Info: triOk;            Val: '4'),                                         // 2638: Arguments[41] gcd Arguments[14]
    (Info: triOk;            Val: '4'),                                         // 2639: Arguments[41] gcd Arguments[15]
    (Info: triOk;            Val: '28'),                                        // 2640: Arguments[41] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2641: Arguments[41] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 2642: Arguments[41] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2643: Arguments[41] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2644: Arguments[41] gcd Arguments[20]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2645: Arguments[41] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2646: Arguments[41] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2647: Arguments[41] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2648: Arguments[41] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2649: Arguments[41] gcd Arguments[25]
    (Info: triOk;            Val: '4'),                                         // 2650: Arguments[41] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2651: Arguments[41] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2652: Arguments[41] gcd Arguments[28]
    (Info: triOk;            Val: '4'),                                         // 2653: Arguments[41] gcd Arguments[29]
    (Info: triOk;            Val: '4'),                                         // 2654: Arguments[41] gcd Arguments[30]
    (Info: triOk;            Val: '4'),                                         // 2655: Arguments[41] gcd Arguments[31]
    (Info: triOk;            Val: '4'),                                         // 2656: Arguments[41] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2657: Arguments[41] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2658: Arguments[41] gcd Arguments[34]
    (Info: triOk;            Val: '4'),                                         // 2659: Arguments[41] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2660: Arguments[41] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 2661: Arguments[41] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         // 2662: Arguments[41] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 2663: Arguments[41] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 2664: Arguments[41] gcd Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2665: Arguments[41] gcd Arguments[41]
    (Info: triOk;            Val: '4'),                                         // 2666: Arguments[41] gcd Arguments[42]
    (Info: triOk;            Val: '4'),                                         // 2667: Arguments[41] gcd Arguments[43]
    (Info: triOk;            Val: '42'),                                        // 2668: Arguments[41] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2669: Arguments[41] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         // 2670: Arguments[41] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 2671: Arguments[41] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2672: Arguments[41] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2673: Arguments[41] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2674: Arguments[41] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2675: Arguments[41] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2676: Arguments[41] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2677: Arguments[41] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 2678: Arguments[41] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2679: Arguments[41] gcd Arguments[55]
    (Info: triOk;            Val: '1092'),                                      // 2680: Arguments[41] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2681: Arguments[41] gcd Arguments[57]
    (Info: triOk;            Val: '4'),                                         // 2682: Arguments[41] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         // 2683: Arguments[41] gcd Arguments[59]
    (Info: triOk;            Val: '273'),                                       // 2684: Arguments[41] gcd Arguments[60]
    (Info: triOk;            Val: '1092'),                                      // 2685: Arguments[41] gcd Arguments[61]
    (Info: triOk;            Val: '4'),                                         // 2686: Arguments[41] gcd Arguments[62]
    (Info: triOk;            Val: '4'),                                         // 2687: Arguments[41] gcd Arguments[63]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2688: Arguments[42] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2689: Arguments[42] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2690: Arguments[42] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 2691: Arguments[42] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 2692: Arguments[42] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2693: Arguments[42] gcd Arguments[5]
    (Info: triOk;            Val: '40'),                                        // 2694: Arguments[42] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2695: Arguments[42] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2696: Arguments[42] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2697: Arguments[42] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2698: Arguments[42] gcd Arguments[10]
    (Info: triOk;            Val: '160'),                                       // 2699: Arguments[42] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 2700: Arguments[42] gcd Arguments[12]
    (Info: triOk;            Val: '80'),                                        // 2701: Arguments[42] gcd Arguments[13]
    (Info: triOk;            Val: '40'),                                        // 2702: Arguments[42] gcd Arguments[14]
    (Info: triOk;            Val: '20'),                                        // 2703: Arguments[42] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 2704: Arguments[42] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 2705: Arguments[42] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2706: Arguments[42] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2707: Arguments[42] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2708: Arguments[42] gcd Arguments[20]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2709: Arguments[42] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2710: Arguments[42] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2711: Arguments[42] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2712: Arguments[42] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2713: Arguments[42] gcd Arguments[25]
    (Info: triOk;            Val: '20'),                                        // 2714: Arguments[42] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2715: Arguments[42] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2716: Arguments[42] gcd Arguments[28]
    (Info: triOk;            Val: '40'),                                        // 2717: Arguments[42] gcd Arguments[29]
    (Info: triOk;            Val: '80'),                                        // 2718: Arguments[42] gcd Arguments[30]
    (Info: triOk;            Val: '160'),                                       // 2719: Arguments[42] gcd Arguments[31]
    (Info: triOk;            Val: '320'),                                       // 2720: Arguments[42] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2721: Arguments[42] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 2722: Arguments[42] gcd Arguments[34]
    (Info: triOk;            Val: '131072'),                                    // 2723: Arguments[42] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2724: Arguments[42] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2725: Arguments[42] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2726: Arguments[42] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2727: Arguments[42] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2728: Arguments[42] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2729: Arguments[42] gcd Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2730: Arguments[42] gcd Arguments[42]
    (Info: triOk;            Val: '40'),                                        // 2731: Arguments[42] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2732: Arguments[42] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2733: Arguments[42] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 2734: Arguments[42] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2735: Arguments[42] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2736: Arguments[42] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 2737: Arguments[42] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2738: Arguments[42] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2739: Arguments[42] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2740: Arguments[42] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2741: Arguments[42] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2742: Arguments[42] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 2743: Arguments[42] gcd Arguments[55]
    (Info: triOk;            Val: '368934881474191032320'),                     // 2744: Arguments[42] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2745: Arguments[42] gcd Arguments[57]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2746: Arguments[42] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 2747: Arguments[42] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 2748: Arguments[42] gcd Arguments[60]
    (Info: triOk;            Val: '40960'),                                     // 2749: Arguments[42] gcd Arguments[61]
    (Info: triOk;            Val: '40960'),                                     // 2750: Arguments[42] gcd Arguments[62]
    (Info: triOk;            Val: '720575940379279360'),                        // 2751: Arguments[42] gcd Arguments[63]
    (Info: triOk;            Val: '40'),                                        // 2752: Arguments[43] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2753: Arguments[43] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2754: Arguments[43] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 2755: Arguments[43] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 2756: Arguments[43] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2757: Arguments[43] gcd Arguments[5]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2758: Arguments[43] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 2759: Arguments[43] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2760: Arguments[43] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2761: Arguments[43] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2762: Arguments[43] gcd Arguments[10]
    (Info: triOk;            Val: '200'),                                       // 2763: Arguments[43] gcd Arguments[11]
    (Info: triOk;            Val: '8'),                                         // 2764: Arguments[43] gcd Arguments[12]
    (Info: triOk;            Val: '200'),                                       // 2765: Arguments[43] gcd Arguments[13]
    (Info: triOk;            Val: '200'),                                       // 2766: Arguments[43] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 2767: Arguments[43] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 2768: Arguments[43] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 2769: Arguments[43] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2770: Arguments[43] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2771: Arguments[43] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2772: Arguments[43] gcd Arguments[20]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2773: Arguments[43] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2774: Arguments[43] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2775: Arguments[43] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2776: Arguments[43] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2777: Arguments[43] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2778: Arguments[43] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2779: Arguments[43] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2780: Arguments[43] gcd Arguments[28]
    (Info: triOk;            Val: '200'),                                       // 2781: Arguments[43] gcd Arguments[29]
    (Info: triOk;            Val: '200'),                                       // 2782: Arguments[43] gcd Arguments[30]
    (Info: triOk;            Val: '200'),                                       // 2783: Arguments[43] gcd Arguments[31]
    (Info: triOk;            Val: '200'),                                       // 2784: Arguments[43] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 2785: Arguments[43] gcd Arguments[33]
    (Info: triOk;            Val: '155'),                                       // 2786: Arguments[43] gcd Arguments[34]
    (Info: triOk;            Val: '8'),                                         // 2787: Arguments[43] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 2788: Arguments[43] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2789: Arguments[43] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2790: Arguments[43] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2791: Arguments[43] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2792: Arguments[43] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 2793: Arguments[43] gcd Arguments[41]
    (Info: triOk;            Val: '40'),                                        // 2794: Arguments[43] gcd Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2795: Arguments[43] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2796: Arguments[43] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2797: Arguments[43] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 2798: Arguments[43] gcd Arguments[46]
    (Info: triOk;            Val: '73'),                                        // 2799: Arguments[43] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2800: Arguments[43] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 2801: Arguments[43] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2802: Arguments[43] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2803: Arguments[43] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2804: Arguments[43] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2805: Arguments[43] gcd Arguments[53]
    (Info: triOk;            Val: '73'),                                        // 2806: Arguments[43] gcd Arguments[54]
    (Info: triOk;            Val: '50'),                                        // 2807: Arguments[43] gcd Arguments[55]
    (Info: triOk;            Val: '40'),                                        // 2808: Arguments[43] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2809: Arguments[43] gcd Arguments[57]
    (Info: triOk;            Val: '40'),                                        // 2810: Arguments[43] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 2811: Arguments[43] gcd Arguments[59]
    (Info: triOk;            Val: '25'),                                        // 2812: Arguments[43] gcd Arguments[60]
    (Info: triOk;            Val: '200'),                                       // 2813: Arguments[43] gcd Arguments[61]
    (Info: triOk;            Val: '200'),                                       // 2814: Arguments[43] gcd Arguments[62]
    (Info: triOk;            Val: '200'),                                       // 2815: Arguments[43] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 2816: Arguments[44] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2817: Arguments[44] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2818: Arguments[44] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2819: Arguments[44] gcd Arguments[3]
    (Info: triOk;            Val: '6'),                                         // 2820: Arguments[44] gcd Arguments[4]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2821: Arguments[44] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 2822: Arguments[44] gcd Arguments[6]
    (Info: triOk;            Val: '42'),                                        // 2823: Arguments[44] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 2824: Arguments[44] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 2825: Arguments[44] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         // 2826: Arguments[44] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 2827: Arguments[44] gcd Arguments[11]
    (Info: triOk;            Val: '14'),                                        // 2828: Arguments[44] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 2829: Arguments[44] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 2830: Arguments[44] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 2831: Arguments[44] gcd Arguments[15]
    (Info: triOk;            Val: '14'),                                        // 2832: Arguments[44] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2833: Arguments[44] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 2834: Arguments[44] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2835: Arguments[44] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2836: Arguments[44] gcd Arguments[20]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2837: Arguments[44] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2838: Arguments[44] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2839: Arguments[44] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2840: Arguments[44] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2841: Arguments[44] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 2842: Arguments[44] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2843: Arguments[44] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2844: Arguments[44] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 2845: Arguments[44] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 2846: Arguments[44] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 2847: Arguments[44] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 2848: Arguments[44] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2849: Arguments[44] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2850: Arguments[44] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2851: Arguments[44] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2852: Arguments[44] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 2853: Arguments[44] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         // 2854: Arguments[44] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 2855: Arguments[44] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 2856: Arguments[44] gcd Arguments[40]
    (Info: triOk;            Val: '42'),                                        // 2857: Arguments[44] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 2858: Arguments[44] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 2859: Arguments[44] gcd Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2860: Arguments[44] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2861: Arguments[44] gcd Arguments[45]
    (Info: triOk;            Val: '6'),                                         // 2862: Arguments[44] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 2863: Arguments[44] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2864: Arguments[44] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2865: Arguments[44] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2866: Arguments[44] gcd Arguments[50]
    (Info: triOk;            Val: '23'),                                        // 2867: Arguments[44] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2868: Arguments[44] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2869: Arguments[44] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 2870: Arguments[44] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2871: Arguments[44] gcd Arguments[55]
    (Info: triOk;            Val: '714'),                                       // 2872: Arguments[44] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2873: Arguments[44] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 2874: Arguments[44] gcd Arguments[58]
    (Info: triOk;            Val: '6'),                                         // 2875: Arguments[44] gcd Arguments[59]
    (Info: triOk;            Val: '357'),                                       // 2876: Arguments[44] gcd Arguments[60]
    (Info: triOk;            Val: '714'),                                       // 2877: Arguments[44] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 2878: Arguments[44] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 2879: Arguments[44] gcd Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 2880: Arguments[45] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2881: Arguments[45] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2882: Arguments[45] gcd Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 2883: Arguments[45] gcd Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 2884: Arguments[45] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 2885: Arguments[45] gcd Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 2886: Arguments[45] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 2887: Arguments[45] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 2888: Arguments[45] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 2889: Arguments[45] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 2890: Arguments[45] gcd Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 2891: Arguments[45] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 2892: Arguments[45] gcd Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 2893: Arguments[45] gcd Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 2894: Arguments[45] gcd Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 2895: Arguments[45] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 2896: Arguments[45] gcd Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 2897: Arguments[45] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2898: Arguments[45] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2899: Arguments[45] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2900: Arguments[45] gcd Arguments[20]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2901: Arguments[45] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2902: Arguments[45] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2903: Arguments[45] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2904: Arguments[45] gcd Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 2905: Arguments[45] gcd Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 2906: Arguments[45] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2907: Arguments[45] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2908: Arguments[45] gcd Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 2909: Arguments[45] gcd Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 2910: Arguments[45] gcd Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 2911: Arguments[45] gcd Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 2912: Arguments[45] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2913: Arguments[45] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 2914: Arguments[45] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2915: Arguments[45] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2916: Arguments[45] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2917: Arguments[45] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 2918: Arguments[45] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 2919: Arguments[45] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 2920: Arguments[45] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 2921: Arguments[45] gcd Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 2922: Arguments[45] gcd Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 2923: Arguments[45] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 2924: Arguments[45] gcd Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2925: Arguments[45] gcd Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 2926: Arguments[45] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2927: Arguments[45] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 2928: Arguments[45] gcd Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 2929: Arguments[45] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2930: Arguments[45] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2931: Arguments[45] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2932: Arguments[45] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2933: Arguments[45] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2934: Arguments[45] gcd Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 2935: Arguments[45] gcd Arguments[55]
    (Info: triOk;            Val: '2'),                                         // 2936: Arguments[45] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 2937: Arguments[45] gcd Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 2938: Arguments[45] gcd Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 2939: Arguments[45] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 2940: Arguments[45] gcd Arguments[60]
    (Info: triOk;            Val: '2'),                                         // 2941: Arguments[45] gcd Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 2942: Arguments[45] gcd Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 2943: Arguments[45] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 2944: Arguments[46] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 2945: Arguments[46] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 2946: Arguments[46] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 2947: Arguments[46] gcd Arguments[3]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2948: Arguments[46] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         // 2949: Arguments[46] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 2950: Arguments[46] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         // 2951: Arguments[46] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 2952: Arguments[46] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 2953: Arguments[46] gcd Arguments[9]
    (Info: triOk;            Val: '6'),                                         // 2954: Arguments[46] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 2955: Arguments[46] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 2956: Arguments[46] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 2957: Arguments[46] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 2958: Arguments[46] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 2959: Arguments[46] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 2960: Arguments[46] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 2961: Arguments[46] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2962: Arguments[46] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 2963: Arguments[46] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 2964: Arguments[46] gcd Arguments[20]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2965: Arguments[46] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2966: Arguments[46] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2967: Arguments[46] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2968: Arguments[46] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2969: Arguments[46] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 2970: Arguments[46] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 2971: Arguments[46] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 2972: Arguments[46] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 2973: Arguments[46] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 2974: Arguments[46] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 2975: Arguments[46] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 2976: Arguments[46] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 2977: Arguments[46] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 2978: Arguments[46] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 2979: Arguments[46] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 2980: Arguments[46] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 2981: Arguments[46] gcd Arguments[37]
    (Info: triOk;            Val: '6'),                                         // 2982: Arguments[46] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 2983: Arguments[46] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 2984: Arguments[46] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         // 2985: Arguments[46] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 2986: Arguments[46] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 2987: Arguments[46] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         // 2988: Arguments[46] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 2989: Arguments[46] gcd Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2990: Arguments[46] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 2991: Arguments[46] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 2992: Arguments[46] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 2993: Arguments[46] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 2994: Arguments[46] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 2995: Arguments[46] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 2996: Arguments[46] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 2997: Arguments[46] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 2998: Arguments[46] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 2999: Arguments[46] gcd Arguments[55]
    (Info: triOk;            Val: '30'),                                        // 3000: Arguments[46] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3001: Arguments[46] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 3002: Arguments[46] gcd Arguments[58]
    (Info: triOk;            Val: '30'),                                        // 3003: Arguments[46] gcd Arguments[59]
    (Info: triOk;            Val: '15'),                                        // 3004: Arguments[46] gcd Arguments[60]
    (Info: triOk;            Val: '30'),                                        // 3005: Arguments[46] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 3006: Arguments[46] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 3007: Arguments[46] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3008: Arguments[47] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3009: Arguments[47] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3010: Arguments[47] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3011: Arguments[47] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3012: Arguments[47] gcd Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 3013: Arguments[47] gcd Arguments[5]
    (Info: triOk;            Val: '73'),                                        // 3014: Arguments[47] gcd Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 3015: Arguments[47] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3016: Arguments[47] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3017: Arguments[47] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3018: Arguments[47] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3019: Arguments[47] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 3020: Arguments[47] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3021: Arguments[47] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3022: Arguments[47] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3023: Arguments[47] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 3024: Arguments[47] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3025: Arguments[47] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 3026: Arguments[47] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3027: Arguments[47] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3028: Arguments[47] gcd Arguments[20]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3029: Arguments[47] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3030: Arguments[47] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3031: Arguments[47] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3032: Arguments[47] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3033: Arguments[47] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3034: Arguments[47] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3035: Arguments[47] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3036: Arguments[47] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3037: Arguments[47] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3038: Arguments[47] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3039: Arguments[47] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3040: Arguments[47] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3041: Arguments[47] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3042: Arguments[47] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3043: Arguments[47] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3044: Arguments[47] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 3045: Arguments[47] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3046: Arguments[47] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3047: Arguments[47] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3048: Arguments[47] gcd Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 3049: Arguments[47] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3050: Arguments[47] gcd Arguments[42]
    (Info: triOk;            Val: '73'),                                        // 3051: Arguments[47] gcd Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 3052: Arguments[47] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3053: Arguments[47] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3054: Arguments[47] gcd Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3055: Arguments[47] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3056: Arguments[47] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3057: Arguments[47] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3058: Arguments[47] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3059: Arguments[47] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3060: Arguments[47] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3061: Arguments[47] gcd Arguments[53]
    (Info: triOk;            Val: '9223372036854775807'),                       // 3062: Arguments[47] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3063: Arguments[47] gcd Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 3064: Arguments[47] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3065: Arguments[47] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3066: Arguments[47] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3067: Arguments[47] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 3068: Arguments[47] gcd Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 3069: Arguments[47] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3070: Arguments[47] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3071: Arguments[47] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3072: Arguments[48] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3073: Arguments[48] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3074: Arguments[48] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3075: Arguments[48] gcd Arguments[3]
    (Info: triOk;            Val: '3'),                                         // 3076: Arguments[48] gcd Arguments[4]
    (Info: triOk;            Val: '3'),                                         // 3077: Arguments[48] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3078: Arguments[48] gcd Arguments[6]
    (Info: triOk;            Val: '3'),                                         // 3079: Arguments[48] gcd Arguments[7]
    (Info: triOk;            Val: '3'),                                         // 3080: Arguments[48] gcd Arguments[8]
    (Info: triOk;            Val: '3'),                                         // 3081: Arguments[48] gcd Arguments[9]
    (Info: triOk;            Val: '3'),                                         // 3082: Arguments[48] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3083: Arguments[48] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3084: Arguments[48] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3085: Arguments[48] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3086: Arguments[48] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3087: Arguments[48] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3088: Arguments[48] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3089: Arguments[48] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3090: Arguments[48] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3091: Arguments[48] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3092: Arguments[48] gcd Arguments[20]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3093: Arguments[48] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3094: Arguments[48] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3095: Arguments[48] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3096: Arguments[48] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3097: Arguments[48] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3098: Arguments[48] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3099: Arguments[48] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3100: Arguments[48] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3101: Arguments[48] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3102: Arguments[48] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3103: Arguments[48] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3104: Arguments[48] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3105: Arguments[48] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3106: Arguments[48] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3107: Arguments[48] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3108: Arguments[48] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3109: Arguments[48] gcd Arguments[37]
    (Info: triOk;            Val: '3'),                                         // 3110: Arguments[48] gcd Arguments[38]
    (Info: triOk;            Val: '3'),                                         // 3111: Arguments[48] gcd Arguments[39]
    (Info: triOk;            Val: '3'),                                         // 3112: Arguments[48] gcd Arguments[40]
    (Info: triOk;            Val: '3'),                                         // 3113: Arguments[48] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3114: Arguments[48] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3115: Arguments[48] gcd Arguments[43]
    (Info: triOk;            Val: '3'),                                         // 3116: Arguments[48] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3117: Arguments[48] gcd Arguments[45]
    (Info: triOk;            Val: '3'),                                         // 3118: Arguments[48] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3119: Arguments[48] gcd Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3120: Arguments[48] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3121: Arguments[48] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3122: Arguments[48] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3123: Arguments[48] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3124: Arguments[48] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3125: Arguments[48] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3126: Arguments[48] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3127: Arguments[48] gcd Arguments[55]
    (Info: triOk;            Val: '3'),                                         // 3128: Arguments[48] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3129: Arguments[48] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3130: Arguments[48] gcd Arguments[58]
    (Info: triOk;            Val: '3'),                                         // 3131: Arguments[48] gcd Arguments[59]
    (Info: triOk;            Val: '3'),                                         // 3132: Arguments[48] gcd Arguments[60]
    (Info: triOk;            Val: '3'),                                         // 3133: Arguments[48] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3134: Arguments[48] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3135: Arguments[48] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 3136: Arguments[49] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3137: Arguments[49] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3138: Arguments[49] gcd Arguments[2]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3139: Arguments[49] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 3140: Arguments[49] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 3141: Arguments[49] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 3142: Arguments[49] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 3143: Arguments[49] gcd Arguments[7]
    (Info: triOk;            Val: '22'),                                        // 3144: Arguments[49] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 3145: Arguments[49] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 3146: Arguments[49] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 3147: Arguments[49] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 3148: Arguments[49] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 3149: Arguments[49] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 3150: Arguments[49] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 3151: Arguments[49] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 3152: Arguments[49] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3153: Arguments[49] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3154: Arguments[49] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3155: Arguments[49] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3156: Arguments[49] gcd Arguments[20]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3157: Arguments[49] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3158: Arguments[49] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3159: Arguments[49] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3160: Arguments[49] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3161: Arguments[49] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 3162: Arguments[49] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3163: Arguments[49] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3164: Arguments[49] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 3165: Arguments[49] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 3166: Arguments[49] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 3167: Arguments[49] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 3168: Arguments[49] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 3169: Arguments[49] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3170: Arguments[49] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 3171: Arguments[49] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 3172: Arguments[49] gcd Arguments[36]
    (Info: triOk;            Val: '11'),                                        // 3173: Arguments[49] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 3174: Arguments[49] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 3175: Arguments[49] gcd Arguments[39]
    (Info: triOk;            Val: '22'),                                        // 3176: Arguments[49] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 3177: Arguments[49] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 3178: Arguments[49] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 3179: Arguments[49] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 3180: Arguments[49] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3181: Arguments[49] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 3182: Arguments[49] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3183: Arguments[49] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3184: Arguments[49] gcd Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3185: Arguments[49] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3186: Arguments[49] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3187: Arguments[49] gcd Arguments[51]
    (Info: triOk;            Val: '11'),                                        // 3188: Arguments[49] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3189: Arguments[49] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3190: Arguments[49] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 3191: Arguments[49] gcd Arguments[55]
    (Info: triOk;            Val: '10'),                                        // 3192: Arguments[49] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3193: Arguments[49] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 3194: Arguments[49] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 3195: Arguments[49] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 3196: Arguments[49] gcd Arguments[60]
    (Info: triOk;            Val: '10'),                                        // 3197: Arguments[49] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 3198: Arguments[49] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 3199: Arguments[49] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3200: Arguments[50] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3201: Arguments[50] gcd Arguments[1]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3202: Arguments[50] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3203: Arguments[50] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3204: Arguments[50] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 3205: Arguments[50] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3206: Arguments[50] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 3207: Arguments[50] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3208: Arguments[50] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3209: Arguments[50] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3210: Arguments[50] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3211: Arguments[50] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3212: Arguments[50] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3213: Arguments[50] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3214: Arguments[50] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3215: Arguments[50] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3216: Arguments[50] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3217: Arguments[50] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3218: Arguments[50] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3219: Arguments[50] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3220: Arguments[50] gcd Arguments[20]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3221: Arguments[50] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3222: Arguments[50] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3223: Arguments[50] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3224: Arguments[50] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3225: Arguments[50] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3226: Arguments[50] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3227: Arguments[50] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3228: Arguments[50] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3229: Arguments[50] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3230: Arguments[50] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3231: Arguments[50] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3232: Arguments[50] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3233: Arguments[50] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3234: Arguments[50] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3235: Arguments[50] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3236: Arguments[50] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3237: Arguments[50] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3238: Arguments[50] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3239: Arguments[50] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3240: Arguments[50] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 3241: Arguments[50] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3242: Arguments[50] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3243: Arguments[50] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 3244: Arguments[50] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3245: Arguments[50] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3246: Arguments[50] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3247: Arguments[50] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3248: Arguments[50] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3249: Arguments[50] gcd Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3250: Arguments[50] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3251: Arguments[50] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3252: Arguments[50] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3253: Arguments[50] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3254: Arguments[50] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3255: Arguments[50] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 3256: Arguments[50] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3257: Arguments[50] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3258: Arguments[50] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3259: Arguments[50] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 3260: Arguments[50] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 3261: Arguments[50] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3262: Arguments[50] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3263: Arguments[50] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3264: Arguments[51] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3265: Arguments[51] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3266: Arguments[51] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3267: Arguments[51] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3268: Arguments[51] gcd Arguments[4]
    (Info: triOk;            Val: '23'),                                        // 3269: Arguments[51] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3270: Arguments[51] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 3271: Arguments[51] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3272: Arguments[51] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3273: Arguments[51] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3274: Arguments[51] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3275: Arguments[51] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3276: Arguments[51] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3277: Arguments[51] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3278: Arguments[51] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3279: Arguments[51] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3280: Arguments[51] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3281: Arguments[51] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3282: Arguments[51] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3283: Arguments[51] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3284: Arguments[51] gcd Arguments[20]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3285: Arguments[51] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3286: Arguments[51] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3287: Arguments[51] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3288: Arguments[51] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3289: Arguments[51] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3290: Arguments[51] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3291: Arguments[51] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3292: Arguments[51] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3293: Arguments[51] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3294: Arguments[51] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3295: Arguments[51] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3296: Arguments[51] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3297: Arguments[51] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3298: Arguments[51] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3299: Arguments[51] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3300: Arguments[51] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3301: Arguments[51] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3302: Arguments[51] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3303: Arguments[51] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3304: Arguments[51] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 3305: Arguments[51] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3306: Arguments[51] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3307: Arguments[51] gcd Arguments[43]
    (Info: triOk;            Val: '23'),                                        // 3308: Arguments[51] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3309: Arguments[51] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3310: Arguments[51] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3311: Arguments[51] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3312: Arguments[51] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3313: Arguments[51] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3314: Arguments[51] gcd Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3315: Arguments[51] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3316: Arguments[51] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3317: Arguments[51] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3318: Arguments[51] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3319: Arguments[51] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 3320: Arguments[51] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3321: Arguments[51] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3322: Arguments[51] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3323: Arguments[51] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 3324: Arguments[51] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 3325: Arguments[51] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3326: Arguments[51] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3327: Arguments[51] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3328: Arguments[52] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3329: Arguments[52] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3330: Arguments[52] gcd Arguments[2]
    (Info: triOk;            Val: '11'),                                        // 3331: Arguments[52] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3332: Arguments[52] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 3333: Arguments[52] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3334: Arguments[52] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 3335: Arguments[52] gcd Arguments[7]
    (Info: triOk;            Val: '11'),                                        // 3336: Arguments[52] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3337: Arguments[52] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3338: Arguments[52] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3339: Arguments[52] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3340: Arguments[52] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3341: Arguments[52] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3342: Arguments[52] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3343: Arguments[52] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3344: Arguments[52] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3345: Arguments[52] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3346: Arguments[52] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3347: Arguments[52] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3348: Arguments[52] gcd Arguments[20]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3349: Arguments[52] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3350: Arguments[52] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3351: Arguments[52] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3352: Arguments[52] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3353: Arguments[52] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3354: Arguments[52] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3355: Arguments[52] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3356: Arguments[52] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3357: Arguments[52] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3358: Arguments[52] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3359: Arguments[52] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3360: Arguments[52] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3361: Arguments[52] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3362: Arguments[52] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3363: Arguments[52] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3364: Arguments[52] gcd Arguments[36]
    (Info: triOk;            Val: '11'),                                        // 3365: Arguments[52] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3366: Arguments[52] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3367: Arguments[52] gcd Arguments[39]
    (Info: triOk;            Val: '11'),                                        // 3368: Arguments[52] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 3369: Arguments[52] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3370: Arguments[52] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3371: Arguments[52] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 3372: Arguments[52] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3373: Arguments[52] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3374: Arguments[52] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3375: Arguments[52] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3376: Arguments[52] gcd Arguments[48]
    (Info: triOk;            Val: '11'),                                        // 3377: Arguments[52] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3378: Arguments[52] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3379: Arguments[52] gcd Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3380: Arguments[52] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3381: Arguments[52] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3382: Arguments[52] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3383: Arguments[52] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 3384: Arguments[52] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3385: Arguments[52] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3386: Arguments[52] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3387: Arguments[52] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 3388: Arguments[52] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 3389: Arguments[52] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3390: Arguments[52] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3391: Arguments[52] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3392: Arguments[53] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3393: Arguments[53] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3394: Arguments[53] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3395: Arguments[53] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3396: Arguments[53] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 3397: Arguments[53] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3398: Arguments[53] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 3399: Arguments[53] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3400: Arguments[53] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3401: Arguments[53] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3402: Arguments[53] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3403: Arguments[53] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3404: Arguments[53] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3405: Arguments[53] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3406: Arguments[53] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3407: Arguments[53] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3408: Arguments[53] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3409: Arguments[53] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3410: Arguments[53] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3411: Arguments[53] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3412: Arguments[53] gcd Arguments[20]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3413: Arguments[53] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3414: Arguments[53] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3415: Arguments[53] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3416: Arguments[53] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3417: Arguments[53] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3418: Arguments[53] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3419: Arguments[53] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3420: Arguments[53] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3421: Arguments[53] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3422: Arguments[53] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3423: Arguments[53] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3424: Arguments[53] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3425: Arguments[53] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3426: Arguments[53] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3427: Arguments[53] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3428: Arguments[53] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3429: Arguments[53] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3430: Arguments[53] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3431: Arguments[53] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3432: Arguments[53] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 3433: Arguments[53] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3434: Arguments[53] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3435: Arguments[53] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 3436: Arguments[53] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3437: Arguments[53] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3438: Arguments[53] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3439: Arguments[53] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3440: Arguments[53] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3441: Arguments[53] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3442: Arguments[53] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3443: Arguments[53] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3444: Arguments[53] gcd Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3445: Arguments[53] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3446: Arguments[53] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3447: Arguments[53] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 3448: Arguments[53] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3449: Arguments[53] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3450: Arguments[53] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3451: Arguments[53] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 3452: Arguments[53] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 3453: Arguments[53] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3454: Arguments[53] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3455: Arguments[53] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3456: Arguments[54] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3457: Arguments[54] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3458: Arguments[54] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3459: Arguments[54] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3460: Arguments[54] gcd Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 3461: Arguments[54] gcd Arguments[5]
    (Info: triOk;            Val: '73'),                                        // 3462: Arguments[54] gcd Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 3463: Arguments[54] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3464: Arguments[54] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3465: Arguments[54] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3466: Arguments[54] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3467: Arguments[54] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 3468: Arguments[54] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3469: Arguments[54] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3470: Arguments[54] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3471: Arguments[54] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 3472: Arguments[54] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3473: Arguments[54] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 3474: Arguments[54] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3475: Arguments[54] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3476: Arguments[54] gcd Arguments[20]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3477: Arguments[54] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3478: Arguments[54] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3479: Arguments[54] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3480: Arguments[54] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3481: Arguments[54] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3482: Arguments[54] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3483: Arguments[54] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3484: Arguments[54] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3485: Arguments[54] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3486: Arguments[54] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3487: Arguments[54] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3488: Arguments[54] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3489: Arguments[54] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3490: Arguments[54] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3491: Arguments[54] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3492: Arguments[54] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 3493: Arguments[54] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3494: Arguments[54] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3495: Arguments[54] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3496: Arguments[54] gcd Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 3497: Arguments[54] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3498: Arguments[54] gcd Arguments[42]
    (Info: triOk;            Val: '73'),                                        // 3499: Arguments[54] gcd Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 3500: Arguments[54] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3501: Arguments[54] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3502: Arguments[54] gcd Arguments[46]
    (Info: triOk;            Val: '9223372036854775807'),                       // 3503: Arguments[54] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3504: Arguments[54] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3505: Arguments[54] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3506: Arguments[54] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3507: Arguments[54] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3508: Arguments[54] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3509: Arguments[54] gcd Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3510: Arguments[54] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3511: Arguments[54] gcd Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 3512: Arguments[54] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3513: Arguments[54] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3514: Arguments[54] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3515: Arguments[54] gcd Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 3516: Arguments[54] gcd Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 3517: Arguments[54] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3518: Arguments[54] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3519: Arguments[54] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 3520: Arguments[55] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3521: Arguments[55] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3522: Arguments[55] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3523: Arguments[55] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 3524: Arguments[55] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 3525: Arguments[55] gcd Arguments[5]
    (Info: triOk;            Val: '50'),                                        // 3526: Arguments[55] gcd Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 3527: Arguments[55] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 3528: Arguments[55] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 3529: Arguments[55] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 3530: Arguments[55] gcd Arguments[10]
    (Info: triOk;            Val: '1250'),                                      // 3531: Arguments[55] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 3532: Arguments[55] gcd Arguments[12]
    (Info: triOk;            Val: '1250'),                                      // 3533: Arguments[55] gcd Arguments[13]
    (Info: triOk;            Val: '250'),                                       // 3534: Arguments[55] gcd Arguments[14]
    (Info: triOk;            Val: '50'),                                        // 3535: Arguments[55] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 3536: Arguments[55] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3537: Arguments[55] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3538: Arguments[55] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3539: Arguments[55] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3540: Arguments[55] gcd Arguments[20]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3541: Arguments[55] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3542: Arguments[55] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3543: Arguments[55] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3544: Arguments[55] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3545: Arguments[55] gcd Arguments[25]
    (Info: triOk;            Val: '50'),                                        // 3546: Arguments[55] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3547: Arguments[55] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3548: Arguments[55] gcd Arguments[28]
    (Info: triOk;            Val: '250'),                                       // 3549: Arguments[55] gcd Arguments[29]
    (Info: triOk;            Val: '1250'),                                      // 3550: Arguments[55] gcd Arguments[30]
    (Info: triOk;            Val: '1250'),                                      // 3551: Arguments[55] gcd Arguments[31]
    (Info: triOk;            Val: '1250'),                                      // 3552: Arguments[55] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 3553: Arguments[55] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3554: Arguments[55] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 3555: Arguments[55] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 3556: Arguments[55] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3557: Arguments[55] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 3558: Arguments[55] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 3559: Arguments[55] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 3560: Arguments[55] gcd Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 3561: Arguments[55] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 3562: Arguments[55] gcd Arguments[42]
    (Info: triOk;            Val: '50'),                                        // 3563: Arguments[55] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 3564: Arguments[55] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3565: Arguments[55] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 3566: Arguments[55] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3567: Arguments[55] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3568: Arguments[55] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 3569: Arguments[55] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3570: Arguments[55] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3571: Arguments[55] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3572: Arguments[55] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3573: Arguments[55] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3574: Arguments[55] gcd Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3575: Arguments[55] gcd Arguments[55]
    (Info: triOk;            Val: '10'),                                        // 3576: Arguments[55] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3577: Arguments[55] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 3578: Arguments[55] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 3579: Arguments[55] gcd Arguments[59]
    (Info: triOk;            Val: '625'),                                       // 3580: Arguments[55] gcd Arguments[60]
    (Info: triOk;            Val: '1250'),                                      // 3581: Arguments[55] gcd Arguments[61]
    (Info: triOk;            Val: '1250'),                                      // 3582: Arguments[55] gcd Arguments[62]
    (Info: triOk;            Val: '1250'),                                      // 3583: Arguments[55] gcd Arguments[63]
    (Info: triOk;            Val: '202824096036516704239472512860160'),         // 3584: Arguments[56] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3585: Arguments[56] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3586: Arguments[56] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3587: Arguments[56] gcd Arguments[3]
    (Info: triOk;            Val: '30'),                                        // 3588: Arguments[56] gcd Arguments[4]
    (Info: triOk;            Val: '714'),                                       // 3589: Arguments[56] gcd Arguments[5]
    (Info: triOk;            Val: '40'),                                        // 3590: Arguments[56] gcd Arguments[6]
    (Info: triOk;            Val: '1092'),                                      // 3591: Arguments[56] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 3592: Arguments[56] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 3593: Arguments[56] gcd Arguments[9]
    (Info: triOk;            Val: '18'),                                        // 3594: Arguments[56] gcd Arguments[10]
    (Info: triOk;            Val: '160'),                                       // 3595: Arguments[56] gcd Arguments[11]
    (Info: triOk;            Val: '112'),                                       // 3596: Arguments[56] gcd Arguments[12]
    (Info: triOk;            Val: '80'),                                        // 3597: Arguments[56] gcd Arguments[13]
    (Info: triOk;            Val: '40'),                                        // 3598: Arguments[56] gcd Arguments[14]
    (Info: triOk;            Val: '20'),                                        // 3599: Arguments[56] gcd Arguments[15]
    (Info: triOk;            Val: '56'),                                        // 3600: Arguments[56] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3601: Arguments[56] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 3602: Arguments[56] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3603: Arguments[56] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3604: Arguments[56] gcd Arguments[20]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3605: Arguments[56] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3606: Arguments[56] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3607: Arguments[56] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3608: Arguments[56] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3609: Arguments[56] gcd Arguments[25]
    (Info: triOk;            Val: '20'),                                        // 3610: Arguments[56] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3611: Arguments[56] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3612: Arguments[56] gcd Arguments[28]
    (Info: triOk;            Val: '40'),                                        // 3613: Arguments[56] gcd Arguments[29]
    (Info: triOk;            Val: '80'),                                        // 3614: Arguments[56] gcd Arguments[30]
    (Info: triOk;            Val: '160'),                                       // 3615: Arguments[56] gcd Arguments[31]
    (Info: triOk;            Val: '320'),                                       // 3616: Arguments[56] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 3617: Arguments[56] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3618: Arguments[56] gcd Arguments[34]
    (Info: triOk;            Val: '131072'),                                    // 3619: Arguments[56] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 3620: Arguments[56] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 3621: Arguments[56] gcd Arguments[37]
    (Info: triOk;            Val: '18'),                                        // 3622: Arguments[56] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 3623: Arguments[56] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 3624: Arguments[56] gcd Arguments[40]
    (Info: triOk;            Val: '1092'),                                      // 3625: Arguments[56] gcd Arguments[41]
    (Info: triOk;            Val: '368934881474191032320'),                     // 3626: Arguments[56] gcd Arguments[42]
    (Info: triOk;            Val: '40'),                                        // 3627: Arguments[56] gcd Arguments[43]
    (Info: triOk;            Val: '714'),                                       // 3628: Arguments[56] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3629: Arguments[56] gcd Arguments[45]
    (Info: triOk;            Val: '30'),                                        // 3630: Arguments[56] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 3631: Arguments[56] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 3632: Arguments[56] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 3633: Arguments[56] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3634: Arguments[56] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3635: Arguments[56] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3636: Arguments[56] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3637: Arguments[56] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 3638: Arguments[56] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 3639: Arguments[56] gcd Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3640: Arguments[56] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3641: Arguments[56] gcd Arguments[57]
    (Info: triOk;            Val: '202824096036516704239472512860160'),         // 3642: Arguments[56] gcd Arguments[58]
    (Info: triOk;            Val: '90'),                                        // 3643: Arguments[56] gcd Arguments[59]
    (Info: triOk;            Val: '16777215'),                                  // 3644: Arguments[56] gcd Arguments[60]
    (Info: triOk;            Val: '137438945280'),                              // 3645: Arguments[56] gcd Arguments[61]
    (Info: triOk;            Val: '40960'),                                     // 3646: Arguments[56] gcd Arguments[62]
    (Info: triOk;            Val: '720575940379279360'),                        // 3647: Arguments[56] gcd Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 3648: Arguments[57] gcd Arguments[0]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3649: Arguments[57] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3650: Arguments[57] gcd Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 3651: Arguments[57] gcd Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 3652: Arguments[57] gcd Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 3653: Arguments[57] gcd Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 3654: Arguments[57] gcd Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 3655: Arguments[57] gcd Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 3656: Arguments[57] gcd Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 3657: Arguments[57] gcd Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 3658: Arguments[57] gcd Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 3659: Arguments[57] gcd Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 3660: Arguments[57] gcd Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 3661: Arguments[57] gcd Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 3662: Arguments[57] gcd Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 3663: Arguments[57] gcd Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 3664: Arguments[57] gcd Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3665: Arguments[57] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3666: Arguments[57] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3667: Arguments[57] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3668: Arguments[57] gcd Arguments[20]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3669: Arguments[57] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3670: Arguments[57] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3671: Arguments[57] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3672: Arguments[57] gcd Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3673: Arguments[57] gcd Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 3674: Arguments[57] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3675: Arguments[57] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3676: Arguments[57] gcd Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 3677: Arguments[57] gcd Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 3678: Arguments[57] gcd Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 3679: Arguments[57] gcd Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 3680: Arguments[57] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3681: Arguments[57] gcd Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 3682: Arguments[57] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3683: Arguments[57] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3684: Arguments[57] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3685: Arguments[57] gcd Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 3686: Arguments[57] gcd Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 3687: Arguments[57] gcd Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 3688: Arguments[57] gcd Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 3689: Arguments[57] gcd Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 3690: Arguments[57] gcd Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 3691: Arguments[57] gcd Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 3692: Arguments[57] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3693: Arguments[57] gcd Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 3694: Arguments[57] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3695: Arguments[57] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3696: Arguments[57] gcd Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 3697: Arguments[57] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3698: Arguments[57] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3699: Arguments[57] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3700: Arguments[57] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3701: Arguments[57] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3702: Arguments[57] gcd Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 3703: Arguments[57] gcd Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 3704: Arguments[57] gcd Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3705: Arguments[57] gcd Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 3706: Arguments[57] gcd Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 3707: Arguments[57] gcd Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 3708: Arguments[57] gcd Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 3709: Arguments[57] gcd Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 3710: Arguments[57] gcd Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 3711: Arguments[57] gcd Arguments[63]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3712: Arguments[58] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3713: Arguments[58] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3714: Arguments[58] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3715: Arguments[58] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 3716: Arguments[58] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 3717: Arguments[58] gcd Arguments[5]
    (Info: triOk;            Val: '40'),                                        // 3718: Arguments[58] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 3719: Arguments[58] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 3720: Arguments[58] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 3721: Arguments[58] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 3722: Arguments[58] gcd Arguments[10]
    (Info: triOk;            Val: '160'),                                       // 3723: Arguments[58] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 3724: Arguments[58] gcd Arguments[12]
    (Info: triOk;            Val: '80'),                                        // 3725: Arguments[58] gcd Arguments[13]
    (Info: triOk;            Val: '40'),                                        // 3726: Arguments[58] gcd Arguments[14]
    (Info: triOk;            Val: '20'),                                        // 3727: Arguments[58] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 3728: Arguments[58] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3729: Arguments[58] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3730: Arguments[58] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3731: Arguments[58] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3732: Arguments[58] gcd Arguments[20]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3733: Arguments[58] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3734: Arguments[58] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3735: Arguments[58] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3736: Arguments[58] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3737: Arguments[58] gcd Arguments[25]
    (Info: triOk;            Val: '20'),                                        // 3738: Arguments[58] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3739: Arguments[58] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3740: Arguments[58] gcd Arguments[28]
    (Info: triOk;            Val: '40'),                                        // 3741: Arguments[58] gcd Arguments[29]
    (Info: triOk;            Val: '80'),                                        // 3742: Arguments[58] gcd Arguments[30]
    (Info: triOk;            Val: '160'),                                       // 3743: Arguments[58] gcd Arguments[31]
    (Info: triOk;            Val: '320'),                                       // 3744: Arguments[58] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 3745: Arguments[58] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3746: Arguments[58] gcd Arguments[34]
    (Info: triOk;            Val: '131072'),                                    // 3747: Arguments[58] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 3748: Arguments[58] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3749: Arguments[58] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 3750: Arguments[58] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 3751: Arguments[58] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 3752: Arguments[58] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 3753: Arguments[58] gcd Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3754: Arguments[58] gcd Arguments[42]
    (Info: triOk;            Val: '40'),                                        // 3755: Arguments[58] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 3756: Arguments[58] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3757: Arguments[58] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 3758: Arguments[58] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3759: Arguments[58] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 3760: Arguments[58] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 3761: Arguments[58] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3762: Arguments[58] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3763: Arguments[58] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3764: Arguments[58] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3765: Arguments[58] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3766: Arguments[58] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 3767: Arguments[58] gcd Arguments[55]
    (Info: triOk;            Val: '202824096036516704239472512860160'),         // 3768: Arguments[58] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3769: Arguments[58] gcd Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3770: Arguments[58] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 3771: Arguments[58] gcd Arguments[59]
    (Info: triOk;            Val: '5'),                                         // 3772: Arguments[58] gcd Arguments[60]
    (Info: triOk;            Val: '40960'),                                     // 3773: Arguments[58] gcd Arguments[61]
    (Info: triOk;            Val: '40960'),                                     // 3774: Arguments[58] gcd Arguments[62]
    (Info: triOk;            Val: '720575940379279360'),                        // 3775: Arguments[58] gcd Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 3776: Arguments[59] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3777: Arguments[59] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3778: Arguments[59] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3779: Arguments[59] gcd Arguments[3]
    (Info: triOk;            Val: '30'),                                        // 3780: Arguments[59] gcd Arguments[4]
    (Info: triOk;            Val: '6'),                                         // 3781: Arguments[59] gcd Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 3782: Arguments[59] gcd Arguments[6]
    (Info: triOk;            Val: '6'),                                         // 3783: Arguments[59] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 3784: Arguments[59] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 3785: Arguments[59] gcd Arguments[9]
    (Info: triOk;            Val: '18'),                                        // 3786: Arguments[59] gcd Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 3787: Arguments[59] gcd Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 3788: Arguments[59] gcd Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 3789: Arguments[59] gcd Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 3790: Arguments[59] gcd Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 3791: Arguments[59] gcd Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 3792: Arguments[59] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3793: Arguments[59] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3794: Arguments[59] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3795: Arguments[59] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3796: Arguments[59] gcd Arguments[20]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3797: Arguments[59] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3798: Arguments[59] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3799: Arguments[59] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3800: Arguments[59] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3801: Arguments[59] gcd Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 3802: Arguments[59] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3803: Arguments[59] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3804: Arguments[59] gcd Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 3805: Arguments[59] gcd Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 3806: Arguments[59] gcd Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 3807: Arguments[59] gcd Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 3808: Arguments[59] gcd Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 3809: Arguments[59] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3810: Arguments[59] gcd Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 3811: Arguments[59] gcd Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 3812: Arguments[59] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 3813: Arguments[59] gcd Arguments[37]
    (Info: triOk;            Val: '18'),                                        // 3814: Arguments[59] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 3815: Arguments[59] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 3816: Arguments[59] gcd Arguments[40]
    (Info: triOk;            Val: '6'),                                         // 3817: Arguments[59] gcd Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 3818: Arguments[59] gcd Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 3819: Arguments[59] gcd Arguments[43]
    (Info: triOk;            Val: '6'),                                         // 3820: Arguments[59] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3821: Arguments[59] gcd Arguments[45]
    (Info: triOk;            Val: '30'),                                        // 3822: Arguments[59] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 3823: Arguments[59] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 3824: Arguments[59] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 3825: Arguments[59] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3826: Arguments[59] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3827: Arguments[59] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3828: Arguments[59] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3829: Arguments[59] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3830: Arguments[59] gcd Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 3831: Arguments[59] gcd Arguments[55]
    (Info: triOk;            Val: '90'),                                        // 3832: Arguments[59] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3833: Arguments[59] gcd Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 3834: Arguments[59] gcd Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3835: Arguments[59] gcd Arguments[59]
    (Info: triOk;            Val: '45'),                                        // 3836: Arguments[59] gcd Arguments[60]
    (Info: triOk;            Val: '90'),                                        // 3837: Arguments[59] gcd Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 3838: Arguments[59] gcd Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 3839: Arguments[59] gcd Arguments[63]
    (Info: triOk;            Val: '5'),                                         // 3840: Arguments[60] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3841: Arguments[60] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3842: Arguments[60] gcd Arguments[2]
    (Info: triOk;            Val: '5'),                                         // 3843: Arguments[60] gcd Arguments[3]
    (Info: triOk;            Val: '15'),                                        // 3844: Arguments[60] gcd Arguments[4]
    (Info: triOk;            Val: '357'),                                       // 3845: Arguments[60] gcd Arguments[5]
    (Info: triOk;            Val: '25'),                                        // 3846: Arguments[60] gcd Arguments[6]
    (Info: triOk;            Val: '273'),                                       // 3847: Arguments[60] gcd Arguments[7]
    (Info: triOk;            Val: '3'),                                         // 3848: Arguments[60] gcd Arguments[8]
    (Info: triOk;            Val: '3'),                                         // 3849: Arguments[60] gcd Arguments[9]
    (Info: triOk;            Val: '9'),                                         // 3850: Arguments[60] gcd Arguments[10]
    (Info: triOk;            Val: '3125'),                                      // 3851: Arguments[60] gcd Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 3852: Arguments[60] gcd Arguments[12]
    (Info: triOk;            Val: '625'),                                       // 3853: Arguments[60] gcd Arguments[13]
    (Info: triOk;            Val: '125'),                                       // 3854: Arguments[60] gcd Arguments[14]
    (Info: triOk;            Val: '25'),                                        // 3855: Arguments[60] gcd Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 3856: Arguments[60] gcd Arguments[16]
    (Info: triOk;            Val: '5'),                                         // 3857: Arguments[60] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 3858: Arguments[60] gcd Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3859: Arguments[60] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3860: Arguments[60] gcd Arguments[20]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3861: Arguments[60] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3862: Arguments[60] gcd Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3863: Arguments[60] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3864: Arguments[60] gcd Arguments[24]
    (Info: triOk;            Val: '5'),                                         // 3865: Arguments[60] gcd Arguments[25]
    (Info: triOk;            Val: '25'),                                        // 3866: Arguments[60] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3867: Arguments[60] gcd Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 3868: Arguments[60] gcd Arguments[28]
    (Info: triOk;            Val: '125'),                                       // 3869: Arguments[60] gcd Arguments[29]
    (Info: triOk;            Val: '625'),                                       // 3870: Arguments[60] gcd Arguments[30]
    (Info: triOk;            Val: '3125'),                                      // 3871: Arguments[60] gcd Arguments[31]
    (Info: triOk;            Val: '15625'),                                     // 3872: Arguments[60] gcd Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 3873: Arguments[60] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3874: Arguments[60] gcd Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 3875: Arguments[60] gcd Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 3876: Arguments[60] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 3877: Arguments[60] gcd Arguments[37]
    (Info: triOk;            Val: '9'),                                         // 3878: Arguments[60] gcd Arguments[38]
    (Info: triOk;            Val: '3'),                                         // 3879: Arguments[60] gcd Arguments[39]
    (Info: triOk;            Val: '3'),                                         // 3880: Arguments[60] gcd Arguments[40]
    (Info: triOk;            Val: '273'),                                       // 3881: Arguments[60] gcd Arguments[41]
    (Info: triOk;            Val: '5'),                                         // 3882: Arguments[60] gcd Arguments[42]
    (Info: triOk;            Val: '25'),                                        // 3883: Arguments[60] gcd Arguments[43]
    (Info: triOk;            Val: '357'),                                       // 3884: Arguments[60] gcd Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 3885: Arguments[60] gcd Arguments[45]
    (Info: triOk;            Val: '15'),                                        // 3886: Arguments[60] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 3887: Arguments[60] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 3888: Arguments[60] gcd Arguments[48]
    (Info: triOk;            Val: '5'),                                         // 3889: Arguments[60] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3890: Arguments[60] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3891: Arguments[60] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3892: Arguments[60] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3893: Arguments[60] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 3894: Arguments[60] gcd Arguments[54]
    (Info: triOk;            Val: '625'),                                       // 3895: Arguments[60] gcd Arguments[55]
    (Info: triOk;            Val: '16777215'),                                  // 3896: Arguments[60] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3897: Arguments[60] gcd Arguments[57]
    (Info: triOk;            Val: '5'),                                         // 3898: Arguments[60] gcd Arguments[58]
    (Info: triOk;            Val: '45'),                                        // 3899: Arguments[60] gcd Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3900: Arguments[60] gcd Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3901: Arguments[60] gcd Arguments[61]
    (Info: triOk;            Val: '1220703125'),                                // 3902: Arguments[60] gcd Arguments[62]
    (Info: triOk;            Val: '6938893903907228377647697925567626953125'),  // 3903: Arguments[60] gcd Arguments[63]
    (Info: triOk;            Val: '40960'),                                     // 3904: Arguments[61] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3905: Arguments[61] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3906: Arguments[61] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3907: Arguments[61] gcd Arguments[3]
    (Info: triOk;            Val: '30'),                                        // 3908: Arguments[61] gcd Arguments[4]
    (Info: triOk;            Val: '714'),                                       // 3909: Arguments[61] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 3910: Arguments[61] gcd Arguments[6]
    (Info: triOk;            Val: '1092'),                                      // 3911: Arguments[61] gcd Arguments[7]
    (Info: triOk;            Val: '6'),                                         // 3912: Arguments[61] gcd Arguments[8]
    (Info: triOk;            Val: '6'),                                         // 3913: Arguments[61] gcd Arguments[9]
    (Info: triOk;            Val: '18'),                                        // 3914: Arguments[61] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 3915: Arguments[61] gcd Arguments[11]
    (Info: triOk;            Val: '112'),                                       // 3916: Arguments[61] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 3917: Arguments[61] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 3918: Arguments[61] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 3919: Arguments[61] gcd Arguments[15]
    (Info: triOk;            Val: '56'),                                        // 3920: Arguments[61] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3921: Arguments[61] gcd Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 3922: Arguments[61] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3923: Arguments[61] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3924: Arguments[61] gcd Arguments[20]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3925: Arguments[61] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3926: Arguments[61] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3927: Arguments[61] gcd Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3928: Arguments[61] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3929: Arguments[61] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3930: Arguments[61] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3931: Arguments[61] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3932: Arguments[61] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3933: Arguments[61] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3934: Arguments[61] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3935: Arguments[61] gcd Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3936: Arguments[61] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 3937: Arguments[61] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 3938: Arguments[61] gcd Arguments[34]
    (Info: triOk;            Val: '8192'),                                      // 3939: Arguments[61] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 3940: Arguments[61] gcd Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 3941: Arguments[61] gcd Arguments[37]
    (Info: triOk;            Val: '18'),                                        // 3942: Arguments[61] gcd Arguments[38]
    (Info: triOk;            Val: '6'),                                         // 3943: Arguments[61] gcd Arguments[39]
    (Info: triOk;            Val: '6'),                                         // 3944: Arguments[61] gcd Arguments[40]
    (Info: triOk;            Val: '1092'),                                      // 3945: Arguments[61] gcd Arguments[41]
    (Info: triOk;            Val: '40960'),                                     // 3946: Arguments[61] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 3947: Arguments[61] gcd Arguments[43]
    (Info: triOk;            Val: '714'),                                       // 3948: Arguments[61] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 3949: Arguments[61] gcd Arguments[45]
    (Info: triOk;            Val: '30'),                                        // 3950: Arguments[61] gcd Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 3951: Arguments[61] gcd Arguments[47]
    (Info: triOk;            Val: '3'),                                         // 3952: Arguments[61] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 3953: Arguments[61] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 3954: Arguments[61] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 3955: Arguments[61] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 3956: Arguments[61] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 3957: Arguments[61] gcd Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 3958: Arguments[61] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 3959: Arguments[61] gcd Arguments[55]
    (Info: triOk;            Val: '137438945280'),                              // 3960: Arguments[61] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 3961: Arguments[61] gcd Arguments[57]
    (Info: triOk;            Val: '40960'),                                     // 3962: Arguments[61] gcd Arguments[58]
    (Info: triOk;            Val: '90'),                                        // 3963: Arguments[61] gcd Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3964: Arguments[61] gcd Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3965: Arguments[61] gcd Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3966: Arguments[61] gcd Arguments[62]
    (Info: triOk;            Val: '5684341886080801486968994140625000000000' + 
                                  '0000'),                                      // 3967: Arguments[61] gcd Arguments[63]
    (Info: triOk;            Val: '40960'),                                     // 3968: Arguments[62] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 3969: Arguments[62] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 3970: Arguments[62] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 3971: Arguments[62] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 3972: Arguments[62] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 3973: Arguments[62] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 3974: Arguments[62] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 3975: Arguments[62] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 3976: Arguments[62] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 3977: Arguments[62] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 3978: Arguments[62] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 3979: Arguments[62] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 3980: Arguments[62] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 3981: Arguments[62] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 3982: Arguments[62] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 3983: Arguments[62] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 3984: Arguments[62] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 3985: Arguments[62] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3986: Arguments[62] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 3987: Arguments[62] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 3988: Arguments[62] gcd Arguments[20]
    (Info: triOk;            Val: '10000000000000'),                            // 3989: Arguments[62] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3990: Arguments[62] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3991: Arguments[62] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3992: Arguments[62] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3993: Arguments[62] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3994: Arguments[62] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 3995: Arguments[62] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 3996: Arguments[62] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3997: Arguments[62] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3998: Arguments[62] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3999: Arguments[62] gcd Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 4000: Arguments[62] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 4001: Arguments[62] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 4002: Arguments[62] gcd Arguments[34]
    (Info: triOk;            Val: '8192'),                                      // 4003: Arguments[62] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 4004: Arguments[62] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 4005: Arguments[62] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 4006: Arguments[62] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 4007: Arguments[62] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 4008: Arguments[62] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 4009: Arguments[62] gcd Arguments[41]
    (Info: triOk;            Val: '40960'),                                     // 4010: Arguments[62] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 4011: Arguments[62] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 4012: Arguments[62] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 4013: Arguments[62] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 4014: Arguments[62] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 4015: Arguments[62] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 4016: Arguments[62] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 4017: Arguments[62] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 4018: Arguments[62] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 4019: Arguments[62] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 4020: Arguments[62] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 4021: Arguments[62] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 4022: Arguments[62] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 4023: Arguments[62] gcd Arguments[55]
    (Info: triOk;            Val: '40960'),                                     // 4024: Arguments[62] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 4025: Arguments[62] gcd Arguments[57]
    (Info: triOk;            Val: '40960'),                                     // 4026: Arguments[62] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 4027: Arguments[62] gcd Arguments[59]
    (Info: triOk;            Val: '1220703125'),                                // 4028: Arguments[62] gcd Arguments[60]
    (Info: triOk;            Val: '10000000000000'),                            // 4029: Arguments[62] gcd Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 4030: Arguments[62] gcd Arguments[62]
    (Info: triOk;            Val: '10000000000000'),                            // 4031: Arguments[62] gcd Arguments[63]
    (Info: triOk;            Val: '720575940379279360'),                        // 4032: Arguments[63] gcd Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 4033: Arguments[63] gcd Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 4034: Arguments[63] gcd Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 4035: Arguments[63] gcd Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 4036: Arguments[63] gcd Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 4037: Arguments[63] gcd Arguments[5]
    (Info: triOk;            Val: '200'),                                       // 4038: Arguments[63] gcd Arguments[6]
    (Info: triOk;            Val: '4'),                                         // 4039: Arguments[63] gcd Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 4040: Arguments[63] gcd Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 4041: Arguments[63] gcd Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 4042: Arguments[63] gcd Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 4043: Arguments[63] gcd Arguments[11]
    (Info: triOk;            Val: '16'),                                        // 4044: Arguments[63] gcd Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 4045: Arguments[63] gcd Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 4046: Arguments[63] gcd Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 4047: Arguments[63] gcd Arguments[15]
    (Info: triOk;            Val: '8'),                                         // 4048: Arguments[63] gcd Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 4049: Arguments[63] gcd Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 4050: Arguments[63] gcd Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 4051: Arguments[63] gcd Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 4052: Arguments[63] gcd Arguments[20]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4053: Arguments[63] gcd Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 4054: Arguments[63] gcd Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 4055: Arguments[63] gcd Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 4056: Arguments[63] gcd Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 4057: Arguments[63] gcd Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 4058: Arguments[63] gcd Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 4059: Arguments[63] gcd Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 4060: Arguments[63] gcd Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 4061: Arguments[63] gcd Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 4062: Arguments[63] gcd Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 4063: Arguments[63] gcd Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 4064: Arguments[63] gcd Arguments[32]
    (Info: triOk;            Val: '4'),                                         // 4065: Arguments[63] gcd Arguments[33]
    (Info: triOk;            Val: '5'),                                         // 4066: Arguments[63] gcd Arguments[34]
    (Info: triOk;            Val: '131072'),                                    // 4067: Arguments[63] gcd Arguments[35]
    (Info: triOk;            Val: '4'),                                         // 4068: Arguments[63] gcd Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 4069: Arguments[63] gcd Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 4070: Arguments[63] gcd Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 4071: Arguments[63] gcd Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 4072: Arguments[63] gcd Arguments[40]
    (Info: triOk;            Val: '4'),                                         // 4073: Arguments[63] gcd Arguments[41]
    (Info: triOk;            Val: '720575940379279360'),                        // 4074: Arguments[63] gcd Arguments[42]
    (Info: triOk;            Val: '200'),                                       // 4075: Arguments[63] gcd Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 4076: Arguments[63] gcd Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 4077: Arguments[63] gcd Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 4078: Arguments[63] gcd Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 4079: Arguments[63] gcd Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 4080: Arguments[63] gcd Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 4081: Arguments[63] gcd Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 4082: Arguments[63] gcd Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 4083: Arguments[63] gcd Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 4084: Arguments[63] gcd Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 4085: Arguments[63] gcd Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 4086: Arguments[63] gcd Arguments[54]
    (Info: triOk;            Val: '1250'),                                      // 4087: Arguments[63] gcd Arguments[55]
    (Info: triOk;            Val: '720575940379279360'),                        // 4088: Arguments[63] gcd Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 4089: Arguments[63] gcd Arguments[57]
    (Info: triOk;            Val: '720575940379279360'),                        // 4090: Arguments[63] gcd Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 4091: Arguments[63] gcd Arguments[59]
    (Info: triOk;            Val: '6938893903907228377647697925567626953125'),  // 4092: Arguments[63] gcd Arguments[60]
    (Info: triOk;            Val: '5684341886080801486968994140625000000000' + 
                                  '0000'),                                      // 4093: Arguments[63] gcd Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 4094: Arguments[63] gcd Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000')                         // 4095: Arguments[63] gcd Arguments[63]
  );

  InvModResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    0: Arguments[0] invMod Arguments[0]
    (Info: triOk;            Val: '-161037534815826871594352773177575405530' + 
                                  '09'),                                        //    1: Arguments[0] invMod Arguments[1]
    (Info: triOk;            Val: '-56018314581816044722308746000'),            //    2: Arguments[0] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    3: Arguments[0] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    4: Arguments[0] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    5: Arguments[0] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    6: Arguments[0] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    7: Arguments[0] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    8: Arguments[0] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //    9: Arguments[0] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   10: Arguments[0] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   11: Arguments[0] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   12: Arguments[0] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   13: Arguments[0] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   14: Arguments[0] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   15: Arguments[0] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   16: Arguments[0] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   17: Arguments[0] invMod Arguments[17]
    (Info: triOk;            Val: '-6'),                                        //   18: Arguments[0] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   19: Arguments[0] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //   20: Arguments[0] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //   21: Arguments[0] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //   22: Arguments[0] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   23: Arguments[0] invMod Arguments[23]
    (Info: triOk;            Val: '-6'),                                        //   24: Arguments[0] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   25: Arguments[0] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   26: Arguments[0] invMod Arguments[26]
    (Info: triOk;            Val: '-130'),                                      //   27: Arguments[0] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   28: Arguments[0] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   29: Arguments[0] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   30: Arguments[0] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   31: Arguments[0] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   32: Arguments[0] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   33: Arguments[0] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   34: Arguments[0] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   35: Arguments[0] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   36: Arguments[0] invMod Arguments[36]
    (Info: triOk;            Val: '-678289946413317158766'),                    //   37: Arguments[0] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   38: Arguments[0] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   39: Arguments[0] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   40: Arguments[0] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   41: Arguments[0] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   42: Arguments[0] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   43: Arguments[0] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   44: Arguments[0] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   45: Arguments[0] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   46: Arguments[0] invMod Arguments[46]
    (Info: triOk;            Val: '-253166707486667579967571467'),              //   47: Arguments[0] invMod Arguments[47]
    (Info: triOk;            Val: '-15677925680637668262702135670'),            //   48: Arguments[0] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   49: Arguments[0] invMod Arguments[49]
    (Info: triOk;            Val: '-56018314581816044722308746000'),            //   50: Arguments[0] invMod Arguments[50]
    (Info: triOk;            Val: '-9501332129874024396323367450'),             //   51: Arguments[0] invMod Arguments[51]
    (Info: triOk;            Val: '-3901087231122502237084393525502541'),       //   52: Arguments[0] invMod Arguments[52]
    (Info: triOk;            Val: '-19266297605405702845423787546894946'),      //   53: Arguments[0] invMod Arguments[53]
    (Info: triOk;            Val: '-45625037850169284046481139505091126901'),   //   54: Arguments[0] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   55: Arguments[0] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   56: Arguments[0] invMod Arguments[56]
    (Info: triOk;            Val: '-161037534815826871594352773177575405530' + 
                                  '09'),                                        //   57: Arguments[0] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   58: Arguments[0] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   59: Arguments[0] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   60: Arguments[0] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   61: Arguments[0] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   62: Arguments[0] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   63: Arguments[0] invMod Arguments[63]
    (Info: triOk;            Val: '-169800901093548293268223929108452337516' + 
                                  '543'),                                       //   64: Arguments[1] invMod Arguments[0]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //   65: Arguments[1] invMod Arguments[1]
    (Info: triOk;            Val: '-313193429254401841236330742764'),           //   66: Arguments[1] invMod Arguments[2]
    (Info: triOk;            Val: '-41532990351579664626468848313'),            //   67: Arguments[1] invMod Arguments[3]
    (Info: triOk;            Val: '-1721285233069173587213385643'),             //   68: Arguments[1] invMod Arguments[4]
    (Info: triOk;            Val: '-253823199957226575221017795'),              //   69: Arguments[1] invMod Arguments[5]
    (Info: triOk;            Val: '-4228101815771918606640303'),                //   70: Arguments[1] invMod Arguments[6]
    (Info: triOk;            Val: '-29366369165790263602507'),                  //   71: Arguments[1] invMod Arguments[7]
    (Info: triOk;            Val: '-6433304308539219301237'),                   //   72: Arguments[1] invMod Arguments[8]
    (Info: triOk;            Val: '-495398328490137862261'),                    //   73: Arguments[1] invMod Arguments[9]
    (Info: triOk;            Val: '-971146161395782247437'),                    //   74: Arguments[1] invMod Arguments[10]
    (Info: triOk;            Val: '-85503'),                                    //   75: Arguments[1] invMod Arguments[11]
    (Info: triOk;            Val: '-20287'),                                    //   76: Arguments[1] invMod Arguments[12]
    (Info: triOk;            Val: '-5503'),                                     //   77: Arguments[1] invMod Arguments[13]
    (Info: triOk;            Val: '-503'),                                      //   78: Arguments[1] invMod Arguments[14]
    (Info: triOk;            Val: '-3'),                                        //   79: Arguments[1] invMod Arguments[15]
    (Info: triOk;            Val: '-15'),                                       //   80: Arguments[1] invMod Arguments[16]
    (Info: triOk;            Val: '-3'),                                        //   81: Arguments[1] invMod Arguments[17]
    (Info: triOk;            Val: '-1'),                                        //   82: Arguments[1] invMod Arguments[18]
    (Info: triOk;            Val: '-1'),                                        //   83: Arguments[1] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //   84: Arguments[1] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //   85: Arguments[1] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //   86: Arguments[1] invMod Arguments[22]
    (Info: triOk;            Val: '-1'),                                        //   87: Arguments[1] invMod Arguments[23]
    (Info: triOk;            Val: '-1'),                                        //   88: Arguments[1] invMod Arguments[24]
    (Info: triOk;            Val: '-3'),                                        //   89: Arguments[1] invMod Arguments[25]
    (Info: triOk;            Val: '-3'),                                        //   90: Arguments[1] invMod Arguments[26]
    (Info: triOk;            Val: '-246'),                                      //   91: Arguments[1] invMod Arguments[27]
    (Info: triOk;            Val: '-655'),                                      //   92: Arguments[1] invMod Arguments[28]
    (Info: triOk;            Val: '-503'),                                      //   93: Arguments[1] invMod Arguments[29]
    (Info: triOk;            Val: '-5503'),                                     //   94: Arguments[1] invMod Arguments[30]
    (Info: triOk;            Val: '-85503'),                                    //   95: Arguments[1] invMod Arguments[31]
    (Info: triOk;            Val: '-885503'),                                   //   96: Arguments[1] invMod Arguments[32]
    (Info: triOk;            Val: '-3550364475654634567'),                      //   97: Arguments[1] invMod Arguments[33]
    (Info: triOk;            Val: '-2683546934861520113'),                      //   98: Arguments[1] invMod Arguments[34]
    (Info: triOk;            Val: '-628149528636948479'),                       //   99: Arguments[1] invMod Arguments[35]
    (Info: triOk;            Val: '-99536487525470774135'),                     //  100: Arguments[1] invMod Arguments[36]
    (Info: triOk;            Val: '-131610424064350839413'),                    //  101: Arguments[1] invMod Arguments[37]
    (Info: triOk;            Val: '-971146161395782247437'),                    //  102: Arguments[1] invMod Arguments[38]
    (Info: triOk;            Val: '-495398328490137862261'),                    //  103: Arguments[1] invMod Arguments[39]
    (Info: triOk;            Val: '-6433304308539219301237'),                   //  104: Arguments[1] invMod Arguments[40]
    (Info: triOk;            Val: '-29366369165790263602507'),                  //  105: Arguments[1] invMod Arguments[41]
    (Info: triOk;            Val: '-56151888960371875119103'),                  //  106: Arguments[1] invMod Arguments[42]
    (Info: triOk;            Val: '-4228101815771918606640303'),                //  107: Arguments[1] invMod Arguments[43]
    (Info: triOk;            Val: '-253823199957226575221017795'),              //  108: Arguments[1] invMod Arguments[44]
    (Info: triOk;            Val: '-106034052098397438111930979'),              //  109: Arguments[1] invMod Arguments[45]
    (Info: triOk;            Val: '-1721285233069173587213385643'),             //  110: Arguments[1] invMod Arguments[46]
    (Info: triOk;            Val: '-9235830519572505845227057093'),             //  111: Arguments[1] invMod Arguments[47]
    (Info: triOk;            Val: '-413076650464316624753470750'),              //  112: Arguments[1] invMod Arguments[48]
    (Info: triOk;            Val: '-41532990351579664626468848313'),            //  113: Arguments[1] invMod Arguments[49]
    (Info: triOk;            Val: '-313193429254401841236330742764'),           //  114: Arguments[1] invMod Arguments[50]
    (Info: triOk;            Val: '-34365570726497317352462372026'),            //  115: Arguments[1] invMod Arguments[51]
    (Info: triOk;            Val: '-2001858424305714592927386781867298'),       //  116: Arguments[1] invMod Arguments[52]
    (Info: triOk;            Val: '-25297069965492864690549374403049561'),      //  117: Arguments[1] invMod Arguments[53]
    (Info: triOk;            Val: '-35558020743198399997760570230074710604'),   //  118: Arguments[1] invMod Arguments[54]
    (Info: triOk;            Val: '-1330640203949447035821987211632385503'),    //  119: Arguments[1] invMod Arguments[55]
    (Info: triOk;            Val: '-158741576837194432279930294814086529023'),  //  120: Arguments[1] invMod Arguments[56]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  121: Arguments[1] invMod Arguments[57]
    (Info: triOk;            Val: '-169800901093548293268223929108452337516' + 
                                  '543'),                                       //  122: Arguments[1] invMod Arguments[58]
    (Info: triOk;            Val: '-114733323370107939526926693381054749177' + 
                                  '9106776648274934835344411152433'),           //  123: Arguments[1] invMod Arguments[59]
    (Info: triOk;            Val: '-224870003937423535545649730702309918797' + 
                                  '963037508693423469163788730744878'),         //  124: Arguments[1] invMod Arguments[60]
    (Info: triOk;            Val: '-331998712800640079521097742349364152091' + 
                                  '2765363757959844379587834600706197632724' + 
                                  '885503'),                                    //  125: Arguments[1] invMod Arguments[61]
    (Info: triOk;            Val: '-7632724885503'),                            //  126: Arguments[1] invMod Arguments[62]
    (Info: triOk;            Val: '-787705272398331990555622892289324467901' + 
                                  '487447632724885503'),                        //  127: Arguments[1] invMod Arguments[63]
    (Info: triOk;            Val: '-147181469685361435359357588388420831762' + 
                                  '8401'),                                      //  128: Arguments[2] invMod Arguments[0]
    (Info: triOk;            Val: '-107922637069695302577169208282341132383' + 
                                  '00'),                                        //  129: Arguments[2] invMod Arguments[1]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  130: Arguments[2] invMod Arguments[2]
    (Info: triOk;            Val: '-60905988050499370353700672861'),            //  131: Arguments[2] invMod Arguments[3]
    (Info: triOk;            Val: '-2063751455476523243122477211'),             //  132: Arguments[2] invMod Arguments[4]
    (Info: triOk;            Val: '-266144178487955653203202877'),              //  133: Arguments[2] invMod Arguments[5]
    (Info: triOk;            Val: '-1015896437037368371540041'),                //  134: Arguments[2] invMod Arguments[6]
    (Info: triOk;            Val: '-12394403005094942079065'),                  //  135: Arguments[2] invMod Arguments[7]
    (Info: triOk;            Val: '-6284582868465220471235'),                   //  136: Arguments[2] invMod Arguments[8]
    (Info: triOk;            Val: '-6655897504366486074857'),                   //  137: Arguments[2] invMod Arguments[9]
    (Info: triOk;            Val: '-75425581064170634915'),                     //  138: Arguments[2] invMod Arguments[10]
    (Info: triOk;            Val: '-3441'),                                     //  139: Arguments[2] invMod Arguments[11]
    (Info: triOk;            Val: '-36049'),                                    //  140: Arguments[2] invMod Arguments[12]
    (Info: triOk;            Val: '-3441'),                                     //  141: Arguments[2] invMod Arguments[13]
    (Info: triOk;            Val: '-441'),                                      //  142: Arguments[2] invMod Arguments[14]
    (Info: triOk;            Val: '-41'),                                       //  143: Arguments[2] invMod Arguments[15]
    (Info: triOk;            Val: '-41'),                                       //  144: Arguments[2] invMod Arguments[16]
    (Info: triOk;            Val: '-1'),                                        //  145: Arguments[2] invMod Arguments[17]
    (Info: triOk;            Val: '-6'),                                        //  146: Arguments[2] invMod Arguments[18]
    (Info: triOk;            Val: '-1'),                                        //  147: Arguments[2] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  148: Arguments[2] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  149: Arguments[2] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  150: Arguments[2] invMod Arguments[22]
    (Info: triOk;            Val: '-1'),                                        //  151: Arguments[2] invMod Arguments[23]
    (Info: triOk;            Val: '-6'),                                        //  152: Arguments[2] invMod Arguments[24]
    (Info: triOk;            Val: '-1'),                                        //  153: Arguments[2] invMod Arguments[25]
    (Info: triOk;            Val: '-41'),                                       //  154: Arguments[2] invMod Arguments[26]
    (Info: triOk;            Val: '-57'),                                       //  155: Arguments[2] invMod Arguments[27]
    (Info: triOk;            Val: '-57'),                                       //  156: Arguments[2] invMod Arguments[28]
    (Info: triOk;            Val: '-441'),                                      //  157: Arguments[2] invMod Arguments[29]
    (Info: triOk;            Val: '-3441'),                                     //  158: Arguments[2] invMod Arguments[30]
    (Info: triOk;            Val: '-3441'),                                     //  159: Arguments[2] invMod Arguments[31]
    (Info: triOk;            Val: '-803441'),                                   //  160: Arguments[2] invMod Arguments[32]
    (Info: triOk;            Val: '-250072995227488813'),                       //  161: Arguments[2] invMod Arguments[33]
    (Info: triOk;            Val: '-3012335354759058716'),                      //  162: Arguments[2] invMod Arguments[34]
    (Info: triOk;            Val: '-1513639608037507057'),                      //  163: Arguments[2] invMod Arguments[35]
    (Info: triOk;            Val: '-137158684766914648593'),                    //  164: Arguments[2] invMod Arguments[36]
    (Info: triOk;            Val: '-424990122662964786395'),                    //  165: Arguments[2] invMod Arguments[37]
    (Info: triOk;            Val: '-75425581064170634915'),                     //  166: Arguments[2] invMod Arguments[38]
    (Info: triOk;            Val: '-6655897504366486074857'),                   //  167: Arguments[2] invMod Arguments[39]
    (Info: triOk;            Val: '-6284582868465220471235'),                   //  168: Arguments[2] invMod Arguments[40]
    (Info: triOk;            Val: '-12394403005094942079065'),                  //  169: Arguments[2] invMod Arguments[41]
    (Info: triOk;            Val: '-49710044280166362218481'),                  //  170: Arguments[2] invMod Arguments[42]
    (Info: triOk;            Val: '-1015896437037368371540041'),                //  171: Arguments[2] invMod Arguments[43]
    (Info: triOk;            Val: '-266144178487955653203202877'),              //  172: Arguments[2] invMod Arguments[44]
    (Info: triOk;            Val: '-1032364239731837232029161829'),             //  173: Arguments[2] invMod Arguments[45]
    (Info: triOk;            Val: '-2063751455476523243122477211'),             //  174: Arguments[2] invMod Arguments[46]
    (Info: triOk;            Val: '-11867774615699226059517152288'),            //  175: Arguments[2] invMod Arguments[47]
    (Info: triOk;            Val: '-6782743979670599578682524565'),             //  176: Arguments[2] invMod Arguments[48]
    (Info: triOk;            Val: '-60905988050499370353700672861'),            //  177: Arguments[2] invMod Arguments[49]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  178: Arguments[2] invMod Arguments[50]
    (Info: triOk;            Val: '-48573628483830748100164508786'),            //  179: Arguments[2] invMod Arguments[51]
    (Info: triOk;            Val: '-2242912221877610898713614249696551'),       //  180: Arguments[2] invMod Arguments[52]
    (Info: triOk;            Val: '-10619633338696837411547111861821461'),      //  181: Arguments[2] invMod Arguments[53]
    (Info: triOk;            Val: '-35212549362774131150179120627820686427'),   //  182: Arguments[2] invMod Arguments[54]
    (Info: triOk;            Val: '-49950966923287102188672637565264813441'),   //  183: Arguments[2] invMod Arguments[55]
    (Info: triOk;            Val: '-75464149810563133380355303634772525041'),   //  184: Arguments[2] invMod Arguments[56]
    (Info: triOk;            Val: '-107922637069695302577169208282341132383' + 
                                  '00'),                                        //  185: Arguments[2] invMod Arguments[57]
    (Info: triOk;            Val: '-147181469685361435359357588388420831762' + 
                                  '8401'),                                      //  186: Arguments[2] invMod Arguments[58]
    (Info: triOk;            Val: '-731589082066151181424850369493626040428' + 
                                  '579973824737398447732055741961'),            //  187: Arguments[2] invMod Arguments[59]
    (Info: triOk;            Val: '-234150580160443999078360964950492316656' + 
                                  '466132212278446835960468915147191'),         //  188: Arguments[2] invMod Arguments[60]
    (Info: triOk;            Val: '-862781843901825557090240443988188523102' + 
                                  '7350827026258182875831490519470826002628' + 
                                  '03441'),                                     //  189: Arguments[2] invMod Arguments[61]
    (Info: triOk;            Val: '-2600262803441'),                            //  190: Arguments[2] invMod Arguments[62]
    (Info: triOk;            Val: '-654866338898670740363801173602791584110' + 
                                  '540832600262803441'),                        //  191: Arguments[2] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  192: Arguments[3] invMod Arguments[0]
    (Info: triOk;            Val: '-892932830235129147883336553542130147196' + 
                                  '6'),                                         //  193: Arguments[3] invMod Arguments[1]
    (Info: triOk;            Val: '-202462755481803180777486386655'),           //  194: Arguments[3] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  195: Arguments[3] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  196: Arguments[3] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  197: Arguments[3] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  198: Arguments[3] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  199: Arguments[3] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  200: Arguments[3] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  201: Arguments[3] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  202: Arguments[3] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  203: Arguments[3] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  204: Arguments[3] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  205: Arguments[3] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  206: Arguments[3] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  207: Arguments[3] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  208: Arguments[3] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  209: Arguments[3] invMod Arguments[17]
    (Info: triOk;            Val: '-5'),                                        //  210: Arguments[3] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  211: Arguments[3] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  212: Arguments[3] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  213: Arguments[3] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  214: Arguments[3] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  215: Arguments[3] invMod Arguments[23]
    (Info: triOk;            Val: '-5'),                                        //  216: Arguments[3] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  217: Arguments[3] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  218: Arguments[3] invMod Arguments[26]
    (Info: triOk;            Val: '-46'),                                       //  219: Arguments[3] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  220: Arguments[3] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  221: Arguments[3] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  222: Arguments[3] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  223: Arguments[3] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  224: Arguments[3] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  225: Arguments[3] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  226: Arguments[3] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  227: Arguments[3] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  228: Arguments[3] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  229: Arguments[3] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  230: Arguments[3] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  231: Arguments[3] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  232: Arguments[3] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  233: Arguments[3] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  234: Arguments[3] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  235: Arguments[3] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  236: Arguments[3] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  237: Arguments[3] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  238: Arguments[3] invMod Arguments[46]
    (Info: triOk;            Val: '-1934483161932596788088851903'),             //  239: Arguments[3] invMod Arguments[47]
    (Info: triOk;            Val: '-15569731137796332425137639511'),            //  240: Arguments[3] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  241: Arguments[3] invMod Arguments[49]
    (Info: triOk;            Val: '-202462755481803180777486386655'),           //  242: Arguments[3] invMod Arguments[50]
    (Info: triOk;            Val: '-73923197585586967552582196152'),            //  243: Arguments[3] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  244: Arguments[3] invMod Arguments[52]
    (Info: triOk;            Val: '-30641824835854483936875706677889082'),      //  245: Arguments[3] invMod Arguments[53]
    (Info: triOk;            Val: '-2911826324534018766788428285604329949'),    //  246: Arguments[3] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  247: Arguments[3] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  248: Arguments[3] invMod Arguments[56]
    (Info: triOk;            Val: '-892932830235129147883336553542130147196' + 
                                  '6'),                                         //  249: Arguments[3] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  250: Arguments[3] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  251: Arguments[3] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  252: Arguments[3] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  253: Arguments[3] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  254: Arguments[3] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  255: Arguments[3] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  256: Arguments[4] invMod Arguments[0]
    (Info: triOk;            Val: '-145235111629752020413834187080337437605' + 
                                  '25'),                                        //  257: Arguments[4] invMod Arguments[1]
    (Info: triOk;            Val: '-597823814095296867877360260488'),           //  258: Arguments[4] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  259: Arguments[4] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  260: Arguments[4] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  261: Arguments[4] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  262: Arguments[4] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  263: Arguments[4] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  264: Arguments[4] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  265: Arguments[4] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  266: Arguments[4] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  267: Arguments[4] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  268: Arguments[4] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  269: Arguments[4] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  270: Arguments[4] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  271: Arguments[4] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  272: Arguments[4] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  273: Arguments[4] invMod Arguments[17]
    (Info: triOk;            Val: '-1'),                                        //  274: Arguments[4] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  275: Arguments[4] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  276: Arguments[4] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  277: Arguments[4] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  278: Arguments[4] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  279: Arguments[4] invMod Arguments[23]
    (Info: triOk;            Val: '-1'),                                        //  280: Arguments[4] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  281: Arguments[4] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  282: Arguments[4] invMod Arguments[26]
    (Info: triOk;            Val: '-249'),                                      //  283: Arguments[4] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  284: Arguments[4] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  285: Arguments[4] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  286: Arguments[4] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  287: Arguments[4] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  288: Arguments[4] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  289: Arguments[4] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  290: Arguments[4] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  291: Arguments[4] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  292: Arguments[4] invMod Arguments[36]
    (Info: triOk;            Val: '-392529467340772903373'),                    //  293: Arguments[4] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  294: Arguments[4] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  295: Arguments[4] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  296: Arguments[4] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  297: Arguments[4] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  298: Arguments[4] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  299: Arguments[4] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  300: Arguments[4] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  301: Arguments[4] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  302: Arguments[4] invMod Arguments[46]
    (Info: triOk;            Val: '-7621475933679641297675142418'),             //  303: Arguments[4] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  304: Arguments[4] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  305: Arguments[4] invMod Arguments[49]
    (Info: triOk;            Val: '-597823814095296867877360260488'),           //  306: Arguments[4] invMod Arguments[50]
    (Info: triOk;            Val: '-3293678353565560794652365234'),             //  307: Arguments[4] invMod Arguments[51]
    (Info: triOk;            Val: '-3798374454935577835011798094158356'),       //  308: Arguments[4] invMod Arguments[52]
    (Info: triOk;            Val: '-22971489948517679291346804629478719'),      //  309: Arguments[4] invMod Arguments[53]
    (Info: triOk;            Val: '-5589548503218728980531864452620536357'),    //  310: Arguments[4] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  311: Arguments[4] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  312: Arguments[4] invMod Arguments[56]
    (Info: triOk;            Val: '-145235111629752020413834187080337437605' + 
                                  '25'),                                        //  313: Arguments[4] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  314: Arguments[4] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  315: Arguments[4] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  316: Arguments[4] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  317: Arguments[4] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  318: Arguments[4] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  319: Arguments[4] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  320: Arguments[5] invMod Arguments[0]
    (Info: triOk;            Val: '-887372754082455903187376721594248658505' + 
                                  '3'),                                         //  321: Arguments[5] invMod Arguments[1]
    (Info: triOk;            Val: '-364493229362416537299951529815'),           //  322: Arguments[5] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  323: Arguments[5] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  324: Arguments[5] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  325: Arguments[5] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  326: Arguments[5] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  327: Arguments[5] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  328: Arguments[5] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  329: Arguments[5] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  330: Arguments[5] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  331: Arguments[5] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  332: Arguments[5] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  333: Arguments[5] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  334: Arguments[5] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  335: Arguments[5] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  336: Arguments[5] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  337: Arguments[5] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  338: Arguments[5] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  339: Arguments[5] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  340: Arguments[5] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  341: Arguments[5] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  342: Arguments[5] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  343: Arguments[5] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  344: Arguments[5] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  345: Arguments[5] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  346: Arguments[5] invMod Arguments[26]
    (Info: triOk;            Val: '-302'),                                      //  347: Arguments[5] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  348: Arguments[5] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  349: Arguments[5] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  350: Arguments[5] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  351: Arguments[5] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  352: Arguments[5] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  353: Arguments[5] invMod Arguments[33]
    (Info: triOk;            Val: '-3868447505096986831'),                      //  354: Arguments[5] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  355: Arguments[5] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  356: Arguments[5] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  357: Arguments[5] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  358: Arguments[5] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  359: Arguments[5] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  360: Arguments[5] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  361: Arguments[5] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  362: Arguments[5] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  363: Arguments[5] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  364: Arguments[5] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  365: Arguments[5] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  366: Arguments[5] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  367: Arguments[5] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  368: Arguments[5] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  369: Arguments[5] invMod Arguments[49]
    (Info: triOk;            Val: '-364493229362416537299951529815'),           //  370: Arguments[5] invMod Arguments[50]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  371: Arguments[5] invMod Arguments[51]
    (Info: triOk;            Val: '-3600258353634371224679923109990335'),       //  372: Arguments[5] invMod Arguments[52]
    (Info: triOk;            Val: '-62193593116749160793753937454075665'),      //  373: Arguments[5] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  374: Arguments[5] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  375: Arguments[5] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  376: Arguments[5] invMod Arguments[56]
    (Info: triOk;            Val: '-887372754082455903187376721594248658505' + 
                                  '3'),                                         //  377: Arguments[5] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  378: Arguments[5] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  379: Arguments[5] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  380: Arguments[5] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  381: Arguments[5] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  382: Arguments[5] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  383: Arguments[5] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  384: Arguments[6] invMod Arguments[0]
    (Info: triOk;            Val: '-728971470887074923694157047798168476086' + 
                                  '1'),                                         //  385: Arguments[6] invMod Arguments[1]
    (Info: triOk;            Val: '-668235950487620579491436297170'),           //  386: Arguments[6] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  387: Arguments[6] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  388: Arguments[6] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  389: Arguments[6] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  390: Arguments[6] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  391: Arguments[6] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  392: Arguments[6] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  393: Arguments[6] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  394: Arguments[6] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  395: Arguments[6] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  396: Arguments[6] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  397: Arguments[6] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  398: Arguments[6] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  399: Arguments[6] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  400: Arguments[6] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  401: Arguments[6] invMod Arguments[17]
    (Info: triOk;            Val: '-2'),                                        //  402: Arguments[6] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  403: Arguments[6] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  404: Arguments[6] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  405: Arguments[6] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  406: Arguments[6] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  407: Arguments[6] invMod Arguments[23]
    (Info: triOk;            Val: '-2'),                                        //  408: Arguments[6] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  409: Arguments[6] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  410: Arguments[6] invMod Arguments[26]
    (Info: triOk;            Val: '-201'),                                      //  411: Arguments[6] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  412: Arguments[6] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  413: Arguments[6] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  414: Arguments[6] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  415: Arguments[6] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  416: Arguments[6] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  417: Arguments[6] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  418: Arguments[6] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  419: Arguments[6] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  420: Arguments[6] invMod Arguments[36]
    (Info: triOk;            Val: '-186546275112815242039'),                    //  421: Arguments[6] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  422: Arguments[6] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  423: Arguments[6] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  424: Arguments[6] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  425: Arguments[6] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  426: Arguments[6] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  427: Arguments[6] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  428: Arguments[6] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  429: Arguments[6] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  430: Arguments[6] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  431: Arguments[6] invMod Arguments[47]
    (Info: triOk;            Val: '-24852914651174744806412092976'),            //  432: Arguments[6] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  433: Arguments[6] invMod Arguments[49]
    (Info: triOk;            Val: '-668235950487620579491436297170'),           //  434: Arguments[6] invMod Arguments[50]
    (Info: triOk;            Val: '-110750528118769984044754377171'),           //  435: Arguments[6] invMod Arguments[51]
    (Info: triOk;            Val: '-3864707964422648172109849512161336'),       //  436: Arguments[6] invMod Arguments[52]
    (Info: triOk;            Val: '-43851280760286526325188169219134247'),      //  437: Arguments[6] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  438: Arguments[6] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  439: Arguments[6] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  440: Arguments[6] invMod Arguments[56]
    (Info: triOk;            Val: '-728971470887074923694157047798168476086' + 
                                  '1'),                                         //  441: Arguments[6] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  442: Arguments[6] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  443: Arguments[6] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  444: Arguments[6] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  445: Arguments[6] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  446: Arguments[6] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  447: Arguments[6] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  448: Arguments[7] invMod Arguments[0]
    (Info: triOk;            Val: '-109055985671211310940707914731072118388' + 
                                  '98'),                                        //  449: Arguments[7] invMod Arguments[1]
    (Info: triOk;            Val: '-649760937424066080654779211799'),           //  450: Arguments[7] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  451: Arguments[7] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  452: Arguments[7] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  453: Arguments[7] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  454: Arguments[7] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  455: Arguments[7] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  456: Arguments[7] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  457: Arguments[7] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  458: Arguments[7] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  459: Arguments[7] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  460: Arguments[7] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  461: Arguments[7] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  462: Arguments[7] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  463: Arguments[7] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  464: Arguments[7] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  465: Arguments[7] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  466: Arguments[7] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  467: Arguments[7] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  468: Arguments[7] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  469: Arguments[7] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  470: Arguments[7] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  471: Arguments[7] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  472: Arguments[7] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  473: Arguments[7] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  474: Arguments[7] invMod Arguments[26]
    (Info: triOk;            Val: '-74'),                                       //  475: Arguments[7] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  476: Arguments[7] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  477: Arguments[7] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  478: Arguments[7] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  479: Arguments[7] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  480: Arguments[7] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  481: Arguments[7] invMod Arguments[33]
    (Info: triOk;            Val: '-596274671424002148'),                       //  482: Arguments[7] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  483: Arguments[7] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  484: Arguments[7] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  485: Arguments[7] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  486: Arguments[7] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  487: Arguments[7] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  488: Arguments[7] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  489: Arguments[7] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  490: Arguments[7] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  491: Arguments[7] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  492: Arguments[7] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  493: Arguments[7] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  494: Arguments[7] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  495: Arguments[7] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  496: Arguments[7] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  497: Arguments[7] invMod Arguments[49]
    (Info: triOk;            Val: '-649760937424066080654779211799'),           //  498: Arguments[7] invMod Arguments[50]
    (Info: triOk;            Val: '-2814816936117933570118721486'),             //  499: Arguments[7] invMod Arguments[51]
    (Info: triOk;            Val: '-331508140436563415931526353698079'),        //  500: Arguments[7] invMod Arguments[52]
    (Info: triOk;            Val: '-70139510991271793821724419891814360'),      //  501: Arguments[7] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  502: Arguments[7] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  503: Arguments[7] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  504: Arguments[7] invMod Arguments[56]
    (Info: triOk;            Val: '-109055985671211310940707914731072118388' + 
                                  '98'),                                        //  505: Arguments[7] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  506: Arguments[7] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  507: Arguments[7] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  508: Arguments[7] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  509: Arguments[7] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  510: Arguments[7] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  511: Arguments[7] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  512: Arguments[8] invMod Arguments[0]
    (Info: triOk;            Val: '-938694035981613685642875539397090044947' + 
                                  '0'),                                         //  513: Arguments[8] invMod Arguments[1]
    (Info: triOk;            Val: '-414561003113717244437762341420'),           //  514: Arguments[8] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  515: Arguments[8] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  516: Arguments[8] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  517: Arguments[8] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  518: Arguments[8] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  519: Arguments[8] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  520: Arguments[8] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  521: Arguments[8] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  522: Arguments[8] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  523: Arguments[8] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  524: Arguments[8] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  525: Arguments[8] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  526: Arguments[8] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  527: Arguments[8] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  528: Arguments[8] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  529: Arguments[8] invMod Arguments[17]
    (Info: triOk;            Val: '-4'),                                        //  530: Arguments[8] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  531: Arguments[8] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  532: Arguments[8] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  533: Arguments[8] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  534: Arguments[8] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  535: Arguments[8] invMod Arguments[23]
    (Info: triOk;            Val: '-4'),                                        //  536: Arguments[8] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  537: Arguments[8] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  538: Arguments[8] invMod Arguments[26]
    (Info: triOk;            Val: '-362'),                                      //  539: Arguments[8] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  540: Arguments[8] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  541: Arguments[8] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  542: Arguments[8] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  543: Arguments[8] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  544: Arguments[8] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  545: Arguments[8] invMod Arguments[33]
    (Info: triOk;            Val: '-4910710100442178079'),                      //  546: Arguments[8] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  547: Arguments[8] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  548: Arguments[8] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  549: Arguments[8] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  550: Arguments[8] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  551: Arguments[8] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  552: Arguments[8] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  553: Arguments[8] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  554: Arguments[8] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  555: Arguments[8] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  556: Arguments[8] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  557: Arguments[8] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  558: Arguments[8] invMod Arguments[46]
    (Info: triOk;            Val: '-7840918118887751269505018953'),             //  559: Arguments[8] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  560: Arguments[8] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  561: Arguments[8] invMod Arguments[49]
    (Info: triOk;            Val: '-414561003113717244437762341420'),           //  562: Arguments[8] invMod Arguments[50]
    (Info: triOk;            Val: '-91103056629863494262977037952'),            //  563: Arguments[8] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  564: Arguments[8] invMod Arguments[52]
    (Info: triOk;            Val: '-56187463940044438386171828393648839'),      //  565: Arguments[8] invMod Arguments[53]
    (Info: triOk;            Val: '-5208774021620384546626085991165125570'),    //  566: Arguments[8] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  567: Arguments[8] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  568: Arguments[8] invMod Arguments[56]
    (Info: triOk;            Val: '-938694035981613685642875539397090044947' + 
                                  '0'),                                         //  569: Arguments[8] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  570: Arguments[8] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  571: Arguments[8] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  572: Arguments[8] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  573: Arguments[8] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  574: Arguments[8] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  575: Arguments[8] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  576: Arguments[9] invMod Arguments[0]
    (Info: triOk;            Val: '-169547888257812412738279558772608513240' + 
                                  '38'),                                        //  577: Arguments[9] invMod Arguments[1]
    (Info: triOk;            Val: '-152313960169333662391077300197'),           //  578: Arguments[9] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  579: Arguments[9] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  580: Arguments[9] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  581: Arguments[9] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  582: Arguments[9] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  583: Arguments[9] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  584: Arguments[9] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  585: Arguments[9] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  586: Arguments[9] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  587: Arguments[9] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  588: Arguments[9] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  589: Arguments[9] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  590: Arguments[9] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  591: Arguments[9] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  592: Arguments[9] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  593: Arguments[9] invMod Arguments[17]
    (Info: triOk;            Val: '-5'),                                        //  594: Arguments[9] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  595: Arguments[9] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  596: Arguments[9] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  597: Arguments[9] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  598: Arguments[9] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  599: Arguments[9] invMod Arguments[23]
    (Info: triOk;            Val: '-5'),                                        //  600: Arguments[9] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  601: Arguments[9] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  602: Arguments[9] invMod Arguments[26]
    (Info: triOk;            Val: '-327'),                                      //  603: Arguments[9] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  604: Arguments[9] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  605: Arguments[9] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  606: Arguments[9] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  607: Arguments[9] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  608: Arguments[9] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  609: Arguments[9] invMod Arguments[33]
    (Info: triOk;            Val: '-4357753672709582029'),                      //  610: Arguments[9] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  611: Arguments[9] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  612: Arguments[9] invMod Arguments[36]
    (Info: triOk;            Val: '-580846774690797180683'),                    //  613: Arguments[9] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  614: Arguments[9] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  615: Arguments[9] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  616: Arguments[9] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  617: Arguments[9] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  618: Arguments[9] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  619: Arguments[9] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  620: Arguments[9] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  621: Arguments[9] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  622: Arguments[9] invMod Arguments[46]
    (Info: triOk;            Val: '-9785590694082674952676030372'),             //  623: Arguments[9] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  624: Arguments[9] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  625: Arguments[9] invMod Arguments[49]
    (Info: triOk;            Val: '-152313960169333662391077300197'),           //  626: Arguments[9] invMod Arguments[50]
    (Info: triOk;            Val: '-74374870441742441991744420662'),            //  627: Arguments[9] invMod Arguments[51]
    (Info: triOk;            Val: '-2229694699866269208698651328353349'),       //  628: Arguments[9] invMod Arguments[52]
    (Info: triOk;            Val: '-53592688714626185435630055625913533'),      //  629: Arguments[9] invMod Arguments[53]
    (Info: triOk;            Val: '-25229023781319419672867674718817433614'),   //  630: Arguments[9] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  631: Arguments[9] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  632: Arguments[9] invMod Arguments[56]
    (Info: triOk;            Val: '-169547888257812412738279558772608513240' + 
                                  '38'),                                        //  633: Arguments[9] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  634: Arguments[9] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  635: Arguments[9] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  636: Arguments[9] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  637: Arguments[9] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  638: Arguments[9] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  639: Arguments[9] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  640: Arguments[10] invMod Arguments[0]
    (Info: triOk;            Val: '-756769422657233144036077829090504071378' + 
                                  '8'),                                         //  641: Arguments[10] invMod Arguments[1]
    (Info: triOk;            Val: '-744724841075590834286646919934'),           //  642: Arguments[10] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  643: Arguments[10] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  644: Arguments[10] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  645: Arguments[10] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  646: Arguments[10] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  647: Arguments[10] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  648: Arguments[10] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  649: Arguments[10] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  650: Arguments[10] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  651: Arguments[10] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  652: Arguments[10] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  653: Arguments[10] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  654: Arguments[10] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  655: Arguments[10] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  656: Arguments[10] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  657: Arguments[10] invMod Arguments[17]
    (Info: triOk;            Val: '-3'),                                        //  658: Arguments[10] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  659: Arguments[10] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  660: Arguments[10] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  661: Arguments[10] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  662: Arguments[10] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  663: Arguments[10] invMod Arguments[23]
    (Info: triOk;            Val: '-3'),                                        //  664: Arguments[10] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  665: Arguments[10] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  666: Arguments[10] invMod Arguments[26]
    (Info: triOk;            Val: '-191'),                                      //  667: Arguments[10] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  668: Arguments[10] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  669: Arguments[10] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  670: Arguments[10] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  671: Arguments[10] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  672: Arguments[10] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  673: Arguments[10] invMod Arguments[33]
    (Info: triOk;            Val: '-327676468320579793'),                       //  674: Arguments[10] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  675: Arguments[10] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  676: Arguments[10] invMod Arguments[36]
    (Info: triOk;            Val: '-131679225742613392959'),                    //  677: Arguments[10] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  678: Arguments[10] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  679: Arguments[10] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  680: Arguments[10] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  681: Arguments[10] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  682: Arguments[10] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  683: Arguments[10] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  684: Arguments[10] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  685: Arguments[10] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  686: Arguments[10] invMod Arguments[46]
    (Info: triOk;            Val: '-2779435395962345978337826860'),             //  687: Arguments[10] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  688: Arguments[10] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  689: Arguments[10] invMod Arguments[49]
    (Info: triOk;            Val: '-744724841075590834286646919934'),           //  690: Arguments[10] invMod Arguments[50]
    (Info: triOk;            Val: '-24988848085057855018164601289'),            //  691: Arguments[10] invMod Arguments[51]
    (Info: triOk;            Val: '-867073637380519912172644088160859'),        //  692: Arguments[10] invMod Arguments[52]
    (Info: triOk;            Val: '-75436663542456688114376247943543857'),      //  693: Arguments[10] invMod Arguments[53]
    (Info: triOk;            Val: '-19869586264179993866583822562427733303'),   //  694: Arguments[10] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  695: Arguments[10] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  696: Arguments[10] invMod Arguments[56]
    (Info: triOk;            Val: '-756769422657233144036077829090504071378' + 
                                  '8'),                                         //  697: Arguments[10] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  698: Arguments[10] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  699: Arguments[10] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  700: Arguments[10] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  701: Arguments[10] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  702: Arguments[10] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  703: Arguments[10] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  704: Arguments[11] invMod Arguments[0]
    (Info: triOk;            Val: '-261452894082400779955912709248732219358' + 
                                  '3'),                                         //  705: Arguments[11] invMod Arguments[1]
    (Info: triOk;            Val: '-753043588200064134745994197269'),           //  706: Arguments[11] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  707: Arguments[11] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  708: Arguments[11] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  709: Arguments[11] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  710: Arguments[11] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  711: Arguments[11] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  712: Arguments[11] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  713: Arguments[11] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  714: Arguments[11] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  715: Arguments[11] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  716: Arguments[11] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  717: Arguments[11] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  718: Arguments[11] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  719: Arguments[11] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  720: Arguments[11] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  721: Arguments[11] invMod Arguments[17]
    (Info: triOk;            Val: '-3'),                                        //  722: Arguments[11] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  723: Arguments[11] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  724: Arguments[11] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  725: Arguments[11] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  726: Arguments[11] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  727: Arguments[11] invMod Arguments[23]
    (Info: triOk;            Val: '-3'),                                        //  728: Arguments[11] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  729: Arguments[11] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  730: Arguments[11] invMod Arguments[26]
    (Info: triOk;            Val: '-407'),                                      //  731: Arguments[11] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  732: Arguments[11] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  733: Arguments[11] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  734: Arguments[11] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  735: Arguments[11] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  736: Arguments[11] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  737: Arguments[11] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  738: Arguments[11] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  739: Arguments[11] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  740: Arguments[11] invMod Arguments[36]
    (Info: triOk;            Val: '-19719753882236247773'),                     //  741: Arguments[11] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  742: Arguments[11] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  743: Arguments[11] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  744: Arguments[11] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  745: Arguments[11] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  746: Arguments[11] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  747: Arguments[11] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  748: Arguments[11] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  749: Arguments[11] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  750: Arguments[11] invMod Arguments[46]
    (Info: triOk;            Val: '-6344393180781664195834201957'),             //  751: Arguments[11] invMod Arguments[47]
    (Info: triOk;            Val: '-28495825119020772425146126999'),            //  752: Arguments[11] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  753: Arguments[11] invMod Arguments[49]
    (Info: triOk;            Val: '-753043588200064134745994197269'),           //  754: Arguments[11] invMod Arguments[50]
    (Info: triOk;            Val: '-51038877438624865054454580661'),            //  755: Arguments[11] invMod Arguments[51]
    (Info: triOk;            Val: '-2779169552199923342626654549235580'),       //  756: Arguments[11] invMod Arguments[52]
    (Info: triOk;            Val: '-9152752980962665173365501836317181'),       //  757: Arguments[11] invMod Arguments[53]
    (Info: triOk;            Val: '-32965705001383215987024775735467936559'),   //  758: Arguments[11] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  759: Arguments[11] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  760: Arguments[11] invMod Arguments[56]
    (Info: triOk;            Val: '-261452894082400779955912709248732219358' + 
                                  '3'),                                         //  761: Arguments[11] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  762: Arguments[11] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  763: Arguments[11] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  764: Arguments[11] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  765: Arguments[11] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  766: Arguments[11] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  767: Arguments[11] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  768: Arguments[12] invMod Arguments[0]
    (Info: triOk;            Val: '-100478159528473484518115944350791629366' + 
                                  '51'),                                        //  769: Arguments[12] invMod Arguments[1]
    (Info: triOk;            Val: '-166146555861007740256524903775'),           //  770: Arguments[12] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  771: Arguments[12] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  772: Arguments[12] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  773: Arguments[12] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  774: Arguments[12] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  775: Arguments[12] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  776: Arguments[12] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  777: Arguments[12] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  778: Arguments[12] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  779: Arguments[12] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  780: Arguments[12] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  781: Arguments[12] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  782: Arguments[12] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  783: Arguments[12] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  784: Arguments[12] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  785: Arguments[12] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  786: Arguments[12] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  787: Arguments[12] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  788: Arguments[12] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  789: Arguments[12] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  790: Arguments[12] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  791: Arguments[12] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  792: Arguments[12] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  793: Arguments[12] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  794: Arguments[12] invMod Arguments[26]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  795: Arguments[12] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  796: Arguments[12] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  797: Arguments[12] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  798: Arguments[12] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  799: Arguments[12] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  800: Arguments[12] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  801: Arguments[12] invMod Arguments[33]
    (Info: triOk;            Val: '-4473805047804606137'),                      //  802: Arguments[12] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  803: Arguments[12] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  804: Arguments[12] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  805: Arguments[12] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  806: Arguments[12] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  807: Arguments[12] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  808: Arguments[12] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  809: Arguments[12] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  810: Arguments[12] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  811: Arguments[12] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  812: Arguments[12] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  813: Arguments[12] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  814: Arguments[12] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  815: Arguments[12] invMod Arguments[47]
    (Info: triOk;            Val: '-39389523994125346930021174675'),            //  816: Arguments[12] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  817: Arguments[12] invMod Arguments[49]
    (Info: triOk;            Val: '-166146555861007740256524903775'),           //  818: Arguments[12] invMod Arguments[50]
    (Info: triOk;            Val: '-28927047592476201624403417462'),            //  819: Arguments[12] invMod Arguments[51]
    (Info: triOk;            Val: '-1468308074910527640119023026169972'),       //  820: Arguments[12] invMod Arguments[52]
    (Info: triOk;            Val: '-39666638071277409706130327908277556'),      //  821: Arguments[12] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  822: Arguments[12] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  823: Arguments[12] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  824: Arguments[12] invMod Arguments[56]
    (Info: triOk;            Val: '-100478159528473484518115944350791629366' + 
                                  '51'),                                        //  825: Arguments[12] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  826: Arguments[12] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  827: Arguments[12] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  828: Arguments[12] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  829: Arguments[12] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  830: Arguments[12] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  831: Arguments[12] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  832: Arguments[13] invMod Arguments[0]
    (Info: triOk;            Val: '-811032396143033943203241673098950672866' + 
                                  '3'),                                         //  833: Arguments[13] invMod Arguments[1]
    (Info: triOk;            Val: '-511522788658148972110209917241'),           //  834: Arguments[13] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  835: Arguments[13] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  836: Arguments[13] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  837: Arguments[13] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  838: Arguments[13] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  839: Arguments[13] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  840: Arguments[13] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  841: Arguments[13] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  842: Arguments[13] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  843: Arguments[13] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  844: Arguments[13] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  845: Arguments[13] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  846: Arguments[13] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  847: Arguments[13] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  848: Arguments[13] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  849: Arguments[13] invMod Arguments[17]
    (Info: triOk;            Val: '-2'),                                        //  850: Arguments[13] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  851: Arguments[13] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  852: Arguments[13] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  853: Arguments[13] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  854: Arguments[13] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  855: Arguments[13] invMod Arguments[23]
    (Info: triOk;            Val: '-2'),                                        //  856: Arguments[13] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  857: Arguments[13] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  858: Arguments[13] invMod Arguments[26]
    (Info: triOk;            Val: '-389'),                                      //  859: Arguments[13] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  860: Arguments[13] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  861: Arguments[13] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  862: Arguments[13] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  863: Arguments[13] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  864: Arguments[13] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  865: Arguments[13] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  866: Arguments[13] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  867: Arguments[13] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  868: Arguments[13] invMod Arguments[36]
    (Info: triOk;            Val: '-197197538822362477730'),                    //  869: Arguments[13] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  870: Arguments[13] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  871: Arguments[13] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  872: Arguments[13] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  873: Arguments[13] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  874: Arguments[13] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  875: Arguments[13] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  876: Arguments[13] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  877: Arguments[13] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  878: Arguments[13] invMod Arguments[46]
    (Info: triOk;            Val: '-4022809949788504880190835183'),             //  879: Arguments[13] invMod Arguments[47]
    (Info: triOk;            Val: '-30024788561138614411411823554'),            //  880: Arguments[13] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  881: Arguments[13] invMod Arguments[49]
    (Info: triOk;            Val: '-511522788658148972110209917241'),           //  882: Arguments[13] invMod Arguments[50]
    (Info: triOk;            Val: '-57946539263363513878503383358'),            //  883: Arguments[13] invMod Arguments[51]
    (Info: triOk;            Val: '-3553765325422134277231516021078655'),       //  884: Arguments[13] invMod Arguments[52]
    (Info: triOk;            Val: '-915184685751142641827458356071711'),        //  885: Arguments[13] invMod Arguments[53]
    (Info: triOk;            Val: '-74445274823128312328057034001981861843'),   //  886: Arguments[13] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  887: Arguments[13] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  888: Arguments[13] invMod Arguments[56]
    (Info: triOk;            Val: '-811032396143033943203241673098950672866' + 
                                  '3'),                                         //  889: Arguments[13] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  890: Arguments[13] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  891: Arguments[13] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  892: Arguments[13] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  893: Arguments[13] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  894: Arguments[13] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  895: Arguments[13] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  896: Arguments[14] invMod Arguments[0]
    (Info: triOk;            Val: '-896337782706444006608875053436020645796' + 
                                  '2'),                                         //  897: Arguments[14] invMod Arguments[1]
    (Info: triOk;            Val: '-435952491019828137535611135444'),           //  898: Arguments[14] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  899: Arguments[14] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  900: Arguments[14] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  901: Arguments[14] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  902: Arguments[14] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  903: Arguments[14] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  904: Arguments[14] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  905: Arguments[14] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  906: Arguments[14] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  907: Arguments[14] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  908: Arguments[14] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  909: Arguments[14] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  910: Arguments[14] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  911: Arguments[14] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  912: Arguments[14] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  913: Arguments[14] invMod Arguments[17]
    (Info: triOk;            Val: '-6'),                                        //  914: Arguments[14] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  915: Arguments[14] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  916: Arguments[14] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  917: Arguments[14] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  918: Arguments[14] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  919: Arguments[14] invMod Arguments[23]
    (Info: triOk;            Val: '-6'),                                        //  920: Arguments[14] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  921: Arguments[14] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  922: Arguments[14] invMod Arguments[26]
    (Info: triOk;            Val: '-209'),                                      //  923: Arguments[14] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  924: Arguments[14] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  925: Arguments[14] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  926: Arguments[14] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  927: Arguments[14] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  928: Arguments[14] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  929: Arguments[14] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  930: Arguments[14] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  931: Arguments[14] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  932: Arguments[14] invMod Arguments[36]
    (Info: triOk;            Val: '-16620516410412306006'),                     //  933: Arguments[14] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  934: Arguments[14] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  935: Arguments[14] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  936: Arguments[14] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  937: Arguments[14] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  938: Arguments[14] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  939: Arguments[14] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  940: Arguments[14] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  941: Arguments[14] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  942: Arguments[14] invMod Arguments[46]
    (Info: triOk;            Val: '-614018259199624083140895572'),              //  943: Arguments[14] invMod Arguments[47]
    (Info: triOk;            Val: '-45314422982317034274068789104'),            //  944: Arguments[14] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  945: Arguments[14] invMod Arguments[49]
    (Info: triOk;            Val: '-435952491019828137535611135444'),           //  946: Arguments[14] invMod Arguments[50]
    (Info: triOk;            Val: '-13912598730028717952480804515'),            //  947: Arguments[14] invMod Arguments[51]
    (Info: triOk;            Val: '-1604550979013403963666118950998547'),       //  948: Arguments[14] invMod Arguments[52]
    (Info: triOk;            Val: '-9151846857511426418274583560717110'),       //  949: Arguments[14] invMod Arguments[53]
    (Info: triOk;            Val: '-63888014389406196501395077745958608438'),   //  950: Arguments[14] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  951: Arguments[14] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  952: Arguments[14] invMod Arguments[56]
    (Info: triOk;            Val: '-896337782706444006608875053436020645796' + 
                                  '2'),                                         //  953: Arguments[14] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  954: Arguments[14] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  955: Arguments[14] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  956: Arguments[14] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  957: Arguments[14] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  958: Arguments[14] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  959: Arguments[14] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  960: Arguments[15] invMod Arguments[0]
    (Info: triOk;            Val: '-174939164834054464066520885680672037509' + 
                                  '52'),                                        //  961: Arguments[15] invMod Arguments[1]
    (Info: triOk;            Val: '-460128747230230055717371323635'),           //  962: Arguments[15] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  963: Arguments[15] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  964: Arguments[15] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  965: Arguments[15] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  966: Arguments[15] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  967: Arguments[15] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  968: Arguments[15] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  969: Arguments[15] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  970: Arguments[15] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  971: Arguments[15] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  972: Arguments[15] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  973: Arguments[15] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  974: Arguments[15] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  975: Arguments[15] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  976: Arguments[15] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  977: Arguments[15] invMod Arguments[17]
    (Info: triOk;            Val: '-4'),                                        //  978: Arguments[15] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  979: Arguments[15] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  980: Arguments[15] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   //  981: Arguments[15] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       //  982: Arguments[15] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  983: Arguments[15] invMod Arguments[23]
    (Info: triOk;            Val: '-4'),                                        //  984: Arguments[15] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  985: Arguments[15] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  986: Arguments[15] invMod Arguments[26]
    (Info: triOk;            Val: '-45'),                                       //  987: Arguments[15] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  988: Arguments[15] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  989: Arguments[15] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  990: Arguments[15] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  991: Arguments[15] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  992: Arguments[15] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  993: Arguments[15] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  994: Arguments[15] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  995: Arguments[15] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  996: Arguments[15] invMod Arguments[36]
    (Info: triOk;            Val: '-166205164104123060060'),                    //  997: Arguments[15] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  998: Arguments[15] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         //  999: Arguments[15] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1000: Arguments[15] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1001: Arguments[15] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1002: Arguments[15] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1003: Arguments[15] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1004: Arguments[15] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1005: Arguments[15] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1006: Arguments[15] invMod Arguments[46]
    (Info: triOk;            Val: '-6140182591996240831408955720'),             // 1007: Arguments[15] invMod Arguments[47]
    (Info: triOk;            Val: '-7010670222299400520601359777'),             // 1008: Arguments[15] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1009: Arguments[15] invMod Arguments[49]
    (Info: triOk;            Val: '-460128747230230055717371323635'),           // 1010: Arguments[15] invMod Arguments[50]
    (Info: triOk;            Val: '-26015428519565895358297439337'),            // 1011: Arguments[15] invMod Arguments[51]
    (Info: triOk;            Val: '-1502751672187780147240171827219183'),       // 1012: Arguments[15] invMod Arguments[52]
    (Info: triOk;            Val: '-906123451238755090918275600071001'),        // 1013: Arguments[15] invMod Arguments[53]
    (Info: triOk;            Val: '-43386001782419654082172422969958575637'),   // 1014: Arguments[15] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1015: Arguments[15] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1016: Arguments[15] invMod Arguments[56]
    (Info: triOk;            Val: '-174939164834054464066520885680672037509' + 
                                  '52'),                                        // 1017: Arguments[15] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1018: Arguments[15] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1019: Arguments[15] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1020: Arguments[15] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1021: Arguments[15] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1022: Arguments[15] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1023: Arguments[15] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1024: Arguments[16] invMod Arguments[0]
    (Info: triOk;            Val: '-132041711306999871626055896776648629195' + 
                                  '33'),                                        // 1025: Arguments[16] invMod Arguments[1]
    (Info: triOk;            Val: '-208896223016145606409218215936'),           // 1026: Arguments[16] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1027: Arguments[16] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1028: Arguments[16] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1029: Arguments[16] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1030: Arguments[16] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1031: Arguments[16] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1032: Arguments[16] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1033: Arguments[16] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1034: Arguments[16] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1035: Arguments[16] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1036: Arguments[16] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1037: Arguments[16] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1038: Arguments[16] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1039: Arguments[16] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1040: Arguments[16] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1041: Arguments[16] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1042: Arguments[16] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1043: Arguments[16] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1044: Arguments[16] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1045: Arguments[16] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1046: Arguments[16] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1047: Arguments[16] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1048: Arguments[16] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1049: Arguments[16] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1050: Arguments[16] invMod Arguments[26]
    (Info: triOk;            Val: '-168'),                                      // 1051: Arguments[16] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1052: Arguments[16] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1053: Arguments[16] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1054: Arguments[16] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1055: Arguments[16] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1056: Arguments[16] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1057: Arguments[16] invMod Arguments[33]
    (Info: triOk;            Val: '-1635412659887249361'),                      // 1058: Arguments[16] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1059: Arguments[16] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1060: Arguments[16] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1061: Arguments[16] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1062: Arguments[16] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1063: Arguments[16] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1064: Arguments[16] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1065: Arguments[16] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1066: Arguments[16] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1067: Arguments[16] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1068: Arguments[16] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1069: Arguments[16] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1070: Arguments[16] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1071: Arguments[16] invMod Arguments[47]
    (Info: triOk;            Val: '-35280970274558671451078271605'),            // 1072: Arguments[16] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1073: Arguments[16] invMod Arguments[49]
    (Info: triOk;            Val: '-208896223016145606409218215936'),           // 1074: Arguments[16] invMod Arguments[50]
    (Info: triOk;            Val: '-22218145474784537961278868999'),            // 1075: Arguments[16] invMod Arguments[51]
    (Info: triOk;            Val: '-3722253565902911655030379525946133'),       // 1076: Arguments[16] invMod Arguments[52]
    (Info: triOk;            Val: '-8090387957488884740341746429205366'),       // 1077: Arguments[16] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1078: Arguments[16] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1079: Arguments[16] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1080: Arguments[16] invMod Arguments[56]
    (Info: triOk;            Val: '-132041711306999871626055896776648629195' + 
                                  '33'),                                        // 1081: Arguments[16] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1082: Arguments[16] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1083: Arguments[16] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1084: Arguments[16] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1085: Arguments[16] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1086: Arguments[16] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1087: Arguments[16] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1088: Arguments[17] invMod Arguments[0]
    (Info: triOk;            Val: '-126244758127668169944911979357186006450' + 
                                  '17'),                                        // 1089: Arguments[17] invMod Arguments[1]
    (Info: triOk;            Val: '-701891309334249237534973205545'),           // 1090: Arguments[17] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1091: Arguments[17] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1092: Arguments[17] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1093: Arguments[17] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1094: Arguments[17] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1095: Arguments[17] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1096: Arguments[17] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1097: Arguments[17] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1098: Arguments[17] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1099: Arguments[17] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1100: Arguments[17] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1101: Arguments[17] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1102: Arguments[17] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1103: Arguments[17] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1104: Arguments[17] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1105: Arguments[17] invMod Arguments[17]
    (Info: triOk;            Val: '-5'),                                        // 1106: Arguments[17] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1107: Arguments[17] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1108: Arguments[17] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1109: Arguments[17] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1110: Arguments[17] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1111: Arguments[17] invMod Arguments[23]
    (Info: triOk;            Val: '-5'),                                        // 1112: Arguments[17] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1113: Arguments[17] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1114: Arguments[17] invMod Arguments[26]
    (Info: triOk;            Val: '-41'),                                       // 1115: Arguments[17] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1116: Arguments[17] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1117: Arguments[17] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1118: Arguments[17] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1119: Arguments[17] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1120: Arguments[17] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1121: Arguments[17] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1122: Arguments[17] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1123: Arguments[17] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1124: Arguments[17] invMod Arguments[36]
    (Info: triOk;            Val: '-684374205134624364953'),                    // 1125: Arguments[17] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1126: Arguments[17] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1127: Arguments[17] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1128: Arguments[17] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1129: Arguments[17] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1130: Arguments[17] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1131: Arguments[17] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1132: Arguments[17] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1133: Arguments[17] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1134: Arguments[17] invMod Arguments[46]
    (Info: triOk;            Val: '-1980704061934271235938372813'),             // 1135: Arguments[17] invMod Arguments[47]
    (Info: triOk;            Val: '-6373336565726727746001236161'),             // 1136: Arguments[17] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1137: Arguments[17] invMod Arguments[49]
    (Info: triOk;            Val: '-701891309334249237534973205545'),           // 1138: Arguments[17] invMod Arguments[50]
    (Info: triOk;            Val: '-33933167634216385249953181744'),            // 1139: Arguments[17] invMod Arguments[51]
    (Info: triOk;            Val: '-484758603931541982980700589425543'),        // 1140: Arguments[17] invMod Arguments[52]
    (Info: triOk;            Val: '-9061234512387550909182756000710010'),       // 1141: Arguments[17] invMod Arguments[53]
    (Info: triOk;            Val: '-8507059173023461584739690778423250125'),    // 1142: Arguments[17] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1143: Arguments[17] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1144: Arguments[17] invMod Arguments[56]
    (Info: triOk;            Val: '-126244758127668169944911979357186006450' + 
                                  '17'),                                        // 1145: Arguments[17] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1146: Arguments[17] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1147: Arguments[17] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1148: Arguments[17] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1149: Arguments[17] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1150: Arguments[17] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1151: Arguments[17] invMod Arguments[63]
    (Info: triOk;            Val: '-226530832835939034248475095804577123626' + 
                                  '423'),                                       // 1152: Arguments[18] invMod Arguments[0]
    (Info: triOk;            Val: '-154585418115512044830504464519003273204' + 
                                  '29'),                                        // 1153: Arguments[18] invMod Arguments[1]
    (Info: triOk;            Val: '-111411318941944323418249715166'),           // 1154: Arguments[18] invMod Arguments[2]
    (Info: triOk;            Val: '-23503369679055810912076844363'),            // 1155: Arguments[18] invMod Arguments[3]
    (Info: triOk;            Val: '-7577646637036298564131008763'),             // 1156: Arguments[18] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1157: Arguments[18] invMod Arguments[5]
    (Info: triOk;            Val: '-5068928457840583817556143'),                // 1158: Arguments[18] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1159: Arguments[18] invMod Arguments[7]
    (Info: triOk;            Val: '-5749838988646981614889'),                   // 1160: Arguments[18] invMod Arguments[8]
    (Info: triOk;            Val: '-2363235673762817901667'),                   // 1161: Arguments[18] invMod Arguments[9]
    (Info: triOk;            Val: '-956155189204677105247'),                    // 1162: Arguments[18] invMod Arguments[10]
    (Info: triOk;            Val: '-57143'),                                    // 1163: Arguments[18] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1164: Arguments[18] invMod Arguments[12]
    (Info: triOk;            Val: '-7143'),                                     // 1165: Arguments[18] invMod Arguments[13]
    (Info: triOk;            Val: '-143'),                                      // 1166: Arguments[18] invMod Arguments[14]
    (Info: triOk;            Val: '-43'),                                       // 1167: Arguments[18] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1168: Arguments[18] invMod Arguments[16]
    (Info: triOk;            Val: '-3'),                                        // 1169: Arguments[18] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1170: Arguments[18] invMod Arguments[18]
    (Info: triOk;            Val: '-1'),                                        // 1171: Arguments[18] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1172: Arguments[18] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1173: Arguments[18] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1174: Arguments[18] invMod Arguments[22]
    (Info: triOk;            Val: '-1'),                                        // 1175: Arguments[18] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1176: Arguments[18] invMod Arguments[24]
    (Info: triOk;            Val: '-3'),                                        // 1177: Arguments[18] invMod Arguments[25]
    (Info: triOk;            Val: '-43'),                                       // 1178: Arguments[18] invMod Arguments[26]
    (Info: triOk;            Val: '-117'),                                      // 1179: Arguments[18] invMod Arguments[27]
    (Info: triOk;            Val: '-117'),                                      // 1180: Arguments[18] invMod Arguments[28]
    (Info: triOk;            Val: '-143'),                                      // 1181: Arguments[18] invMod Arguments[29]
    (Info: triOk;            Val: '-7143'),                                     // 1182: Arguments[18] invMod Arguments[30]
    (Info: triOk;            Val: '-57143'),                                    // 1183: Arguments[18] invMod Arguments[31]
    (Info: triOk;            Val: '-857143'),                                   // 1184: Arguments[18] invMod Arguments[32]
    (Info: triOk;            Val: '-3629636353757130895'),                      // 1185: Arguments[18] invMod Arguments[33]
    (Info: triOk;            Val: '-2308817872781999098'),                      // 1186: Arguments[18] invMod Arguments[34]
    (Info: triOk;            Val: '-7905747463842524599'),                      // 1187: Arguments[18] invMod Arguments[35]
    (Info: triOk;            Val: '-123480296894936383683'),                    // 1188: Arguments[18] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1189: Arguments[18] invMod Arguments[37]
    (Info: triOk;            Val: '-956155189204677105247'),                    // 1190: Arguments[18] invMod Arguments[38]
    (Info: triOk;            Val: '-2363235673762817901667'),                   // 1191: Arguments[18] invMod Arguments[39]
    (Info: triOk;            Val: '-5749838988646981614889'),                   // 1192: Arguments[18] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1193: Arguments[18] invMod Arguments[41]
    (Info: triOk;            Val: '-24560522109567574437303'),                  // 1194: Arguments[18] invMod Arguments[42]
    (Info: triOk;            Val: '-5068928457840583817556143'),                // 1195: Arguments[18] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1196: Arguments[18] invMod Arguments[44]
    (Info: triOk;            Val: '-355279481187811175552879307'),              // 1197: Arguments[18] invMod Arguments[45]
    (Info: triOk;            Val: '-7577646637036298564131008763'),             // 1198: Arguments[18] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1199: Arguments[18] invMod Arguments[47]
    (Info: triOk;            Val: '-27314299567400261768576726404'),            // 1200: Arguments[18] invMod Arguments[48]
    (Info: triOk;            Val: '-23503369679055810912076844363'),            // 1201: Arguments[18] invMod Arguments[49]
    (Info: triOk;            Val: '-111411318941944323418249715166'),           // 1202: Arguments[18] invMod Arguments[50]
    (Info: triOk;            Val: '-64634605017555019523720346179'),            // 1203: Arguments[18] invMod Arguments[51]
    (Info: triOk;            Val: '-692512291330774261401000842036490'),        // 1204: Arguments[18] invMod Arguments[52]
    (Info: triOk;            Val: '-64723103659911077922733971433642928'),      // 1205: Arguments[18] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1206: Arguments[18] invMod Arguments[54]
    (Info: triOk;            Val: '-72917650054486813583483063815056429643'),   // 1207: Arguments[18] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1208: Arguments[18] invMod Arguments[56]
    (Info: triOk;            Val: '-154585418115512044830504464519003273204' + 
                                  '29'),                                        // 1209: Arguments[18] invMod Arguments[57]
    (Info: triOk;            Val: '-226530832835939034248475095804577123626' + 
                                  '423'),                                       // 1210: Arguments[18] invMod Arguments[58]
    (Info: triOk;            Val: '-352733682892416225432098765400352733682' + 
                                  '892416225432098765400352733683'),            // 1211: Arguments[18] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1212: Arguments[18] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1213: Arguments[18] invMod Arguments[61]
    (Info: triOk;            Val: '-2857142857143'),                            // 1214: Arguments[18] invMod Arguments[62]
    (Info: triOk;            Val: '-142857142857142857142857142857142857142' + 
                                  '857142857142857143'),                        // 1215: Arguments[18] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1216: Arguments[19] invMod Arguments[0]
    (Info: triOk;            Val: '-901748272340486928177942709694185760358' + 
                                  '4'),                                         // 1217: Arguments[19] invMod Arguments[1]
    (Info: triOk;            Val: '-389939616296805131963874003081'),           // 1218: Arguments[19] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1219: Arguments[19] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1220: Arguments[19] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1221: Arguments[19] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1222: Arguments[19] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1223: Arguments[19] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1224: Arguments[19] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1225: Arguments[19] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1226: Arguments[19] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1227: Arguments[19] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1228: Arguments[19] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1229: Arguments[19] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1230: Arguments[19] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1231: Arguments[19] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1232: Arguments[19] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1233: Arguments[19] invMod Arguments[17]
    (Info: triOk;            Val: '-4'),                                        // 1234: Arguments[19] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1235: Arguments[19] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1236: Arguments[19] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1237: Arguments[19] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1238: Arguments[19] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1239: Arguments[19] invMod Arguments[23]
    (Info: triOk;            Val: '-4'),                                        // 1240: Arguments[19] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1241: Arguments[19] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1242: Arguments[19] invMod Arguments[26]
    (Info: triOk;            Val: '-205'),                                      // 1243: Arguments[19] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1244: Arguments[19] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1245: Arguments[19] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1246: Arguments[19] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1247: Arguments[19] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1248: Arguments[19] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1249: Arguments[19] invMod Arguments[33]
    (Info: triOk;            Val: '-2693620851578998948'),                      // 1250: Arguments[19] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1251: Arguments[19] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1252: Arguments[19] invMod Arguments[36]
    (Info: triOk;            Val: '-488838717953303117824'),                    // 1253: Arguments[19] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1254: Arguments[19] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1255: Arguments[19] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1256: Arguments[19] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1257: Arguments[19] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1258: Arguments[19] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1259: Arguments[19] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1260: Arguments[19] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1261: Arguments[19] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1262: Arguments[19] invMod Arguments[46]
    (Info: triOk;            Val: '-9903520309671356179691864065'),             // 1263: Arguments[19] invMod Arguments[47]
    (Info: triOk;            Val: '-31866682828633638730006180805'),            // 1264: Arguments[19] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1265: Arguments[19] invMod Arguments[49]
    (Info: triOk;            Val: '-389939616296805131963874003081'),           // 1266: Arguments[19] invMod Arguments[50]
    (Info: triOk;            Val: '-56555279390360642083255302907'),            // 1267: Arguments[19] invMod Arguments[51]
    (Info: triOk;            Val: '-2423793019657709914903502947127715'),       // 1268: Arguments[19] invMod Arguments[52]
    (Info: triOk;            Val: '-45306172561937754545913780003550050'),      // 1269: Arguments[19] invMod Arguments[53]
    (Info: triOk;            Val: '-42535295865117307923698453892116250625'),   // 1270: Arguments[19] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1271: Arguments[19] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1272: Arguments[19] invMod Arguments[56]
    (Info: triOk;            Val: '-901748272340486928177942709694185760358' + 
                                  '4'),                                         // 1273: Arguments[19] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1274: Arguments[19] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1275: Arguments[19] invMod Arguments[59]
    (Info: triOk;            Val: '-171798691839999999999999999997831595655' + 
                                  '028991131985094398260116577148438'),         // 1276: Arguments[19] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1277: Arguments[19] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1278: Arguments[19] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1279: Arguments[19] invMod Arguments[63]
    (Info: triOk;            Val: '-1'),                                        // 1280: Arguments[20] invMod Arguments[0]
    (Info: triOk;            Val: '-1'),                                        // 1281: Arguments[20] invMod Arguments[1]
    (Info: triOk;            Val: '-1'),                                        // 1282: Arguments[20] invMod Arguments[2]
    (Info: triOk;            Val: '-1'),                                        // 1283: Arguments[20] invMod Arguments[3]
    (Info: triOk;            Val: '-1'),                                        // 1284: Arguments[20] invMod Arguments[4]
    (Info: triOk;            Val: '-1'),                                        // 1285: Arguments[20] invMod Arguments[5]
    (Info: triOk;            Val: '-1'),                                        // 1286: Arguments[20] invMod Arguments[6]
    (Info: triOk;            Val: '-1'),                                        // 1287: Arguments[20] invMod Arguments[7]
    (Info: triOk;            Val: '-1'),                                        // 1288: Arguments[20] invMod Arguments[8]
    (Info: triOk;            Val: '-1'),                                        // 1289: Arguments[20] invMod Arguments[9]
    (Info: triOk;            Val: '-1'),                                        // 1290: Arguments[20] invMod Arguments[10]
    (Info: triOk;            Val: '-1'),                                        // 1291: Arguments[20] invMod Arguments[11]
    (Info: triOk;            Val: '-1'),                                        // 1292: Arguments[20] invMod Arguments[12]
    (Info: triOk;            Val: '-1'),                                        // 1293: Arguments[20] invMod Arguments[13]
    (Info: triOk;            Val: '-1'),                                        // 1294: Arguments[20] invMod Arguments[14]
    (Info: triOk;            Val: '-1'),                                        // 1295: Arguments[20] invMod Arguments[15]
    (Info: triOk;            Val: '-1'),                                        // 1296: Arguments[20] invMod Arguments[16]
    (Info: triOk;            Val: '-1'),                                        // 1297: Arguments[20] invMod Arguments[17]
    (Info: triOk;            Val: '-1'),                                        // 1298: Arguments[20] invMod Arguments[18]
    (Info: triOk;            Val: '-1'),                                        // 1299: Arguments[20] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1300: Arguments[20] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1301: Arguments[20] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1302: Arguments[20] invMod Arguments[22]
    (Info: triOk;            Val: '-1'),                                        // 1303: Arguments[20] invMod Arguments[23]
    (Info: triOk;            Val: '-1'),                                        // 1304: Arguments[20] invMod Arguments[24]
    (Info: triOk;            Val: '-1'),                                        // 1305: Arguments[20] invMod Arguments[25]
    (Info: triOk;            Val: '-1'),                                        // 1306: Arguments[20] invMod Arguments[26]
    (Info: triOk;            Val: '-1'),                                        // 1307: Arguments[20] invMod Arguments[27]
    (Info: triOk;            Val: '-1'),                                        // 1308: Arguments[20] invMod Arguments[28]
    (Info: triOk;            Val: '-1'),                                        // 1309: Arguments[20] invMod Arguments[29]
    (Info: triOk;            Val: '-1'),                                        // 1310: Arguments[20] invMod Arguments[30]
    (Info: triOk;            Val: '-1'),                                        // 1311: Arguments[20] invMod Arguments[31]
    (Info: triOk;            Val: '-1'),                                        // 1312: Arguments[20] invMod Arguments[32]
    (Info: triOk;            Val: '-1'),                                        // 1313: Arguments[20] invMod Arguments[33]
    (Info: triOk;            Val: '-1'),                                        // 1314: Arguments[20] invMod Arguments[34]
    (Info: triOk;            Val: '-1'),                                        // 1315: Arguments[20] invMod Arguments[35]
    (Info: triOk;            Val: '-1'),                                        // 1316: Arguments[20] invMod Arguments[36]
    (Info: triOk;            Val: '-1'),                                        // 1317: Arguments[20] invMod Arguments[37]
    (Info: triOk;            Val: '-1'),                                        // 1318: Arguments[20] invMod Arguments[38]
    (Info: triOk;            Val: '-1'),                                        // 1319: Arguments[20] invMod Arguments[39]
    (Info: triOk;            Val: '-1'),                                        // 1320: Arguments[20] invMod Arguments[40]
    (Info: triOk;            Val: '-1'),                                        // 1321: Arguments[20] invMod Arguments[41]
    (Info: triOk;            Val: '-1'),                                        // 1322: Arguments[20] invMod Arguments[42]
    (Info: triOk;            Val: '-1'),                                        // 1323: Arguments[20] invMod Arguments[43]
    (Info: triOk;            Val: '-1'),                                        // 1324: Arguments[20] invMod Arguments[44]
    (Info: triOk;            Val: '-1'),                                        // 1325: Arguments[20] invMod Arguments[45]
    (Info: triOk;            Val: '-1'),                                        // 1326: Arguments[20] invMod Arguments[46]
    (Info: triOk;            Val: '-1'),                                        // 1327: Arguments[20] invMod Arguments[47]
    (Info: triOk;            Val: '-1'),                                        // 1328: Arguments[20] invMod Arguments[48]
    (Info: triOk;            Val: '-1'),                                        // 1329: Arguments[20] invMod Arguments[49]
    (Info: triOk;            Val: '-1'),                                        // 1330: Arguments[20] invMod Arguments[50]
    (Info: triOk;            Val: '-1'),                                        // 1331: Arguments[20] invMod Arguments[51]
    (Info: triOk;            Val: '-1'),                                        // 1332: Arguments[20] invMod Arguments[52]
    (Info: triOk;            Val: '-1'),                                        // 1333: Arguments[20] invMod Arguments[53]
    (Info: triOk;            Val: '-1'),                                        // 1334: Arguments[20] invMod Arguments[54]
    (Info: triOk;            Val: '-1'),                                        // 1335: Arguments[20] invMod Arguments[55]
    (Info: triOk;            Val: '-1'),                                        // 1336: Arguments[20] invMod Arguments[56]
    (Info: triOk;            Val: '-1'),                                        // 1337: Arguments[20] invMod Arguments[57]
    (Info: triOk;            Val: '-1'),                                        // 1338: Arguments[20] invMod Arguments[58]
    (Info: triOk;            Val: '-1'),                                        // 1339: Arguments[20] invMod Arguments[59]
    (Info: triOk;            Val: '-1'),                                        // 1340: Arguments[20] invMod Arguments[60]
    (Info: triOk;            Val: '-1'),                                        // 1341: Arguments[20] invMod Arguments[61]
    (Info: triOk;            Val: '-1'),                                        // 1342: Arguments[20] invMod Arguments[62]
    (Info: triOk;            Val: '-1'),                                        // 1343: Arguments[20] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1344: Arguments[21] invMod Arguments[0]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1345: Arguments[21] invMod Arguments[1]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1346: Arguments[21] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1347: Arguments[21] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1348: Arguments[21] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1349: Arguments[21] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1350: Arguments[21] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1351: Arguments[21] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1352: Arguments[21] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1353: Arguments[21] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1354: Arguments[21] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1355: Arguments[21] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1356: Arguments[21] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1357: Arguments[21] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1358: Arguments[21] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1359: Arguments[21] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1360: Arguments[21] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1361: Arguments[21] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1362: Arguments[21] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1363: Arguments[21] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1364: Arguments[21] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1365: Arguments[21] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1366: Arguments[21] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1367: Arguments[21] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1368: Arguments[21] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1369: Arguments[21] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1370: Arguments[21] invMod Arguments[26]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1371: Arguments[21] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1372: Arguments[21] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1373: Arguments[21] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1374: Arguments[21] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1375: Arguments[21] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1376: Arguments[21] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1377: Arguments[21] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1378: Arguments[21] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1379: Arguments[21] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1380: Arguments[21] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1381: Arguments[21] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1382: Arguments[21] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1383: Arguments[21] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1384: Arguments[21] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1385: Arguments[21] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1386: Arguments[21] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1387: Arguments[21] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1388: Arguments[21] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1389: Arguments[21] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1390: Arguments[21] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1391: Arguments[21] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1392: Arguments[21] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1393: Arguments[21] invMod Arguments[49]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1394: Arguments[21] invMod Arguments[50]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1395: Arguments[21] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1396: Arguments[21] invMod Arguments[52]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1397: Arguments[21] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1398: Arguments[21] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1399: Arguments[21] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1400: Arguments[21] invMod Arguments[56]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1401: Arguments[21] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1402: Arguments[21] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1403: Arguments[21] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1404: Arguments[21] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1405: Arguments[21] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1406: Arguments[21] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1407: Arguments[21] invMod Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1408: Arguments[22] invMod Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1409: Arguments[22] invMod Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1410: Arguments[22] invMod Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1411: Arguments[22] invMod Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1412: Arguments[22] invMod Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 1413: Arguments[22] invMod Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1414: Arguments[22] invMod Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 1415: Arguments[22] invMod Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1416: Arguments[22] invMod Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1417: Arguments[22] invMod Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1418: Arguments[22] invMod Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1419: Arguments[22] invMod Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 1420: Arguments[22] invMod Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1421: Arguments[22] invMod Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1422: Arguments[22] invMod Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1423: Arguments[22] invMod Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 1424: Arguments[22] invMod Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1425: Arguments[22] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1426: Arguments[22] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1427: Arguments[22] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1428: Arguments[22] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1429: Arguments[22] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1430: Arguments[22] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1431: Arguments[22] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1432: Arguments[22] invMod Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1433: Arguments[22] invMod Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1434: Arguments[22] invMod Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1435: Arguments[22] invMod Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1436: Arguments[22] invMod Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1437: Arguments[22] invMod Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1438: Arguments[22] invMod Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1439: Arguments[22] invMod Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1440: Arguments[22] invMod Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1441: Arguments[22] invMod Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1442: Arguments[22] invMod Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1443: Arguments[22] invMod Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1444: Arguments[22] invMod Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1445: Arguments[22] invMod Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1446: Arguments[22] invMod Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1447: Arguments[22] invMod Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1448: Arguments[22] invMod Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 1449: Arguments[22] invMod Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1450: Arguments[22] invMod Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1451: Arguments[22] invMod Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 1452: Arguments[22] invMod Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1453: Arguments[22] invMod Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1454: Arguments[22] invMod Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1455: Arguments[22] invMod Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1456: Arguments[22] invMod Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1457: Arguments[22] invMod Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1458: Arguments[22] invMod Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1459: Arguments[22] invMod Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1460: Arguments[22] invMod Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1461: Arguments[22] invMod Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1462: Arguments[22] invMod Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1463: Arguments[22] invMod Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 1464: Arguments[22] invMod Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1465: Arguments[22] invMod Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1466: Arguments[22] invMod Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1467: Arguments[22] invMod Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1468: Arguments[22] invMod Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 1469: Arguments[22] invMod Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1470: Arguments[22] invMod Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1471: Arguments[22] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1472: Arguments[23] invMod Arguments[0]
    (Info: triOk;            Val: '9017482723404869281779427096941857603584'),  // 1473: Arguments[23] invMod Arguments[1]
    (Info: triOk;            Val: '389939616296805131963874003081'),            // 1474: Arguments[23] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1475: Arguments[23] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1476: Arguments[23] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1477: Arguments[23] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1478: Arguments[23] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1479: Arguments[23] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1480: Arguments[23] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1481: Arguments[23] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1482: Arguments[23] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1483: Arguments[23] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1484: Arguments[23] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1485: Arguments[23] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1486: Arguments[23] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1487: Arguments[23] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1488: Arguments[23] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1489: Arguments[23] invMod Arguments[17]
    (Info: triOk;            Val: '4'),                                         // 1490: Arguments[23] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1491: Arguments[23] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1492: Arguments[23] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1493: Arguments[23] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1494: Arguments[23] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1495: Arguments[23] invMod Arguments[23]
    (Info: triOk;            Val: '4'),                                         // 1496: Arguments[23] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1497: Arguments[23] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1498: Arguments[23] invMod Arguments[26]
    (Info: triOk;            Val: '205'),                                       // 1499: Arguments[23] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1500: Arguments[23] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1501: Arguments[23] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1502: Arguments[23] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1503: Arguments[23] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1504: Arguments[23] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1505: Arguments[23] invMod Arguments[33]
    (Info: triOk;            Val: '2693620851578998948'),                       // 1506: Arguments[23] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1507: Arguments[23] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1508: Arguments[23] invMod Arguments[36]
    (Info: triOk;            Val: '488838717953303117824'),                     // 1509: Arguments[23] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1510: Arguments[23] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1511: Arguments[23] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1512: Arguments[23] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1513: Arguments[23] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1514: Arguments[23] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1515: Arguments[23] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1516: Arguments[23] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1517: Arguments[23] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1518: Arguments[23] invMod Arguments[46]
    (Info: triOk;            Val: '9903520309671356179691864065'),              // 1519: Arguments[23] invMod Arguments[47]
    (Info: triOk;            Val: '31866682828633638730006180805'),             // 1520: Arguments[23] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1521: Arguments[23] invMod Arguments[49]
    (Info: triOk;            Val: '389939616296805131963874003081'),            // 1522: Arguments[23] invMod Arguments[50]
    (Info: triOk;            Val: '56555279390360642083255302907'),             // 1523: Arguments[23] invMod Arguments[51]
    (Info: triOk;            Val: '2423793019657709914903502947127715'),        // 1524: Arguments[23] invMod Arguments[52]
    (Info: triOk;            Val: '45306172561937754545913780003550050'),       // 1525: Arguments[23] invMod Arguments[53]
    (Info: triOk;            Val: '42535295865117307923698453892116250625'),    // 1526: Arguments[23] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1527: Arguments[23] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1528: Arguments[23] invMod Arguments[56]
    (Info: triOk;            Val: '9017482723404869281779427096941857603584'),  // 1529: Arguments[23] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1530: Arguments[23] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1531: Arguments[23] invMod Arguments[59]
    (Info: triOk;            Val: '1717986918399999999999999999978315956550' + 
                                  '28991131985094398260116577148438'),          // 1532: Arguments[23] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1533: Arguments[23] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1534: Arguments[23] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1535: Arguments[23] invMod Arguments[63]
    (Info: triOk;            Val: '2265308328359390342484750958045771236264' + 
                                  '23'),                                        // 1536: Arguments[24] invMod Arguments[0]
    (Info: triOk;            Val: '1545854181155120448305044645190032732042' + 
                                  '9'),                                         // 1537: Arguments[24] invMod Arguments[1]
    (Info: triOk;            Val: '111411318941944323418249715166'),            // 1538: Arguments[24] invMod Arguments[2]
    (Info: triOk;            Val: '23503369679055810912076844363'),             // 1539: Arguments[24] invMod Arguments[3]
    (Info: triOk;            Val: '7577646637036298564131008763'),              // 1540: Arguments[24] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1541: Arguments[24] invMod Arguments[5]
    (Info: triOk;            Val: '5068928457840583817556143'),                 // 1542: Arguments[24] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1543: Arguments[24] invMod Arguments[7]
    (Info: triOk;            Val: '5749838988646981614889'),                    // 1544: Arguments[24] invMod Arguments[8]
    (Info: triOk;            Val: '2363235673762817901667'),                    // 1545: Arguments[24] invMod Arguments[9]
    (Info: triOk;            Val: '956155189204677105247'),                     // 1546: Arguments[24] invMod Arguments[10]
    (Info: triOk;            Val: '57143'),                                     // 1547: Arguments[24] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1548: Arguments[24] invMod Arguments[12]
    (Info: triOk;            Val: '7143'),                                      // 1549: Arguments[24] invMod Arguments[13]
    (Info: triOk;            Val: '143'),                                       // 1550: Arguments[24] invMod Arguments[14]
    (Info: triOk;            Val: '43'),                                        // 1551: Arguments[24] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1552: Arguments[24] invMod Arguments[16]
    (Info: triOk;            Val: '3'),                                         // 1553: Arguments[24] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1554: Arguments[24] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1555: Arguments[24] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1556: Arguments[24] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1557: Arguments[24] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1558: Arguments[24] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1559: Arguments[24] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1560: Arguments[24] invMod Arguments[24]
    (Info: triOk;            Val: '3'),                                         // 1561: Arguments[24] invMod Arguments[25]
    (Info: triOk;            Val: '43'),                                        // 1562: Arguments[24] invMod Arguments[26]
    (Info: triOk;            Val: '117'),                                       // 1563: Arguments[24] invMod Arguments[27]
    (Info: triOk;            Val: '117'),                                       // 1564: Arguments[24] invMod Arguments[28]
    (Info: triOk;            Val: '143'),                                       // 1565: Arguments[24] invMod Arguments[29]
    (Info: triOk;            Val: '7143'),                                      // 1566: Arguments[24] invMod Arguments[30]
    (Info: triOk;            Val: '57143'),                                     // 1567: Arguments[24] invMod Arguments[31]
    (Info: triOk;            Val: '857143'),                                    // 1568: Arguments[24] invMod Arguments[32]
    (Info: triOk;            Val: '3629636353757130895'),                       // 1569: Arguments[24] invMod Arguments[33]
    (Info: triOk;            Val: '2308817872781999098'),                       // 1570: Arguments[24] invMod Arguments[34]
    (Info: triOk;            Val: '7905747463842524599'),                       // 1571: Arguments[24] invMod Arguments[35]
    (Info: triOk;            Val: '123480296894936383683'),                     // 1572: Arguments[24] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1573: Arguments[24] invMod Arguments[37]
    (Info: triOk;            Val: '956155189204677105247'),                     // 1574: Arguments[24] invMod Arguments[38]
    (Info: triOk;            Val: '2363235673762817901667'),                    // 1575: Arguments[24] invMod Arguments[39]
    (Info: triOk;            Val: '5749838988646981614889'),                    // 1576: Arguments[24] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1577: Arguments[24] invMod Arguments[41]
    (Info: triOk;            Val: '24560522109567574437303'),                   // 1578: Arguments[24] invMod Arguments[42]
    (Info: triOk;            Val: '5068928457840583817556143'),                 // 1579: Arguments[24] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1580: Arguments[24] invMod Arguments[44]
    (Info: triOk;            Val: '355279481187811175552879307'),               // 1581: Arguments[24] invMod Arguments[45]
    (Info: triOk;            Val: '7577646637036298564131008763'),              // 1582: Arguments[24] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1583: Arguments[24] invMod Arguments[47]
    (Info: triOk;            Val: '27314299567400261768576726404'),             // 1584: Arguments[24] invMod Arguments[48]
    (Info: triOk;            Val: '23503369679055810912076844363'),             // 1585: Arguments[24] invMod Arguments[49]
    (Info: triOk;            Val: '111411318941944323418249715166'),            // 1586: Arguments[24] invMod Arguments[50]
    (Info: triOk;            Val: '64634605017555019523720346179'),             // 1587: Arguments[24] invMod Arguments[51]
    (Info: triOk;            Val: '692512291330774261401000842036490'),         // 1588: Arguments[24] invMod Arguments[52]
    (Info: triOk;            Val: '64723103659911077922733971433642928'),       // 1589: Arguments[24] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1590: Arguments[24] invMod Arguments[54]
    (Info: triOk;            Val: '72917650054486813583483063815056429643'),    // 1591: Arguments[24] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1592: Arguments[24] invMod Arguments[56]
    (Info: triOk;            Val: '1545854181155120448305044645190032732042' + 
                                  '9'),                                         // 1593: Arguments[24] invMod Arguments[57]
    (Info: triOk;            Val: '2265308328359390342484750958045771236264' + 
                                  '23'),                                        // 1594: Arguments[24] invMod Arguments[58]
    (Info: triOk;            Val: '3527336828924162254320987654003527336828' + 
                                  '92416225432098765400352733683'),             // 1595: Arguments[24] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1596: Arguments[24] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1597: Arguments[24] invMod Arguments[61]
    (Info: triOk;            Val: '2857142857143'),                             // 1598: Arguments[24] invMod Arguments[62]
    (Info: triOk;            Val: '1428571428571428571428571428571428571428' + 
                                  '57142857142857143'),                         // 1599: Arguments[24] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1600: Arguments[25] invMod Arguments[0]
    (Info: triOk;            Val: '1262447581276681699449119793571860064501' + 
                                  '7'),                                         // 1601: Arguments[25] invMod Arguments[1]
    (Info: triOk;            Val: '701891309334249237534973205545'),            // 1602: Arguments[25] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1603: Arguments[25] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1604: Arguments[25] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1605: Arguments[25] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1606: Arguments[25] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1607: Arguments[25] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1608: Arguments[25] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1609: Arguments[25] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1610: Arguments[25] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1611: Arguments[25] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1612: Arguments[25] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1613: Arguments[25] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1614: Arguments[25] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1615: Arguments[25] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1616: Arguments[25] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1617: Arguments[25] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 1618: Arguments[25] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1619: Arguments[25] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1620: Arguments[25] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1621: Arguments[25] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1622: Arguments[25] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1623: Arguments[25] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 1624: Arguments[25] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1625: Arguments[25] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1626: Arguments[25] invMod Arguments[26]
    (Info: triOk;            Val: '41'),                                        // 1627: Arguments[25] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1628: Arguments[25] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1629: Arguments[25] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1630: Arguments[25] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1631: Arguments[25] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1632: Arguments[25] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1633: Arguments[25] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1634: Arguments[25] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1635: Arguments[25] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1636: Arguments[25] invMod Arguments[36]
    (Info: triOk;            Val: '684374205134624364953'),                     // 1637: Arguments[25] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1638: Arguments[25] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1639: Arguments[25] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1640: Arguments[25] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1641: Arguments[25] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1642: Arguments[25] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1643: Arguments[25] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1644: Arguments[25] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1645: Arguments[25] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1646: Arguments[25] invMod Arguments[46]
    (Info: triOk;            Val: '1980704061934271235938372813'),              // 1647: Arguments[25] invMod Arguments[47]
    (Info: triOk;            Val: '6373336565726727746001236161'),              // 1648: Arguments[25] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1649: Arguments[25] invMod Arguments[49]
    (Info: triOk;            Val: '701891309334249237534973205545'),            // 1650: Arguments[25] invMod Arguments[50]
    (Info: triOk;            Val: '33933167634216385249953181744'),             // 1651: Arguments[25] invMod Arguments[51]
    (Info: triOk;            Val: '484758603931541982980700589425543'),         // 1652: Arguments[25] invMod Arguments[52]
    (Info: triOk;            Val: '9061234512387550909182756000710010'),        // 1653: Arguments[25] invMod Arguments[53]
    (Info: triOk;            Val: '8507059173023461584739690778423250125'),     // 1654: Arguments[25] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1655: Arguments[25] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1656: Arguments[25] invMod Arguments[56]
    (Info: triOk;            Val: '1262447581276681699449119793571860064501' + 
                                  '7'),                                         // 1657: Arguments[25] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1658: Arguments[25] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1659: Arguments[25] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1660: Arguments[25] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1661: Arguments[25] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1662: Arguments[25] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1663: Arguments[25] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1664: Arguments[26] invMod Arguments[0]
    (Info: triOk;            Val: '1749391648340544640665208856806720375095' + 
                                  '2'),                                         // 1665: Arguments[26] invMod Arguments[1]
    (Info: triOk;            Val: '460128747230230055717371323635'),            // 1666: Arguments[26] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1667: Arguments[26] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1668: Arguments[26] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1669: Arguments[26] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1670: Arguments[26] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1671: Arguments[26] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1672: Arguments[26] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1673: Arguments[26] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1674: Arguments[26] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1675: Arguments[26] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1676: Arguments[26] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1677: Arguments[26] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1678: Arguments[26] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1679: Arguments[26] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1680: Arguments[26] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1681: Arguments[26] invMod Arguments[17]
    (Info: triOk;            Val: '4'),                                         // 1682: Arguments[26] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1683: Arguments[26] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1684: Arguments[26] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1685: Arguments[26] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1686: Arguments[26] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1687: Arguments[26] invMod Arguments[23]
    (Info: triOk;            Val: '4'),                                         // 1688: Arguments[26] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1689: Arguments[26] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1690: Arguments[26] invMod Arguments[26]
    (Info: triOk;            Val: '45'),                                        // 1691: Arguments[26] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1692: Arguments[26] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1693: Arguments[26] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1694: Arguments[26] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1695: Arguments[26] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1696: Arguments[26] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1697: Arguments[26] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1698: Arguments[26] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1699: Arguments[26] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1700: Arguments[26] invMod Arguments[36]
    (Info: triOk;            Val: '166205164104123060060'),                     // 1701: Arguments[26] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1702: Arguments[26] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1703: Arguments[26] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1704: Arguments[26] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1705: Arguments[26] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1706: Arguments[26] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1707: Arguments[26] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1708: Arguments[26] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1709: Arguments[26] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1710: Arguments[26] invMod Arguments[46]
    (Info: triOk;            Val: '6140182591996240831408955720'),              // 1711: Arguments[26] invMod Arguments[47]
    (Info: triOk;            Val: '7010670222299400520601359777'),              // 1712: Arguments[26] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1713: Arguments[26] invMod Arguments[49]
    (Info: triOk;            Val: '460128747230230055717371323635'),            // 1714: Arguments[26] invMod Arguments[50]
    (Info: triOk;            Val: '26015428519565895358297439337'),             // 1715: Arguments[26] invMod Arguments[51]
    (Info: triOk;            Val: '1502751672187780147240171827219183'),        // 1716: Arguments[26] invMod Arguments[52]
    (Info: triOk;            Val: '906123451238755090918275600071001'),         // 1717: Arguments[26] invMod Arguments[53]
    (Info: triOk;            Val: '43386001782419654082172422969958575637'),    // 1718: Arguments[26] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1719: Arguments[26] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1720: Arguments[26] invMod Arguments[56]
    (Info: triOk;            Val: '1749391648340544640665208856806720375095' + 
                                  '2'),                                         // 1721: Arguments[26] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1722: Arguments[26] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1723: Arguments[26] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1724: Arguments[26] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1725: Arguments[26] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1726: Arguments[26] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1727: Arguments[26] invMod Arguments[63]
    (Info: triOk;            Val: '1081698573419532845690151252093738685678' + 
                                  '249'),                                       // 1728: Arguments[27] invMod Arguments[0]
    (Info: triOk;            Val: '7187529016699235662249616708075906060558'),  // 1729: Arguments[27] invMod Arguments[1]
    (Info: triOk;            Val: '671191906779830838392585081097'),            // 1730: Arguments[27] invMod Arguments[2]
    (Info: triOk;            Val: '73009856179071901622967312379'),             // 1731: Arguments[27] invMod Arguments[3]
    (Info: triOk;            Val: '3458420633040201463662074089'),              // 1732: Arguments[27] invMod Arguments[4]
    (Info: triOk;            Val: '130723280476349157183085987'),               // 1733: Arguments[27] invMod Arguments[5]
    (Info: triOk;            Val: '3608977914237599040763689'),                 // 1734: Arguments[27] invMod Arguments[6]
    (Info: triOk;            Val: '60846570265691663305669'),                   // 1735: Arguments[27] invMod Arguments[7]
    (Info: triOk;            Val: '1541725368594015445231'),                    // 1736: Arguments[27] invMod Arguments[8]
    (Info: triOk;            Val: '1658309629266329432221'),                    // 1737: Arguments[27] invMod Arguments[9]
    (Info: triOk;            Val: '891866026116343070053'),                     // 1738: Arguments[27] invMod Arguments[10]
    (Info: triOk;            Val: '489'),                                       // 1739: Arguments[27] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1740: Arguments[27] invMod Arguments[12]
    (Info: triOk;            Val: '489'),                                       // 1741: Arguments[27] invMod Arguments[13]
    (Info: triOk;            Val: '489'),                                       // 1742: Arguments[27] invMod Arguments[14]
    (Info: triOk;            Val: '89'),                                        // 1743: Arguments[27] invMod Arguments[15]
    (Info: triOk;            Val: '33'),                                        // 1744: Arguments[27] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 1745: Arguments[27] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 1746: Arguments[27] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1747: Arguments[27] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1748: Arguments[27] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1749: Arguments[27] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1750: Arguments[27] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1751: Arguments[27] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 1752: Arguments[27] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 1753: Arguments[27] invMod Arguments[25]
    (Info: triOk;            Val: '89'),                                        // 1754: Arguments[27] invMod Arguments[26]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1755: Arguments[27] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1756: Arguments[27] invMod Arguments[28]
    (Info: triOk;            Val: '489'),                                       // 1757: Arguments[27] invMod Arguments[29]
    (Info: triOk;            Val: '489'),                                       // 1758: Arguments[27] invMod Arguments[30]
    (Info: triOk;            Val: '489'),                                       // 1759: Arguments[27] invMod Arguments[31]
    (Info: triOk;            Val: '200489'),                                    // 1760: Arguments[27] invMod Arguments[32]
    (Info: triOk;            Val: '1118176480619556217'),                       // 1761: Arguments[27] invMod Arguments[33]
    (Info: triOk;            Val: '52686960422083109'),                         // 1762: Arguments[27] invMod Arguments[34]
    (Info: triOk;            Val: '8524290052700619433'),                       // 1763: Arguments[27] invMod Arguments[35]
    (Info: triOk;            Val: '5072051314999831897'),                       // 1764: Arguments[27] invMod Arguments[36]
    (Info: triOk;            Val: '643020122882340042516'),                     // 1765: Arguments[27] invMod Arguments[37]
    (Info: triOk;            Val: '891866026116343070053'),                     // 1766: Arguments[27] invMod Arguments[38]
    (Info: triOk;            Val: '1658309629266329432221'),                    // 1767: Arguments[27] invMod Arguments[39]
    (Info: triOk;            Val: '1541725368594015445231'),                    // 1768: Arguments[27] invMod Arguments[40]
    (Info: triOk;            Val: '60846570265691663305669'),                   // 1769: Arguments[27] invMod Arguments[41]
    (Info: triOk;            Val: '49181094395442160059049'),                   // 1770: Arguments[27] invMod Arguments[42]
    (Info: triOk;            Val: '3608977914237599040763689'),                 // 1771: Arguments[27] invMod Arguments[43]
    (Info: triOk;            Val: '130723280476349157183085987'),               // 1772: Arguments[27] invMod Arguments[44]
    (Info: triOk;            Val: '1228276739363239614258609633'),              // 1773: Arguments[27] invMod Arguments[45]
    (Info: triOk;            Val: '3458420633040201463662074089'),              // 1774: Arguments[27] invMod Arguments[46]
    (Info: triOk;            Val: '17046646205400084964555189001'),             // 1775: Arguments[27] invMod Arguments[47]
    (Info: triOk;            Val: '14024456990596711421518612579'),             // 1776: Arguments[27] invMod Arguments[48]
    (Info: triOk;            Val: '73009856179071901622967312379'),             // 1777: Arguments[27] invMod Arguments[49]
    (Info: triOk;            Val: '671191906779830838392585081097'),            // 1778: Arguments[27] invMod Arguments[50]
    (Info: triOk;            Val: '72733684497138625270885792980'),             // 1779: Arguments[27] invMod Arguments[51]
    (Info: triOk;            Val: '4480165092570241309699384420607707'),        // 1780: Arguments[27] invMod Arguments[52]
    (Info: triOk;            Val: '2658552913169941587046285379181421'),        // 1781: Arguments[27] invMod Arguments[53]
    (Info: triOk;            Val: '78414701912710147125840181502825557386'),    // 1782: Arguments[27] invMod Arguments[54]
    (Info: triOk;            Val: '12687789964656018500467509473931986739'),    // 1783: Arguments[27] invMod Arguments[55]
    (Info: triOk;            Val: '464248287100975803850686881135355609769'),   // 1784: Arguments[27] invMod Arguments[56]
    (Info: triOk;            Val: '7187529016699235662249616708075906060558'),  // 1785: Arguments[27] invMod Arguments[57]
    (Info: triOk;            Val: '1081698573419532845690151252093738685678' + 
                                  '249'),                                       // 1786: Arguments[27] invMod Arguments[58]
    (Info: triOk;            Val: '3259983670741646288834555826927465362643' + 
                                  '84678076316218418878565607169'),             // 1787: Arguments[27] invMod Arguments[59]
    (Info: triOk;            Val: '7896859184821515892420537897210841071673' + 
                                  '7042378516375909224699062356739'),           // 1788: Arguments[27] invMod Arguments[60]
    (Info: triOk;            Val: '4704511854787286063569682151529862766103' + 
                                  '4833757414011179963650505233801955990220' + 
                                  '0489'),                                      // 1789: Arguments[27] invMod Arguments[61]
    (Info: triOk;            Val: '9559902200489'),                             // 1790: Arguments[27] invMod Arguments[62]
    (Info: triOk;            Val: '3300733496332518337408312958435207823960' + 
                                  '88019559902200489'),                         // 1791: Arguments[27] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1792: Arguments[28] invMod Arguments[0]
    (Info: triOk;            Val: '3593764508349617831124808354037953030279'),  // 1793: Arguments[28] invMod Arguments[1]
    (Info: triOk;            Val: '725535569686720551160166543629'),            // 1794: Arguments[28] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1795: Arguments[28] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1796: Arguments[28] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1797: Arguments[28] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1798: Arguments[28] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1799: Arguments[28] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1800: Arguments[28] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1801: Arguments[28] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1802: Arguments[28] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1803: Arguments[28] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1804: Arguments[28] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1805: Arguments[28] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1806: Arguments[28] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1807: Arguments[28] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1808: Arguments[28] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1809: Arguments[28] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 1810: Arguments[28] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1811: Arguments[28] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1812: Arguments[28] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1813: Arguments[28] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1814: Arguments[28] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1815: Arguments[28] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 1816: Arguments[28] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1817: Arguments[28] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1818: Arguments[28] invMod Arguments[26]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1819: Arguments[28] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1820: Arguments[28] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1821: Arguments[28] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1822: Arguments[28] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1823: Arguments[28] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1824: Arguments[28] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1825: Arguments[28] invMod Arguments[33]
    (Info: triOk;            Val: '2719964331790040502'),                       // 1826: Arguments[28] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1827: Arguments[28] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1828: Arguments[28] invMod Arguments[36]
    (Info: triOk;            Val: '321510061441170021258'),                     // 1829: Arguments[28] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1830: Arguments[28] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1831: Arguments[28] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1832: Arguments[28] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1833: Arguments[28] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1834: Arguments[28] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1835: Arguments[28] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1836: Arguments[28] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1837: Arguments[28] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1838: Arguments[28] invMod Arguments[46]
    (Info: triOk;            Val: '18426843412371398661969458565'),             // 1839: Arguments[28] invMod Arguments[47]
    (Info: triOk;            Val: '38878911323931994440765487094'),             // 1840: Arguments[28] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1841: Arguments[28] invMod Arguments[49]
    (Info: triOk;            Val: '725535569686720551160166543629'),            // 1842: Arguments[28] invMod Arguments[50]
    (Info: triOk;            Val: '36366842248569312635442896490'),             // 1843: Arguments[28] invMod Arguments[51]
    (Info: triOk;            Val: '4663875565942830569753195157431568'),        // 1844: Arguments[28] invMod Arguments[52]
    (Info: triOk;            Val: '46635449018522725339436922693140760'),       // 1845: Arguments[28] invMod Arguments[53]
    (Info: triOk;            Val: '39207350956355073562920090751412778693'),    // 1846: Arguments[28] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1847: Arguments[28] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1848: Arguments[28] invMod Arguments[56]
    (Info: triOk;            Val: '3593764508349617831124808354037953030279'),  // 1849: Arguments[28] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1850: Arguments[28] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1851: Arguments[28] invMod Arguments[59]
    (Info: triOk;            Val: '2112829877641075794621026894838858010133' + 
                                  '97512321243282352872466108326807'),          // 1852: Arguments[28] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1853: Arguments[28] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1854: Arguments[28] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1855: Arguments[28] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1856: Arguments[29] invMod Arguments[0]
    (Info: triOk;            Val: '8963377827064440066088750534360206457962'),  // 1857: Arguments[29] invMod Arguments[1]
    (Info: triOk;            Val: '435952491019828137535611135444'),            // 1858: Arguments[29] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1859: Arguments[29] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1860: Arguments[29] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1861: Arguments[29] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1862: Arguments[29] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1863: Arguments[29] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1864: Arguments[29] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1865: Arguments[29] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1866: Arguments[29] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1867: Arguments[29] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1868: Arguments[29] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1869: Arguments[29] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1870: Arguments[29] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1871: Arguments[29] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1872: Arguments[29] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1873: Arguments[29] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 1874: Arguments[29] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1875: Arguments[29] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1876: Arguments[29] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1877: Arguments[29] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1878: Arguments[29] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1879: Arguments[29] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 1880: Arguments[29] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1881: Arguments[29] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1882: Arguments[29] invMod Arguments[26]
    (Info: triOk;            Val: '209'),                                       // 1883: Arguments[29] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1884: Arguments[29] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1885: Arguments[29] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1886: Arguments[29] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1887: Arguments[29] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1888: Arguments[29] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1889: Arguments[29] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1890: Arguments[29] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1891: Arguments[29] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1892: Arguments[29] invMod Arguments[36]
    (Info: triOk;            Val: '16620516410412306006'),                      // 1893: Arguments[29] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1894: Arguments[29] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1895: Arguments[29] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1896: Arguments[29] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1897: Arguments[29] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1898: Arguments[29] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1899: Arguments[29] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1900: Arguments[29] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1901: Arguments[29] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1902: Arguments[29] invMod Arguments[46]
    (Info: triOk;            Val: '614018259199624083140895572'),               // 1903: Arguments[29] invMod Arguments[47]
    (Info: triOk;            Val: '45314422982317034274068789104'),             // 1904: Arguments[29] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1905: Arguments[29] invMod Arguments[49]
    (Info: triOk;            Val: '435952491019828137535611135444'),            // 1906: Arguments[29] invMod Arguments[50]
    (Info: triOk;            Val: '13912598730028717952480804515'),             // 1907: Arguments[29] invMod Arguments[51]
    (Info: triOk;            Val: '1604550979013403963666118950998547'),        // 1908: Arguments[29] invMod Arguments[52]
    (Info: triOk;            Val: '9151846857511426418274583560717110'),        // 1909: Arguments[29] invMod Arguments[53]
    (Info: triOk;            Val: '63888014389406196501395077745958608438'),    // 1910: Arguments[29] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1911: Arguments[29] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1912: Arguments[29] invMod Arguments[56]
    (Info: triOk;            Val: '8963377827064440066088750534360206457962'),  // 1913: Arguments[29] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1914: Arguments[29] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1915: Arguments[29] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1916: Arguments[29] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1917: Arguments[29] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1918: Arguments[29] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1919: Arguments[29] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1920: Arguments[30] invMod Arguments[0]
    (Info: triOk;            Val: '8110323961430339432032416730989506728663'),  // 1921: Arguments[30] invMod Arguments[1]
    (Info: triOk;            Val: '511522788658148972110209917241'),            // 1922: Arguments[30] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1923: Arguments[30] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1924: Arguments[30] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1925: Arguments[30] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1926: Arguments[30] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1927: Arguments[30] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1928: Arguments[30] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1929: Arguments[30] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1930: Arguments[30] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1931: Arguments[30] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1932: Arguments[30] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1933: Arguments[30] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1934: Arguments[30] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1935: Arguments[30] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1936: Arguments[30] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1937: Arguments[30] invMod Arguments[17]
    (Info: triOk;            Val: '2'),                                         // 1938: Arguments[30] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1939: Arguments[30] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1940: Arguments[30] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 1941: Arguments[30] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 1942: Arguments[30] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1943: Arguments[30] invMod Arguments[23]
    (Info: triOk;            Val: '2'),                                         // 1944: Arguments[30] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1945: Arguments[30] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1946: Arguments[30] invMod Arguments[26]
    (Info: triOk;            Val: '389'),                                       // 1947: Arguments[30] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1948: Arguments[30] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1949: Arguments[30] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1950: Arguments[30] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1951: Arguments[30] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1952: Arguments[30] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1953: Arguments[30] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1954: Arguments[30] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1955: Arguments[30] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1956: Arguments[30] invMod Arguments[36]
    (Info: triOk;            Val: '197197538822362477730'),                     // 1957: Arguments[30] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1958: Arguments[30] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1959: Arguments[30] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1960: Arguments[30] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1961: Arguments[30] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1962: Arguments[30] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1963: Arguments[30] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1964: Arguments[30] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1965: Arguments[30] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1966: Arguments[30] invMod Arguments[46]
    (Info: triOk;            Val: '4022809949788504880190835183'),              // 1967: Arguments[30] invMod Arguments[47]
    (Info: triOk;            Val: '30024788561138614411411823554'),             // 1968: Arguments[30] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1969: Arguments[30] invMod Arguments[49]
    (Info: triOk;            Val: '511522788658148972110209917241'),            // 1970: Arguments[30] invMod Arguments[50]
    (Info: triOk;            Val: '57946539263363513878503383358'),             // 1971: Arguments[30] invMod Arguments[51]
    (Info: triOk;            Val: '3553765325422134277231516021078655'),        // 1972: Arguments[30] invMod Arguments[52]
    (Info: triOk;            Val: '915184685751142641827458356071711'),         // 1973: Arguments[30] invMod Arguments[53]
    (Info: triOk;            Val: '74445274823128312328057034001981861843'),    // 1974: Arguments[30] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1975: Arguments[30] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1976: Arguments[30] invMod Arguments[56]
    (Info: triOk;            Val: '8110323961430339432032416730989506728663'),  // 1977: Arguments[30] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1978: Arguments[30] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1979: Arguments[30] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1980: Arguments[30] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1981: Arguments[30] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1982: Arguments[30] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1983: Arguments[30] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1984: Arguments[31] invMod Arguments[0]
    (Info: triOk;            Val: '2614528940824007799559127092487322193583'),  // 1985: Arguments[31] invMod Arguments[1]
    (Info: triOk;            Val: '753043588200064134745994197269'),            // 1986: Arguments[31] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1987: Arguments[31] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1988: Arguments[31] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1989: Arguments[31] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1990: Arguments[31] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1991: Arguments[31] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1992: Arguments[31] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1993: Arguments[31] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1994: Arguments[31] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1995: Arguments[31] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1996: Arguments[31] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1997: Arguments[31] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1998: Arguments[31] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 1999: Arguments[31] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2000: Arguments[31] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2001: Arguments[31] invMod Arguments[17]
    (Info: triOk;            Val: '3'),                                         // 2002: Arguments[31] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2003: Arguments[31] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2004: Arguments[31] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2005: Arguments[31] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2006: Arguments[31] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2007: Arguments[31] invMod Arguments[23]
    (Info: triOk;            Val: '3'),                                         // 2008: Arguments[31] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2009: Arguments[31] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2010: Arguments[31] invMod Arguments[26]
    (Info: triOk;            Val: '407'),                                       // 2011: Arguments[31] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2012: Arguments[31] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2013: Arguments[31] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2014: Arguments[31] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2015: Arguments[31] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2016: Arguments[31] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2017: Arguments[31] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2018: Arguments[31] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2019: Arguments[31] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2020: Arguments[31] invMod Arguments[36]
    (Info: triOk;            Val: '19719753882236247773'),                      // 2021: Arguments[31] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2022: Arguments[31] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2023: Arguments[31] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2024: Arguments[31] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2025: Arguments[31] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2026: Arguments[31] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2027: Arguments[31] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2028: Arguments[31] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2029: Arguments[31] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2030: Arguments[31] invMod Arguments[46]
    (Info: triOk;            Val: '6344393180781664195834201957'),              // 2031: Arguments[31] invMod Arguments[47]
    (Info: triOk;            Val: '28495825119020772425146126999'),             // 2032: Arguments[31] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2033: Arguments[31] invMod Arguments[49]
    (Info: triOk;            Val: '753043588200064134745994197269'),            // 2034: Arguments[31] invMod Arguments[50]
    (Info: triOk;            Val: '51038877438624865054454580661'),             // 2035: Arguments[31] invMod Arguments[51]
    (Info: triOk;            Val: '2779169552199923342626654549235580'),        // 2036: Arguments[31] invMod Arguments[52]
    (Info: triOk;            Val: '9152752980962665173365501836317181'),        // 2037: Arguments[31] invMod Arguments[53]
    (Info: triOk;            Val: '32965705001383215987024775735467936559'),    // 2038: Arguments[31] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2039: Arguments[31] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2040: Arguments[31] invMod Arguments[56]
    (Info: triOk;            Val: '2614528940824007799559127092487322193583'),  // 2041: Arguments[31] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2042: Arguments[31] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2043: Arguments[31] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2044: Arguments[31] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2045: Arguments[31] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2046: Arguments[31] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2047: Arguments[31] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2048: Arguments[32] invMod Arguments[0]
    (Info: triOk;            Val: '2064949438763374636311798128637103740075'),  // 2049: Arguments[32] invMod Arguments[1]
    (Info: triOk;            Val: '153292282079367439867374220343'),            // 2050: Arguments[32] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2051: Arguments[32] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2052: Arguments[32] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2053: Arguments[32] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2054: Arguments[32] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2055: Arguments[32] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2056: Arguments[32] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2057: Arguments[32] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2058: Arguments[32] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2059: Arguments[32] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2060: Arguments[32] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2061: Arguments[32] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2062: Arguments[32] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2063: Arguments[32] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2064: Arguments[32] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2065: Arguments[32] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2066: Arguments[32] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2067: Arguments[32] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2068: Arguments[32] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2069: Arguments[32] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2070: Arguments[32] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2071: Arguments[32] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2072: Arguments[32] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2073: Arguments[32] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2074: Arguments[32] invMod Arguments[26]
    (Info: triOk;            Val: '327'),                                       // 2075: Arguments[32] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2076: Arguments[32] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2077: Arguments[32] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2078: Arguments[32] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2079: Arguments[32] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2080: Arguments[32] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2081: Arguments[32] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2082: Arguments[32] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2083: Arguments[32] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2084: Arguments[32] invMod Arguments[36]
    (Info: triOk;            Val: '99739718978884248342'),                      // 2085: Arguments[32] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2086: Arguments[32] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2087: Arguments[32] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2088: Arguments[32] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2089: Arguments[32] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2090: Arguments[32] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2091: Arguments[32] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2092: Arguments[32] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2093: Arguments[32] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2094: Arguments[32] invMod Arguments[46]
    (Info: triOk;            Val: '14499367751618065071152029886'),             // 2095: Arguments[32] invMod Arguments[47]
    (Info: triOk;            Val: '60209611603442626956525738148'),             // 2096: Arguments[32] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2097: Arguments[32] invMod Arguments[49]
    (Info: triOk;            Val: '153292282079367439867374220343'),            // 2098: Arguments[32] invMod Arguments[50]
    (Info: triOk;            Val: '39037055378078871755398639810'),             // 2099: Arguments[32] invMod Arguments[51]
    (Info: triOk;            Val: '277916955219992334262665454923558'),         // 2100: Arguments[32] invMod Arguments[52]
    (Info: triOk;            Val: '9976509810483817426519306184341728'),        // 2101: Arguments[32] invMod Arguments[53]
    (Info: triOk;            Val: '79860103057349475861359694579356044780'),    // 2102: Arguments[32] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2103: Arguments[32] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2104: Arguments[32] invMod Arguments[56]
    (Info: triOk;            Val: '2064949438763374636311798128637103740075'),  // 2105: Arguments[32] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2106: Arguments[32] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2107: Arguments[32] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2108: Arguments[32] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2109: Arguments[32] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2110: Arguments[32] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2111: Arguments[32] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2112: Arguments[33] invMod Arguments[0]
    (Info: triOk;            Val: '2914040829570343816175079636829903798765'),  // 2113: Arguments[33] invMod Arguments[1]
    (Info: triOk;            Val: '733823441575508732801437604368'),            // 2114: Arguments[33] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2115: Arguments[33] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2116: Arguments[33] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2117: Arguments[33] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2118: Arguments[33] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2119: Arguments[33] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2120: Arguments[33] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2121: Arguments[33] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2122: Arguments[33] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2123: Arguments[33] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2124: Arguments[33] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2125: Arguments[33] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2126: Arguments[33] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2127: Arguments[33] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2128: Arguments[33] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2129: Arguments[33] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2130: Arguments[33] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2131: Arguments[33] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2132: Arguments[33] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2133: Arguments[33] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2134: Arguments[33] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2135: Arguments[33] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2136: Arguments[33] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2137: Arguments[33] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2138: Arguments[33] invMod Arguments[26]
    (Info: triOk;            Val: '301'),                                       // 2139: Arguments[33] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2140: Arguments[33] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2141: Arguments[33] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2142: Arguments[33] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2143: Arguments[33] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2144: Arguments[33] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2145: Arguments[33] invMod Arguments[33]
    (Info: triOk;            Val: '953592226688902814'),                        // 2146: Arguments[33] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2147: Arguments[33] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2148: Arguments[33] invMod Arguments[36]
    (Info: triOk;            Val: '578036811761637109841'),                     // 2149: Arguments[33] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2150: Arguments[33] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2151: Arguments[33] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2152: Arguments[33] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2153: Arguments[33] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2154: Arguments[33] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2155: Arguments[33] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2156: Arguments[33] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2157: Arguments[33] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2158: Arguments[33] invMod Arguments[46]
    (Info: triOk;            Val: '19635788613730531433244856118'),             // 2159: Arguments[33] invMod Arguments[47]
    (Info: triOk;            Val: '22540438527671852103752600185'),             // 2160: Arguments[33] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2161: Arguments[33] invMod Arguments[49]
    (Info: triOk;            Val: '733823441575508732801437604368'),            // 2162: Arguments[33] invMod Arguments[50]
    (Info: triOk;            Val: '68146791342504126503442386556'),             // 2163: Arguments[33] invMod Arguments[51]
    (Info: triOk;            Val: '1581965586822108854437234357358519'),        // 2164: Arguments[33] invMod Arguments[52]
    (Info: triOk;            Val: '14527211412863966800540912342049437'),       // 2165: Arguments[33] invMod Arguments[53]
    (Info: triOk;            Val: '75110638887561259620498119464224383232'),    // 2166: Arguments[33] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2167: Arguments[33] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2168: Arguments[33] invMod Arguments[56]
    (Info: triOk;            Val: '2914040829570343816175079636829903798765'),  // 2169: Arguments[33] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2170: Arguments[33] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2171: Arguments[33] invMod Arguments[59]
    (Info: triOk;            Val: '2740239494651003938458132204760802163793' + 
                                  '47009887934893777039859999117679'),          // 2172: Arguments[33] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2173: Arguments[33] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2174: Arguments[33] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2175: Arguments[33] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2176: Arguments[34] invMod Arguments[0]
    (Info: triOk;            Val: '9051207354658608546677661701231075009661'),  // 2177: Arguments[34] invMod Arguments[1]
    (Info: triOk;            Val: '343801195959953764032898798916'),            // 2178: Arguments[34] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2179: Arguments[34] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2180: Arguments[34] invMod Arguments[4]
    (Info: triOk;            Val: '140872083100222149721140967'),               // 2181: Arguments[34] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2182: Arguments[34] invMod Arguments[6]
    (Info: triOk;            Val: '66064982722656482389003'),                   // 2183: Arguments[34] invMod Arguments[7]
    (Info: triOk;            Val: '1186745832539978050663'),                    // 2184: Arguments[34] invMod Arguments[8]
    (Info: triOk;            Val: '1580628901882143484531'),                    // 2185: Arguments[34] invMod Arguments[9]
    (Info: triOk;            Val: '1571495616254535553747'),                    // 2186: Arguments[34] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2187: Arguments[34] invMod Arguments[11]
    (Info: triOk;            Val: '7767'),                                      // 2188: Arguments[34] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2189: Arguments[34] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2190: Arguments[34] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2191: Arguments[34] invMod Arguments[15]
    (Info: triOk;            Val: '39'),                                        // 2192: Arguments[34] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2193: Arguments[34] invMod Arguments[17]
    (Info: triOk;            Val: '4'),                                         // 2194: Arguments[34] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 2195: Arguments[34] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2196: Arguments[34] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2197: Arguments[34] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2198: Arguments[34] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 2199: Arguments[34] invMod Arguments[23]
    (Info: triOk;            Val: '4'),                                         // 2200: Arguments[34] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2201: Arguments[34] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2202: Arguments[34] invMod Arguments[26]
    (Info: triOk;            Val: '405'),                                       // 2203: Arguments[34] invMod Arguments[27]
    (Info: triOk;            Val: '405'),                                       // 2204: Arguments[34] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2205: Arguments[34] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2206: Arguments[34] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2207: Arguments[34] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2208: Arguments[34] invMod Arguments[32]
    (Info: triOk;            Val: '3485016187140364347'),                       // 2209: Arguments[34] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2210: Arguments[34] invMod Arguments[34]
    (Info: triOk;            Val: '7894092971365513335'),                       // 2211: Arguments[34] invMod Arguments[35]
    (Info: triOk;            Val: '55654013933558293391'),                      // 2212: Arguments[34] invMod Arguments[36]
    (Info: triOk;            Val: '709557524773682859278'),                     // 2213: Arguments[34] invMod Arguments[37]
    (Info: triOk;            Val: '1571495616254535553747'),                    // 2214: Arguments[34] invMod Arguments[38]
    (Info: triOk;            Val: '1580628901882143484531'),                    // 2215: Arguments[34] invMod Arguments[39]
    (Info: triOk;            Val: '1186745832539978050663'),                    // 2216: Arguments[34] invMod Arguments[40]
    (Info: triOk;            Val: '66064982722656482389003'),                   // 2217: Arguments[34] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2218: Arguments[34] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2219: Arguments[34] invMod Arguments[43]
    (Info: triOk;            Val: '140872083100222149721140967'),               // 2220: Arguments[34] invMod Arguments[44]
    (Info: triOk;            Val: '481410119717433362599523481'),               // 2221: Arguments[34] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2222: Arguments[34] invMod Arguments[46]
    (Info: triOk;            Val: '6147937528278255699381690673'),              // 2223: Arguments[34] invMod Arguments[47]
    (Info: triOk;            Val: '37384595626198965643296807127'),             // 2224: Arguments[34] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2225: Arguments[34] invMod Arguments[49]
    (Info: triOk;            Val: '343801195959953764032898798916'),            // 2226: Arguments[34] invMod Arguments[50]
    (Info: triOk;            Val: '25746557455421375523198344237'),             // 2227: Arguments[34] invMod Arguments[51]
    (Info: triOk;            Val: '1279179590678560004846338541184695'),        // 2228: Arguments[34] invMod Arguments[52]
    (Info: triOk;            Val: '34773937007882341795407990882744967'),       // 2229: Arguments[34] invMod Arguments[53]
    (Info: triOk;            Val: '18206678874773973474452398295037439578'),    // 2230: Arguments[34] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2231: Arguments[34] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2232: Arguments[34] invMod Arguments[56]
    (Info: triOk;            Val: '9051207354658608546677661701231075009661'),  // 2233: Arguments[34] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2234: Arguments[34] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2235: Arguments[34] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2236: Arguments[34] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2237: Arguments[34] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2238: Arguments[34] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2239: Arguments[34] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2240: Arguments[35] invMod Arguments[0]
    (Info: triOk;            Val: '1680671020633424179590941368001191132976' + 
                                  '1'),                                         // 2241: Arguments[35] invMod Arguments[1]
    (Info: triOk;            Val: '651893926279060841288610244843'),            // 2242: Arguments[35] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2243: Arguments[35] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2244: Arguments[35] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2245: Arguments[35] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2246: Arguments[35] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2247: Arguments[35] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2248: Arguments[35] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2249: Arguments[35] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2250: Arguments[35] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2251: Arguments[35] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2252: Arguments[35] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2253: Arguments[35] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2254: Arguments[35] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2255: Arguments[35] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2256: Arguments[35] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2257: Arguments[35] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2258: Arguments[35] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2259: Arguments[35] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2260: Arguments[35] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2261: Arguments[35] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2262: Arguments[35] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2263: Arguments[35] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2264: Arguments[35] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2265: Arguments[35] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2266: Arguments[35] invMod Arguments[26]
    (Info: triOk;            Val: '31'),                                        // 2267: Arguments[35] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2268: Arguments[35] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2269: Arguments[35] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2270: Arguments[35] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2271: Arguments[35] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2272: Arguments[35] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2273: Arguments[35] invMod Arguments[33]
    (Info: triOk;            Val: '776413182502762088'),                        // 2274: Arguments[35] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2275: Arguments[35] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2276: Arguments[35] invMod Arguments[36]
    (Info: triOk;            Val: '816482310610018192666'),                     // 2277: Arguments[35] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2278: Arguments[35] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2279: Arguments[35] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2280: Arguments[35] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2281: Arguments[35] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2282: Arguments[35] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2283: Arguments[35] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2284: Arguments[35] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2285: Arguments[35] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2286: Arguments[35] invMod Arguments[46]
    (Info: triOk;            Val: '9895208792476992917394931736'),              // 2287: Arguments[35] invMod Arguments[47]
    (Info: triOk;            Val: '2360636227312193504011746163'),              // 2288: Arguments[35] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2289: Arguments[35] invMod Arguments[49]
    (Info: triOk;            Val: '651893926279060841288610244843'),            // 2290: Arguments[35] invMod Arguments[50]
    (Info: triOk;            Val: '56901886130629423895826520258'),             // 2291: Arguments[35] invMod Arguments[51]
    (Info: triOk;            Val: '1855309231927492220562655874335608'),        // 2292: Arguments[35] invMod Arguments[52]
    (Info: triOk;            Val: '46440165321251479676050743455104377'),       // 2293: Arguments[35] invMod Arguments[53]
    (Info: triOk;            Val: '84727893957663417934457566136851366113'),    // 2294: Arguments[35] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2295: Arguments[35] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2296: Arguments[35] invMod Arguments[56]
    (Info: triOk;            Val: '1680671020633424179590941368001191132976' + 
                                  '1'),                                         // 2297: Arguments[35] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2298: Arguments[35] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2299: Arguments[35] invMod Arguments[59]
    (Info: triOk;            Val: '3266515415230222886665332093084200192906' + 
                                  '98770431437372671219924981071668'),          // 2300: Arguments[35] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2301: Arguments[35] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2302: Arguments[35] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2303: Arguments[35] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2304: Arguments[36] invMod Arguments[0]
    (Info: triOk;            Val: '7650792202982875239986344208106148836093'),  // 2305: Arguments[36] invMod Arguments[1]
    (Info: triOk;            Val: '161115334284139770933284711049'),            // 2306: Arguments[36] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2307: Arguments[36] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2308: Arguments[36] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2309: Arguments[36] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2310: Arguments[36] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2311: Arguments[36] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2312: Arguments[36] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2313: Arguments[36] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2314: Arguments[36] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2315: Arguments[36] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2316: Arguments[36] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2317: Arguments[36] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2318: Arguments[36] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2319: Arguments[36] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2320: Arguments[36] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2321: Arguments[36] invMod Arguments[17]
    (Info: triOk;            Val: '2'),                                         // 2322: Arguments[36] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2323: Arguments[36] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2324: Arguments[36] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2325: Arguments[36] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2326: Arguments[36] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2327: Arguments[36] invMod Arguments[23]
    (Info: triOk;            Val: '2'),                                         // 2328: Arguments[36] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2329: Arguments[36] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2330: Arguments[36] invMod Arguments[26]
    (Info: triOk;            Val: '397'),                                       // 2331: Arguments[36] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2332: Arguments[36] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2333: Arguments[36] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2334: Arguments[36] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2335: Arguments[36] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2336: Arguments[36] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2337: Arguments[36] invMod Arguments[33]
    (Info: triOk;            Val: '3652889674359047421'),                       // 2338: Arguments[36] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2339: Arguments[36] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2340: Arguments[36] invMod Arguments[36]
    (Info: triOk;            Val: '150810568329193161237'),                     // 2341: Arguments[36] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2342: Arguments[36] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2343: Arguments[36] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2344: Arguments[36] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2345: Arguments[36] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2346: Arguments[36] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2347: Arguments[36] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2348: Arguments[36] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2349: Arguments[36] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2350: Arguments[36] invMod Arguments[46]
    (Info: triOk;            Val: '15237464408077856458912121068'),             // 2351: Arguments[36] invMod Arguments[47]
    (Info: triOk;            Val: '8449561776364240019839095364'),              // 2352: Arguments[36] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2353: Arguments[36] invMod Arguments[49]
    (Info: triOk;            Val: '161115334284139770933284711049'),            // 2354: Arguments[36] invMod Arguments[50]
    (Info: triOk;            Val: '56076014489745487951276027579'),             // 2355: Arguments[36] invMod Arguments[51]
    (Info: triOk;            Val: '3835891674169512181571661414142121'),        // 2356: Arguments[36] invMod Arguments[52]
    (Info: triOk;            Val: '52305303390833527582762499174591424'),       // 2357: Arguments[36] invMod Arguments[53]
    (Info: triOk;            Val: '23890268506024640081883830978933816666'),    // 2358: Arguments[36] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2359: Arguments[36] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2360: Arguments[36] invMod Arguments[56]
    (Info: triOk;            Val: '7650792202982875239986344208106148836093'),  // 2361: Arguments[36] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2362: Arguments[36] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2363: Arguments[36] invMod Arguments[59]
    (Info: triOk;            Val: '2096038755922346487718454765201406998825' + 
                                  '8245073101951517639055222130496'),           // 2364: Arguments[36] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2365: Arguments[36] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2366: Arguments[36] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2367: Arguments[36] invMod Arguments[63]
    (Info: triOk;            Val: '4855829375961791873612578873692266315120' + 
                                  '63'),                                        // 2368: Arguments[37] invMod Arguments[0]
    (Info: triOk;            Val: '1560718163666227375694473300308988058765' + 
                                  '7'),                                         // 2369: Arguments[37] invMod Arguments[1]
    (Info: triOk;            Val: '440870722680614223149835247259'),            // 2370: Arguments[37] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2371: Arguments[37] invMod Arguments[3]
    (Info: triOk;            Val: '5291164313380882707195064363'),              // 2372: Arguments[37] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2373: Arguments[37] invMod Arguments[5]
    (Info: triOk;            Val: '5742448327611042017288383'),                 // 2374: Arguments[37] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2375: Arguments[37] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2376: Arguments[37] invMod Arguments[8]
    (Info: triOk;            Val: '3357257917642942926391'),                    // 2377: Arguments[37] invMod Arguments[9]
    (Info: triOk;            Val: '1447905731222198525311'),                    // 2378: Arguments[37] invMod Arguments[10]
    (Info: triOk;            Val: '97983'),                                     // 2379: Arguments[37] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2380: Arguments[37] invMod Arguments[12]
    (Info: triOk;            Val: '7983'),                                      // 2381: Arguments[37] invMod Arguments[13]
    (Info: triOk;            Val: '983'),                                       // 2382: Arguments[37] invMod Arguments[14]
    (Info: triOk;            Val: '83'),                                        // 2383: Arguments[37] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2384: Arguments[37] invMod Arguments[16]
    (Info: triOk;            Val: '3'),                                         // 2385: Arguments[37] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2386: Arguments[37] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 2387: Arguments[37] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2388: Arguments[37] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2389: Arguments[37] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2390: Arguments[37] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 2391: Arguments[37] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2392: Arguments[37] invMod Arguments[24]
    (Info: triOk;            Val: '3'),                                         // 2393: Arguments[37] invMod Arguments[25]
    (Info: triOk;            Val: '83'),                                        // 2394: Arguments[37] invMod Arguments[26]
    (Info: triOk;            Val: '140'),                                       // 2395: Arguments[37] invMod Arguments[27]
    (Info: triOk;            Val: '549'),                                       // 2396: Arguments[37] invMod Arguments[28]
    (Info: triOk;            Val: '983'),                                       // 2397: Arguments[37] invMod Arguments[29]
    (Info: triOk;            Val: '7983'),                                      // 2398: Arguments[37] invMod Arguments[30]
    (Info: triOk;            Val: '97983'),                                     // 2399: Arguments[37] invMod Arguments[31]
    (Info: triOk;            Val: '897983'),                                    // 2400: Arguments[37] invMod Arguments[32]
    (Info: triOk;            Val: '1730947684776295095'),                       // 2401: Arguments[37] invMod Arguments[33]
    (Info: triOk;            Val: '1477406262693252648'),                       // 2402: Arguments[37] invMod Arguments[34]
    (Info: triOk;            Val: '1520708729921208319'),                       // 2403: Arguments[37] invMod Arguments[35]
    (Info: triOk;            Val: '146206169408943752663'),                     // 2404: Arguments[37] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2405: Arguments[37] invMod Arguments[37]
    (Info: triOk;            Val: '1447905731222198525311'),                    // 2406: Arguments[37] invMod Arguments[38]
    (Info: triOk;            Val: '3357257917642942926391'),                    // 2407: Arguments[37] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2408: Arguments[37] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2409: Arguments[37] invMod Arguments[41]
    (Info: triOk;            Val: '84836575994990227881983'),                   // 2410: Arguments[37] invMod Arguments[42]
    (Info: triOk;            Val: '5742448327611042017288383'),                 // 2411: Arguments[37] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2412: Arguments[37] invMod Arguments[44]
    (Info: triOk;            Val: '994651672025840439141102737'),               // 2413: Arguments[37] invMod Arguments[45]
    (Info: triOk;            Val: '5291164313380882707195064363'),              // 2414: Arguments[37] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2415: Arguments[37] invMod Arguments[47]
    (Info: triOk;            Val: '19023221054540467126292314117'),             // 2416: Arguments[37] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2417: Arguments[37] invMod Arguments[49]
    (Info: triOk;            Val: '440870722680614223149835247259'),            // 2418: Arguments[37] invMod Arguments[50]
    (Info: triOk;            Val: '87966154015739248148133195375'),             // 2419: Arguments[37] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2420: Arguments[37] invMod Arguments[52]
    (Info: triOk;            Val: '56963564823738159219185938751669898'),       // 2421: Arguments[37] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2422: Arguments[37] invMod Arguments[54]
    (Info: triOk;            Val: '22481932130136572706943009346333641733'),    // 2423: Arguments[37] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2424: Arguments[37] invMod Arguments[56]
    (Info: triOk;            Val: '1560718163666227375694473300308988058765' + 
                                  '7'),                                         // 2425: Arguments[37] invMod Arguments[57]
    (Info: triOk;            Val: '4855829375961791873612578873692266315120' + 
                                  '63'),                                        // 2426: Arguments[37] invMod Arguments[58]
    (Info: triOk;            Val: '7306378704818885094737989850631252755304' + 
                                  '93588604708432230620866669063'),             // 2427: Arguments[37] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2428: Arguments[37] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2429: Arguments[37] invMod Arguments[61]
    (Info: triOk;            Val: '8894185897983'),                             // 2430: Arguments[37] invMod Arguments[62]
    (Info: triOk;            Val: '3509462154786577988816251330254451782351' + 
                                  '05248894185897983'),                         // 2431: Arguments[37] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2432: Arguments[38] invMod Arguments[0]
    (Info: triOk;            Val: '7567694226572331440360778290905040713788'),  // 2433: Arguments[38] invMod Arguments[1]
    (Info: triOk;            Val: '744724841075590834286646919934'),            // 2434: Arguments[38] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2435: Arguments[38] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2436: Arguments[38] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2437: Arguments[38] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2438: Arguments[38] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2439: Arguments[38] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2440: Arguments[38] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2441: Arguments[38] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2442: Arguments[38] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2443: Arguments[38] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2444: Arguments[38] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2445: Arguments[38] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2446: Arguments[38] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2447: Arguments[38] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2448: Arguments[38] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2449: Arguments[38] invMod Arguments[17]
    (Info: triOk;            Val: '3'),                                         // 2450: Arguments[38] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2451: Arguments[38] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2452: Arguments[38] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2453: Arguments[38] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2454: Arguments[38] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2455: Arguments[38] invMod Arguments[23]
    (Info: triOk;            Val: '3'),                                         // 2456: Arguments[38] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2457: Arguments[38] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2458: Arguments[38] invMod Arguments[26]
    (Info: triOk;            Val: '191'),                                       // 2459: Arguments[38] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2460: Arguments[38] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2461: Arguments[38] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2462: Arguments[38] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2463: Arguments[38] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2464: Arguments[38] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2465: Arguments[38] invMod Arguments[33]
    (Info: triOk;            Val: '327676468320579793'),                        // 2466: Arguments[38] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2467: Arguments[38] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2468: Arguments[38] invMod Arguments[36]
    (Info: triOk;            Val: '131679225742613392959'),                     // 2469: Arguments[38] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2470: Arguments[38] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2471: Arguments[38] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2472: Arguments[38] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2473: Arguments[38] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2474: Arguments[38] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2475: Arguments[38] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2476: Arguments[38] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2477: Arguments[38] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2478: Arguments[38] invMod Arguments[46]
    (Info: triOk;            Val: '2779435395962345978337826860'),              // 2479: Arguments[38] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2480: Arguments[38] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2481: Arguments[38] invMod Arguments[49]
    (Info: triOk;            Val: '744724841075590834286646919934'),            // 2482: Arguments[38] invMod Arguments[50]
    (Info: triOk;            Val: '24988848085057855018164601289'),             // 2483: Arguments[38] invMod Arguments[51]
    (Info: triOk;            Val: '867073637380519912172644088160859'),         // 2484: Arguments[38] invMod Arguments[52]
    (Info: triOk;            Val: '75436663542456688114376247943543857'),       // 2485: Arguments[38] invMod Arguments[53]
    (Info: triOk;            Val: '19869586264179993866583822562427733303'),    // 2486: Arguments[38] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2487: Arguments[38] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2488: Arguments[38] invMod Arguments[56]
    (Info: triOk;            Val: '7567694226572331440360778290905040713788'),  // 2489: Arguments[38] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2490: Arguments[38] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2491: Arguments[38] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2492: Arguments[38] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2493: Arguments[38] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2494: Arguments[38] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2495: Arguments[38] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2496: Arguments[39] invMod Arguments[0]
    (Info: triOk;            Val: '1695478882578124127382795587726085132403' + 
                                  '8'),                                         // 2497: Arguments[39] invMod Arguments[1]
    (Info: triOk;            Val: '152313960169333662391077300197'),            // 2498: Arguments[39] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2499: Arguments[39] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2500: Arguments[39] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2501: Arguments[39] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2502: Arguments[39] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2503: Arguments[39] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2504: Arguments[39] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2505: Arguments[39] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2506: Arguments[39] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2507: Arguments[39] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2508: Arguments[39] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2509: Arguments[39] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2510: Arguments[39] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2511: Arguments[39] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2512: Arguments[39] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2513: Arguments[39] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 2514: Arguments[39] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2515: Arguments[39] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2516: Arguments[39] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2517: Arguments[39] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2518: Arguments[39] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2519: Arguments[39] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 2520: Arguments[39] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2521: Arguments[39] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2522: Arguments[39] invMod Arguments[26]
    (Info: triOk;            Val: '327'),                                       // 2523: Arguments[39] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2524: Arguments[39] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2525: Arguments[39] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2526: Arguments[39] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2527: Arguments[39] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2528: Arguments[39] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2529: Arguments[39] invMod Arguments[33]
    (Info: triOk;            Val: '4357753672709582029'),                       // 2530: Arguments[39] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2531: Arguments[39] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2532: Arguments[39] invMod Arguments[36]
    (Info: triOk;            Val: '580846774690797180683'),                     // 2533: Arguments[39] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2534: Arguments[39] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2535: Arguments[39] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2536: Arguments[39] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2537: Arguments[39] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2538: Arguments[39] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2539: Arguments[39] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2540: Arguments[39] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2541: Arguments[39] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2542: Arguments[39] invMod Arguments[46]
    (Info: triOk;            Val: '9785590694082674952676030372'),              // 2543: Arguments[39] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2544: Arguments[39] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2545: Arguments[39] invMod Arguments[49]
    (Info: triOk;            Val: '152313960169333662391077300197'),            // 2546: Arguments[39] invMod Arguments[50]
    (Info: triOk;            Val: '74374870441742441991744420662'),             // 2547: Arguments[39] invMod Arguments[51]
    (Info: triOk;            Val: '2229694699866269208698651328353349'),        // 2548: Arguments[39] invMod Arguments[52]
    (Info: triOk;            Val: '53592688714626185435630055625913533'),       // 2549: Arguments[39] invMod Arguments[53]
    (Info: triOk;            Val: '25229023781319419672867674718817433614'),    // 2550: Arguments[39] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2551: Arguments[39] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2552: Arguments[39] invMod Arguments[56]
    (Info: triOk;            Val: '1695478882578124127382795587726085132403' + 
                                  '8'),                                         // 2553: Arguments[39] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2554: Arguments[39] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2555: Arguments[39] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2556: Arguments[39] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2557: Arguments[39] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2558: Arguments[39] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2559: Arguments[39] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2560: Arguments[40] invMod Arguments[0]
    (Info: triOk;            Val: '9386940359816136856428755393970900449470'),  // 2561: Arguments[40] invMod Arguments[1]
    (Info: triOk;            Val: '414561003113717244437762341420'),            // 2562: Arguments[40] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2563: Arguments[40] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2564: Arguments[40] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2565: Arguments[40] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2566: Arguments[40] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2567: Arguments[40] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2568: Arguments[40] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2569: Arguments[40] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2570: Arguments[40] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2571: Arguments[40] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2572: Arguments[40] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2573: Arguments[40] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2574: Arguments[40] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2575: Arguments[40] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2576: Arguments[40] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2577: Arguments[40] invMod Arguments[17]
    (Info: triOk;            Val: '4'),                                         // 2578: Arguments[40] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2579: Arguments[40] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2580: Arguments[40] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2581: Arguments[40] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2582: Arguments[40] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2583: Arguments[40] invMod Arguments[23]
    (Info: triOk;            Val: '4'),                                         // 2584: Arguments[40] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2585: Arguments[40] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2586: Arguments[40] invMod Arguments[26]
    (Info: triOk;            Val: '362'),                                       // 2587: Arguments[40] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2588: Arguments[40] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2589: Arguments[40] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2590: Arguments[40] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2591: Arguments[40] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2592: Arguments[40] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2593: Arguments[40] invMod Arguments[33]
    (Info: triOk;            Val: '4910710100442178079'),                       // 2594: Arguments[40] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2595: Arguments[40] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2596: Arguments[40] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2597: Arguments[40] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2598: Arguments[40] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2599: Arguments[40] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2600: Arguments[40] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2601: Arguments[40] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2602: Arguments[40] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2603: Arguments[40] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2604: Arguments[40] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2605: Arguments[40] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2606: Arguments[40] invMod Arguments[46]
    (Info: triOk;            Val: '7840918118887751269505018953'),              // 2607: Arguments[40] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2608: Arguments[40] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2609: Arguments[40] invMod Arguments[49]
    (Info: triOk;            Val: '414561003113717244437762341420'),            // 2610: Arguments[40] invMod Arguments[50]
    (Info: triOk;            Val: '91103056629863494262977037952'),             // 2611: Arguments[40] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2612: Arguments[40] invMod Arguments[52]
    (Info: triOk;            Val: '56187463940044438386171828393648839'),       // 2613: Arguments[40] invMod Arguments[53]
    (Info: triOk;            Val: '5208774021620384546626085991165125570'),     // 2614: Arguments[40] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2615: Arguments[40] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2616: Arguments[40] invMod Arguments[56]
    (Info: triOk;            Val: '9386940359816136856428755393970900449470'),  // 2617: Arguments[40] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2618: Arguments[40] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2619: Arguments[40] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2620: Arguments[40] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2621: Arguments[40] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2622: Arguments[40] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2623: Arguments[40] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2624: Arguments[41] invMod Arguments[0]
    (Info: triOk;            Val: '1090559856712113109407079147310721183889' + 
                                  '8'),                                         // 2625: Arguments[41] invMod Arguments[1]
    (Info: triOk;            Val: '649760937424066080654779211799'),            // 2626: Arguments[41] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2627: Arguments[41] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2628: Arguments[41] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2629: Arguments[41] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2630: Arguments[41] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2631: Arguments[41] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2632: Arguments[41] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2633: Arguments[41] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2634: Arguments[41] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2635: Arguments[41] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2636: Arguments[41] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2637: Arguments[41] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2638: Arguments[41] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2639: Arguments[41] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2640: Arguments[41] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2641: Arguments[41] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2642: Arguments[41] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2643: Arguments[41] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2644: Arguments[41] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2645: Arguments[41] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2646: Arguments[41] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2647: Arguments[41] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2648: Arguments[41] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2649: Arguments[41] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2650: Arguments[41] invMod Arguments[26]
    (Info: triOk;            Val: '74'),                                        // 2651: Arguments[41] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2652: Arguments[41] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2653: Arguments[41] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2654: Arguments[41] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2655: Arguments[41] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2656: Arguments[41] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2657: Arguments[41] invMod Arguments[33]
    (Info: triOk;            Val: '596274671424002148'),                        // 2658: Arguments[41] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2659: Arguments[41] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2660: Arguments[41] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2661: Arguments[41] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2662: Arguments[41] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2663: Arguments[41] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2664: Arguments[41] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2665: Arguments[41] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2666: Arguments[41] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2667: Arguments[41] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2668: Arguments[41] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2669: Arguments[41] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2670: Arguments[41] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2671: Arguments[41] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2672: Arguments[41] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2673: Arguments[41] invMod Arguments[49]
    (Info: triOk;            Val: '649760937424066080654779211799'),            // 2674: Arguments[41] invMod Arguments[50]
    (Info: triOk;            Val: '2814816936117933570118721486'),              // 2675: Arguments[41] invMod Arguments[51]
    (Info: triOk;            Val: '331508140436563415931526353698079'),         // 2676: Arguments[41] invMod Arguments[52]
    (Info: triOk;            Val: '70139510991271793821724419891814360'),       // 2677: Arguments[41] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2678: Arguments[41] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2679: Arguments[41] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2680: Arguments[41] invMod Arguments[56]
    (Info: triOk;            Val: '1090559856712113109407079147310721183889' + 
                                  '8'),                                         // 2681: Arguments[41] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2682: Arguments[41] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2683: Arguments[41] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2684: Arguments[41] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2685: Arguments[41] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2686: Arguments[41] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2687: Arguments[41] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2688: Arguments[42] invMod Arguments[0]
    (Info: triOk;            Val: '6254185442498827793715039925912444287772'),  // 2689: Arguments[42] invMod Arguments[1]
    (Info: triOk;            Val: '328890318497329330421726601087'),            // 2690: Arguments[42] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2691: Arguments[42] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2692: Arguments[42] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2693: Arguments[42] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2694: Arguments[42] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2695: Arguments[42] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2696: Arguments[42] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2697: Arguments[42] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2698: Arguments[42] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2699: Arguments[42] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2700: Arguments[42] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2701: Arguments[42] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2702: Arguments[42] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2703: Arguments[42] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2704: Arguments[42] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2705: Arguments[42] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 2706: Arguments[42] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2707: Arguments[42] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2708: Arguments[42] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2709: Arguments[42] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2710: Arguments[42] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2711: Arguments[42] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 2712: Arguments[42] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2713: Arguments[42] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2714: Arguments[42] invMod Arguments[26]
    (Info: triOk;            Val: '175'),                                       // 2715: Arguments[42] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2716: Arguments[42] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2717: Arguments[42] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2718: Arguments[42] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2719: Arguments[42] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2720: Arguments[42] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2721: Arguments[42] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2722: Arguments[42] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2723: Arguments[42] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2724: Arguments[42] invMod Arguments[36]
    (Info: triOk;            Val: '12797923517232399222'),                      // 2725: Arguments[42] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2726: Arguments[42] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2727: Arguments[42] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2728: Arguments[42] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2729: Arguments[42] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2730: Arguments[42] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2731: Arguments[42] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2732: Arguments[42] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2733: Arguments[42] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2734: Arguments[42] invMod Arguments[46]
    (Info: triOk;            Val: '7273561858336461519739525980'),              // 2735: Arguments[42] invMod Arguments[47]
    (Info: triOk;            Val: '9671559138305115605448618037'),              // 2736: Arguments[42] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2737: Arguments[42] invMod Arguments[49]
    (Info: triOk;            Val: '328890318497329330421726601087'),            // 2738: Arguments[42] invMod Arguments[50]
    (Info: triOk;            Val: '109522405189183770475393322172'),            // 2739: Arguments[42] invMod Arguments[51]
    (Info: triOk;            Val: '1751171134187588057404301173760445'),        // 2740: Arguments[42] invMod Arguments[52]
    (Info: triOk;            Val: '15513679434040327216651877745423006'),       // 2741: Arguments[42] invMod Arguments[53]
    (Info: triOk;            Val: '78626403129210405676981517197568874569'),    // 2742: Arguments[42] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2743: Arguments[42] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2744: Arguments[42] invMod Arguments[56]
    (Info: triOk;            Val: '6254185442498827793715039925912444287772'),  // 2745: Arguments[42] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2746: Arguments[42] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2747: Arguments[42] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2748: Arguments[42] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2749: Arguments[42] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2750: Arguments[42] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2751: Arguments[42] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2752: Arguments[43] invMod Arguments[0]
    (Info: triOk;            Val: '7289714708870749236941570477981684760861'),  // 2753: Arguments[43] invMod Arguments[1]
    (Info: triOk;            Val: '668235950487620579491436297170'),            // 2754: Arguments[43] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2755: Arguments[43] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2756: Arguments[43] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2757: Arguments[43] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2758: Arguments[43] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2759: Arguments[43] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2760: Arguments[43] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2761: Arguments[43] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2762: Arguments[43] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2763: Arguments[43] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2764: Arguments[43] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2765: Arguments[43] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2766: Arguments[43] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2767: Arguments[43] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2768: Arguments[43] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2769: Arguments[43] invMod Arguments[17]
    (Info: triOk;            Val: '2'),                                         // 2770: Arguments[43] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2771: Arguments[43] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2772: Arguments[43] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2773: Arguments[43] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2774: Arguments[43] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2775: Arguments[43] invMod Arguments[23]
    (Info: triOk;            Val: '2'),                                         // 2776: Arguments[43] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2777: Arguments[43] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2778: Arguments[43] invMod Arguments[26]
    (Info: triOk;            Val: '201'),                                       // 2779: Arguments[43] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2780: Arguments[43] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2781: Arguments[43] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2782: Arguments[43] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2783: Arguments[43] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2784: Arguments[43] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2785: Arguments[43] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2786: Arguments[43] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2787: Arguments[43] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2788: Arguments[43] invMod Arguments[36]
    (Info: triOk;            Val: '186546275112815242039'),                     // 2789: Arguments[43] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2790: Arguments[43] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2791: Arguments[43] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2792: Arguments[43] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2793: Arguments[43] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2794: Arguments[43] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2795: Arguments[43] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2796: Arguments[43] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2797: Arguments[43] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2798: Arguments[43] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2799: Arguments[43] invMod Arguments[47]
    (Info: triOk;            Val: '24852914651174744806412092976'),             // 2800: Arguments[43] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2801: Arguments[43] invMod Arguments[49]
    (Info: triOk;            Val: '668235950487620579491436297170'),            // 2802: Arguments[43] invMod Arguments[50]
    (Info: triOk;            Val: '110750528118769984044754377171'),            // 2803: Arguments[43] invMod Arguments[51]
    (Info: triOk;            Val: '3864707964422648172109849512161336'),        // 2804: Arguments[43] invMod Arguments[52]
    (Info: triOk;            Val: '43851280760286526325188169219134247'),       // 2805: Arguments[43] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2806: Arguments[43] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2807: Arguments[43] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2808: Arguments[43] invMod Arguments[56]
    (Info: triOk;            Val: '7289714708870749236941570477981684760861'),  // 2809: Arguments[43] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2810: Arguments[43] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2811: Arguments[43] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2812: Arguments[43] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2813: Arguments[43] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2814: Arguments[43] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2815: Arguments[43] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2816: Arguments[44] invMod Arguments[0]
    (Info: triOk;            Val: '8873727540824559031873767215942486585053'),  // 2817: Arguments[44] invMod Arguments[1]
    (Info: triOk;            Val: '364493229362416537299951529815'),            // 2818: Arguments[44] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2819: Arguments[44] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2820: Arguments[44] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2821: Arguments[44] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2822: Arguments[44] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2823: Arguments[44] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2824: Arguments[44] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2825: Arguments[44] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2826: Arguments[44] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2827: Arguments[44] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2828: Arguments[44] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2829: Arguments[44] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2830: Arguments[44] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2831: Arguments[44] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2832: Arguments[44] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2833: Arguments[44] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2834: Arguments[44] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2835: Arguments[44] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2836: Arguments[44] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2837: Arguments[44] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2838: Arguments[44] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2839: Arguments[44] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2840: Arguments[44] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2841: Arguments[44] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2842: Arguments[44] invMod Arguments[26]
    (Info: triOk;            Val: '302'),                                       // 2843: Arguments[44] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2844: Arguments[44] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2845: Arguments[44] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2846: Arguments[44] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2847: Arguments[44] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2848: Arguments[44] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2849: Arguments[44] invMod Arguments[33]
    (Info: triOk;            Val: '3868447505096986831'),                       // 2850: Arguments[44] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2851: Arguments[44] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2852: Arguments[44] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2853: Arguments[44] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2854: Arguments[44] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2855: Arguments[44] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2856: Arguments[44] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2857: Arguments[44] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2858: Arguments[44] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2859: Arguments[44] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2860: Arguments[44] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2861: Arguments[44] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2862: Arguments[44] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2863: Arguments[44] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2864: Arguments[44] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2865: Arguments[44] invMod Arguments[49]
    (Info: triOk;            Val: '364493229362416537299951529815'),            // 2866: Arguments[44] invMod Arguments[50]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2867: Arguments[44] invMod Arguments[51]
    (Info: triOk;            Val: '3600258353634371224679923109990335'),        // 2868: Arguments[44] invMod Arguments[52]
    (Info: triOk;            Val: '62193593116749160793753937454075665'),       // 2869: Arguments[44] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2870: Arguments[44] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2871: Arguments[44] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2872: Arguments[44] invMod Arguments[56]
    (Info: triOk;            Val: '8873727540824559031873767215942486585053'),  // 2873: Arguments[44] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2874: Arguments[44] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2875: Arguments[44] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2876: Arguments[44] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2877: Arguments[44] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2878: Arguments[44] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2879: Arguments[44] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2880: Arguments[45] invMod Arguments[0]
    (Info: triOk;            Val: '1649708525707747323078936828328166637430' + 
                                  '9'),                                         // 2881: Arguments[45] invMod Arguments[1]
    (Info: triOk;            Val: '132405524331690185559274540979'),            // 2882: Arguments[45] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2883: Arguments[45] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2884: Arguments[45] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2885: Arguments[45] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2886: Arguments[45] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2887: Arguments[45] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2888: Arguments[45] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2889: Arguments[45] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2890: Arguments[45] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2891: Arguments[45] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2892: Arguments[45] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2893: Arguments[45] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2894: Arguments[45] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2895: Arguments[45] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2896: Arguments[45] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2897: Arguments[45] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 2898: Arguments[45] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2899: Arguments[45] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2900: Arguments[45] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2901: Arguments[45] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2902: Arguments[45] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2903: Arguments[45] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 2904: Arguments[45] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2905: Arguments[45] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2906: Arguments[45] invMod Arguments[26]
    (Info: triOk;            Val: '5'),                                         // 2907: Arguments[45] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2908: Arguments[45] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2909: Arguments[45] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2910: Arguments[45] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2911: Arguments[45] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2912: Arguments[45] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2913: Arguments[45] invMod Arguments[33]
    (Info: triOk;            Val: '3301581732354774314'),                       // 2914: Arguments[45] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2915: Arguments[45] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2916: Arguments[45] invMod Arguments[36]
    (Info: triOk;            Val: '195638387119082826210'),                     // 2917: Arguments[45] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2918: Arguments[45] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2919: Arguments[45] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2920: Arguments[45] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2921: Arguments[45] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2922: Arguments[45] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2923: Arguments[45] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2924: Arguments[45] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2925: Arguments[45] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2926: Arguments[45] invMod Arguments[46]
    (Info: triOk;            Val: '13907355927253494918721895139'),             // 2927: Arguments[45] invMod Arguments[47]
    (Info: triOk;            Val: '44255006274235412409585326968'),             // 2928: Arguments[45] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2929: Arguments[45] invMod Arguments[49]
    (Info: triOk;            Val: '132405524331690185559274540979'),            // 2930: Arguments[45] invMod Arguments[50]
    (Info: triOk;            Val: '12156847810947533645103940819'),             // 2931: Arguments[45] invMod Arguments[51]
    (Info: triOk;            Val: '2608155291229044072717372180187668'),        // 2932: Arguments[45] invMod Arguments[52]
    (Info: triOk;            Val: '50001121365377346051960043330435753'),       // 2933: Arguments[45] invMod Arguments[53]
    (Info: triOk;            Val: '47165457718332159972902011239436184726'),    // 2934: Arguments[45] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2935: Arguments[45] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2936: Arguments[45] invMod Arguments[56]
    (Info: triOk;            Val: '1649708525707747323078936828328166637430' + 
                                  '9'),                                         // 2937: Arguments[45] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2938: Arguments[45] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2939: Arguments[45] invMod Arguments[59]
    (Info: triOk;            Val: '2923641521264241407478233533741443682725' + 
                                  '5968845170149182188409548963674'),           // 2940: Arguments[45] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2941: Arguments[45] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2942: Arguments[45] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2943: Arguments[45] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2944: Arguments[46] invMod Arguments[0]
    (Info: triOk;            Val: '1452351116297520204138341870803374376052' + 
                                  '5'),                                         // 2945: Arguments[46] invMod Arguments[1]
    (Info: triOk;            Val: '597823814095296867877360260488'),            // 2946: Arguments[46] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2947: Arguments[46] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2948: Arguments[46] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2949: Arguments[46] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2950: Arguments[46] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2951: Arguments[46] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2952: Arguments[46] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2953: Arguments[46] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2954: Arguments[46] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2955: Arguments[46] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2956: Arguments[46] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2957: Arguments[46] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2958: Arguments[46] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2959: Arguments[46] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2960: Arguments[46] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2961: Arguments[46] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 2962: Arguments[46] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2963: Arguments[46] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2964: Arguments[46] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 2965: Arguments[46] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 2966: Arguments[46] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2967: Arguments[46] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 2968: Arguments[46] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2969: Arguments[46] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2970: Arguments[46] invMod Arguments[26]
    (Info: triOk;            Val: '249'),                                       // 2971: Arguments[46] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2972: Arguments[46] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2973: Arguments[46] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2974: Arguments[46] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2975: Arguments[46] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2976: Arguments[46] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2977: Arguments[46] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2978: Arguments[46] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2979: Arguments[46] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2980: Arguments[46] invMod Arguments[36]
    (Info: triOk;            Val: '392529467340772903373'),                     // 2981: Arguments[46] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2982: Arguments[46] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2983: Arguments[46] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2984: Arguments[46] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2985: Arguments[46] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2986: Arguments[46] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2987: Arguments[46] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2988: Arguments[46] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2989: Arguments[46] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2990: Arguments[46] invMod Arguments[46]
    (Info: triOk;            Val: '7621475933679641297675142418'),              // 2991: Arguments[46] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2992: Arguments[46] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2993: Arguments[46] invMod Arguments[49]
    (Info: triOk;            Val: '597823814095296867877360260488'),            // 2994: Arguments[46] invMod Arguments[50]
    (Info: triOk;            Val: '3293678353565560794652365234'),              // 2995: Arguments[46] invMod Arguments[51]
    (Info: triOk;            Val: '3798374454935577835011798094158356'),        // 2996: Arguments[46] invMod Arguments[52]
    (Info: triOk;            Val: '22971489948517679291346804629478719'),       // 2997: Arguments[46] invMod Arguments[53]
    (Info: triOk;            Val: '5589548503218728980531864452620536357'),     // 2998: Arguments[46] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 2999: Arguments[46] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3000: Arguments[46] invMod Arguments[56]
    (Info: triOk;            Val: '1452351116297520204138341870803374376052' + 
                                  '5'),                                         // 3001: Arguments[46] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3002: Arguments[46] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3003: Arguments[46] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3004: Arguments[46] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3005: Arguments[46] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3006: Arguments[46] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3007: Arguments[46] invMod Arguments[63]
    (Info: triOk;            Val: '1565447761371874553070245104761540179918' + 
                                  '849'),                                       // 3008: Arguments[47] invMod Arguments[0]
    (Info: triOk;            Val: '9625436355905675113248784645868888518597'),  // 3009: Arguments[47] invMod Arguments[1]
    (Info: triOk;            Val: '312599383081564498559687287538'),            // 3010: Arguments[47] invMod Arguments[2]
    (Info: triOk;            Val: '74227577247208872378953886349'),             // 3011: Arguments[47] invMod Arguments[3]
    (Info: triOk;            Val: '5438851561648811798394005479'),              // 3012: Arguments[47] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3013: Arguments[47] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3014: Arguments[47] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3015: Arguments[47] invMod Arguments[7]
    (Info: triOk;            Val: '8105248248644818642225'),                    // 3016: Arguments[47] invMod Arguments[8]
    (Info: triOk;            Val: '4184909269119202157491'),                    // 3017: Arguments[47] invMod Arguments[9]
    (Info: triOk;            Val: '1438468697175678426271'),                    // 3018: Arguments[47] invMod Arguments[10]
    (Info: triOk;            Val: '67969'),                                     // 3019: Arguments[47] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3020: Arguments[47] invMod Arguments[12]
    (Info: triOk;            Val: '7969'),                                      // 3021: Arguments[47] invMod Arguments[13]
    (Info: triOk;            Val: '969'),                                       // 3022: Arguments[47] invMod Arguments[14]
    (Info: triOk;            Val: '69'),                                        // 3023: Arguments[47] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3024: Arguments[47] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 3025: Arguments[47] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3026: Arguments[47] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3027: Arguments[47] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3028: Arguments[47] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3029: Arguments[47] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3030: Arguments[47] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3031: Arguments[47] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3032: Arguments[47] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 3033: Arguments[47] invMod Arguments[25]
    (Info: triOk;            Val: '69'),                                        // 3034: Arguments[47] invMod Arguments[26]
    (Info: triOk;            Val: '57'),                                        // 3035: Arguments[47] invMod Arguments[27]
    (Info: triOk;            Val: '57'),                                        // 3036: Arguments[47] invMod Arguments[28]
    (Info: triOk;            Val: '969'),                                       // 3037: Arguments[47] invMod Arguments[29]
    (Info: triOk;            Val: '7969'),                                      // 3038: Arguments[47] invMod Arguments[30]
    (Info: triOk;            Val: '67969'),                                     // 3039: Arguments[47] invMod Arguments[31]
    (Info: triOk;            Val: '267969'),                                    // 3040: Arguments[47] invMod Arguments[32]
    (Info: triOk;            Val: '36612212968330965'),                         // 3041: Arguments[47] invMod Arguments[33]
    (Info: triOk;            Val: '3715087539531619249'),                       // 3042: Arguments[47] invMod Arguments[34]
    (Info: triOk;            Val: '4615556372374618113'),                       // 3043: Arguments[47] invMod Arguments[35]
    (Info: triOk;            Val: '39882468730840941973'),                      // 3044: Arguments[47] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3045: Arguments[47] invMod Arguments[37]
    (Info: triOk;            Val: '1438468697175678426271'),                    // 3046: Arguments[47] invMod Arguments[38]
    (Info: triOk;            Val: '4184909269119202157491'),                    // 3047: Arguments[47] invMod Arguments[39]
    (Info: triOk;            Val: '8105248248644818642225'),                    // 3048: Arguments[47] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3049: Arguments[47] invMod Arguments[41]
    (Info: triOk;            Val: '54394836587353187811329'),                   // 3050: Arguments[47] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3051: Arguments[47] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3052: Arguments[47] invMod Arguments[44]
    (Info: triOk;            Val: '370379873955314610117593909'),               // 3053: Arguments[47] invMod Arguments[45]
    (Info: triOk;            Val: '5438851561648811798394005479'),              // 3054: Arguments[47] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3055: Arguments[47] invMod Arguments[47]
    (Info: triOk;            Val: '31244732866932908418070086763'),             // 3056: Arguments[47] invMod Arguments[48]
    (Info: triOk;            Val: '74227577247208872378953886349'),             // 3057: Arguments[47] invMod Arguments[49]
    (Info: triOk;            Val: '312599383081564498559687287538'),            // 3058: Arguments[47] invMod Arguments[50]
    (Info: triOk;            Val: '14816787637510745229991802505'),             // 3059: Arguments[47] invMod Arguments[51]
    (Info: triOk;            Val: '3241728279605825942689864678481809'),        // 3060: Arguments[47] invMod Arguments[52]
    (Info: triOk;            Val: '8497408264922819402723743434944146'),        // 3061: Arguments[47] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3062: Arguments[47] invMod Arguments[54]
    (Info: triOk;            Val: '42535295884924348561487910323062046719'),    // 3063: Arguments[47] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3064: Arguments[47] invMod Arguments[56]
    (Info: triOk;            Val: '9625436355905675113248784645868888518597'),  // 3065: Arguments[47] invMod Arguments[57]
    (Info: triOk;            Val: '1565447761371874553070245104761540179918' + 
                                  '849'),                                       // 3066: Arguments[47] invMod Arguments[58]
    (Info: triOk;            Val: '1064576395418338078505224469627140938146' + 
                                  '757610906616052705101107587229'),            // 3067: Arguments[47] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3068: Arguments[47] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3069: Arguments[47] invMod Arguments[61]
    (Info: triOk;            Val: '4521533267969'),                             // 3070: Arguments[47] invMod Arguments[62]
    (Info: triOk;            Val: '6979075358942687759683367753507680477780' + 
                                  '73534521533267969'),                         // 3071: Arguments[47] invMod Arguments[63]
    (Info: triOk;            Val: '1195641734836494200623290939374630076235' + 
                                  '449'),                                       // 3072: Arguments[48] invMod Arguments[0]
    (Info: triOk;            Val: '1791807497599936203995204872633946145520' + 
                                  '6'),                                         // 3073: Arguments[48] invMod Arguments[1]
    (Info: triOk;            Val: '696881557589430249726069791565'),            // 3074: Arguments[48] invMod Arguments[2]
    (Info: triOk;            Val: '62165663688615071234335172229'),             // 3075: Arguments[48] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3076: Arguments[48] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3077: Arguments[48] invMod Arguments[5]
    (Info: triOk;            Val: '4329209850074519432603489'),                 // 3078: Arguments[48] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3079: Arguments[48] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3080: Arguments[48] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3081: Arguments[48] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3082: Arguments[48] invMod Arguments[10]
    (Info: triOk;            Val: '55289'),                                     // 3083: Arguments[48] invMod Arguments[11]
    (Info: triOk;            Val: '17497'),                                     // 3084: Arguments[48] invMod Arguments[12]
    (Info: triOk;            Val: '5289'),                                      // 3085: Arguments[48] invMod Arguments[13]
    (Info: triOk;            Val: '289'),                                       // 3086: Arguments[48] invMod Arguments[14]
    (Info: triOk;            Val: '89'),                                        // 3087: Arguments[48] invMod Arguments[15]
    (Info: triOk;            Val: '25'),                                        // 3088: Arguments[48] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 3089: Arguments[48] invMod Arguments[17]
    (Info: triOk;            Val: '4'),                                         // 3090: Arguments[48] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3091: Arguments[48] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3092: Arguments[48] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3093: Arguments[48] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3094: Arguments[48] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3095: Arguments[48] invMod Arguments[23]
    (Info: triOk;            Val: '4'),                                         // 3096: Arguments[48] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 3097: Arguments[48] invMod Arguments[25]
    (Info: triOk;            Val: '89'),                                        // 3098: Arguments[48] invMod Arguments[26]
    (Info: triOk;            Val: '319'),                                       // 3099: Arguments[48] invMod Arguments[27]
    (Info: triOk;            Val: '319'),                                       // 3100: Arguments[48] invMod Arguments[28]
    (Info: triOk;            Val: '289'),                                       // 3101: Arguments[48] invMod Arguments[29]
    (Info: triOk;            Val: '5289'),                                      // 3102: Arguments[48] invMod Arguments[30]
    (Info: triOk;            Val: '55289'),                                     // 3103: Arguments[48] invMod Arguments[31]
    (Info: triOk;            Val: '55289'),                                     // 3104: Arguments[48] invMod Arguments[32]
    (Info: triOk;            Val: '2736942703917898873'),                       // 3105: Arguments[48] invMod Arguments[33]
    (Info: triOk;            Val: '2227203777400152999'),                       // 3106: Arguments[48] invMod Arguments[34]
    (Info: triOk;            Val: '8881745234628787897'),                       // 3107: Arguments[48] invMod Arguments[35]
    (Info: triOk;            Val: '149953554544215829869'),                     // 3108: Arguments[48] invMod Arguments[36]
    (Info: triOk;            Val: '685858954464665251925'),                     // 3109: Arguments[48] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3110: Arguments[48] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3111: Arguments[48] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3112: Arguments[48] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3113: Arguments[48] invMod Arguments[41]
    (Info: triOk;            Val: '72917091888941571587769'),                   // 3114: Arguments[48] invMod Arguments[42]
    (Info: triOk;            Val: '4329209850074519432603489'),                 // 3115: Arguments[48] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3116: Arguments[48] invMod Arguments[44]
    (Info: triOk;            Val: '380035083761729934386055215'),               // 3117: Arguments[48] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3118: Arguments[48] invMod Arguments[46]
    (Info: triOk;            Val: '10096809774735097425507591015'),             // 3119: Arguments[48] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3120: Arguments[48] invMod Arguments[48]
    (Info: triOk;            Val: '62165663688615071234335172229'),             // 3121: Arguments[48] invMod Arguments[49]
    (Info: triOk;            Val: '696881557589430249726069791565'),            // 3122: Arguments[48] invMod Arguments[50]
    (Info: triOk;            Val: '10762471913583670303677997087'),             // 3123: Arguments[48] invMod Arguments[51]
    (Info: triOk;            Val: '201567382044994532470060479772170'),         // 3124: Arguments[48] invMod Arguments[52]
    (Info: triOk;            Val: '65661998710445411596243181067404249'),       // 3125: Arguments[48] invMod Arguments[53]
    (Info: triOk;            Val: '71673071210241550007715126004100769580'),    // 3126: Arguments[48] invMod Arguments[54]
    (Info: triOk;            Val: '57434874244778818837842010780620327789'),    // 3127: Arguments[48] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3128: Arguments[48] invMod Arguments[56]
    (Info: triOk;            Val: '1791807497599936203995204872633946145520' + 
                                  '6'),                                         // 3129: Arguments[48] invMod Arguments[57]
    (Info: triOk;            Val: '1195641734836494200623290939374630076235' + 
                                  '449'),                                       // 3130: Arguments[48] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3131: Arguments[48] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3132: Arguments[48] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3133: Arguments[48] invMod Arguments[61]
    (Info: triOk;            Val: '4464771055289'),                             // 3134: Arguments[48] invMod Arguments[62]
    (Info: triOk;            Val: '6589596730115517456864235792186641729561' + 
                                  '35644464771055289'),                         // 3135: Arguments[48] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3136: Arguments[49] invMod Arguments[0]
    (Info: triOk;            Val: '8929328302351291478833365535421301471966'),  // 3137: Arguments[49] invMod Arguments[1]
    (Info: triOk;            Val: '202462755481803180777486386655'),            // 3138: Arguments[49] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3139: Arguments[49] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3140: Arguments[49] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3141: Arguments[49] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3142: Arguments[49] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3143: Arguments[49] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3144: Arguments[49] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3145: Arguments[49] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3146: Arguments[49] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3147: Arguments[49] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3148: Arguments[49] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3149: Arguments[49] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3150: Arguments[49] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3151: Arguments[49] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3152: Arguments[49] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3153: Arguments[49] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 3154: Arguments[49] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3155: Arguments[49] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3156: Arguments[49] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3157: Arguments[49] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3158: Arguments[49] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3159: Arguments[49] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 3160: Arguments[49] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3161: Arguments[49] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3162: Arguments[49] invMod Arguments[26]
    (Info: triOk;            Val: '46'),                                        // 3163: Arguments[49] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3164: Arguments[49] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3165: Arguments[49] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3166: Arguments[49] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3167: Arguments[49] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3168: Arguments[49] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3169: Arguments[49] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3170: Arguments[49] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3171: Arguments[49] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3172: Arguments[49] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3173: Arguments[49] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3174: Arguments[49] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3175: Arguments[49] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3176: Arguments[49] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3177: Arguments[49] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3178: Arguments[49] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3179: Arguments[49] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3180: Arguments[49] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3181: Arguments[49] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3182: Arguments[49] invMod Arguments[46]
    (Info: triOk;            Val: '1934483161932596788088851903'),              // 3183: Arguments[49] invMod Arguments[47]
    (Info: triOk;            Val: '15569731137796332425137639511'),             // 3184: Arguments[49] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3185: Arguments[49] invMod Arguments[49]
    (Info: triOk;            Val: '202462755481803180777486386655'),            // 3186: Arguments[49] invMod Arguments[50]
    (Info: triOk;            Val: '73923197585586967552582196152'),             // 3187: Arguments[49] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3188: Arguments[49] invMod Arguments[52]
    (Info: triOk;            Val: '30641824835854483936875706677889082'),       // 3189: Arguments[49] invMod Arguments[53]
    (Info: triOk;            Val: '2911826324534018766788428285604329949'),     // 3190: Arguments[49] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3191: Arguments[49] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3192: Arguments[49] invMod Arguments[56]
    (Info: triOk;            Val: '8929328302351291478833365535421301471966'),  // 3193: Arguments[49] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3194: Arguments[49] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3195: Arguments[49] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3196: Arguments[49] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3197: Arguments[49] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3198: Arguments[49] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3199: Arguments[49] invMod Arguments[63]
    (Info: triOk;            Val: '1471814696853614353593575883884208317628' + 
                                  '401'),                                       // 3200: Arguments[50] invMod Arguments[0]
    (Info: triOk;            Val: '1079226370696953025771692082823411323830' + 
                                  '0'),                                         // 3201: Arguments[50] invMod Arguments[1]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3202: Arguments[50] invMod Arguments[2]
    (Info: triOk;            Val: '60905988050499370353700672861'),             // 3203: Arguments[50] invMod Arguments[3]
    (Info: triOk;            Val: '2063751455476523243122477211'),              // 3204: Arguments[50] invMod Arguments[4]
    (Info: triOk;            Val: '266144178487955653203202877'),               // 3205: Arguments[50] invMod Arguments[5]
    (Info: triOk;            Val: '1015896437037368371540041'),                 // 3206: Arguments[50] invMod Arguments[6]
    (Info: triOk;            Val: '12394403005094942079065'),                   // 3207: Arguments[50] invMod Arguments[7]
    (Info: triOk;            Val: '6284582868465220471235'),                    // 3208: Arguments[50] invMod Arguments[8]
    (Info: triOk;            Val: '6655897504366486074857'),                    // 3209: Arguments[50] invMod Arguments[9]
    (Info: triOk;            Val: '75425581064170634915'),                      // 3210: Arguments[50] invMod Arguments[10]
    (Info: triOk;            Val: '3441'),                                      // 3211: Arguments[50] invMod Arguments[11]
    (Info: triOk;            Val: '36049'),                                     // 3212: Arguments[50] invMod Arguments[12]
    (Info: triOk;            Val: '3441'),                                      // 3213: Arguments[50] invMod Arguments[13]
    (Info: triOk;            Val: '441'),                                       // 3214: Arguments[50] invMod Arguments[14]
    (Info: triOk;            Val: '41'),                                        // 3215: Arguments[50] invMod Arguments[15]
    (Info: triOk;            Val: '41'),                                        // 3216: Arguments[50] invMod Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 3217: Arguments[50] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 3218: Arguments[50] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3219: Arguments[50] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3220: Arguments[50] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3221: Arguments[50] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3222: Arguments[50] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3223: Arguments[50] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 3224: Arguments[50] invMod Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 3225: Arguments[50] invMod Arguments[25]
    (Info: triOk;            Val: '41'),                                        // 3226: Arguments[50] invMod Arguments[26]
    (Info: triOk;            Val: '57'),                                        // 3227: Arguments[50] invMod Arguments[27]
    (Info: triOk;            Val: '57'),                                        // 3228: Arguments[50] invMod Arguments[28]
    (Info: triOk;            Val: '441'),                                       // 3229: Arguments[50] invMod Arguments[29]
    (Info: triOk;            Val: '3441'),                                      // 3230: Arguments[50] invMod Arguments[30]
    (Info: triOk;            Val: '3441'),                                      // 3231: Arguments[50] invMod Arguments[31]
    (Info: triOk;            Val: '803441'),                                    // 3232: Arguments[50] invMod Arguments[32]
    (Info: triOk;            Val: '250072995227488813'),                        // 3233: Arguments[50] invMod Arguments[33]
    (Info: triOk;            Val: '3012335354759058716'),                       // 3234: Arguments[50] invMod Arguments[34]
    (Info: triOk;            Val: '1513639608037507057'),                       // 3235: Arguments[50] invMod Arguments[35]
    (Info: triOk;            Val: '137158684766914648593'),                     // 3236: Arguments[50] invMod Arguments[36]
    (Info: triOk;            Val: '424990122662964786395'),                     // 3237: Arguments[50] invMod Arguments[37]
    (Info: triOk;            Val: '75425581064170634915'),                      // 3238: Arguments[50] invMod Arguments[38]
    (Info: triOk;            Val: '6655897504366486074857'),                    // 3239: Arguments[50] invMod Arguments[39]
    (Info: triOk;            Val: '6284582868465220471235'),                    // 3240: Arguments[50] invMod Arguments[40]
    (Info: triOk;            Val: '12394403005094942079065'),                   // 3241: Arguments[50] invMod Arguments[41]
    (Info: triOk;            Val: '49710044280166362218481'),                   // 3242: Arguments[50] invMod Arguments[42]
    (Info: triOk;            Val: '1015896437037368371540041'),                 // 3243: Arguments[50] invMod Arguments[43]
    (Info: triOk;            Val: '266144178487955653203202877'),               // 3244: Arguments[50] invMod Arguments[44]
    (Info: triOk;            Val: '1032364239731837232029161829'),              // 3245: Arguments[50] invMod Arguments[45]
    (Info: triOk;            Val: '2063751455476523243122477211'),              // 3246: Arguments[50] invMod Arguments[46]
    (Info: triOk;            Val: '11867774615699226059517152288'),             // 3247: Arguments[50] invMod Arguments[47]
    (Info: triOk;            Val: '6782743979670599578682524565'),              // 3248: Arguments[50] invMod Arguments[48]
    (Info: triOk;            Val: '60905988050499370353700672861'),             // 3249: Arguments[50] invMod Arguments[49]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3250: Arguments[50] invMod Arguments[50]
    (Info: triOk;            Val: '48573628483830748100164508786'),             // 3251: Arguments[50] invMod Arguments[51]
    (Info: triOk;            Val: '2242912221877610898713614249696551'),        // 3252: Arguments[50] invMod Arguments[52]
    (Info: triOk;            Val: '10619633338696837411547111861821461'),       // 3253: Arguments[50] invMod Arguments[53]
    (Info: triOk;            Val: '35212549362774131150179120627820686427'),    // 3254: Arguments[50] invMod Arguments[54]
    (Info: triOk;            Val: '49950966923287102188672637565264813441'),    // 3255: Arguments[50] invMod Arguments[55]
    (Info: triOk;            Val: '75464149810563133380355303634772525041'),    // 3256: Arguments[50] invMod Arguments[56]
    (Info: triOk;            Val: '1079226370696953025771692082823411323830' + 
                                  '0'),                                         // 3257: Arguments[50] invMod Arguments[57]
    (Info: triOk;            Val: '1471814696853614353593575883884208317628' + 
                                  '401'),                                       // 3258: Arguments[50] invMod Arguments[58]
    (Info: triOk;            Val: '7315890820661511814248503694936260404285' + 
                                  '79973824737398447732055741961'),             // 3259: Arguments[50] invMod Arguments[59]
    (Info: triOk;            Val: '2341505801604439990783609649504923166564' + 
                                  '66132212278446835960468915147191'),          // 3260: Arguments[50] invMod Arguments[60]
    (Info: triOk;            Val: '8627818439018255570902404439881885231027' + 
                                  '3508270262581828758314905194708260026280' + 
                                  '3441'),                                      // 3261: Arguments[50] invMod Arguments[61]
    (Info: triOk;            Val: '2600262803441'),                             // 3262: Arguments[50] invMod Arguments[62]
    (Info: triOk;            Val: '6548663388986707403638011736027915841105' + 
                                  '40832600262803441'),                         // 3263: Arguments[50] invMod Arguments[63]
    (Info: triOk;            Val: '1452515066585725559136544724230626051935' + 
                                  '837'),                                       // 3264: Arguments[51] invMod Arguments[0]
    (Info: triOk;            Val: '1255553110139377532270847343857992062411' + 
                                  '0'),                                         // 3265: Arguments[51] invMod Arguments[1]
    (Info: triOk;            Val: '444971824173012509547031588196'),            // 3266: Arguments[51] invMod Arguments[2]
    (Info: triOk;            Val: '28499749837282098324854298067'),             // 3267: Arguments[51] invMod Arguments[3]
    (Info: triOk;            Val: '8583157731400360879295329747'),              // 3268: Arguments[51] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3269: Arguments[51] invMod Arguments[5]
    (Info: triOk;            Val: '148067142429256203527277'),                  // 3270: Arguments[51] invMod Arguments[6]
    (Info: triOk;            Val: '72438625747200504144265'),                   // 3271: Arguments[51] invMod Arguments[7]
    (Info: triOk;            Val: '2610358004051973150055'),                    // 3272: Arguments[51] invMod Arguments[8]
    (Info: triOk;            Val: '2832586677231805949995'),                    // 3273: Arguments[51] invMod Arguments[9]
    (Info: triOk;            Val: '1303605567642396252613'),                    // 3274: Arguments[51] invMod Arguments[10]
    (Info: triOk;            Val: '54877'),                                     // 3275: Arguments[51] invMod Arguments[11]
    (Info: triOk;            Val: '34093'),                                     // 3276: Arguments[51] invMod Arguments[12]
    (Info: triOk;            Val: '4877'),                                      // 3277: Arguments[51] invMod Arguments[13]
    (Info: triOk;            Val: '877'),                                       // 3278: Arguments[51] invMod Arguments[14]
    (Info: triOk;            Val: '77'),                                        // 3279: Arguments[51] invMod Arguments[15]
    (Info: triOk;            Val: '45'),                                        // 3280: Arguments[51] invMod Arguments[16]
    (Info: triOk;            Val: '7'),                                         // 3281: Arguments[51] invMod Arguments[17]
    (Info: triOk;            Val: '3'),                                         // 3282: Arguments[51] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3283: Arguments[51] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3284: Arguments[51] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3285: Arguments[51] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3286: Arguments[51] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3287: Arguments[51] invMod Arguments[23]
    (Info: triOk;            Val: '3'),                                         // 3288: Arguments[51] invMod Arguments[24]
    (Info: triOk;            Val: '7'),                                         // 3289: Arguments[51] invMod Arguments[25]
    (Info: triOk;            Val: '77'),                                        // 3290: Arguments[51] invMod Arguments[26]
    (Info: triOk;            Val: '146'),                                       // 3291: Arguments[51] invMod Arguments[27]
    (Info: triOk;            Val: '555'),                                       // 3292: Arguments[51] invMod Arguments[28]
    (Info: triOk;            Val: '877'),                                       // 3293: Arguments[51] invMod Arguments[29]
    (Info: triOk;            Val: '4877'),                                      // 3294: Arguments[51] invMod Arguments[30]
    (Info: triOk;            Val: '54877'),                                     // 3295: Arguments[51] invMod Arguments[31]
    (Info: triOk;            Val: '654877'),                                    // 3296: Arguments[51] invMod Arguments[32]
    (Info: triOk;            Val: '1683330726126329993'),                       // 3297: Arguments[51] invMod Arguments[33]
    (Info: triOk;            Val: '4160981931022204917'),                       // 3298: Arguments[51] invMod Arguments[34]
    (Info: triOk;            Val: '4583422674058530397'),                       // 3299: Arguments[51] invMod Arguments[35]
    (Info: triOk;            Val: '87168691884531886885'),                      // 3300: Arguments[51] invMod Arguments[36]
    (Info: triOk;            Val: '217337067759367028399'),                     // 3301: Arguments[51] invMod Arguments[37]
    (Info: triOk;            Val: '1303605567642396252613'),                    // 3302: Arguments[51] invMod Arguments[38]
    (Info: triOk;            Val: '2832586677231805949995'),                    // 3303: Arguments[51] invMod Arguments[39]
    (Info: triOk;            Val: '2610358004051973150055'),                    // 3304: Arguments[51] invMod Arguments[40]
    (Info: triOk;            Val: '72438625747200504144265'),                   // 3305: Arguments[51] invMod Arguments[41]
    (Info: triOk;            Val: '2726927025965294472797'),                    // 3306: Arguments[51] invMod Arguments[42]
    (Info: triOk;            Val: '148067142429256203527277'),                  // 3307: Arguments[51] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3308: Arguments[51] invMod Arguments[44]
    (Info: triOk;            Val: '1109832172644480373227754489'),              // 3309: Arguments[51] invMod Arguments[45]
    (Info: triOk;            Val: '8583157731400360879295329747'),              // 3310: Arguments[51] invMod Arguments[46]
    (Info: triOk;            Val: '17212440099745855401871474841'),             // 3311: Arguments[51] invMod Arguments[47]
    (Info: triOk;            Val: '57669134649671833441845008395'),             // 3312: Arguments[51] invMod Arguments[48]
    (Info: triOk;            Val: '28499749837282098324854298067'),             // 3313: Arguments[51] invMod Arguments[49]
    (Info: triOk;            Val: '444971824173012509547031588196'),            // 3314: Arguments[51] invMod Arguments[50]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3315: Arguments[51] invMod Arguments[51]
    (Info: triOk;            Val: '757486084086727704559265913806795'),         // 3316: Arguments[51] invMod Arguments[52]
    (Info: triOk;            Val: '39853569759633905715364126433714106'),       // 3317: Arguments[51] invMod Arguments[53]
    (Info: triOk;            Val: '8503102875031309594417888231658813982'),     // 3318: Arguments[51] invMod Arguments[54]
    (Info: triOk;            Val: '58953504081946978350714228408763433627'),    // 3319: Arguments[51] invMod Arguments[55]
    (Info: triOk;            Val: '675708113364246952849111000551166365277'),   // 3320: Arguments[51] invMod Arguments[56]
    (Info: triOk;            Val: '1255553110139377532270847343857992062411' + 
                                  '0'),                                         // 3321: Arguments[51] invMod Arguments[57]
    (Info: triOk;            Val: '1452515066585725559136544724230626051935' + 
                                  '837'),                                       // 3322: Arguments[51] invMod Arguments[58]
    (Info: triOk;            Val: '5009091047050139240654819047855714533988' + 
                                  '51671469247543027295132487927'),             // 3323: Arguments[51] invMod Arguments[59]
    (Info: triOk;            Val: '1982487124414394599398268991025676454472' + 
                                  '28600915188123817357474951686127'),          // 3324: Arguments[51] invMod Arguments[60]
    (Info: triOk;            Val: '1525546554541352183089401439440684722323' + 
                                  '5484820346360006210490988244961828533696' + 
                                  '54877'),                                     // 3325: Arguments[51] invMod Arguments[61]
    (Info: triOk;            Val: '2853369654877'),                             // 3326: Arguments[51] invMod Arguments[62]
    (Info: triOk;            Val: '6155551459702733738445797048780172333621' + 
                                  '4932853369654877'),                          // 3327: Arguments[51] invMod Arguments[63]
    (Info: triOk;            Val: '3096135129762673877950228180256569725397' + 
                                  '89'),                                        // 3328: Arguments[52] invMod Arguments[0]
    (Info: triOk;            Val: '1058724874432143979857859989857670250938' + 
                                  '2'),                                         // 3329: Arguments[52] invMod Arguments[1]
    (Info: triOk;            Val: '419039703767059701508935661171'),            // 3330: Arguments[52] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3331: Arguments[52] invMod Arguments[3]
    (Info: triOk;            Val: '1913456924265599422493229599'),              // 3332: Arguments[52] invMod Arguments[4]
    (Info: triOk;            Val: '128572326999977427757473905'),               // 3333: Arguments[52] invMod Arguments[5]
    (Info: triOk;            Val: '1438859268429028019898869'),                 // 3334: Arguments[52] invMod Arguments[6]
    (Info: triOk;            Val: '69207076349994302182469'),                   // 3335: Arguments[52] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3336: Arguments[52] invMod Arguments[8]
    (Info: triOk;            Val: '4466847939646115710349'),                    // 3337: Arguments[52] invMod Arguments[9]
    (Info: triOk;            Val: '1373978352604329896729'),                    // 3338: Arguments[52] invMod Arguments[10]
    (Info: triOk;            Val: '42669'),                                     // 3339: Arguments[52] invMod Arguments[11]
    (Info: triOk;            Val: '31933'),                                     // 3340: Arguments[52] invMod Arguments[12]
    (Info: triOk;            Val: '2669'),                                      // 3341: Arguments[52] invMod Arguments[13]
    (Info: triOk;            Val: '669'),                                       // 3342: Arguments[52] invMod Arguments[14]
    (Info: triOk;            Val: '69'),                                        // 3343: Arguments[52] invMod Arguments[15]
    (Info: triOk;            Val: '13'),                                        // 3344: Arguments[52] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 3345: Arguments[52] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 3346: Arguments[52] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3347: Arguments[52] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3348: Arguments[52] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3349: Arguments[52] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3350: Arguments[52] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3351: Arguments[52] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 3352: Arguments[52] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 3353: Arguments[52] invMod Arguments[25]
    (Info: triOk;            Val: '69'),                                        // 3354: Arguments[52] invMod Arguments[26]
    (Info: triOk;            Val: '31'),                                        // 3355: Arguments[52] invMod Arguments[27]
    (Info: triOk;            Val: '31'),                                        // 3356: Arguments[52] invMod Arguments[28]
    (Info: triOk;            Val: '669'),                                       // 3357: Arguments[52] invMod Arguments[29]
    (Info: triOk;            Val: '2669'),                                      // 3358: Arguments[52] invMod Arguments[30]
    (Info: triOk;            Val: '42669'),                                     // 3359: Arguments[52] invMod Arguments[31]
    (Info: triOk;            Val: '942669'),                                    // 3360: Arguments[52] invMod Arguments[32]
    (Info: triOk;            Val: '2852660489526005429'),                       // 3361: Arguments[52] invMod Arguments[33]
    (Info: triOk;            Val: '3965657933248200839'),                       // 3362: Arguments[52] invMod Arguments[34]
    (Info: triOk;            Val: '5693324888059082637'),                       // 3363: Arguments[52] invMod Arguments[35]
    (Info: triOk;            Val: '36078585792344158781'),                      // 3364: Arguments[52] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3365: Arguments[52] invMod Arguments[37]
    (Info: triOk;            Val: '1373978352604329896729'),                    // 3366: Arguments[52] invMod Arguments[38]
    (Info: triOk;            Val: '4466847939646115710349'),                    // 3367: Arguments[52] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3368: Arguments[52] invMod Arguments[40]
    (Info: triOk;            Val: '69207076349994302182469'),                   // 3369: Arguments[52] invMod Arguments[41]
    (Info: triOk;            Val: '54908459885704819308429'),                   // 3370: Arguments[52] invMod Arguments[42]
    (Info: triOk;            Val: '1438859268429028019898869'),                 // 3371: Arguments[52] invMod Arguments[43]
    (Info: triOk;            Val: '128572326999977427757473905'),               // 3372: Arguments[52] invMod Arguments[44]
    (Info: triOk;            Val: '574447417248898043896754235'),               // 3373: Arguments[52] invMod Arguments[45]
    (Info: triOk;            Val: '1913456924265599422493229599'),              // 3374: Arguments[52] invMod Arguments[46]
    (Info: triOk;            Val: '6561469898107567627072122289'),              // 3375: Arguments[52] invMod Arguments[47]
    (Info: triOk;            Val: '61083269803318096095281240708'),             // 3376: Arguments[52] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3377: Arguments[52] invMod Arguments[49]
    (Info: triOk;            Val: '419039703767059701508935661171'),            // 3378: Arguments[52] invMod Arguments[50]
    (Info: triOk;            Val: '95435849441932538316737323367'),             // 3379: Arguments[52] invMod Arguments[51]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3380: Arguments[52] invMod Arguments[52]
    (Info: triOk;            Val: '32247064891529162632415733674486108'),       // 3381: Arguments[52] invMod Arguments[53]
    (Info: triOk;            Val: '75481732916312758901130005737954015967'),    // 3382: Arguments[52] invMod Arguments[54]
    (Info: triOk;            Val: '69366454271344493934963865068251717669'),    // 3383: Arguments[52] invMod Arguments[55]
    (Info: triOk;            Val: '115017431482875083706055558145028716429'),   // 3384: Arguments[52] invMod Arguments[56]
    (Info: triOk;            Val: '1058724874432143979857859989857670250938' + 
                                  '2'),                                         // 3385: Arguments[52] invMod Arguments[57]
    (Info: triOk;            Val: '3096135129762673877950228180256569725397' + 
                                  '89'),                                        // 3386: Arguments[52] invMod Arguments[58]
    (Info: triOk;            Val: '7981448406892634353016897692750260465108' + 
                                  '12253017371283643571657636579'),             // 3387: Arguments[52] invMod Arguments[59]
    (Info: triOk;            Val: '1646125661337257002191958610119472696771' + 
                                  '85369491939850309760750940614544'),          // 3388: Arguments[52] invMod Arguments[60]
    (Info: triOk;            Val: '2399984475536071806708853725669927133046' + 
                                  '8098510926252148980531044752987934963019' + 
                                  '42669'),                                     // 3389: Arguments[52] invMod Arguments[61]
    (Info: triOk;            Val: '3496301942669'),                             // 3390: Arguments[52] invMod Arguments[62]
    (Info: triOk;            Val: '9373273037012784896240232430333527870924' + 
                                  '86293496301942669'),                         // 3391: Arguments[52] invMod Arguments[63]
    (Info: triOk;            Val: '1248555666368800604933726954551202964503' + 
                                  '019'),                                       // 3392: Arguments[53] invMod Arguments[0]
    (Info: triOk;            Val: '1299998062096199197253749679601235243945' + 
                                  '3'),                                         // 3393: Arguments[53] invMod Arguments[1]
    (Info: triOk;            Val: '688478535621402989945754349381'),            // 3394: Arguments[53] invMod Arguments[2]
    (Info: triOk;            Val: '54443824093362831410511821309'),             // 3395: Arguments[53] invMod Arguments[3]
    (Info: triOk;            Val: '6599375773642581095253161699'),              // 3396: Arguments[53] invMod Arguments[4]
    (Info: triOk;            Val: '156714831458201120325760415'),               // 3397: Arguments[53] invMod Arguments[5]
    (Info: triOk;            Val: '3662192887364960353202699'),                 // 3398: Arguments[53] invMod Arguments[6]
    (Info: triOk;            Val: '16784376071879624384591'),                   // 3399: Arguments[53] invMod Arguments[7]
    (Info: triOk;            Val: '5097034207197445092659'),                    // 3400: Arguments[53] invMod Arguments[8]
    (Info: triOk;            Val: '3379248201557140119455'),                    // 3401: Arguments[53] invMod Arguments[9]
    (Info: triOk;            Val: '280238158271043381455'),                     // 3402: Arguments[53] invMod Arguments[10]
    (Info: triOk;            Val: '89899'),                                     // 3403: Arguments[53] invMod Arguments[11]
    (Info: triOk;            Val: '25755'),                                     // 3404: Arguments[53] invMod Arguments[12]
    (Info: triOk;            Val: '9899'),                                      // 3405: Arguments[53] invMod Arguments[13]
    (Info: triOk;            Val: '899'),                                       // 3406: Arguments[53] invMod Arguments[14]
    (Info: triOk;            Val: '99'),                                        // 3407: Arguments[53] invMod Arguments[15]
    (Info: triOk;            Val: '51'),                                        // 3408: Arguments[53] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 3409: Arguments[53] invMod Arguments[17]
    (Info: triOk;            Val: '2'),                                         // 3410: Arguments[53] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3411: Arguments[53] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3412: Arguments[53] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3413: Arguments[53] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3414: Arguments[53] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3415: Arguments[53] invMod Arguments[23]
    (Info: triOk;            Val: '2'),                                         // 3416: Arguments[53] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 3417: Arguments[53] invMod Arguments[25]
    (Info: triOk;            Val: '99'),                                        // 3418: Arguments[53] invMod Arguments[26]
    (Info: triOk;            Val: '397'),                                       // 3419: Arguments[53] invMod Arguments[27]
    (Info: triOk;            Val: '397'),                                       // 3420: Arguments[53] invMod Arguments[28]
    (Info: triOk;            Val: '899'),                                       // 3421: Arguments[53] invMod Arguments[29]
    (Info: triOk;            Val: '9899'),                                      // 3422: Arguments[53] invMod Arguments[30]
    (Info: triOk;            Val: '89899'),                                     // 3423: Arguments[53] invMod Arguments[31]
    (Info: triOk;            Val: '889899'),                                    // 3424: Arguments[53] invMod Arguments[32]
    (Info: triOk;            Val: '3555677335214735971'),                       // 3425: Arguments[53] invMod Arguments[33]
    (Info: triOk;            Val: '3319801517433328759'),                       // 3426: Arguments[53] invMod Arguments[34]
    (Info: triOk;            Val: '4496257630582012395'),                       // 3427: Arguments[53] invMod Arguments[35]
    (Info: triOk;            Val: '73083097362226231599'),                      // 3428: Arguments[53] invMod Arguments[36]
    (Info: triOk;            Val: '363059285136576640152'),                     // 3429: Arguments[53] invMod Arguments[37]
    (Info: triOk;            Val: '280238158271043381455'),                     // 3430: Arguments[53] invMod Arguments[38]
    (Info: triOk;            Val: '3379248201557140119455'),                    // 3431: Arguments[53] invMod Arguments[39]
    (Info: triOk;            Val: '5097034207197445092659'),                    // 3432: Arguments[53] invMod Arguments[40]
    (Info: triOk;            Val: '16784376071879624384591'),                   // 3433: Arguments[53] invMod Arguments[41]
    (Info: triOk;            Val: '71244360003422728419819'),                   // 3434: Arguments[53] invMod Arguments[42]
    (Info: triOk;            Val: '3662192887364960353202699'),                 // 3435: Arguments[53] invMod Arguments[43]
    (Info: triOk;            Val: '156714831458201120325760415'),               // 3436: Arguments[53] invMod Arguments[44]
    (Info: triOk;            Val: '557310052030853168065812895'),               // 3437: Arguments[53] invMod Arguments[45]
    (Info: triOk;            Val: '6599375773642581095253161699'),              // 3438: Arguments[53] invMod Arguments[46]
    (Info: triOk;            Val: '17949583885027190947091724262'),             // 3439: Arguments[53] invMod Arguments[47]
    (Info: triOk;            Val: '17549149059862845295441502249'),             // 3440: Arguments[53] invMod Arguments[48]
    (Info: triOk;            Val: '54443824093362831410511821309'),             // 3441: Arguments[53] invMod Arguments[49]
    (Info: triOk;            Val: '688478535621402989945754349381'),            // 3442: Arguments[53] invMod Arguments[50]
    (Info: triOk;            Val: '63361713424649950096839591690'),             // 3443: Arguments[53] invMod Arguments[51]
    (Info: triOk;            Val: '3122430141811932674805030770778860'),        // 3444: Arguments[53] invMod Arguments[52]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3445: Arguments[53] invMod Arguments[53]
    (Info: triOk;            Val: '70189372493875190354377384524660912329'),    // 3446: Arguments[53] invMod Arguments[54]
    (Info: triOk;            Val: '34630770720249741894512539671362402399'),    // 3447: Arguments[53] invMod Arguments[55]
    (Info: triOk;            Val: '518763888294094141026642628428965542379'),   // 3448: Arguments[53] invMod Arguments[56]
    (Info: triOk;            Val: '1299998062096199197253749679601235243945' + 
                                  '3'),                                         // 3449: Arguments[53] invMod Arguments[57]
    (Info: triOk;            Val: '1248555666368800604933726954551202964503' + 
                                  '019'),                                       // 3450: Arguments[53] invMod Arguments[58]
    (Info: triOk;            Val: '1076153996984778157821870413641611845575' + 
                                  '813298028156517742206258312799'),            // 3451: Arguments[53] invMod Arguments[59]
    (Info: triOk;            Val: '2006611742152278414808607152927457587478' + 
                                  '79464176039812367794612503139899'),          // 3452: Arguments[53] invMod Arguments[60]
    (Info: triOk;            Val: '3057283187713835831560135227802892521787' + 
                                  '6646049855961802143105525944646574054718' + 
                                  '89899'),                                     // 3453: Arguments[53] invMod Arguments[61]
    (Info: triOk;            Val: '7405471889899'),                             // 3454: Arguments[53] invMod Arguments[62]
    (Info: triOk;            Val: '5394228307943208643814878190937128257493' + 
                                  '3407405471889899'),                          // 3455: Arguments[53] invMod Arguments[63]
    (Info: triOk;            Val: '7352651243244177849285051297522668724551' + 
                                  '69'),                                        // 3456: Arguments[54] invMod Arguments[0]
    (Info: triOk;            Val: '1049666504925167776239900497153171830228' + 
                                  '4'),                                         // 3457: Arguments[54] invMod Arguments[1]
    (Info: triOk;            Val: '457070428561923843559068390407'),            // 3458: Arguments[54] invMod Arguments[2]
    (Info: triOk;            Val: '79446108079268098019870060249'),             // 3459: Arguments[54] invMod Arguments[3]
    (Info: triOk;            Val: '8259718455919628109892465369'),              // 3460: Arguments[54] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3461: Arguments[54] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3462: Arguments[54] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3463: Arguments[54] invMod Arguments[7]
    (Info: triOk;            Val: '12594826981453243856503'),                   // 3464: Arguments[54] invMod Arguments[8]
    (Info: triOk;            Val: '5818333203762212866159'),                    // 3465: Arguments[54] invMod Arguments[9]
    (Info: triOk;            Val: '1282452458447566766077'),                    // 3466: Arguments[54] invMod Arguments[10]
    (Info: triOk;            Val: '61249'),                                     // 3467: Arguments[54] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3468: Arguments[54] invMod Arguments[12]
    (Info: triOk;            Val: '1249'),                                      // 3469: Arguments[54] invMod Arguments[13]
    (Info: triOk;            Val: '249'),                                       // 3470: Arguments[54] invMod Arguments[14]
    (Info: triOk;            Val: '49'),                                        // 3471: Arguments[54] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3472: Arguments[54] invMod Arguments[16]
    (Info: triOk;            Val: '9'),                                         // 3473: Arguments[54] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3474: Arguments[54] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3475: Arguments[54] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3476: Arguments[54] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3477: Arguments[54] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3478: Arguments[54] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3479: Arguments[54] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3480: Arguments[54] invMod Arguments[24]
    (Info: triOk;            Val: '9'),                                         // 3481: Arguments[54] invMod Arguments[25]
    (Info: triOk;            Val: '49'),                                        // 3482: Arguments[54] invMod Arguments[26]
    (Info: triOk;            Val: '32'),                                        // 3483: Arguments[54] invMod Arguments[27]
    (Info: triOk;            Val: '441'),                                       // 3484: Arguments[54] invMod Arguments[28]
    (Info: triOk;            Val: '249'),                                       // 3485: Arguments[54] invMod Arguments[29]
    (Info: triOk;            Val: '1249'),                                      // 3486: Arguments[54] invMod Arguments[30]
    (Info: triOk;            Val: '61249'),                                     // 3487: Arguments[54] invMod Arguments[31]
    (Info: triOk;            Val: '61249'),                                     // 3488: Arguments[54] invMod Arguments[32]
    (Info: triOk;            Val: '495778551454421501'),                        // 3489: Arguments[54] invMod Arguments[33]
    (Info: triOk;            Val: '4234272413591759954'),                       // 3490: Arguments[54] invMod Arguments[34]
    (Info: triOk;            Val: '37155366970064897'),                         // 3491: Arguments[54] invMod Arguments[35]
    (Info: triOk;            Val: '124324870100041310301'),                     // 3492: Arguments[54] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3493: Arguments[54] invMod Arguments[37]
    (Info: triOk;            Val: '1282452458447566766077'),                    // 3494: Arguments[54] invMod Arguments[38]
    (Info: triOk;            Val: '5818333203762212866159'),                    // 3495: Arguments[54] invMod Arguments[39]
    (Info: triOk;            Val: '12594826981453243856503'),                   // 3496: Arguments[54] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3497: Arguments[54] invMod Arguments[41]
    (Info: triOk;            Val: '6511700658019471720449'),                    // 3498: Arguments[54] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3499: Arguments[54] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3500: Arguments[54] invMod Arguments[44]
    (Info: triOk;            Val: '554059943074420521500228547'),               // 3501: Arguments[54] invMod Arguments[45]
    (Info: triOk;            Val: '8259718455919628109892465369'),              // 3502: Arguments[54] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3503: Arguments[54] invMod Arguments[47]
    (Info: triOk;            Val: '10037182730656725119127502078'),             // 3504: Arguments[54] invMod Arguments[48]
    (Info: triOk;            Val: '79446108079268098019870060249'),             // 3505: Arguments[54] invMod Arguments[49]
    (Info: triOk;            Val: '457070428561923843559068390407'),            // 3506: Arguments[54] invMod Arguments[50]
    (Info: triOk;            Val: '101804763229014516076231876928'),            // 3507: Arguments[54] invMod Arguments[51]
    (Info: triOk;            Val: '546402901095772288748232204617771'),         // 3508: Arguments[54] invMod Arguments[52]
    (Info: triOk;            Val: '15850626472483061537825133133408169'),       // 3509: Arguments[54] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3510: Arguments[54] invMod Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3511: Arguments[54] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3512: Arguments[54] invMod Arguments[56]
    (Info: triOk;            Val: '1049666504925167776239900497153171830228' + 
                                  '4'),                                         // 3513: Arguments[54] invMod Arguments[57]
    (Info: triOk;            Val: '7352651243244177849285051297522668724551' + 
                                  '69'),                                        // 3514: Arguments[54] invMod Arguments[58]
    (Info: triOk;            Val: '3832581105394976303605111753008310727072' + 
                                  '16893757352874421888499539859'),             // 3515: Arguments[54] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3516: Arguments[54] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3517: Arguments[54] invMod Arguments[61]
    (Info: triOk;            Val: '6730219061249'),                             // 3518: Arguments[54] invMod Arguments[62]
    (Info: triOk;            Val: '1268982977425563580129076867461224963418' + 
                                  '5206730219061249'),                          // 3519: Arguments[54] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3520: Arguments[55] invMod Arguments[0]
    (Info: triOk;            Val: '1775286972357245579190342314582110316516' + 
                                  '7'),                                         // 3521: Arguments[55] invMod Arguments[1]
    (Info: triOk;            Val: '321956924083361007680648867273'),            // 3522: Arguments[55] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3523: Arguments[55] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3524: Arguments[55] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3525: Arguments[55] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3526: Arguments[55] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3527: Arguments[55] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3528: Arguments[55] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3529: Arguments[55] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3530: Arguments[55] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3531: Arguments[55] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3532: Arguments[55] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3533: Arguments[55] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3534: Arguments[55] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3535: Arguments[55] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3536: Arguments[55] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3537: Arguments[55] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3538: Arguments[55] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3539: Arguments[55] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3540: Arguments[55] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3541: Arguments[55] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3542: Arguments[55] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3543: Arguments[55] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3544: Arguments[55] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3545: Arguments[55] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3546: Arguments[55] invMod Arguments[26]
    (Info: triOk;            Val: '348'),                                       // 3547: Arguments[55] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3548: Arguments[55] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3549: Arguments[55] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3550: Arguments[55] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3551: Arguments[55] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3552: Arguments[55] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3553: Arguments[55] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3554: Arguments[55] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3555: Arguments[55] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3556: Arguments[55] invMod Arguments[36]
    (Info: triOk;            Val: '719302863540649428482'),                     // 3557: Arguments[55] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3558: Arguments[55] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3559: Arguments[55] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3560: Arguments[55] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3561: Arguments[55] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3562: Arguments[55] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3563: Arguments[55] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3564: Arguments[55] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3565: Arguments[55] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3566: Arguments[55] invMod Arguments[46]
    (Info: triOk;            Val: '9903520305059670161264476162'),              // 3567: Arguments[55] invMod Arguments[47]
    (Info: triOk;            Val: '20704185216987343559601630047'),             // 3568: Arguments[55] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3569: Arguments[55] invMod Arguments[49]
    (Info: triOk;            Val: '321956924083361007680648867273'),            // 3570: Arguments[55] invMod Arguments[50]
    (Info: triOk;            Val: '34725494645560066540510391114'),             // 3571: Arguments[55] invMod Arguments[51]
    (Info: triOk;            Val: '894870435915282624267631180072649'),         // 3572: Arguments[55] invMod Arguments[52]
    (Info: triOk;            Val: '53725622173130868230998878763311509'),       // 3573: Arguments[55] invMod Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 3574: Arguments[55] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3575: Arguments[55] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3576: Arguments[55] invMod Arguments[56]
    (Info: triOk;            Val: '1775286972357245579190342314582110316516' + 
                                  '7'),                                         // 3577: Arguments[55] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3578: Arguments[55] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3579: Arguments[55] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3580: Arguments[55] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3581: Arguments[55] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3582: Arguments[55] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3583: Arguments[55] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3584: Arguments[56] invMod Arguments[0]
    (Info: triOk;            Val: '1382831340988808575375217769498031241874' + 
                                  '9'),                                         // 3585: Arguments[56] invMod Arguments[1]
    (Info: triOk;            Val: '693402628937898425193428397891'),            // 3586: Arguments[56] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3587: Arguments[56] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3588: Arguments[56] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3589: Arguments[56] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3590: Arguments[56] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3591: Arguments[56] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3592: Arguments[56] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3593: Arguments[56] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3594: Arguments[56] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3595: Arguments[56] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3596: Arguments[56] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3597: Arguments[56] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3598: Arguments[56] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3599: Arguments[56] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3600: Arguments[56] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3601: Arguments[56] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3602: Arguments[56] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3603: Arguments[56] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3604: Arguments[56] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3605: Arguments[56] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3606: Arguments[56] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3607: Arguments[56] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3608: Arguments[56] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3609: Arguments[56] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3610: Arguments[56] invMod Arguments[26]
    (Info: triOk;            Val: '130'),                                       // 3611: Arguments[56] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3612: Arguments[56] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3613: Arguments[56] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3614: Arguments[56] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3615: Arguments[56] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3616: Arguments[56] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3617: Arguments[56] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3618: Arguments[56] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3619: Arguments[56] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3620: Arguments[56] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3621: Arguments[56] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3622: Arguments[56] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3623: Arguments[56] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3624: Arguments[56] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3625: Arguments[56] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3626: Arguments[56] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3627: Arguments[56] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3628: Arguments[56] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3629: Arguments[56] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3630: Arguments[56] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3631: Arguments[56] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3632: Arguments[56] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3633: Arguments[56] invMod Arguments[49]
    (Info: triOk;            Val: '693402628937898425193428397891'),            // 3634: Arguments[56] invMod Arguments[50]
    (Info: triOk;            Val: '807168625007733373319929898'),               // 3635: Arguments[56] invMod Arguments[51]
    (Info: triOk;            Val: '4028329764868455789560866260540721'),        // 3636: Arguments[56] invMod Arguments[52]
    (Info: triOk;            Val: '21542625597929190946309860845731695'),       // 3637: Arguments[56] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3638: Arguments[56] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3639: Arguments[56] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3640: Arguments[56] invMod Arguments[56]
    (Info: triOk;            Val: '1382831340988808575375217769498031241874' + 
                                  '9'),                                         // 3641: Arguments[56] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3642: Arguments[56] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3643: Arguments[56] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3644: Arguments[56] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3645: Arguments[56] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3646: Arguments[56] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3647: Arguments[56] invMod Arguments[63]
    (Info: triOk;            Val: '1698009010935482932682239291084523375165' + 
                                  '43'),                                        // 3648: Arguments[57] invMod Arguments[0]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3649: Arguments[57] invMod Arguments[1]
    (Info: triOk;            Val: '313193429254401841236330742764'),            // 3650: Arguments[57] invMod Arguments[2]
    (Info: triOk;            Val: '41532990351579664626468848313'),             // 3651: Arguments[57] invMod Arguments[3]
    (Info: triOk;            Val: '1721285233069173587213385643'),              // 3652: Arguments[57] invMod Arguments[4]
    (Info: triOk;            Val: '253823199957226575221017795'),               // 3653: Arguments[57] invMod Arguments[5]
    (Info: triOk;            Val: '4228101815771918606640303'),                 // 3654: Arguments[57] invMod Arguments[6]
    (Info: triOk;            Val: '29366369165790263602507'),                   // 3655: Arguments[57] invMod Arguments[7]
    (Info: triOk;            Val: '6433304308539219301237'),                    // 3656: Arguments[57] invMod Arguments[8]
    (Info: triOk;            Val: '495398328490137862261'),                     // 3657: Arguments[57] invMod Arguments[9]
    (Info: triOk;            Val: '971146161395782247437'),                     // 3658: Arguments[57] invMod Arguments[10]
    (Info: triOk;            Val: '85503'),                                     // 3659: Arguments[57] invMod Arguments[11]
    (Info: triOk;            Val: '20287'),                                     // 3660: Arguments[57] invMod Arguments[12]
    (Info: triOk;            Val: '5503'),                                      // 3661: Arguments[57] invMod Arguments[13]
    (Info: triOk;            Val: '503'),                                       // 3662: Arguments[57] invMod Arguments[14]
    (Info: triOk;            Val: '3'),                                         // 3663: Arguments[57] invMod Arguments[15]
    (Info: triOk;            Val: '15'),                                        // 3664: Arguments[57] invMod Arguments[16]
    (Info: triOk;            Val: '3'),                                         // 3665: Arguments[57] invMod Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 3666: Arguments[57] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3667: Arguments[57] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3668: Arguments[57] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3669: Arguments[57] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3670: Arguments[57] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3671: Arguments[57] invMod Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 3672: Arguments[57] invMod Arguments[24]
    (Info: triOk;            Val: '3'),                                         // 3673: Arguments[57] invMod Arguments[25]
    (Info: triOk;            Val: '3'),                                         // 3674: Arguments[57] invMod Arguments[26]
    (Info: triOk;            Val: '246'),                                       // 3675: Arguments[57] invMod Arguments[27]
    (Info: triOk;            Val: '655'),                                       // 3676: Arguments[57] invMod Arguments[28]
    (Info: triOk;            Val: '503'),                                       // 3677: Arguments[57] invMod Arguments[29]
    (Info: triOk;            Val: '5503'),                                      // 3678: Arguments[57] invMod Arguments[30]
    (Info: triOk;            Val: '85503'),                                     // 3679: Arguments[57] invMod Arguments[31]
    (Info: triOk;            Val: '885503'),                                    // 3680: Arguments[57] invMod Arguments[32]
    (Info: triOk;            Val: '3550364475654634567'),                       // 3681: Arguments[57] invMod Arguments[33]
    (Info: triOk;            Val: '2683546934861520113'),                       // 3682: Arguments[57] invMod Arguments[34]
    (Info: triOk;            Val: '628149528636948479'),                        // 3683: Arguments[57] invMod Arguments[35]
    (Info: triOk;            Val: '99536487525470774135'),                      // 3684: Arguments[57] invMod Arguments[36]
    (Info: triOk;            Val: '131610424064350839413'),                     // 3685: Arguments[57] invMod Arguments[37]
    (Info: triOk;            Val: '971146161395782247437'),                     // 3686: Arguments[57] invMod Arguments[38]
    (Info: triOk;            Val: '495398328490137862261'),                     // 3687: Arguments[57] invMod Arguments[39]
    (Info: triOk;            Val: '6433304308539219301237'),                    // 3688: Arguments[57] invMod Arguments[40]
    (Info: triOk;            Val: '29366369165790263602507'),                   // 3689: Arguments[57] invMod Arguments[41]
    (Info: triOk;            Val: '56151888960371875119103'),                   // 3690: Arguments[57] invMod Arguments[42]
    (Info: triOk;            Val: '4228101815771918606640303'),                 // 3691: Arguments[57] invMod Arguments[43]
    (Info: triOk;            Val: '253823199957226575221017795'),               // 3692: Arguments[57] invMod Arguments[44]
    (Info: triOk;            Val: '106034052098397438111930979'),               // 3693: Arguments[57] invMod Arguments[45]
    (Info: triOk;            Val: '1721285233069173587213385643'),              // 3694: Arguments[57] invMod Arguments[46]
    (Info: triOk;            Val: '9235830519572505845227057093'),              // 3695: Arguments[57] invMod Arguments[47]
    (Info: triOk;            Val: '413076650464316624753470750'),               // 3696: Arguments[57] invMod Arguments[48]
    (Info: triOk;            Val: '41532990351579664626468848313'),             // 3697: Arguments[57] invMod Arguments[49]
    (Info: triOk;            Val: '313193429254401841236330742764'),            // 3698: Arguments[57] invMod Arguments[50]
    (Info: triOk;            Val: '34365570726497317352462372026'),             // 3699: Arguments[57] invMod Arguments[51]
    (Info: triOk;            Val: '2001858424305714592927386781867298'),        // 3700: Arguments[57] invMod Arguments[52]
    (Info: triOk;            Val: '25297069965492864690549374403049561'),       // 3701: Arguments[57] invMod Arguments[53]
    (Info: triOk;            Val: '35558020743198399997760570230074710604'),    // 3702: Arguments[57] invMod Arguments[54]
    (Info: triOk;            Val: '1330640203949447035821987211632385503'),     // 3703: Arguments[57] invMod Arguments[55]
    (Info: triOk;            Val: '158741576837194432279930294814086529023'),   // 3704: Arguments[57] invMod Arguments[56]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3705: Arguments[57] invMod Arguments[57]
    (Info: triOk;            Val: '1698009010935482932682239291084523375165' + 
                                  '43'),                                        // 3706: Arguments[57] invMod Arguments[58]
    (Info: triOk;            Val: '1147333233701079395269266933810547491779' + 
                                  '106776648274934835344411152433'),            // 3707: Arguments[57] invMod Arguments[59]
    (Info: triOk;            Val: '2248700039374235355456497307023099187979' + 
                                  '63037508693423469163788730744878'),          // 3708: Arguments[57] invMod Arguments[60]
    (Info: triOk;            Val: '3319987128006400795210977423493641520912' + 
                                  '7653637579598443795878346007061976327248' + 
                                  '85503'),                                     // 3709: Arguments[57] invMod Arguments[61]
    (Info: triOk;            Val: '7632724885503'),                             // 3710: Arguments[57] invMod Arguments[62]
    (Info: triOk;            Val: '7877052723983319905556228922893244679014' + 
                                  '87447632724885503'),                         // 3711: Arguments[57] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3712: Arguments[58] invMod Arguments[0]
    (Info: triOk;            Val: '1610375348158268715943527731775754055300' + 
                                  '9'),                                         // 3713: Arguments[58] invMod Arguments[1]
    (Info: triOk;            Val: '56018314581816044722308746000'),             // 3714: Arguments[58] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3715: Arguments[58] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3716: Arguments[58] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3717: Arguments[58] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3718: Arguments[58] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3719: Arguments[58] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3720: Arguments[58] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3721: Arguments[58] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3722: Arguments[58] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3723: Arguments[58] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3724: Arguments[58] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3725: Arguments[58] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3726: Arguments[58] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3727: Arguments[58] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3728: Arguments[58] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3729: Arguments[58] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 3730: Arguments[58] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3731: Arguments[58] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3732: Arguments[58] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3733: Arguments[58] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3734: Arguments[58] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3735: Arguments[58] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 3736: Arguments[58] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3737: Arguments[58] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3738: Arguments[58] invMod Arguments[26]
    (Info: triOk;            Val: '130'),                                       // 3739: Arguments[58] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3740: Arguments[58] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3741: Arguments[58] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3742: Arguments[58] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3743: Arguments[58] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3744: Arguments[58] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3745: Arguments[58] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3746: Arguments[58] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3747: Arguments[58] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3748: Arguments[58] invMod Arguments[36]
    (Info: triOk;            Val: '678289946413317158766'),                     // 3749: Arguments[58] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3750: Arguments[58] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3751: Arguments[58] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3752: Arguments[58] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3753: Arguments[58] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3754: Arguments[58] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3755: Arguments[58] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3756: Arguments[58] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3757: Arguments[58] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3758: Arguments[58] invMod Arguments[46]
    (Info: triOk;            Val: '253166707486667579967571467'),               // 3759: Arguments[58] invMod Arguments[47]
    (Info: triOk;            Val: '15677925680637668262702135670'),             // 3760: Arguments[58] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3761: Arguments[58] invMod Arguments[49]
    (Info: triOk;            Val: '56018314581816044722308746000'),             // 3762: Arguments[58] invMod Arguments[50]
    (Info: triOk;            Val: '9501332129874024396323367450'),              // 3763: Arguments[58] invMod Arguments[51]
    (Info: triOk;            Val: '3901087231122502237084393525502541'),        // 3764: Arguments[58] invMod Arguments[52]
    (Info: triOk;            Val: '19266297605405702845423787546894946'),       // 3765: Arguments[58] invMod Arguments[53]
    (Info: triOk;            Val: '45625037850169284046481139505091126901'),    // 3766: Arguments[58] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3767: Arguments[58] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3768: Arguments[58] invMod Arguments[56]
    (Info: triOk;            Val: '1610375348158268715943527731775754055300' + 
                                  '9'),                                         // 3769: Arguments[58] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3770: Arguments[58] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3771: Arguments[58] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3772: Arguments[58] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3773: Arguments[58] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3774: Arguments[58] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3775: Arguments[58] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3776: Arguments[59] invMod Arguments[0]
    (Info: triOk;            Val: '1274351963086103058518538223558724765488'),  // 3777: Arguments[59] invMod Arguments[1]
    (Info: triOk;            Val: '317732811598845341386395909413'),            // 3778: Arguments[59] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3779: Arguments[59] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3780: Arguments[59] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3781: Arguments[59] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3782: Arguments[59] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3783: Arguments[59] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3784: Arguments[59] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3785: Arguments[59] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3786: Arguments[59] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3787: Arguments[59] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3788: Arguments[59] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3789: Arguments[59] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3790: Arguments[59] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3791: Arguments[59] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3792: Arguments[59] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3793: Arguments[59] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 3794: Arguments[59] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3795: Arguments[59] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3796: Arguments[59] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3797: Arguments[59] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3798: Arguments[59] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3799: Arguments[59] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 3800: Arguments[59] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3801: Arguments[59] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3802: Arguments[59] invMod Arguments[26]
    (Info: triOk;            Val: '301'),                                       // 3803: Arguments[59] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3804: Arguments[59] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3805: Arguments[59] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3806: Arguments[59] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3807: Arguments[59] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3808: Arguments[59] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3809: Arguments[59] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3810: Arguments[59] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3811: Arguments[59] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3812: Arguments[59] invMod Arguments[36]
    (Info: triOk;            Val: '399071621270067288163'),                     // 3813: Arguments[59] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3814: Arguments[59] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3815: Arguments[59] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3816: Arguments[59] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3817: Arguments[59] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3818: Arguments[59] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3819: Arguments[59] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3820: Arguments[59] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3821: Arguments[59] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3822: Arguments[59] invMod Arguments[46]
    (Info: triOk;            Val: '2727293061404962564189404643'),              // 3823: Arguments[59] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3824: Arguments[59] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3825: Arguments[59] invMod Arguments[49]
    (Info: triOk;            Val: '317732811598845341386395909413'),            // 3826: Arguments[59] invMod Arguments[50]
    (Info: triOk;            Val: '67217490295140358396880891628'),             // 3827: Arguments[59] invMod Arguments[51]
    (Info: triOk;            Val: '1713634623577565431807469346407878'),        // 3828: Arguments[59] invMod Arguments[52]
    (Info: triOk;            Val: '11626946134216448151410629585248709'),       // 3829: Arguments[59] invMod Arguments[53]
    (Info: triOk;            Val: '58661356150856043192978698542408946848'),    // 3830: Arguments[59] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3831: Arguments[59] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3832: Arguments[59] invMod Arguments[56]
    (Info: triOk;            Val: '1274351963086103058518538223558724765488'),  // 3833: Arguments[59] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3834: Arguments[59] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3835: Arguments[59] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3836: Arguments[59] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3837: Arguments[59] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3838: Arguments[59] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3839: Arguments[59] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3840: Arguments[60] invMod Arguments[0]
    (Info: triOk;            Val: '6231840790853675714970202014828964845068'),  // 3841: Arguments[60] invMod Arguments[1]
    (Info: triOk;            Val: '248416586367689820772069389727'),            // 3842: Arguments[60] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3843: Arguments[60] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3844: Arguments[60] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3845: Arguments[60] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3846: Arguments[60] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3847: Arguments[60] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3848: Arguments[60] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3849: Arguments[60] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3850: Arguments[60] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3851: Arguments[60] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3852: Arguments[60] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3853: Arguments[60] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3854: Arguments[60] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3855: Arguments[60] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3856: Arguments[60] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3857: Arguments[60] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3858: Arguments[60] invMod Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 3859: Arguments[60] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3860: Arguments[60] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3861: Arguments[60] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3862: Arguments[60] invMod Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 3863: Arguments[60] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3864: Arguments[60] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3865: Arguments[60] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3866: Arguments[60] invMod Arguments[26]
    (Info: triOk;            Val: '315'),                                       // 3867: Arguments[60] invMod Arguments[27]
    (Info: triOk;            Val: '315'),                                       // 3868: Arguments[60] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3869: Arguments[60] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3870: Arguments[60] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3871: Arguments[60] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3872: Arguments[60] invMod Arguments[32]
    (Info: triOk;            Val: '857439523958071731'),                        // 3873: Arguments[60] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3874: Arguments[60] invMod Arguments[34]
    (Info: triOk;            Val: '454886486883050115'),                        // 3875: Arguments[60] invMod Arguments[35]
    (Info: triOk;            Val: '162326721760902713287'),                     // 3876: Arguments[60] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3877: Arguments[60] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3878: Arguments[60] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3879: Arguments[60] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3880: Arguments[60] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3881: Arguments[60] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3882: Arguments[60] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3883: Arguments[60] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3884: Arguments[60] invMod Arguments[44]
    (Info: triOk;            Val: '1137671661096777390387494261'),              // 3885: Arguments[60] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3886: Arguments[60] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3887: Arguments[60] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3888: Arguments[60] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3889: Arguments[60] invMod Arguments[49]
    (Info: triOk;            Val: '248416586367689820772069389727'),            // 3890: Arguments[60] invMod Arguments[50]
    (Info: triOk;            Val: '47848063468202410336387353799'),             // 3891: Arguments[60] invMod Arguments[51]
    (Info: triOk;            Val: '2525177268505611261266780628088920'),        // 3892: Arguments[60] invMod Arguments[52]
    (Info: triOk;            Val: '37694655890577984651421691599879155'),       // 3893: Arguments[60] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3894: Arguments[60] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3895: Arguments[60] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3896: Arguments[60] invMod Arguments[56]
    (Info: triOk;            Val: '6231840790853675714970202014828964845068'),  // 3897: Arguments[60] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3898: Arguments[60] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3899: Arguments[60] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3900: Arguments[60] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3901: Arguments[60] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3902: Arguments[60] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3903: Arguments[60] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3904: Arguments[61] invMod Arguments[0]
    (Info: triOk;            Val: '608798665163847884196307285740681987704'),   // 3905: Arguments[61] invMod Arguments[1]
    (Info: triOk;            Val: '584049556851809296285368133102'),            // 3906: Arguments[61] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3907: Arguments[61] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3908: Arguments[61] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3909: Arguments[61] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3910: Arguments[61] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3911: Arguments[61] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3912: Arguments[61] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3913: Arguments[61] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3914: Arguments[61] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3915: Arguments[61] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3916: Arguments[61] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3917: Arguments[61] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3918: Arguments[61] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3919: Arguments[61] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3920: Arguments[61] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3921: Arguments[61] invMod Arguments[17]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3922: Arguments[61] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3923: Arguments[61] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3924: Arguments[61] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3925: Arguments[61] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3926: Arguments[61] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3927: Arguments[61] invMod Arguments[23]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3928: Arguments[61] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3929: Arguments[61] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3930: Arguments[61] invMod Arguments[26]
    (Info: triOk;            Val: '353'),                                       // 3931: Arguments[61] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3932: Arguments[61] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3933: Arguments[61] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3934: Arguments[61] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3935: Arguments[61] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3936: Arguments[61] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3937: Arguments[61] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3938: Arguments[61] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3939: Arguments[61] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3940: Arguments[61] invMod Arguments[36]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3941: Arguments[61] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3942: Arguments[61] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3943: Arguments[61] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3944: Arguments[61] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3945: Arguments[61] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3946: Arguments[61] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3947: Arguments[61] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3948: Arguments[61] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3949: Arguments[61] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3950: Arguments[61] invMod Arguments[46]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3951: Arguments[61] invMod Arguments[47]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3952: Arguments[61] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3953: Arguments[61] invMod Arguments[49]
    (Info: triOk;            Val: '584049556851809296285368133102'),            // 3954: Arguments[61] invMod Arguments[50]
    (Info: triOk;            Val: '62890320959911447719190033138'),             // 3955: Arguments[61] invMod Arguments[51]
    (Info: triOk;            Val: '1461608208640920141510546416138695'),        // 3956: Arguments[61] invMod Arguments[52]
    (Info: triOk;            Val: '9986702291696547560037098596312438'),        // 3957: Arguments[61] invMod Arguments[53]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3958: Arguments[61] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3959: Arguments[61] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3960: Arguments[61] invMod Arguments[56]
    (Info: triOk;            Val: '608798665163847884196307285740681987704'),   // 3961: Arguments[61] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3962: Arguments[61] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3963: Arguments[61] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3964: Arguments[61] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3965: Arguments[61] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3966: Arguments[61] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3967: Arguments[61] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3968: Arguments[62] invMod Arguments[0]
    (Info: triOk;            Val: '4269372489304596262142342287362420055415'),  // 3969: Arguments[62] invMod Arguments[1]
    (Info: triOk;            Val: '577090136624682591293336211524'),            // 3970: Arguments[62] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3971: Arguments[62] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3972: Arguments[62] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3973: Arguments[62] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3974: Arguments[62] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3975: Arguments[62] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3976: Arguments[62] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3977: Arguments[62] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3978: Arguments[62] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3979: Arguments[62] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3980: Arguments[62] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3981: Arguments[62] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3982: Arguments[62] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3983: Arguments[62] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3984: Arguments[62] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3985: Arguments[62] invMod Arguments[17]
    (Info: triOk;            Val: '5'),                                         // 3986: Arguments[62] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3987: Arguments[62] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3988: Arguments[62] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 3989: Arguments[62] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 3990: Arguments[62] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3991: Arguments[62] invMod Arguments[23]
    (Info: triOk;            Val: '5'),                                         // 3992: Arguments[62] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3993: Arguments[62] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3994: Arguments[62] invMod Arguments[26]
    (Info: triOk;            Val: '18'),                                        // 3995: Arguments[62] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3996: Arguments[62] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3997: Arguments[62] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3998: Arguments[62] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 3999: Arguments[62] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4000: Arguments[62] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4001: Arguments[62] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4002: Arguments[62] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4003: Arguments[62] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4004: Arguments[62] invMod Arguments[36]
    (Info: triOk;            Val: '108112949584934684675'),                     // 4005: Arguments[62] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4006: Arguments[62] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4007: Arguments[62] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4008: Arguments[62] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4009: Arguments[62] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4010: Arguments[62] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4011: Arguments[62] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4012: Arguments[62] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4013: Arguments[62] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4014: Arguments[62] invMod Arguments[46]
    (Info: triOk;            Val: '10851221309305574362672860666'),             // 4015: Arguments[62] invMod Arguments[47]
    (Info: triOk;            Val: '35277877032995584112305626085'),             // 4016: Arguments[62] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4017: Arguments[62] invMod Arguments[49]
    (Info: triOk;            Val: '577090136624682591293336211524'),            // 4018: Arguments[62] invMod Arguments[50]
    (Info: triOk;            Val: '80835935173612152914178144622'),             // 4019: Arguments[62] invMod Arguments[51]
    (Info: triOk;            Val: '3152723590664057253626849888312270'),        // 4020: Arguments[62] invMod Arguments[52]
    (Info: triOk;            Val: '23509627654606828733681860212940759'),       // 4021: Arguments[62] invMod Arguments[53]
    (Info: triOk;            Val: '27816219928778959955497732249442232729'),    // 4022: Arguments[62] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4023: Arguments[62] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4024: Arguments[62] invMod Arguments[56]
    (Info: triOk;            Val: '4269372489304596262142342287362420055415'),  // 4025: Arguments[62] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4026: Arguments[62] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4027: Arguments[62] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4028: Arguments[62] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4029: Arguments[62] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4030: Arguments[62] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4031: Arguments[62] invMod Arguments[63]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4032: Arguments[63] invMod Arguments[0]
    (Info: triOk;            Val: '3828728076835968230072235685785606814397'),  // 4033: Arguments[63] invMod Arguments[1]
    (Info: triOk;            Val: '269162574761927820840917337538'),            // 4034: Arguments[63] invMod Arguments[2]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4035: Arguments[63] invMod Arguments[3]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4036: Arguments[63] invMod Arguments[4]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4037: Arguments[63] invMod Arguments[5]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4038: Arguments[63] invMod Arguments[6]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4039: Arguments[63] invMod Arguments[7]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4040: Arguments[63] invMod Arguments[8]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4041: Arguments[63] invMod Arguments[9]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4042: Arguments[63] invMod Arguments[10]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4043: Arguments[63] invMod Arguments[11]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4044: Arguments[63] invMod Arguments[12]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4045: Arguments[63] invMod Arguments[13]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4046: Arguments[63] invMod Arguments[14]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4047: Arguments[63] invMod Arguments[15]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4048: Arguments[63] invMod Arguments[16]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4049: Arguments[63] invMod Arguments[17]
    (Info: triOk;            Val: '6'),                                         // 4050: Arguments[63] invMod Arguments[18]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4051: Arguments[63] invMod Arguments[19]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 4052: Arguments[63] invMod Arguments[20]
    (Info: triArgumentRange; Val: 'Error: BigInteger: modulus not positive'),   // 4053: Arguments[63] invMod Arguments[21]
    (Info: triArgumentRange; Val: 'Error: Zero result -- Java is wrong'),       // 4054: Arguments[63] invMod Arguments[22]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4055: Arguments[63] invMod Arguments[23]
    (Info: triOk;            Val: '6'),                                         // 4056: Arguments[63] invMod Arguments[24]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4057: Arguments[63] invMod Arguments[25]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4058: Arguments[63] invMod Arguments[26]
    (Info: triOk;            Val: '274'),                                       // 4059: Arguments[63] invMod Arguments[27]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4060: Arguments[63] invMod Arguments[28]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4061: Arguments[63] invMod Arguments[29]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4062: Arguments[63] invMod Arguments[30]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4063: Arguments[63] invMod Arguments[31]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4064: Arguments[63] invMod Arguments[32]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4065: Arguments[63] invMod Arguments[33]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4066: Arguments[63] invMod Arguments[34]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4067: Arguments[63] invMod Arguments[35]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4068: Arguments[63] invMod Arguments[36]
    (Info: triOk;            Val: '634565239816304754264'),                     // 4069: Arguments[63] invMod Arguments[37]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4070: Arguments[63] invMod Arguments[38]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4071: Arguments[63] invMod Arguments[39]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4072: Arguments[63] invMod Arguments[40]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4073: Arguments[63] invMod Arguments[41]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4074: Arguments[63] invMod Arguments[42]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4075: Arguments[63] invMod Arguments[43]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4076: Arguments[63] invMod Arguments[44]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4077: Arguments[63] invMod Arguments[45]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4078: Arguments[63] invMod Arguments[46]
    (Info: triOk;            Val: '5983557707339548686217461782'),              // 4079: Arguments[63] invMod Arguments[47]
    (Info: triOk;            Val: '21735647863828770599549751271'),             // 4080: Arguments[63] invMod Arguments[48]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4081: Arguments[63] invMod Arguments[49]
    (Info: triOk;            Val: '269162574761927820840917337538'),            // 4082: Arguments[63] invMod Arguments[50]
    (Info: triOk;            Val: '106147980128616676489978732791'),            // 4083: Arguments[63] invMod Arguments[51]
    (Info: triOk;            Val: '303811287623937578447667475103376'),         // 4084: Arguments[63] invMod Arguments[52]
    (Info: triOk;            Val: '85724508352712218693384076044544182'),       // 4085: Arguments[63] invMod Arguments[53]
    (Info: triOk;            Val: '83991060402382739354327919898290658561'),    // 4086: Arguments[63] invMod Arguments[54]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4087: Arguments[63] invMod Arguments[55]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4088: Arguments[63] invMod Arguments[56]
    (Info: triOk;            Val: '3828728076835968230072235685785606814397'),  // 4089: Arguments[63] invMod Arguments[57]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4090: Arguments[63] invMod Arguments[58]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4091: Arguments[63] invMod Arguments[59]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4092: Arguments[63] invMod Arguments[60]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4093: Arguments[63] invMod Arguments[61]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.'),         // 4094: Arguments[63] invMod Arguments[62]
    (Info: triArgumentRange; Val: 'Error: BigInteger not invertible.')          // 4095: Arguments[63] invMod Arguments[63]
  );

  MinResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    0: Arguments[0] min Arguments[0]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    1: Arguments[0] min Arguments[1]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    2: Arguments[0] min Arguments[2]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    3: Arguments[0] min Arguments[3]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    4: Arguments[0] min Arguments[4]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    5: Arguments[0] min Arguments[5]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    6: Arguments[0] min Arguments[6]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    7: Arguments[0] min Arguments[7]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    8: Arguments[0] min Arguments[8]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    9: Arguments[0] min Arguments[9]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   10: Arguments[0] min Arguments[10]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   11: Arguments[0] min Arguments[11]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   12: Arguments[0] min Arguments[12]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   13: Arguments[0] min Arguments[13]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   14: Arguments[0] min Arguments[14]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   15: Arguments[0] min Arguments[15]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   16: Arguments[0] min Arguments[16]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   17: Arguments[0] min Arguments[17]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   18: Arguments[0] min Arguments[18]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   19: Arguments[0] min Arguments[19]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   20: Arguments[0] min Arguments[20]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   21: Arguments[0] min Arguments[21]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   22: Arguments[0] min Arguments[22]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   23: Arguments[0] min Arguments[23]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   24: Arguments[0] min Arguments[24]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   25: Arguments[0] min Arguments[25]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   26: Arguments[0] min Arguments[26]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   27: Arguments[0] min Arguments[27]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   28: Arguments[0] min Arguments[28]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   29: Arguments[0] min Arguments[29]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   30: Arguments[0] min Arguments[30]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   31: Arguments[0] min Arguments[31]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   32: Arguments[0] min Arguments[32]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   33: Arguments[0] min Arguments[33]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   34: Arguments[0] min Arguments[34]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   35: Arguments[0] min Arguments[35]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   36: Arguments[0] min Arguments[36]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   37: Arguments[0] min Arguments[37]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   38: Arguments[0] min Arguments[38]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   39: Arguments[0] min Arguments[39]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   40: Arguments[0] min Arguments[40]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   41: Arguments[0] min Arguments[41]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   42: Arguments[0] min Arguments[42]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   43: Arguments[0] min Arguments[43]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   44: Arguments[0] min Arguments[44]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   45: Arguments[0] min Arguments[45]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   46: Arguments[0] min Arguments[46]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   47: Arguments[0] min Arguments[47]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   48: Arguments[0] min Arguments[48]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   49: Arguments[0] min Arguments[49]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   50: Arguments[0] min Arguments[50]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   51: Arguments[0] min Arguments[51]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   52: Arguments[0] min Arguments[52]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   53: Arguments[0] min Arguments[53]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   54: Arguments[0] min Arguments[54]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   55: Arguments[0] min Arguments[55]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   56: Arguments[0] min Arguments[56]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   57: Arguments[0] min Arguments[57]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   58: Arguments[0] min Arguments[58]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   59: Arguments[0] min Arguments[59]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   60: Arguments[0] min Arguments[60]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   61: Arguments[0] min Arguments[61]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   62: Arguments[0] min Arguments[62]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   63: Arguments[0] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //   64: Arguments[1] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   65: Arguments[1] min Arguments[1]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   66: Arguments[1] min Arguments[2]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   67: Arguments[1] min Arguments[3]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   68: Arguments[1] min Arguments[4]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   69: Arguments[1] min Arguments[5]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   70: Arguments[1] min Arguments[6]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   71: Arguments[1] min Arguments[7]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   72: Arguments[1] min Arguments[8]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   73: Arguments[1] min Arguments[9]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   74: Arguments[1] min Arguments[10]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   75: Arguments[1] min Arguments[11]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   76: Arguments[1] min Arguments[12]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   77: Arguments[1] min Arguments[13]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   78: Arguments[1] min Arguments[14]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   79: Arguments[1] min Arguments[15]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   80: Arguments[1] min Arguments[16]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   81: Arguments[1] min Arguments[17]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   82: Arguments[1] min Arguments[18]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   83: Arguments[1] min Arguments[19]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   84: Arguments[1] min Arguments[20]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   85: Arguments[1] min Arguments[21]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   86: Arguments[1] min Arguments[22]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   87: Arguments[1] min Arguments[23]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   88: Arguments[1] min Arguments[24]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   89: Arguments[1] min Arguments[25]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   90: Arguments[1] min Arguments[26]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   91: Arguments[1] min Arguments[27]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   92: Arguments[1] min Arguments[28]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   93: Arguments[1] min Arguments[29]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   94: Arguments[1] min Arguments[30]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   95: Arguments[1] min Arguments[31]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   96: Arguments[1] min Arguments[32]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   97: Arguments[1] min Arguments[33]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   98: Arguments[1] min Arguments[34]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   99: Arguments[1] min Arguments[35]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  100: Arguments[1] min Arguments[36]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  101: Arguments[1] min Arguments[37]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  102: Arguments[1] min Arguments[38]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  103: Arguments[1] min Arguments[39]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  104: Arguments[1] min Arguments[40]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  105: Arguments[1] min Arguments[41]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  106: Arguments[1] min Arguments[42]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  107: Arguments[1] min Arguments[43]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  108: Arguments[1] min Arguments[44]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  109: Arguments[1] min Arguments[45]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  110: Arguments[1] min Arguments[46]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  111: Arguments[1] min Arguments[47]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  112: Arguments[1] min Arguments[48]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  113: Arguments[1] min Arguments[49]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  114: Arguments[1] min Arguments[50]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  115: Arguments[1] min Arguments[51]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  116: Arguments[1] min Arguments[52]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  117: Arguments[1] min Arguments[53]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  118: Arguments[1] min Arguments[54]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  119: Arguments[1] min Arguments[55]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  120: Arguments[1] min Arguments[56]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  121: Arguments[1] min Arguments[57]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  122: Arguments[1] min Arguments[58]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  123: Arguments[1] min Arguments[59]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  124: Arguments[1] min Arguments[60]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  125: Arguments[1] min Arguments[61]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  126: Arguments[1] min Arguments[62]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  127: Arguments[1] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  128: Arguments[2] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  129: Arguments[2] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  130: Arguments[2] min Arguments[2]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  131: Arguments[2] min Arguments[3]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  132: Arguments[2] min Arguments[4]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  133: Arguments[2] min Arguments[5]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  134: Arguments[2] min Arguments[6]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  135: Arguments[2] min Arguments[7]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  136: Arguments[2] min Arguments[8]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  137: Arguments[2] min Arguments[9]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  138: Arguments[2] min Arguments[10]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  139: Arguments[2] min Arguments[11]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  140: Arguments[2] min Arguments[12]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  141: Arguments[2] min Arguments[13]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  142: Arguments[2] min Arguments[14]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  143: Arguments[2] min Arguments[15]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  144: Arguments[2] min Arguments[16]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  145: Arguments[2] min Arguments[17]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  146: Arguments[2] min Arguments[18]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  147: Arguments[2] min Arguments[19]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  148: Arguments[2] min Arguments[20]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  149: Arguments[2] min Arguments[21]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  150: Arguments[2] min Arguments[22]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  151: Arguments[2] min Arguments[23]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  152: Arguments[2] min Arguments[24]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  153: Arguments[2] min Arguments[25]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  154: Arguments[2] min Arguments[26]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  155: Arguments[2] min Arguments[27]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  156: Arguments[2] min Arguments[28]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  157: Arguments[2] min Arguments[29]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  158: Arguments[2] min Arguments[30]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  159: Arguments[2] min Arguments[31]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  160: Arguments[2] min Arguments[32]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  161: Arguments[2] min Arguments[33]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  162: Arguments[2] min Arguments[34]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  163: Arguments[2] min Arguments[35]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  164: Arguments[2] min Arguments[36]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  165: Arguments[2] min Arguments[37]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  166: Arguments[2] min Arguments[38]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  167: Arguments[2] min Arguments[39]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  168: Arguments[2] min Arguments[40]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  169: Arguments[2] min Arguments[41]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  170: Arguments[2] min Arguments[42]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  171: Arguments[2] min Arguments[43]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  172: Arguments[2] min Arguments[44]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  173: Arguments[2] min Arguments[45]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  174: Arguments[2] min Arguments[46]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  175: Arguments[2] min Arguments[47]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  176: Arguments[2] min Arguments[48]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  177: Arguments[2] min Arguments[49]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  178: Arguments[2] min Arguments[50]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  179: Arguments[2] min Arguments[51]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  180: Arguments[2] min Arguments[52]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  181: Arguments[2] min Arguments[53]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  182: Arguments[2] min Arguments[54]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  183: Arguments[2] min Arguments[55]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  184: Arguments[2] min Arguments[56]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  185: Arguments[2] min Arguments[57]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  186: Arguments[2] min Arguments[58]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  187: Arguments[2] min Arguments[59]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  188: Arguments[2] min Arguments[60]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  189: Arguments[2] min Arguments[61]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  190: Arguments[2] min Arguments[62]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  191: Arguments[2] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  192: Arguments[3] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  193: Arguments[3] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  194: Arguments[3] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  195: Arguments[3] min Arguments[3]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  196: Arguments[3] min Arguments[4]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  197: Arguments[3] min Arguments[5]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  198: Arguments[3] min Arguments[6]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  199: Arguments[3] min Arguments[7]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  200: Arguments[3] min Arguments[8]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  201: Arguments[3] min Arguments[9]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  202: Arguments[3] min Arguments[10]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  203: Arguments[3] min Arguments[11]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  204: Arguments[3] min Arguments[12]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  205: Arguments[3] min Arguments[13]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  206: Arguments[3] min Arguments[14]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  207: Arguments[3] min Arguments[15]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  208: Arguments[3] min Arguments[16]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  209: Arguments[3] min Arguments[17]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  210: Arguments[3] min Arguments[18]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  211: Arguments[3] min Arguments[19]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  212: Arguments[3] min Arguments[20]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  213: Arguments[3] min Arguments[21]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  214: Arguments[3] min Arguments[22]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  215: Arguments[3] min Arguments[23]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  216: Arguments[3] min Arguments[24]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  217: Arguments[3] min Arguments[25]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  218: Arguments[3] min Arguments[26]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  219: Arguments[3] min Arguments[27]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  220: Arguments[3] min Arguments[28]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  221: Arguments[3] min Arguments[29]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  222: Arguments[3] min Arguments[30]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  223: Arguments[3] min Arguments[31]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  224: Arguments[3] min Arguments[32]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  225: Arguments[3] min Arguments[33]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  226: Arguments[3] min Arguments[34]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  227: Arguments[3] min Arguments[35]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  228: Arguments[3] min Arguments[36]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  229: Arguments[3] min Arguments[37]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  230: Arguments[3] min Arguments[38]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  231: Arguments[3] min Arguments[39]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  232: Arguments[3] min Arguments[40]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  233: Arguments[3] min Arguments[41]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  234: Arguments[3] min Arguments[42]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  235: Arguments[3] min Arguments[43]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  236: Arguments[3] min Arguments[44]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  237: Arguments[3] min Arguments[45]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  238: Arguments[3] min Arguments[46]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  239: Arguments[3] min Arguments[47]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  240: Arguments[3] min Arguments[48]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  241: Arguments[3] min Arguments[49]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  242: Arguments[3] min Arguments[50]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  243: Arguments[3] min Arguments[51]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  244: Arguments[3] min Arguments[52]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  245: Arguments[3] min Arguments[53]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  246: Arguments[3] min Arguments[54]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  247: Arguments[3] min Arguments[55]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  248: Arguments[3] min Arguments[56]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  249: Arguments[3] min Arguments[57]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  250: Arguments[3] min Arguments[58]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  251: Arguments[3] min Arguments[59]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  252: Arguments[3] min Arguments[60]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  253: Arguments[3] min Arguments[61]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  254: Arguments[3] min Arguments[62]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  255: Arguments[3] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  256: Arguments[4] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  257: Arguments[4] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  258: Arguments[4] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  259: Arguments[4] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  260: Arguments[4] min Arguments[4]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  261: Arguments[4] min Arguments[5]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  262: Arguments[4] min Arguments[6]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  263: Arguments[4] min Arguments[7]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  264: Arguments[4] min Arguments[8]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  265: Arguments[4] min Arguments[9]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  266: Arguments[4] min Arguments[10]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  267: Arguments[4] min Arguments[11]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  268: Arguments[4] min Arguments[12]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  269: Arguments[4] min Arguments[13]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  270: Arguments[4] min Arguments[14]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  271: Arguments[4] min Arguments[15]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  272: Arguments[4] min Arguments[16]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  273: Arguments[4] min Arguments[17]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  274: Arguments[4] min Arguments[18]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  275: Arguments[4] min Arguments[19]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  276: Arguments[4] min Arguments[20]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  277: Arguments[4] min Arguments[21]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  278: Arguments[4] min Arguments[22]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  279: Arguments[4] min Arguments[23]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  280: Arguments[4] min Arguments[24]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  281: Arguments[4] min Arguments[25]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  282: Arguments[4] min Arguments[26]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  283: Arguments[4] min Arguments[27]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  284: Arguments[4] min Arguments[28]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  285: Arguments[4] min Arguments[29]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  286: Arguments[4] min Arguments[30]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  287: Arguments[4] min Arguments[31]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  288: Arguments[4] min Arguments[32]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  289: Arguments[4] min Arguments[33]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  290: Arguments[4] min Arguments[34]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  291: Arguments[4] min Arguments[35]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  292: Arguments[4] min Arguments[36]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  293: Arguments[4] min Arguments[37]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  294: Arguments[4] min Arguments[38]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  295: Arguments[4] min Arguments[39]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  296: Arguments[4] min Arguments[40]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  297: Arguments[4] min Arguments[41]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  298: Arguments[4] min Arguments[42]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  299: Arguments[4] min Arguments[43]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  300: Arguments[4] min Arguments[44]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  301: Arguments[4] min Arguments[45]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  302: Arguments[4] min Arguments[46]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  303: Arguments[4] min Arguments[47]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  304: Arguments[4] min Arguments[48]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  305: Arguments[4] min Arguments[49]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  306: Arguments[4] min Arguments[50]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  307: Arguments[4] min Arguments[51]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  308: Arguments[4] min Arguments[52]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  309: Arguments[4] min Arguments[53]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  310: Arguments[4] min Arguments[54]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  311: Arguments[4] min Arguments[55]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  312: Arguments[4] min Arguments[56]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  313: Arguments[4] min Arguments[57]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  314: Arguments[4] min Arguments[58]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  315: Arguments[4] min Arguments[59]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  316: Arguments[4] min Arguments[60]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  317: Arguments[4] min Arguments[61]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  318: Arguments[4] min Arguments[62]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  319: Arguments[4] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  320: Arguments[5] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  321: Arguments[5] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  322: Arguments[5] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  323: Arguments[5] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  324: Arguments[5] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  325: Arguments[5] min Arguments[5]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  326: Arguments[5] min Arguments[6]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  327: Arguments[5] min Arguments[7]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  328: Arguments[5] min Arguments[8]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  329: Arguments[5] min Arguments[9]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  330: Arguments[5] min Arguments[10]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  331: Arguments[5] min Arguments[11]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  332: Arguments[5] min Arguments[12]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  333: Arguments[5] min Arguments[13]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  334: Arguments[5] min Arguments[14]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  335: Arguments[5] min Arguments[15]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  336: Arguments[5] min Arguments[16]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  337: Arguments[5] min Arguments[17]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  338: Arguments[5] min Arguments[18]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  339: Arguments[5] min Arguments[19]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  340: Arguments[5] min Arguments[20]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  341: Arguments[5] min Arguments[21]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  342: Arguments[5] min Arguments[22]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  343: Arguments[5] min Arguments[23]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  344: Arguments[5] min Arguments[24]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  345: Arguments[5] min Arguments[25]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  346: Arguments[5] min Arguments[26]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  347: Arguments[5] min Arguments[27]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  348: Arguments[5] min Arguments[28]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  349: Arguments[5] min Arguments[29]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  350: Arguments[5] min Arguments[30]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  351: Arguments[5] min Arguments[31]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  352: Arguments[5] min Arguments[32]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  353: Arguments[5] min Arguments[33]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  354: Arguments[5] min Arguments[34]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  355: Arguments[5] min Arguments[35]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  356: Arguments[5] min Arguments[36]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  357: Arguments[5] min Arguments[37]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  358: Arguments[5] min Arguments[38]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  359: Arguments[5] min Arguments[39]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  360: Arguments[5] min Arguments[40]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  361: Arguments[5] min Arguments[41]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  362: Arguments[5] min Arguments[42]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  363: Arguments[5] min Arguments[43]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  364: Arguments[5] min Arguments[44]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  365: Arguments[5] min Arguments[45]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  366: Arguments[5] min Arguments[46]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  367: Arguments[5] min Arguments[47]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  368: Arguments[5] min Arguments[48]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  369: Arguments[5] min Arguments[49]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  370: Arguments[5] min Arguments[50]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  371: Arguments[5] min Arguments[51]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  372: Arguments[5] min Arguments[52]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  373: Arguments[5] min Arguments[53]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  374: Arguments[5] min Arguments[54]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  375: Arguments[5] min Arguments[55]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  376: Arguments[5] min Arguments[56]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  377: Arguments[5] min Arguments[57]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  378: Arguments[5] min Arguments[58]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  379: Arguments[5] min Arguments[59]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  380: Arguments[5] min Arguments[60]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  381: Arguments[5] min Arguments[61]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  382: Arguments[5] min Arguments[62]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  383: Arguments[5] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  384: Arguments[6] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  385: Arguments[6] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  386: Arguments[6] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  387: Arguments[6] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  388: Arguments[6] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  389: Arguments[6] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  390: Arguments[6] min Arguments[6]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  391: Arguments[6] min Arguments[7]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  392: Arguments[6] min Arguments[8]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  393: Arguments[6] min Arguments[9]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  394: Arguments[6] min Arguments[10]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  395: Arguments[6] min Arguments[11]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  396: Arguments[6] min Arguments[12]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  397: Arguments[6] min Arguments[13]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  398: Arguments[6] min Arguments[14]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  399: Arguments[6] min Arguments[15]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  400: Arguments[6] min Arguments[16]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  401: Arguments[6] min Arguments[17]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  402: Arguments[6] min Arguments[18]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  403: Arguments[6] min Arguments[19]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  404: Arguments[6] min Arguments[20]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  405: Arguments[6] min Arguments[21]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  406: Arguments[6] min Arguments[22]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  407: Arguments[6] min Arguments[23]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  408: Arguments[6] min Arguments[24]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  409: Arguments[6] min Arguments[25]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  410: Arguments[6] min Arguments[26]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  411: Arguments[6] min Arguments[27]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  412: Arguments[6] min Arguments[28]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  413: Arguments[6] min Arguments[29]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  414: Arguments[6] min Arguments[30]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  415: Arguments[6] min Arguments[31]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  416: Arguments[6] min Arguments[32]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  417: Arguments[6] min Arguments[33]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  418: Arguments[6] min Arguments[34]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  419: Arguments[6] min Arguments[35]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  420: Arguments[6] min Arguments[36]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  421: Arguments[6] min Arguments[37]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  422: Arguments[6] min Arguments[38]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  423: Arguments[6] min Arguments[39]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  424: Arguments[6] min Arguments[40]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  425: Arguments[6] min Arguments[41]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  426: Arguments[6] min Arguments[42]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  427: Arguments[6] min Arguments[43]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  428: Arguments[6] min Arguments[44]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  429: Arguments[6] min Arguments[45]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  430: Arguments[6] min Arguments[46]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  431: Arguments[6] min Arguments[47]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  432: Arguments[6] min Arguments[48]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  433: Arguments[6] min Arguments[49]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  434: Arguments[6] min Arguments[50]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  435: Arguments[6] min Arguments[51]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  436: Arguments[6] min Arguments[52]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  437: Arguments[6] min Arguments[53]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  438: Arguments[6] min Arguments[54]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  439: Arguments[6] min Arguments[55]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  440: Arguments[6] min Arguments[56]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  441: Arguments[6] min Arguments[57]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  442: Arguments[6] min Arguments[58]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  443: Arguments[6] min Arguments[59]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  444: Arguments[6] min Arguments[60]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  445: Arguments[6] min Arguments[61]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  446: Arguments[6] min Arguments[62]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  447: Arguments[6] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  448: Arguments[7] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  449: Arguments[7] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  450: Arguments[7] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  451: Arguments[7] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  452: Arguments[7] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  453: Arguments[7] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  454: Arguments[7] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  455: Arguments[7] min Arguments[7]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  456: Arguments[7] min Arguments[8]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  457: Arguments[7] min Arguments[9]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  458: Arguments[7] min Arguments[10]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  459: Arguments[7] min Arguments[11]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  460: Arguments[7] min Arguments[12]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  461: Arguments[7] min Arguments[13]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  462: Arguments[7] min Arguments[14]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  463: Arguments[7] min Arguments[15]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  464: Arguments[7] min Arguments[16]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  465: Arguments[7] min Arguments[17]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  466: Arguments[7] min Arguments[18]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  467: Arguments[7] min Arguments[19]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  468: Arguments[7] min Arguments[20]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  469: Arguments[7] min Arguments[21]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  470: Arguments[7] min Arguments[22]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  471: Arguments[7] min Arguments[23]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  472: Arguments[7] min Arguments[24]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  473: Arguments[7] min Arguments[25]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  474: Arguments[7] min Arguments[26]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  475: Arguments[7] min Arguments[27]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  476: Arguments[7] min Arguments[28]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  477: Arguments[7] min Arguments[29]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  478: Arguments[7] min Arguments[30]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  479: Arguments[7] min Arguments[31]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  480: Arguments[7] min Arguments[32]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  481: Arguments[7] min Arguments[33]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  482: Arguments[7] min Arguments[34]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  483: Arguments[7] min Arguments[35]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  484: Arguments[7] min Arguments[36]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  485: Arguments[7] min Arguments[37]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  486: Arguments[7] min Arguments[38]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  487: Arguments[7] min Arguments[39]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  488: Arguments[7] min Arguments[40]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  489: Arguments[7] min Arguments[41]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  490: Arguments[7] min Arguments[42]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  491: Arguments[7] min Arguments[43]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  492: Arguments[7] min Arguments[44]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  493: Arguments[7] min Arguments[45]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  494: Arguments[7] min Arguments[46]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  495: Arguments[7] min Arguments[47]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  496: Arguments[7] min Arguments[48]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  497: Arguments[7] min Arguments[49]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  498: Arguments[7] min Arguments[50]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  499: Arguments[7] min Arguments[51]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  500: Arguments[7] min Arguments[52]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  501: Arguments[7] min Arguments[53]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  502: Arguments[7] min Arguments[54]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  503: Arguments[7] min Arguments[55]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  504: Arguments[7] min Arguments[56]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  505: Arguments[7] min Arguments[57]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  506: Arguments[7] min Arguments[58]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  507: Arguments[7] min Arguments[59]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  508: Arguments[7] min Arguments[60]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  509: Arguments[7] min Arguments[61]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  510: Arguments[7] min Arguments[62]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  511: Arguments[7] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  512: Arguments[8] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  513: Arguments[8] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  514: Arguments[8] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  515: Arguments[8] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  516: Arguments[8] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  517: Arguments[8] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  518: Arguments[8] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  519: Arguments[8] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  520: Arguments[8] min Arguments[8]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  521: Arguments[8] min Arguments[9]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  522: Arguments[8] min Arguments[10]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  523: Arguments[8] min Arguments[11]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  524: Arguments[8] min Arguments[12]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  525: Arguments[8] min Arguments[13]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  526: Arguments[8] min Arguments[14]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  527: Arguments[8] min Arguments[15]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  528: Arguments[8] min Arguments[16]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  529: Arguments[8] min Arguments[17]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  530: Arguments[8] min Arguments[18]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  531: Arguments[8] min Arguments[19]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  532: Arguments[8] min Arguments[20]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  533: Arguments[8] min Arguments[21]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  534: Arguments[8] min Arguments[22]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  535: Arguments[8] min Arguments[23]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  536: Arguments[8] min Arguments[24]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  537: Arguments[8] min Arguments[25]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  538: Arguments[8] min Arguments[26]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  539: Arguments[8] min Arguments[27]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  540: Arguments[8] min Arguments[28]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  541: Arguments[8] min Arguments[29]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  542: Arguments[8] min Arguments[30]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  543: Arguments[8] min Arguments[31]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  544: Arguments[8] min Arguments[32]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  545: Arguments[8] min Arguments[33]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  546: Arguments[8] min Arguments[34]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  547: Arguments[8] min Arguments[35]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  548: Arguments[8] min Arguments[36]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  549: Arguments[8] min Arguments[37]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  550: Arguments[8] min Arguments[38]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  551: Arguments[8] min Arguments[39]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  552: Arguments[8] min Arguments[40]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  553: Arguments[8] min Arguments[41]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  554: Arguments[8] min Arguments[42]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  555: Arguments[8] min Arguments[43]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  556: Arguments[8] min Arguments[44]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  557: Arguments[8] min Arguments[45]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  558: Arguments[8] min Arguments[46]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  559: Arguments[8] min Arguments[47]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  560: Arguments[8] min Arguments[48]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  561: Arguments[8] min Arguments[49]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  562: Arguments[8] min Arguments[50]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  563: Arguments[8] min Arguments[51]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  564: Arguments[8] min Arguments[52]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  565: Arguments[8] min Arguments[53]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  566: Arguments[8] min Arguments[54]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  567: Arguments[8] min Arguments[55]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  568: Arguments[8] min Arguments[56]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  569: Arguments[8] min Arguments[57]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  570: Arguments[8] min Arguments[58]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  571: Arguments[8] min Arguments[59]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  572: Arguments[8] min Arguments[60]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  573: Arguments[8] min Arguments[61]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  574: Arguments[8] min Arguments[62]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  575: Arguments[8] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  576: Arguments[9] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  577: Arguments[9] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  578: Arguments[9] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  579: Arguments[9] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  580: Arguments[9] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  581: Arguments[9] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  582: Arguments[9] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  583: Arguments[9] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  584: Arguments[9] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  585: Arguments[9] min Arguments[9]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  586: Arguments[9] min Arguments[10]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  587: Arguments[9] min Arguments[11]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  588: Arguments[9] min Arguments[12]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  589: Arguments[9] min Arguments[13]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  590: Arguments[9] min Arguments[14]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  591: Arguments[9] min Arguments[15]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  592: Arguments[9] min Arguments[16]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  593: Arguments[9] min Arguments[17]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  594: Arguments[9] min Arguments[18]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  595: Arguments[9] min Arguments[19]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  596: Arguments[9] min Arguments[20]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  597: Arguments[9] min Arguments[21]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  598: Arguments[9] min Arguments[22]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  599: Arguments[9] min Arguments[23]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  600: Arguments[9] min Arguments[24]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  601: Arguments[9] min Arguments[25]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  602: Arguments[9] min Arguments[26]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  603: Arguments[9] min Arguments[27]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  604: Arguments[9] min Arguments[28]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  605: Arguments[9] min Arguments[29]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  606: Arguments[9] min Arguments[30]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  607: Arguments[9] min Arguments[31]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  608: Arguments[9] min Arguments[32]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  609: Arguments[9] min Arguments[33]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  610: Arguments[9] min Arguments[34]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  611: Arguments[9] min Arguments[35]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  612: Arguments[9] min Arguments[36]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  613: Arguments[9] min Arguments[37]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  614: Arguments[9] min Arguments[38]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  615: Arguments[9] min Arguments[39]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  616: Arguments[9] min Arguments[40]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  617: Arguments[9] min Arguments[41]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  618: Arguments[9] min Arguments[42]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  619: Arguments[9] min Arguments[43]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  620: Arguments[9] min Arguments[44]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  621: Arguments[9] min Arguments[45]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  622: Arguments[9] min Arguments[46]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  623: Arguments[9] min Arguments[47]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  624: Arguments[9] min Arguments[48]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  625: Arguments[9] min Arguments[49]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  626: Arguments[9] min Arguments[50]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  627: Arguments[9] min Arguments[51]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  628: Arguments[9] min Arguments[52]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  629: Arguments[9] min Arguments[53]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  630: Arguments[9] min Arguments[54]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  631: Arguments[9] min Arguments[55]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  632: Arguments[9] min Arguments[56]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  633: Arguments[9] min Arguments[57]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  634: Arguments[9] min Arguments[58]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  635: Arguments[9] min Arguments[59]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  636: Arguments[9] min Arguments[60]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  637: Arguments[9] min Arguments[61]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  638: Arguments[9] min Arguments[62]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  639: Arguments[9] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  640: Arguments[10] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  641: Arguments[10] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  642: Arguments[10] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  643: Arguments[10] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  644: Arguments[10] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  645: Arguments[10] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  646: Arguments[10] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  647: Arguments[10] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  648: Arguments[10] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  649: Arguments[10] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  650: Arguments[10] min Arguments[10]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  651: Arguments[10] min Arguments[11]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  652: Arguments[10] min Arguments[12]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  653: Arguments[10] min Arguments[13]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  654: Arguments[10] min Arguments[14]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  655: Arguments[10] min Arguments[15]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  656: Arguments[10] min Arguments[16]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  657: Arguments[10] min Arguments[17]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  658: Arguments[10] min Arguments[18]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  659: Arguments[10] min Arguments[19]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  660: Arguments[10] min Arguments[20]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  661: Arguments[10] min Arguments[21]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  662: Arguments[10] min Arguments[22]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  663: Arguments[10] min Arguments[23]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  664: Arguments[10] min Arguments[24]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  665: Arguments[10] min Arguments[25]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  666: Arguments[10] min Arguments[26]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  667: Arguments[10] min Arguments[27]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  668: Arguments[10] min Arguments[28]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  669: Arguments[10] min Arguments[29]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  670: Arguments[10] min Arguments[30]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  671: Arguments[10] min Arguments[31]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  672: Arguments[10] min Arguments[32]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  673: Arguments[10] min Arguments[33]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  674: Arguments[10] min Arguments[34]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  675: Arguments[10] min Arguments[35]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  676: Arguments[10] min Arguments[36]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  677: Arguments[10] min Arguments[37]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  678: Arguments[10] min Arguments[38]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  679: Arguments[10] min Arguments[39]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  680: Arguments[10] min Arguments[40]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  681: Arguments[10] min Arguments[41]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  682: Arguments[10] min Arguments[42]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  683: Arguments[10] min Arguments[43]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  684: Arguments[10] min Arguments[44]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  685: Arguments[10] min Arguments[45]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  686: Arguments[10] min Arguments[46]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  687: Arguments[10] min Arguments[47]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  688: Arguments[10] min Arguments[48]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  689: Arguments[10] min Arguments[49]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  690: Arguments[10] min Arguments[50]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  691: Arguments[10] min Arguments[51]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  692: Arguments[10] min Arguments[52]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  693: Arguments[10] min Arguments[53]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  694: Arguments[10] min Arguments[54]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  695: Arguments[10] min Arguments[55]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  696: Arguments[10] min Arguments[56]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  697: Arguments[10] min Arguments[57]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  698: Arguments[10] min Arguments[58]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  699: Arguments[10] min Arguments[59]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  700: Arguments[10] min Arguments[60]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  701: Arguments[10] min Arguments[61]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  702: Arguments[10] min Arguments[62]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  703: Arguments[10] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  704: Arguments[11] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  705: Arguments[11] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  706: Arguments[11] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  707: Arguments[11] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  708: Arguments[11] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  709: Arguments[11] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  710: Arguments[11] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  711: Arguments[11] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  712: Arguments[11] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  713: Arguments[11] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  714: Arguments[11] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  715: Arguments[11] min Arguments[11]
    (Info: triOk;            Val: '-100000'),                                   //  716: Arguments[11] min Arguments[12]
    (Info: triOk;            Val: '-100000'),                                   //  717: Arguments[11] min Arguments[13]
    (Info: triOk;            Val: '-100000'),                                   //  718: Arguments[11] min Arguments[14]
    (Info: triOk;            Val: '-100000'),                                   //  719: Arguments[11] min Arguments[15]
    (Info: triOk;            Val: '-100000'),                                   //  720: Arguments[11] min Arguments[16]
    (Info: triOk;            Val: '-100000'),                                   //  721: Arguments[11] min Arguments[17]
    (Info: triOk;            Val: '-100000'),                                   //  722: Arguments[11] min Arguments[18]
    (Info: triOk;            Val: '-100000'),                                   //  723: Arguments[11] min Arguments[19]
    (Info: triOk;            Val: '-100000'),                                   //  724: Arguments[11] min Arguments[20]
    (Info: triOk;            Val: '-100000'),                                   //  725: Arguments[11] min Arguments[21]
    (Info: triOk;            Val: '-100000'),                                   //  726: Arguments[11] min Arguments[22]
    (Info: triOk;            Val: '-100000'),                                   //  727: Arguments[11] min Arguments[23]
    (Info: triOk;            Val: '-100000'),                                   //  728: Arguments[11] min Arguments[24]
    (Info: triOk;            Val: '-100000'),                                   //  729: Arguments[11] min Arguments[25]
    (Info: triOk;            Val: '-100000'),                                   //  730: Arguments[11] min Arguments[26]
    (Info: triOk;            Val: '-100000'),                                   //  731: Arguments[11] min Arguments[27]
    (Info: triOk;            Val: '-100000'),                                   //  732: Arguments[11] min Arguments[28]
    (Info: triOk;            Val: '-100000'),                                   //  733: Arguments[11] min Arguments[29]
    (Info: triOk;            Val: '-100000'),                                   //  734: Arguments[11] min Arguments[30]
    (Info: triOk;            Val: '-100000'),                                   //  735: Arguments[11] min Arguments[31]
    (Info: triOk;            Val: '-100000'),                                   //  736: Arguments[11] min Arguments[32]
    (Info: triOk;            Val: '-100000'),                                   //  737: Arguments[11] min Arguments[33]
    (Info: triOk;            Val: '-100000'),                                   //  738: Arguments[11] min Arguments[34]
    (Info: triOk;            Val: '-100000'),                                   //  739: Arguments[11] min Arguments[35]
    (Info: triOk;            Val: '-100000'),                                   //  740: Arguments[11] min Arguments[36]
    (Info: triOk;            Val: '-100000'),                                   //  741: Arguments[11] min Arguments[37]
    (Info: triOk;            Val: '-100000'),                                   //  742: Arguments[11] min Arguments[38]
    (Info: triOk;            Val: '-100000'),                                   //  743: Arguments[11] min Arguments[39]
    (Info: triOk;            Val: '-100000'),                                   //  744: Arguments[11] min Arguments[40]
    (Info: triOk;            Val: '-100000'),                                   //  745: Arguments[11] min Arguments[41]
    (Info: triOk;            Val: '-100000'),                                   //  746: Arguments[11] min Arguments[42]
    (Info: triOk;            Val: '-100000'),                                   //  747: Arguments[11] min Arguments[43]
    (Info: triOk;            Val: '-100000'),                                   //  748: Arguments[11] min Arguments[44]
    (Info: triOk;            Val: '-100000'),                                   //  749: Arguments[11] min Arguments[45]
    (Info: triOk;            Val: '-100000'),                                   //  750: Arguments[11] min Arguments[46]
    (Info: triOk;            Val: '-100000'),                                   //  751: Arguments[11] min Arguments[47]
    (Info: triOk;            Val: '-100000'),                                   //  752: Arguments[11] min Arguments[48]
    (Info: triOk;            Val: '-100000'),                                   //  753: Arguments[11] min Arguments[49]
    (Info: triOk;            Val: '-100000'),                                   //  754: Arguments[11] min Arguments[50]
    (Info: triOk;            Val: '-100000'),                                   //  755: Arguments[11] min Arguments[51]
    (Info: triOk;            Val: '-100000'),                                   //  756: Arguments[11] min Arguments[52]
    (Info: triOk;            Val: '-100000'),                                   //  757: Arguments[11] min Arguments[53]
    (Info: triOk;            Val: '-100000'),                                   //  758: Arguments[11] min Arguments[54]
    (Info: triOk;            Val: '-100000'),                                   //  759: Arguments[11] min Arguments[55]
    (Info: triOk;            Val: '-100000'),                                   //  760: Arguments[11] min Arguments[56]
    (Info: triOk;            Val: '-100000'),                                   //  761: Arguments[11] min Arguments[57]
    (Info: triOk;            Val: '-100000'),                                   //  762: Arguments[11] min Arguments[58]
    (Info: triOk;            Val: '-100000'),                                   //  763: Arguments[11] min Arguments[59]
    (Info: triOk;            Val: '-100000'),                                   //  764: Arguments[11] min Arguments[60]
    (Info: triOk;            Val: '-100000'),                                   //  765: Arguments[11] min Arguments[61]
    (Info: triOk;            Val: '-100000'),                                   //  766: Arguments[11] min Arguments[62]
    (Info: triOk;            Val: '-100000'),                                   //  767: Arguments[11] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  768: Arguments[12] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  769: Arguments[12] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  770: Arguments[12] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  771: Arguments[12] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  772: Arguments[12] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  773: Arguments[12] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  774: Arguments[12] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  775: Arguments[12] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  776: Arguments[12] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  777: Arguments[12] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  778: Arguments[12] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  779: Arguments[12] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  780: Arguments[12] min Arguments[12]
    (Info: triOk;            Val: '-45808'),                                    //  781: Arguments[12] min Arguments[13]
    (Info: triOk;            Val: '-45808'),                                    //  782: Arguments[12] min Arguments[14]
    (Info: triOk;            Val: '-45808'),                                    //  783: Arguments[12] min Arguments[15]
    (Info: triOk;            Val: '-45808'),                                    //  784: Arguments[12] min Arguments[16]
    (Info: triOk;            Val: '-45808'),                                    //  785: Arguments[12] min Arguments[17]
    (Info: triOk;            Val: '-45808'),                                    //  786: Arguments[12] min Arguments[18]
    (Info: triOk;            Val: '-45808'),                                    //  787: Arguments[12] min Arguments[19]
    (Info: triOk;            Val: '-45808'),                                    //  788: Arguments[12] min Arguments[20]
    (Info: triOk;            Val: '-45808'),                                    //  789: Arguments[12] min Arguments[21]
    (Info: triOk;            Val: '-45808'),                                    //  790: Arguments[12] min Arguments[22]
    (Info: triOk;            Val: '-45808'),                                    //  791: Arguments[12] min Arguments[23]
    (Info: triOk;            Val: '-45808'),                                    //  792: Arguments[12] min Arguments[24]
    (Info: triOk;            Val: '-45808'),                                    //  793: Arguments[12] min Arguments[25]
    (Info: triOk;            Val: '-45808'),                                    //  794: Arguments[12] min Arguments[26]
    (Info: triOk;            Val: '-45808'),                                    //  795: Arguments[12] min Arguments[27]
    (Info: triOk;            Val: '-45808'),                                    //  796: Arguments[12] min Arguments[28]
    (Info: triOk;            Val: '-45808'),                                    //  797: Arguments[12] min Arguments[29]
    (Info: triOk;            Val: '-45808'),                                    //  798: Arguments[12] min Arguments[30]
    (Info: triOk;            Val: '-45808'),                                    //  799: Arguments[12] min Arguments[31]
    (Info: triOk;            Val: '-45808'),                                    //  800: Arguments[12] min Arguments[32]
    (Info: triOk;            Val: '-45808'),                                    //  801: Arguments[12] min Arguments[33]
    (Info: triOk;            Val: '-45808'),                                    //  802: Arguments[12] min Arguments[34]
    (Info: triOk;            Val: '-45808'),                                    //  803: Arguments[12] min Arguments[35]
    (Info: triOk;            Val: '-45808'),                                    //  804: Arguments[12] min Arguments[36]
    (Info: triOk;            Val: '-45808'),                                    //  805: Arguments[12] min Arguments[37]
    (Info: triOk;            Val: '-45808'),                                    //  806: Arguments[12] min Arguments[38]
    (Info: triOk;            Val: '-45808'),                                    //  807: Arguments[12] min Arguments[39]
    (Info: triOk;            Val: '-45808'),                                    //  808: Arguments[12] min Arguments[40]
    (Info: triOk;            Val: '-45808'),                                    //  809: Arguments[12] min Arguments[41]
    (Info: triOk;            Val: '-45808'),                                    //  810: Arguments[12] min Arguments[42]
    (Info: triOk;            Val: '-45808'),                                    //  811: Arguments[12] min Arguments[43]
    (Info: triOk;            Val: '-45808'),                                    //  812: Arguments[12] min Arguments[44]
    (Info: triOk;            Val: '-45808'),                                    //  813: Arguments[12] min Arguments[45]
    (Info: triOk;            Val: '-45808'),                                    //  814: Arguments[12] min Arguments[46]
    (Info: triOk;            Val: '-45808'),                                    //  815: Arguments[12] min Arguments[47]
    (Info: triOk;            Val: '-45808'),                                    //  816: Arguments[12] min Arguments[48]
    (Info: triOk;            Val: '-45808'),                                    //  817: Arguments[12] min Arguments[49]
    (Info: triOk;            Val: '-45808'),                                    //  818: Arguments[12] min Arguments[50]
    (Info: triOk;            Val: '-45808'),                                    //  819: Arguments[12] min Arguments[51]
    (Info: triOk;            Val: '-45808'),                                    //  820: Arguments[12] min Arguments[52]
    (Info: triOk;            Val: '-45808'),                                    //  821: Arguments[12] min Arguments[53]
    (Info: triOk;            Val: '-45808'),                                    //  822: Arguments[12] min Arguments[54]
    (Info: triOk;            Val: '-45808'),                                    //  823: Arguments[12] min Arguments[55]
    (Info: triOk;            Val: '-45808'),                                    //  824: Arguments[12] min Arguments[56]
    (Info: triOk;            Val: '-45808'),                                    //  825: Arguments[12] min Arguments[57]
    (Info: triOk;            Val: '-45808'),                                    //  826: Arguments[12] min Arguments[58]
    (Info: triOk;            Val: '-45808'),                                    //  827: Arguments[12] min Arguments[59]
    (Info: triOk;            Val: '-45808'),                                    //  828: Arguments[12] min Arguments[60]
    (Info: triOk;            Val: '-45808'),                                    //  829: Arguments[12] min Arguments[61]
    (Info: triOk;            Val: '-45808'),                                    //  830: Arguments[12] min Arguments[62]
    (Info: triOk;            Val: '-45808'),                                    //  831: Arguments[12] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  832: Arguments[13] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  833: Arguments[13] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  834: Arguments[13] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  835: Arguments[13] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  836: Arguments[13] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  837: Arguments[13] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  838: Arguments[13] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  839: Arguments[13] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  840: Arguments[13] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  841: Arguments[13] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  842: Arguments[13] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  843: Arguments[13] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  844: Arguments[13] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  845: Arguments[13] min Arguments[13]
    (Info: triOk;            Val: '-10000'),                                    //  846: Arguments[13] min Arguments[14]
    (Info: triOk;            Val: '-10000'),                                    //  847: Arguments[13] min Arguments[15]
    (Info: triOk;            Val: '-10000'),                                    //  848: Arguments[13] min Arguments[16]
    (Info: triOk;            Val: '-10000'),                                    //  849: Arguments[13] min Arguments[17]
    (Info: triOk;            Val: '-10000'),                                    //  850: Arguments[13] min Arguments[18]
    (Info: triOk;            Val: '-10000'),                                    //  851: Arguments[13] min Arguments[19]
    (Info: triOk;            Val: '-10000'),                                    //  852: Arguments[13] min Arguments[20]
    (Info: triOk;            Val: '-10000'),                                    //  853: Arguments[13] min Arguments[21]
    (Info: triOk;            Val: '-10000'),                                    //  854: Arguments[13] min Arguments[22]
    (Info: triOk;            Val: '-10000'),                                    //  855: Arguments[13] min Arguments[23]
    (Info: triOk;            Val: '-10000'),                                    //  856: Arguments[13] min Arguments[24]
    (Info: triOk;            Val: '-10000'),                                    //  857: Arguments[13] min Arguments[25]
    (Info: triOk;            Val: '-10000'),                                    //  858: Arguments[13] min Arguments[26]
    (Info: triOk;            Val: '-10000'),                                    //  859: Arguments[13] min Arguments[27]
    (Info: triOk;            Val: '-10000'),                                    //  860: Arguments[13] min Arguments[28]
    (Info: triOk;            Val: '-10000'),                                    //  861: Arguments[13] min Arguments[29]
    (Info: triOk;            Val: '-10000'),                                    //  862: Arguments[13] min Arguments[30]
    (Info: triOk;            Val: '-10000'),                                    //  863: Arguments[13] min Arguments[31]
    (Info: triOk;            Val: '-10000'),                                    //  864: Arguments[13] min Arguments[32]
    (Info: triOk;            Val: '-10000'),                                    //  865: Arguments[13] min Arguments[33]
    (Info: triOk;            Val: '-10000'),                                    //  866: Arguments[13] min Arguments[34]
    (Info: triOk;            Val: '-10000'),                                    //  867: Arguments[13] min Arguments[35]
    (Info: triOk;            Val: '-10000'),                                    //  868: Arguments[13] min Arguments[36]
    (Info: triOk;            Val: '-10000'),                                    //  869: Arguments[13] min Arguments[37]
    (Info: triOk;            Val: '-10000'),                                    //  870: Arguments[13] min Arguments[38]
    (Info: triOk;            Val: '-10000'),                                    //  871: Arguments[13] min Arguments[39]
    (Info: triOk;            Val: '-10000'),                                    //  872: Arguments[13] min Arguments[40]
    (Info: triOk;            Val: '-10000'),                                    //  873: Arguments[13] min Arguments[41]
    (Info: triOk;            Val: '-10000'),                                    //  874: Arguments[13] min Arguments[42]
    (Info: triOk;            Val: '-10000'),                                    //  875: Arguments[13] min Arguments[43]
    (Info: triOk;            Val: '-10000'),                                    //  876: Arguments[13] min Arguments[44]
    (Info: triOk;            Val: '-10000'),                                    //  877: Arguments[13] min Arguments[45]
    (Info: triOk;            Val: '-10000'),                                    //  878: Arguments[13] min Arguments[46]
    (Info: triOk;            Val: '-10000'),                                    //  879: Arguments[13] min Arguments[47]
    (Info: triOk;            Val: '-10000'),                                    //  880: Arguments[13] min Arguments[48]
    (Info: triOk;            Val: '-10000'),                                    //  881: Arguments[13] min Arguments[49]
    (Info: triOk;            Val: '-10000'),                                    //  882: Arguments[13] min Arguments[50]
    (Info: triOk;            Val: '-10000'),                                    //  883: Arguments[13] min Arguments[51]
    (Info: triOk;            Val: '-10000'),                                    //  884: Arguments[13] min Arguments[52]
    (Info: triOk;            Val: '-10000'),                                    //  885: Arguments[13] min Arguments[53]
    (Info: triOk;            Val: '-10000'),                                    //  886: Arguments[13] min Arguments[54]
    (Info: triOk;            Val: '-10000'),                                    //  887: Arguments[13] min Arguments[55]
    (Info: triOk;            Val: '-10000'),                                    //  888: Arguments[13] min Arguments[56]
    (Info: triOk;            Val: '-10000'),                                    //  889: Arguments[13] min Arguments[57]
    (Info: triOk;            Val: '-10000'),                                    //  890: Arguments[13] min Arguments[58]
    (Info: triOk;            Val: '-10000'),                                    //  891: Arguments[13] min Arguments[59]
    (Info: triOk;            Val: '-10000'),                                    //  892: Arguments[13] min Arguments[60]
    (Info: triOk;            Val: '-10000'),                                    //  893: Arguments[13] min Arguments[61]
    (Info: triOk;            Val: '-10000'),                                    //  894: Arguments[13] min Arguments[62]
    (Info: triOk;            Val: '-10000'),                                    //  895: Arguments[13] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  896: Arguments[14] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  897: Arguments[14] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  898: Arguments[14] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  899: Arguments[14] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  900: Arguments[14] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  901: Arguments[14] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  902: Arguments[14] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  903: Arguments[14] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  904: Arguments[14] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  905: Arguments[14] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  906: Arguments[14] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  907: Arguments[14] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  908: Arguments[14] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  909: Arguments[14] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  910: Arguments[14] min Arguments[14]
    (Info: triOk;            Val: '-1000'),                                     //  911: Arguments[14] min Arguments[15]
    (Info: triOk;            Val: '-1000'),                                     //  912: Arguments[14] min Arguments[16]
    (Info: triOk;            Val: '-1000'),                                     //  913: Arguments[14] min Arguments[17]
    (Info: triOk;            Val: '-1000'),                                     //  914: Arguments[14] min Arguments[18]
    (Info: triOk;            Val: '-1000'),                                     //  915: Arguments[14] min Arguments[19]
    (Info: triOk;            Val: '-1000'),                                     //  916: Arguments[14] min Arguments[20]
    (Info: triOk;            Val: '-1000'),                                     //  917: Arguments[14] min Arguments[21]
    (Info: triOk;            Val: '-1000'),                                     //  918: Arguments[14] min Arguments[22]
    (Info: triOk;            Val: '-1000'),                                     //  919: Arguments[14] min Arguments[23]
    (Info: triOk;            Val: '-1000'),                                     //  920: Arguments[14] min Arguments[24]
    (Info: triOk;            Val: '-1000'),                                     //  921: Arguments[14] min Arguments[25]
    (Info: triOk;            Val: '-1000'),                                     //  922: Arguments[14] min Arguments[26]
    (Info: triOk;            Val: '-1000'),                                     //  923: Arguments[14] min Arguments[27]
    (Info: triOk;            Val: '-1000'),                                     //  924: Arguments[14] min Arguments[28]
    (Info: triOk;            Val: '-1000'),                                     //  925: Arguments[14] min Arguments[29]
    (Info: triOk;            Val: '-1000'),                                     //  926: Arguments[14] min Arguments[30]
    (Info: triOk;            Val: '-1000'),                                     //  927: Arguments[14] min Arguments[31]
    (Info: triOk;            Val: '-1000'),                                     //  928: Arguments[14] min Arguments[32]
    (Info: triOk;            Val: '-1000'),                                     //  929: Arguments[14] min Arguments[33]
    (Info: triOk;            Val: '-1000'),                                     //  930: Arguments[14] min Arguments[34]
    (Info: triOk;            Val: '-1000'),                                     //  931: Arguments[14] min Arguments[35]
    (Info: triOk;            Val: '-1000'),                                     //  932: Arguments[14] min Arguments[36]
    (Info: triOk;            Val: '-1000'),                                     //  933: Arguments[14] min Arguments[37]
    (Info: triOk;            Val: '-1000'),                                     //  934: Arguments[14] min Arguments[38]
    (Info: triOk;            Val: '-1000'),                                     //  935: Arguments[14] min Arguments[39]
    (Info: triOk;            Val: '-1000'),                                     //  936: Arguments[14] min Arguments[40]
    (Info: triOk;            Val: '-1000'),                                     //  937: Arguments[14] min Arguments[41]
    (Info: triOk;            Val: '-1000'),                                     //  938: Arguments[14] min Arguments[42]
    (Info: triOk;            Val: '-1000'),                                     //  939: Arguments[14] min Arguments[43]
    (Info: triOk;            Val: '-1000'),                                     //  940: Arguments[14] min Arguments[44]
    (Info: triOk;            Val: '-1000'),                                     //  941: Arguments[14] min Arguments[45]
    (Info: triOk;            Val: '-1000'),                                     //  942: Arguments[14] min Arguments[46]
    (Info: triOk;            Val: '-1000'),                                     //  943: Arguments[14] min Arguments[47]
    (Info: triOk;            Val: '-1000'),                                     //  944: Arguments[14] min Arguments[48]
    (Info: triOk;            Val: '-1000'),                                     //  945: Arguments[14] min Arguments[49]
    (Info: triOk;            Val: '-1000'),                                     //  946: Arguments[14] min Arguments[50]
    (Info: triOk;            Val: '-1000'),                                     //  947: Arguments[14] min Arguments[51]
    (Info: triOk;            Val: '-1000'),                                     //  948: Arguments[14] min Arguments[52]
    (Info: triOk;            Val: '-1000'),                                     //  949: Arguments[14] min Arguments[53]
    (Info: triOk;            Val: '-1000'),                                     //  950: Arguments[14] min Arguments[54]
    (Info: triOk;            Val: '-1000'),                                     //  951: Arguments[14] min Arguments[55]
    (Info: triOk;            Val: '-1000'),                                     //  952: Arguments[14] min Arguments[56]
    (Info: triOk;            Val: '-1000'),                                     //  953: Arguments[14] min Arguments[57]
    (Info: triOk;            Val: '-1000'),                                     //  954: Arguments[14] min Arguments[58]
    (Info: triOk;            Val: '-1000'),                                     //  955: Arguments[14] min Arguments[59]
    (Info: triOk;            Val: '-1000'),                                     //  956: Arguments[14] min Arguments[60]
    (Info: triOk;            Val: '-1000'),                                     //  957: Arguments[14] min Arguments[61]
    (Info: triOk;            Val: '-1000'),                                     //  958: Arguments[14] min Arguments[62]
    (Info: triOk;            Val: '-1000'),                                     //  959: Arguments[14] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //  960: Arguments[15] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //  961: Arguments[15] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  962: Arguments[15] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  963: Arguments[15] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  964: Arguments[15] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  965: Arguments[15] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  966: Arguments[15] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  967: Arguments[15] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  968: Arguments[15] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  969: Arguments[15] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  970: Arguments[15] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  971: Arguments[15] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  972: Arguments[15] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  973: Arguments[15] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  974: Arguments[15] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  975: Arguments[15] min Arguments[15]
    (Info: triOk;            Val: '-100'),                                      //  976: Arguments[15] min Arguments[16]
    (Info: triOk;            Val: '-100'),                                      //  977: Arguments[15] min Arguments[17]
    (Info: triOk;            Val: '-100'),                                      //  978: Arguments[15] min Arguments[18]
    (Info: triOk;            Val: '-100'),                                      //  979: Arguments[15] min Arguments[19]
    (Info: triOk;            Val: '-100'),                                      //  980: Arguments[15] min Arguments[20]
    (Info: triOk;            Val: '-100'),                                      //  981: Arguments[15] min Arguments[21]
    (Info: triOk;            Val: '-100'),                                      //  982: Arguments[15] min Arguments[22]
    (Info: triOk;            Val: '-100'),                                      //  983: Arguments[15] min Arguments[23]
    (Info: triOk;            Val: '-100'),                                      //  984: Arguments[15] min Arguments[24]
    (Info: triOk;            Val: '-100'),                                      //  985: Arguments[15] min Arguments[25]
    (Info: triOk;            Val: '-100'),                                      //  986: Arguments[15] min Arguments[26]
    (Info: triOk;            Val: '-100'),                                      //  987: Arguments[15] min Arguments[27]
    (Info: triOk;            Val: '-100'),                                      //  988: Arguments[15] min Arguments[28]
    (Info: triOk;            Val: '-100'),                                      //  989: Arguments[15] min Arguments[29]
    (Info: triOk;            Val: '-100'),                                      //  990: Arguments[15] min Arguments[30]
    (Info: triOk;            Val: '-100'),                                      //  991: Arguments[15] min Arguments[31]
    (Info: triOk;            Val: '-100'),                                      //  992: Arguments[15] min Arguments[32]
    (Info: triOk;            Val: '-100'),                                      //  993: Arguments[15] min Arguments[33]
    (Info: triOk;            Val: '-100'),                                      //  994: Arguments[15] min Arguments[34]
    (Info: triOk;            Val: '-100'),                                      //  995: Arguments[15] min Arguments[35]
    (Info: triOk;            Val: '-100'),                                      //  996: Arguments[15] min Arguments[36]
    (Info: triOk;            Val: '-100'),                                      //  997: Arguments[15] min Arguments[37]
    (Info: triOk;            Val: '-100'),                                      //  998: Arguments[15] min Arguments[38]
    (Info: triOk;            Val: '-100'),                                      //  999: Arguments[15] min Arguments[39]
    (Info: triOk;            Val: '-100'),                                      // 1000: Arguments[15] min Arguments[40]
    (Info: triOk;            Val: '-100'),                                      // 1001: Arguments[15] min Arguments[41]
    (Info: triOk;            Val: '-100'),                                      // 1002: Arguments[15] min Arguments[42]
    (Info: triOk;            Val: '-100'),                                      // 1003: Arguments[15] min Arguments[43]
    (Info: triOk;            Val: '-100'),                                      // 1004: Arguments[15] min Arguments[44]
    (Info: triOk;            Val: '-100'),                                      // 1005: Arguments[15] min Arguments[45]
    (Info: triOk;            Val: '-100'),                                      // 1006: Arguments[15] min Arguments[46]
    (Info: triOk;            Val: '-100'),                                      // 1007: Arguments[15] min Arguments[47]
    (Info: triOk;            Val: '-100'),                                      // 1008: Arguments[15] min Arguments[48]
    (Info: triOk;            Val: '-100'),                                      // 1009: Arguments[15] min Arguments[49]
    (Info: triOk;            Val: '-100'),                                      // 1010: Arguments[15] min Arguments[50]
    (Info: triOk;            Val: '-100'),                                      // 1011: Arguments[15] min Arguments[51]
    (Info: triOk;            Val: '-100'),                                      // 1012: Arguments[15] min Arguments[52]
    (Info: triOk;            Val: '-100'),                                      // 1013: Arguments[15] min Arguments[53]
    (Info: triOk;            Val: '-100'),                                      // 1014: Arguments[15] min Arguments[54]
    (Info: triOk;            Val: '-100'),                                      // 1015: Arguments[15] min Arguments[55]
    (Info: triOk;            Val: '-100'),                                      // 1016: Arguments[15] min Arguments[56]
    (Info: triOk;            Val: '-100'),                                      // 1017: Arguments[15] min Arguments[57]
    (Info: triOk;            Val: '-100'),                                      // 1018: Arguments[15] min Arguments[58]
    (Info: triOk;            Val: '-100'),                                      // 1019: Arguments[15] min Arguments[59]
    (Info: triOk;            Val: '-100'),                                      // 1020: Arguments[15] min Arguments[60]
    (Info: triOk;            Val: '-100'),                                      // 1021: Arguments[15] min Arguments[61]
    (Info: triOk;            Val: '-100'),                                      // 1022: Arguments[15] min Arguments[62]
    (Info: triOk;            Val: '-100'),                                      // 1023: Arguments[15] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1024: Arguments[16] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1025: Arguments[16] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1026: Arguments[16] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1027: Arguments[16] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1028: Arguments[16] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1029: Arguments[16] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1030: Arguments[16] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1031: Arguments[16] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1032: Arguments[16] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1033: Arguments[16] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1034: Arguments[16] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1035: Arguments[16] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1036: Arguments[16] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1037: Arguments[16] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1038: Arguments[16] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1039: Arguments[16] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1040: Arguments[16] min Arguments[16]
    (Info: triOk;            Val: '-56'),                                       // 1041: Arguments[16] min Arguments[17]
    (Info: triOk;            Val: '-56'),                                       // 1042: Arguments[16] min Arguments[18]
    (Info: triOk;            Val: '-56'),                                       // 1043: Arguments[16] min Arguments[19]
    (Info: triOk;            Val: '-56'),                                       // 1044: Arguments[16] min Arguments[20]
    (Info: triOk;            Val: '-56'),                                       // 1045: Arguments[16] min Arguments[21]
    (Info: triOk;            Val: '-56'),                                       // 1046: Arguments[16] min Arguments[22]
    (Info: triOk;            Val: '-56'),                                       // 1047: Arguments[16] min Arguments[23]
    (Info: triOk;            Val: '-56'),                                       // 1048: Arguments[16] min Arguments[24]
    (Info: triOk;            Val: '-56'),                                       // 1049: Arguments[16] min Arguments[25]
    (Info: triOk;            Val: '-56'),                                       // 1050: Arguments[16] min Arguments[26]
    (Info: triOk;            Val: '-56'),                                       // 1051: Arguments[16] min Arguments[27]
    (Info: triOk;            Val: '-56'),                                       // 1052: Arguments[16] min Arguments[28]
    (Info: triOk;            Val: '-56'),                                       // 1053: Arguments[16] min Arguments[29]
    (Info: triOk;            Val: '-56'),                                       // 1054: Arguments[16] min Arguments[30]
    (Info: triOk;            Val: '-56'),                                       // 1055: Arguments[16] min Arguments[31]
    (Info: triOk;            Val: '-56'),                                       // 1056: Arguments[16] min Arguments[32]
    (Info: triOk;            Val: '-56'),                                       // 1057: Arguments[16] min Arguments[33]
    (Info: triOk;            Val: '-56'),                                       // 1058: Arguments[16] min Arguments[34]
    (Info: triOk;            Val: '-56'),                                       // 1059: Arguments[16] min Arguments[35]
    (Info: triOk;            Val: '-56'),                                       // 1060: Arguments[16] min Arguments[36]
    (Info: triOk;            Val: '-56'),                                       // 1061: Arguments[16] min Arguments[37]
    (Info: triOk;            Val: '-56'),                                       // 1062: Arguments[16] min Arguments[38]
    (Info: triOk;            Val: '-56'),                                       // 1063: Arguments[16] min Arguments[39]
    (Info: triOk;            Val: '-56'),                                       // 1064: Arguments[16] min Arguments[40]
    (Info: triOk;            Val: '-56'),                                       // 1065: Arguments[16] min Arguments[41]
    (Info: triOk;            Val: '-56'),                                       // 1066: Arguments[16] min Arguments[42]
    (Info: triOk;            Val: '-56'),                                       // 1067: Arguments[16] min Arguments[43]
    (Info: triOk;            Val: '-56'),                                       // 1068: Arguments[16] min Arguments[44]
    (Info: triOk;            Val: '-56'),                                       // 1069: Arguments[16] min Arguments[45]
    (Info: triOk;            Val: '-56'),                                       // 1070: Arguments[16] min Arguments[46]
    (Info: triOk;            Val: '-56'),                                       // 1071: Arguments[16] min Arguments[47]
    (Info: triOk;            Val: '-56'),                                       // 1072: Arguments[16] min Arguments[48]
    (Info: triOk;            Val: '-56'),                                       // 1073: Arguments[16] min Arguments[49]
    (Info: triOk;            Val: '-56'),                                       // 1074: Arguments[16] min Arguments[50]
    (Info: triOk;            Val: '-56'),                                       // 1075: Arguments[16] min Arguments[51]
    (Info: triOk;            Val: '-56'),                                       // 1076: Arguments[16] min Arguments[52]
    (Info: triOk;            Val: '-56'),                                       // 1077: Arguments[16] min Arguments[53]
    (Info: triOk;            Val: '-56'),                                       // 1078: Arguments[16] min Arguments[54]
    (Info: triOk;            Val: '-56'),                                       // 1079: Arguments[16] min Arguments[55]
    (Info: triOk;            Val: '-56'),                                       // 1080: Arguments[16] min Arguments[56]
    (Info: triOk;            Val: '-56'),                                       // 1081: Arguments[16] min Arguments[57]
    (Info: triOk;            Val: '-56'),                                       // 1082: Arguments[16] min Arguments[58]
    (Info: triOk;            Val: '-56'),                                       // 1083: Arguments[16] min Arguments[59]
    (Info: triOk;            Val: '-56'),                                       // 1084: Arguments[16] min Arguments[60]
    (Info: triOk;            Val: '-56'),                                       // 1085: Arguments[16] min Arguments[61]
    (Info: triOk;            Val: '-56'),                                       // 1086: Arguments[16] min Arguments[62]
    (Info: triOk;            Val: '-56'),                                       // 1087: Arguments[16] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1088: Arguments[17] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1089: Arguments[17] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1090: Arguments[17] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1091: Arguments[17] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1092: Arguments[17] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1093: Arguments[17] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1094: Arguments[17] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1095: Arguments[17] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1096: Arguments[17] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1097: Arguments[17] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1098: Arguments[17] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1099: Arguments[17] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1100: Arguments[17] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1101: Arguments[17] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1102: Arguments[17] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1103: Arguments[17] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1104: Arguments[17] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1105: Arguments[17] min Arguments[17]
    (Info: triOk;            Val: '-10'),                                       // 1106: Arguments[17] min Arguments[18]
    (Info: triOk;            Val: '-10'),                                       // 1107: Arguments[17] min Arguments[19]
    (Info: triOk;            Val: '-10'),                                       // 1108: Arguments[17] min Arguments[20]
    (Info: triOk;            Val: '-10'),                                       // 1109: Arguments[17] min Arguments[21]
    (Info: triOk;            Val: '-10'),                                       // 1110: Arguments[17] min Arguments[22]
    (Info: triOk;            Val: '-10'),                                       // 1111: Arguments[17] min Arguments[23]
    (Info: triOk;            Val: '-10'),                                       // 1112: Arguments[17] min Arguments[24]
    (Info: triOk;            Val: '-10'),                                       // 1113: Arguments[17] min Arguments[25]
    (Info: triOk;            Val: '-10'),                                       // 1114: Arguments[17] min Arguments[26]
    (Info: triOk;            Val: '-10'),                                       // 1115: Arguments[17] min Arguments[27]
    (Info: triOk;            Val: '-10'),                                       // 1116: Arguments[17] min Arguments[28]
    (Info: triOk;            Val: '-10'),                                       // 1117: Arguments[17] min Arguments[29]
    (Info: triOk;            Val: '-10'),                                       // 1118: Arguments[17] min Arguments[30]
    (Info: triOk;            Val: '-10'),                                       // 1119: Arguments[17] min Arguments[31]
    (Info: triOk;            Val: '-10'),                                       // 1120: Arguments[17] min Arguments[32]
    (Info: triOk;            Val: '-10'),                                       // 1121: Arguments[17] min Arguments[33]
    (Info: triOk;            Val: '-10'),                                       // 1122: Arguments[17] min Arguments[34]
    (Info: triOk;            Val: '-10'),                                       // 1123: Arguments[17] min Arguments[35]
    (Info: triOk;            Val: '-10'),                                       // 1124: Arguments[17] min Arguments[36]
    (Info: triOk;            Val: '-10'),                                       // 1125: Arguments[17] min Arguments[37]
    (Info: triOk;            Val: '-10'),                                       // 1126: Arguments[17] min Arguments[38]
    (Info: triOk;            Val: '-10'),                                       // 1127: Arguments[17] min Arguments[39]
    (Info: triOk;            Val: '-10'),                                       // 1128: Arguments[17] min Arguments[40]
    (Info: triOk;            Val: '-10'),                                       // 1129: Arguments[17] min Arguments[41]
    (Info: triOk;            Val: '-10'),                                       // 1130: Arguments[17] min Arguments[42]
    (Info: triOk;            Val: '-10'),                                       // 1131: Arguments[17] min Arguments[43]
    (Info: triOk;            Val: '-10'),                                       // 1132: Arguments[17] min Arguments[44]
    (Info: triOk;            Val: '-10'),                                       // 1133: Arguments[17] min Arguments[45]
    (Info: triOk;            Val: '-10'),                                       // 1134: Arguments[17] min Arguments[46]
    (Info: triOk;            Val: '-10'),                                       // 1135: Arguments[17] min Arguments[47]
    (Info: triOk;            Val: '-10'),                                       // 1136: Arguments[17] min Arguments[48]
    (Info: triOk;            Val: '-10'),                                       // 1137: Arguments[17] min Arguments[49]
    (Info: triOk;            Val: '-10'),                                       // 1138: Arguments[17] min Arguments[50]
    (Info: triOk;            Val: '-10'),                                       // 1139: Arguments[17] min Arguments[51]
    (Info: triOk;            Val: '-10'),                                       // 1140: Arguments[17] min Arguments[52]
    (Info: triOk;            Val: '-10'),                                       // 1141: Arguments[17] min Arguments[53]
    (Info: triOk;            Val: '-10'),                                       // 1142: Arguments[17] min Arguments[54]
    (Info: triOk;            Val: '-10'),                                       // 1143: Arguments[17] min Arguments[55]
    (Info: triOk;            Val: '-10'),                                       // 1144: Arguments[17] min Arguments[56]
    (Info: triOk;            Val: '-10'),                                       // 1145: Arguments[17] min Arguments[57]
    (Info: triOk;            Val: '-10'),                                       // 1146: Arguments[17] min Arguments[58]
    (Info: triOk;            Val: '-10'),                                       // 1147: Arguments[17] min Arguments[59]
    (Info: triOk;            Val: '-10'),                                       // 1148: Arguments[17] min Arguments[60]
    (Info: triOk;            Val: '-10'),                                       // 1149: Arguments[17] min Arguments[61]
    (Info: triOk;            Val: '-10'),                                       // 1150: Arguments[17] min Arguments[62]
    (Info: triOk;            Val: '-10'),                                       // 1151: Arguments[17] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1152: Arguments[18] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1153: Arguments[18] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1154: Arguments[18] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1155: Arguments[18] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1156: Arguments[18] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1157: Arguments[18] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1158: Arguments[18] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1159: Arguments[18] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1160: Arguments[18] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1161: Arguments[18] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1162: Arguments[18] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1163: Arguments[18] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1164: Arguments[18] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1165: Arguments[18] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1166: Arguments[18] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1167: Arguments[18] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1168: Arguments[18] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1169: Arguments[18] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1170: Arguments[18] min Arguments[18]
    (Info: triOk;            Val: '-7'),                                        // 1171: Arguments[18] min Arguments[19]
    (Info: triOk;            Val: '-7'),                                        // 1172: Arguments[18] min Arguments[20]
    (Info: triOk;            Val: '-7'),                                        // 1173: Arguments[18] min Arguments[21]
    (Info: triOk;            Val: '-7'),                                        // 1174: Arguments[18] min Arguments[22]
    (Info: triOk;            Val: '-7'),                                        // 1175: Arguments[18] min Arguments[23]
    (Info: triOk;            Val: '-7'),                                        // 1176: Arguments[18] min Arguments[24]
    (Info: triOk;            Val: '-7'),                                        // 1177: Arguments[18] min Arguments[25]
    (Info: triOk;            Val: '-7'),                                        // 1178: Arguments[18] min Arguments[26]
    (Info: triOk;            Val: '-7'),                                        // 1179: Arguments[18] min Arguments[27]
    (Info: triOk;            Val: '-7'),                                        // 1180: Arguments[18] min Arguments[28]
    (Info: triOk;            Val: '-7'),                                        // 1181: Arguments[18] min Arguments[29]
    (Info: triOk;            Val: '-7'),                                        // 1182: Arguments[18] min Arguments[30]
    (Info: triOk;            Val: '-7'),                                        // 1183: Arguments[18] min Arguments[31]
    (Info: triOk;            Val: '-7'),                                        // 1184: Arguments[18] min Arguments[32]
    (Info: triOk;            Val: '-7'),                                        // 1185: Arguments[18] min Arguments[33]
    (Info: triOk;            Val: '-7'),                                        // 1186: Arguments[18] min Arguments[34]
    (Info: triOk;            Val: '-7'),                                        // 1187: Arguments[18] min Arguments[35]
    (Info: triOk;            Val: '-7'),                                        // 1188: Arguments[18] min Arguments[36]
    (Info: triOk;            Val: '-7'),                                        // 1189: Arguments[18] min Arguments[37]
    (Info: triOk;            Val: '-7'),                                        // 1190: Arguments[18] min Arguments[38]
    (Info: triOk;            Val: '-7'),                                        // 1191: Arguments[18] min Arguments[39]
    (Info: triOk;            Val: '-7'),                                        // 1192: Arguments[18] min Arguments[40]
    (Info: triOk;            Val: '-7'),                                        // 1193: Arguments[18] min Arguments[41]
    (Info: triOk;            Val: '-7'),                                        // 1194: Arguments[18] min Arguments[42]
    (Info: triOk;            Val: '-7'),                                        // 1195: Arguments[18] min Arguments[43]
    (Info: triOk;            Val: '-7'),                                        // 1196: Arguments[18] min Arguments[44]
    (Info: triOk;            Val: '-7'),                                        // 1197: Arguments[18] min Arguments[45]
    (Info: triOk;            Val: '-7'),                                        // 1198: Arguments[18] min Arguments[46]
    (Info: triOk;            Val: '-7'),                                        // 1199: Arguments[18] min Arguments[47]
    (Info: triOk;            Val: '-7'),                                        // 1200: Arguments[18] min Arguments[48]
    (Info: triOk;            Val: '-7'),                                        // 1201: Arguments[18] min Arguments[49]
    (Info: triOk;            Val: '-7'),                                        // 1202: Arguments[18] min Arguments[50]
    (Info: triOk;            Val: '-7'),                                        // 1203: Arguments[18] min Arguments[51]
    (Info: triOk;            Val: '-7'),                                        // 1204: Arguments[18] min Arguments[52]
    (Info: triOk;            Val: '-7'),                                        // 1205: Arguments[18] min Arguments[53]
    (Info: triOk;            Val: '-7'),                                        // 1206: Arguments[18] min Arguments[54]
    (Info: triOk;            Val: '-7'),                                        // 1207: Arguments[18] min Arguments[55]
    (Info: triOk;            Val: '-7'),                                        // 1208: Arguments[18] min Arguments[56]
    (Info: triOk;            Val: '-7'),                                        // 1209: Arguments[18] min Arguments[57]
    (Info: triOk;            Val: '-7'),                                        // 1210: Arguments[18] min Arguments[58]
    (Info: triOk;            Val: '-7'),                                        // 1211: Arguments[18] min Arguments[59]
    (Info: triOk;            Val: '-7'),                                        // 1212: Arguments[18] min Arguments[60]
    (Info: triOk;            Val: '-7'),                                        // 1213: Arguments[18] min Arguments[61]
    (Info: triOk;            Val: '-7'),                                        // 1214: Arguments[18] min Arguments[62]
    (Info: triOk;            Val: '-7'),                                        // 1215: Arguments[18] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1216: Arguments[19] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1217: Arguments[19] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1218: Arguments[19] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1219: Arguments[19] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1220: Arguments[19] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1221: Arguments[19] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1222: Arguments[19] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1223: Arguments[19] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1224: Arguments[19] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1225: Arguments[19] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1226: Arguments[19] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1227: Arguments[19] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1228: Arguments[19] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1229: Arguments[19] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1230: Arguments[19] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1231: Arguments[19] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1232: Arguments[19] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1233: Arguments[19] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1234: Arguments[19] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1235: Arguments[19] min Arguments[19]
    (Info: triOk;            Val: '-2'),                                        // 1236: Arguments[19] min Arguments[20]
    (Info: triOk;            Val: '-2'),                                        // 1237: Arguments[19] min Arguments[21]
    (Info: triOk;            Val: '-2'),                                        // 1238: Arguments[19] min Arguments[22]
    (Info: triOk;            Val: '-2'),                                        // 1239: Arguments[19] min Arguments[23]
    (Info: triOk;            Val: '-2'),                                        // 1240: Arguments[19] min Arguments[24]
    (Info: triOk;            Val: '-2'),                                        // 1241: Arguments[19] min Arguments[25]
    (Info: triOk;            Val: '-2'),                                        // 1242: Arguments[19] min Arguments[26]
    (Info: triOk;            Val: '-2'),                                        // 1243: Arguments[19] min Arguments[27]
    (Info: triOk;            Val: '-2'),                                        // 1244: Arguments[19] min Arguments[28]
    (Info: triOk;            Val: '-2'),                                        // 1245: Arguments[19] min Arguments[29]
    (Info: triOk;            Val: '-2'),                                        // 1246: Arguments[19] min Arguments[30]
    (Info: triOk;            Val: '-2'),                                        // 1247: Arguments[19] min Arguments[31]
    (Info: triOk;            Val: '-2'),                                        // 1248: Arguments[19] min Arguments[32]
    (Info: triOk;            Val: '-2'),                                        // 1249: Arguments[19] min Arguments[33]
    (Info: triOk;            Val: '-2'),                                        // 1250: Arguments[19] min Arguments[34]
    (Info: triOk;            Val: '-2'),                                        // 1251: Arguments[19] min Arguments[35]
    (Info: triOk;            Val: '-2'),                                        // 1252: Arguments[19] min Arguments[36]
    (Info: triOk;            Val: '-2'),                                        // 1253: Arguments[19] min Arguments[37]
    (Info: triOk;            Val: '-2'),                                        // 1254: Arguments[19] min Arguments[38]
    (Info: triOk;            Val: '-2'),                                        // 1255: Arguments[19] min Arguments[39]
    (Info: triOk;            Val: '-2'),                                        // 1256: Arguments[19] min Arguments[40]
    (Info: triOk;            Val: '-2'),                                        // 1257: Arguments[19] min Arguments[41]
    (Info: triOk;            Val: '-2'),                                        // 1258: Arguments[19] min Arguments[42]
    (Info: triOk;            Val: '-2'),                                        // 1259: Arguments[19] min Arguments[43]
    (Info: triOk;            Val: '-2'),                                        // 1260: Arguments[19] min Arguments[44]
    (Info: triOk;            Val: '-2'),                                        // 1261: Arguments[19] min Arguments[45]
    (Info: triOk;            Val: '-2'),                                        // 1262: Arguments[19] min Arguments[46]
    (Info: triOk;            Val: '-2'),                                        // 1263: Arguments[19] min Arguments[47]
    (Info: triOk;            Val: '-2'),                                        // 1264: Arguments[19] min Arguments[48]
    (Info: triOk;            Val: '-2'),                                        // 1265: Arguments[19] min Arguments[49]
    (Info: triOk;            Val: '-2'),                                        // 1266: Arguments[19] min Arguments[50]
    (Info: triOk;            Val: '-2'),                                        // 1267: Arguments[19] min Arguments[51]
    (Info: triOk;            Val: '-2'),                                        // 1268: Arguments[19] min Arguments[52]
    (Info: triOk;            Val: '-2'),                                        // 1269: Arguments[19] min Arguments[53]
    (Info: triOk;            Val: '-2'),                                        // 1270: Arguments[19] min Arguments[54]
    (Info: triOk;            Val: '-2'),                                        // 1271: Arguments[19] min Arguments[55]
    (Info: triOk;            Val: '-2'),                                        // 1272: Arguments[19] min Arguments[56]
    (Info: triOk;            Val: '-2'),                                        // 1273: Arguments[19] min Arguments[57]
    (Info: triOk;            Val: '-2'),                                        // 1274: Arguments[19] min Arguments[58]
    (Info: triOk;            Val: '-2'),                                        // 1275: Arguments[19] min Arguments[59]
    (Info: triOk;            Val: '-2'),                                        // 1276: Arguments[19] min Arguments[60]
    (Info: triOk;            Val: '-2'),                                        // 1277: Arguments[19] min Arguments[61]
    (Info: triOk;            Val: '-2'),                                        // 1278: Arguments[19] min Arguments[62]
    (Info: triOk;            Val: '-2'),                                        // 1279: Arguments[19] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1280: Arguments[20] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1281: Arguments[20] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1282: Arguments[20] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1283: Arguments[20] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1284: Arguments[20] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1285: Arguments[20] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1286: Arguments[20] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1287: Arguments[20] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1288: Arguments[20] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1289: Arguments[20] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1290: Arguments[20] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1291: Arguments[20] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1292: Arguments[20] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1293: Arguments[20] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1294: Arguments[20] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1295: Arguments[20] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1296: Arguments[20] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1297: Arguments[20] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1298: Arguments[20] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1299: Arguments[20] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1300: Arguments[20] min Arguments[20]
    (Info: triOk;            Val: '-1'),                                        // 1301: Arguments[20] min Arguments[21]
    (Info: triOk;            Val: '-1'),                                        // 1302: Arguments[20] min Arguments[22]
    (Info: triOk;            Val: '-1'),                                        // 1303: Arguments[20] min Arguments[23]
    (Info: triOk;            Val: '-1'),                                        // 1304: Arguments[20] min Arguments[24]
    (Info: triOk;            Val: '-1'),                                        // 1305: Arguments[20] min Arguments[25]
    (Info: triOk;            Val: '-1'),                                        // 1306: Arguments[20] min Arguments[26]
    (Info: triOk;            Val: '-1'),                                        // 1307: Arguments[20] min Arguments[27]
    (Info: triOk;            Val: '-1'),                                        // 1308: Arguments[20] min Arguments[28]
    (Info: triOk;            Val: '-1'),                                        // 1309: Arguments[20] min Arguments[29]
    (Info: triOk;            Val: '-1'),                                        // 1310: Arguments[20] min Arguments[30]
    (Info: triOk;            Val: '-1'),                                        // 1311: Arguments[20] min Arguments[31]
    (Info: triOk;            Val: '-1'),                                        // 1312: Arguments[20] min Arguments[32]
    (Info: triOk;            Val: '-1'),                                        // 1313: Arguments[20] min Arguments[33]
    (Info: triOk;            Val: '-1'),                                        // 1314: Arguments[20] min Arguments[34]
    (Info: triOk;            Val: '-1'),                                        // 1315: Arguments[20] min Arguments[35]
    (Info: triOk;            Val: '-1'),                                        // 1316: Arguments[20] min Arguments[36]
    (Info: triOk;            Val: '-1'),                                        // 1317: Arguments[20] min Arguments[37]
    (Info: triOk;            Val: '-1'),                                        // 1318: Arguments[20] min Arguments[38]
    (Info: triOk;            Val: '-1'),                                        // 1319: Arguments[20] min Arguments[39]
    (Info: triOk;            Val: '-1'),                                        // 1320: Arguments[20] min Arguments[40]
    (Info: triOk;            Val: '-1'),                                        // 1321: Arguments[20] min Arguments[41]
    (Info: triOk;            Val: '-1'),                                        // 1322: Arguments[20] min Arguments[42]
    (Info: triOk;            Val: '-1'),                                        // 1323: Arguments[20] min Arguments[43]
    (Info: triOk;            Val: '-1'),                                        // 1324: Arguments[20] min Arguments[44]
    (Info: triOk;            Val: '-1'),                                        // 1325: Arguments[20] min Arguments[45]
    (Info: triOk;            Val: '-1'),                                        // 1326: Arguments[20] min Arguments[46]
    (Info: triOk;            Val: '-1'),                                        // 1327: Arguments[20] min Arguments[47]
    (Info: triOk;            Val: '-1'),                                        // 1328: Arguments[20] min Arguments[48]
    (Info: triOk;            Val: '-1'),                                        // 1329: Arguments[20] min Arguments[49]
    (Info: triOk;            Val: '-1'),                                        // 1330: Arguments[20] min Arguments[50]
    (Info: triOk;            Val: '-1'),                                        // 1331: Arguments[20] min Arguments[51]
    (Info: triOk;            Val: '-1'),                                        // 1332: Arguments[20] min Arguments[52]
    (Info: triOk;            Val: '-1'),                                        // 1333: Arguments[20] min Arguments[53]
    (Info: triOk;            Val: '-1'),                                        // 1334: Arguments[20] min Arguments[54]
    (Info: triOk;            Val: '-1'),                                        // 1335: Arguments[20] min Arguments[55]
    (Info: triOk;            Val: '-1'),                                        // 1336: Arguments[20] min Arguments[56]
    (Info: triOk;            Val: '-1'),                                        // 1337: Arguments[20] min Arguments[57]
    (Info: triOk;            Val: '-1'),                                        // 1338: Arguments[20] min Arguments[58]
    (Info: triOk;            Val: '-1'),                                        // 1339: Arguments[20] min Arguments[59]
    (Info: triOk;            Val: '-1'),                                        // 1340: Arguments[20] min Arguments[60]
    (Info: triOk;            Val: '-1'),                                        // 1341: Arguments[20] min Arguments[61]
    (Info: triOk;            Val: '-1'),                                        // 1342: Arguments[20] min Arguments[62]
    (Info: triOk;            Val: '-1'),                                        // 1343: Arguments[20] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1344: Arguments[21] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1345: Arguments[21] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1346: Arguments[21] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1347: Arguments[21] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1348: Arguments[21] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1349: Arguments[21] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1350: Arguments[21] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1351: Arguments[21] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1352: Arguments[21] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1353: Arguments[21] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1354: Arguments[21] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1355: Arguments[21] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1356: Arguments[21] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1357: Arguments[21] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1358: Arguments[21] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1359: Arguments[21] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1360: Arguments[21] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1361: Arguments[21] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1362: Arguments[21] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1363: Arguments[21] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1364: Arguments[21] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1365: Arguments[21] min Arguments[21]
    (Info: triOk;            Val: '0'),                                         // 1366: Arguments[21] min Arguments[22]
    (Info: triOk;            Val: '0'),                                         // 1367: Arguments[21] min Arguments[23]
    (Info: triOk;            Val: '0'),                                         // 1368: Arguments[21] min Arguments[24]
    (Info: triOk;            Val: '0'),                                         // 1369: Arguments[21] min Arguments[25]
    (Info: triOk;            Val: '0'),                                         // 1370: Arguments[21] min Arguments[26]
    (Info: triOk;            Val: '0'),                                         // 1371: Arguments[21] min Arguments[27]
    (Info: triOk;            Val: '0'),                                         // 1372: Arguments[21] min Arguments[28]
    (Info: triOk;            Val: '0'),                                         // 1373: Arguments[21] min Arguments[29]
    (Info: triOk;            Val: '0'),                                         // 1374: Arguments[21] min Arguments[30]
    (Info: triOk;            Val: '0'),                                         // 1375: Arguments[21] min Arguments[31]
    (Info: triOk;            Val: '0'),                                         // 1376: Arguments[21] min Arguments[32]
    (Info: triOk;            Val: '0'),                                         // 1377: Arguments[21] min Arguments[33]
    (Info: triOk;            Val: '0'),                                         // 1378: Arguments[21] min Arguments[34]
    (Info: triOk;            Val: '0'),                                         // 1379: Arguments[21] min Arguments[35]
    (Info: triOk;            Val: '0'),                                         // 1380: Arguments[21] min Arguments[36]
    (Info: triOk;            Val: '0'),                                         // 1381: Arguments[21] min Arguments[37]
    (Info: triOk;            Val: '0'),                                         // 1382: Arguments[21] min Arguments[38]
    (Info: triOk;            Val: '0'),                                         // 1383: Arguments[21] min Arguments[39]
    (Info: triOk;            Val: '0'),                                         // 1384: Arguments[21] min Arguments[40]
    (Info: triOk;            Val: '0'),                                         // 1385: Arguments[21] min Arguments[41]
    (Info: triOk;            Val: '0'),                                         // 1386: Arguments[21] min Arguments[42]
    (Info: triOk;            Val: '0'),                                         // 1387: Arguments[21] min Arguments[43]
    (Info: triOk;            Val: '0'),                                         // 1388: Arguments[21] min Arguments[44]
    (Info: triOk;            Val: '0'),                                         // 1389: Arguments[21] min Arguments[45]
    (Info: triOk;            Val: '0'),                                         // 1390: Arguments[21] min Arguments[46]
    (Info: triOk;            Val: '0'),                                         // 1391: Arguments[21] min Arguments[47]
    (Info: triOk;            Val: '0'),                                         // 1392: Arguments[21] min Arguments[48]
    (Info: triOk;            Val: '0'),                                         // 1393: Arguments[21] min Arguments[49]
    (Info: triOk;            Val: '0'),                                         // 1394: Arguments[21] min Arguments[50]
    (Info: triOk;            Val: '0'),                                         // 1395: Arguments[21] min Arguments[51]
    (Info: triOk;            Val: '0'),                                         // 1396: Arguments[21] min Arguments[52]
    (Info: triOk;            Val: '0'),                                         // 1397: Arguments[21] min Arguments[53]
    (Info: triOk;            Val: '0'),                                         // 1398: Arguments[21] min Arguments[54]
    (Info: triOk;            Val: '0'),                                         // 1399: Arguments[21] min Arguments[55]
    (Info: triOk;            Val: '0'),                                         // 1400: Arguments[21] min Arguments[56]
    (Info: triOk;            Val: '0'),                                         // 1401: Arguments[21] min Arguments[57]
    (Info: triOk;            Val: '0'),                                         // 1402: Arguments[21] min Arguments[58]
    (Info: triOk;            Val: '0'),                                         // 1403: Arguments[21] min Arguments[59]
    (Info: triOk;            Val: '0'),                                         // 1404: Arguments[21] min Arguments[60]
    (Info: triOk;            Val: '0'),                                         // 1405: Arguments[21] min Arguments[61]
    (Info: triOk;            Val: '0'),                                         // 1406: Arguments[21] min Arguments[62]
    (Info: triOk;            Val: '0'),                                         // 1407: Arguments[21] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1408: Arguments[22] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1409: Arguments[22] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1410: Arguments[22] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1411: Arguments[22] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1412: Arguments[22] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1413: Arguments[22] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1414: Arguments[22] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1415: Arguments[22] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1416: Arguments[22] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1417: Arguments[22] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1418: Arguments[22] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1419: Arguments[22] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1420: Arguments[22] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1421: Arguments[22] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1422: Arguments[22] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1423: Arguments[22] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1424: Arguments[22] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1425: Arguments[22] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1426: Arguments[22] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1427: Arguments[22] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1428: Arguments[22] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1429: Arguments[22] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1430: Arguments[22] min Arguments[22]
    (Info: triOk;            Val: '1'),                                         // 1431: Arguments[22] min Arguments[23]
    (Info: triOk;            Val: '1'),                                         // 1432: Arguments[22] min Arguments[24]
    (Info: triOk;            Val: '1'),                                         // 1433: Arguments[22] min Arguments[25]
    (Info: triOk;            Val: '1'),                                         // 1434: Arguments[22] min Arguments[26]
    (Info: triOk;            Val: '1'),                                         // 1435: Arguments[22] min Arguments[27]
    (Info: triOk;            Val: '1'),                                         // 1436: Arguments[22] min Arguments[28]
    (Info: triOk;            Val: '1'),                                         // 1437: Arguments[22] min Arguments[29]
    (Info: triOk;            Val: '1'),                                         // 1438: Arguments[22] min Arguments[30]
    (Info: triOk;            Val: '1'),                                         // 1439: Arguments[22] min Arguments[31]
    (Info: triOk;            Val: '1'),                                         // 1440: Arguments[22] min Arguments[32]
    (Info: triOk;            Val: '1'),                                         // 1441: Arguments[22] min Arguments[33]
    (Info: triOk;            Val: '1'),                                         // 1442: Arguments[22] min Arguments[34]
    (Info: triOk;            Val: '1'),                                         // 1443: Arguments[22] min Arguments[35]
    (Info: triOk;            Val: '1'),                                         // 1444: Arguments[22] min Arguments[36]
    (Info: triOk;            Val: '1'),                                         // 1445: Arguments[22] min Arguments[37]
    (Info: triOk;            Val: '1'),                                         // 1446: Arguments[22] min Arguments[38]
    (Info: triOk;            Val: '1'),                                         // 1447: Arguments[22] min Arguments[39]
    (Info: triOk;            Val: '1'),                                         // 1448: Arguments[22] min Arguments[40]
    (Info: triOk;            Val: '1'),                                         // 1449: Arguments[22] min Arguments[41]
    (Info: triOk;            Val: '1'),                                         // 1450: Arguments[22] min Arguments[42]
    (Info: triOk;            Val: '1'),                                         // 1451: Arguments[22] min Arguments[43]
    (Info: triOk;            Val: '1'),                                         // 1452: Arguments[22] min Arguments[44]
    (Info: triOk;            Val: '1'),                                         // 1453: Arguments[22] min Arguments[45]
    (Info: triOk;            Val: '1'),                                         // 1454: Arguments[22] min Arguments[46]
    (Info: triOk;            Val: '1'),                                         // 1455: Arguments[22] min Arguments[47]
    (Info: triOk;            Val: '1'),                                         // 1456: Arguments[22] min Arguments[48]
    (Info: triOk;            Val: '1'),                                         // 1457: Arguments[22] min Arguments[49]
    (Info: triOk;            Val: '1'),                                         // 1458: Arguments[22] min Arguments[50]
    (Info: triOk;            Val: '1'),                                         // 1459: Arguments[22] min Arguments[51]
    (Info: triOk;            Val: '1'),                                         // 1460: Arguments[22] min Arguments[52]
    (Info: triOk;            Val: '1'),                                         // 1461: Arguments[22] min Arguments[53]
    (Info: triOk;            Val: '1'),                                         // 1462: Arguments[22] min Arguments[54]
    (Info: triOk;            Val: '1'),                                         // 1463: Arguments[22] min Arguments[55]
    (Info: triOk;            Val: '1'),                                         // 1464: Arguments[22] min Arguments[56]
    (Info: triOk;            Val: '1'),                                         // 1465: Arguments[22] min Arguments[57]
    (Info: triOk;            Val: '1'),                                         // 1466: Arguments[22] min Arguments[58]
    (Info: triOk;            Val: '1'),                                         // 1467: Arguments[22] min Arguments[59]
    (Info: triOk;            Val: '1'),                                         // 1468: Arguments[22] min Arguments[60]
    (Info: triOk;            Val: '1'),                                         // 1469: Arguments[22] min Arguments[61]
    (Info: triOk;            Val: '1'),                                         // 1470: Arguments[22] min Arguments[62]
    (Info: triOk;            Val: '1'),                                         // 1471: Arguments[22] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1472: Arguments[23] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1473: Arguments[23] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1474: Arguments[23] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1475: Arguments[23] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1476: Arguments[23] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1477: Arguments[23] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1478: Arguments[23] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1479: Arguments[23] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1480: Arguments[23] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1481: Arguments[23] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1482: Arguments[23] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1483: Arguments[23] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1484: Arguments[23] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1485: Arguments[23] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1486: Arguments[23] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1487: Arguments[23] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1488: Arguments[23] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1489: Arguments[23] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1490: Arguments[23] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1491: Arguments[23] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1492: Arguments[23] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1493: Arguments[23] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1494: Arguments[23] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1495: Arguments[23] min Arguments[23]
    (Info: triOk;            Val: '2'),                                         // 1496: Arguments[23] min Arguments[24]
    (Info: triOk;            Val: '2'),                                         // 1497: Arguments[23] min Arguments[25]
    (Info: triOk;            Val: '2'),                                         // 1498: Arguments[23] min Arguments[26]
    (Info: triOk;            Val: '2'),                                         // 1499: Arguments[23] min Arguments[27]
    (Info: triOk;            Val: '2'),                                         // 1500: Arguments[23] min Arguments[28]
    (Info: triOk;            Val: '2'),                                         // 1501: Arguments[23] min Arguments[29]
    (Info: triOk;            Val: '2'),                                         // 1502: Arguments[23] min Arguments[30]
    (Info: triOk;            Val: '2'),                                         // 1503: Arguments[23] min Arguments[31]
    (Info: triOk;            Val: '2'),                                         // 1504: Arguments[23] min Arguments[32]
    (Info: triOk;            Val: '2'),                                         // 1505: Arguments[23] min Arguments[33]
    (Info: triOk;            Val: '2'),                                         // 1506: Arguments[23] min Arguments[34]
    (Info: triOk;            Val: '2'),                                         // 1507: Arguments[23] min Arguments[35]
    (Info: triOk;            Val: '2'),                                         // 1508: Arguments[23] min Arguments[36]
    (Info: triOk;            Val: '2'),                                         // 1509: Arguments[23] min Arguments[37]
    (Info: triOk;            Val: '2'),                                         // 1510: Arguments[23] min Arguments[38]
    (Info: triOk;            Val: '2'),                                         // 1511: Arguments[23] min Arguments[39]
    (Info: triOk;            Val: '2'),                                         // 1512: Arguments[23] min Arguments[40]
    (Info: triOk;            Val: '2'),                                         // 1513: Arguments[23] min Arguments[41]
    (Info: triOk;            Val: '2'),                                         // 1514: Arguments[23] min Arguments[42]
    (Info: triOk;            Val: '2'),                                         // 1515: Arguments[23] min Arguments[43]
    (Info: triOk;            Val: '2'),                                         // 1516: Arguments[23] min Arguments[44]
    (Info: triOk;            Val: '2'),                                         // 1517: Arguments[23] min Arguments[45]
    (Info: triOk;            Val: '2'),                                         // 1518: Arguments[23] min Arguments[46]
    (Info: triOk;            Val: '2'),                                         // 1519: Arguments[23] min Arguments[47]
    (Info: triOk;            Val: '2'),                                         // 1520: Arguments[23] min Arguments[48]
    (Info: triOk;            Val: '2'),                                         // 1521: Arguments[23] min Arguments[49]
    (Info: triOk;            Val: '2'),                                         // 1522: Arguments[23] min Arguments[50]
    (Info: triOk;            Val: '2'),                                         // 1523: Arguments[23] min Arguments[51]
    (Info: triOk;            Val: '2'),                                         // 1524: Arguments[23] min Arguments[52]
    (Info: triOk;            Val: '2'),                                         // 1525: Arguments[23] min Arguments[53]
    (Info: triOk;            Val: '2'),                                         // 1526: Arguments[23] min Arguments[54]
    (Info: triOk;            Val: '2'),                                         // 1527: Arguments[23] min Arguments[55]
    (Info: triOk;            Val: '2'),                                         // 1528: Arguments[23] min Arguments[56]
    (Info: triOk;            Val: '2'),                                         // 1529: Arguments[23] min Arguments[57]
    (Info: triOk;            Val: '2'),                                         // 1530: Arguments[23] min Arguments[58]
    (Info: triOk;            Val: '2'),                                         // 1531: Arguments[23] min Arguments[59]
    (Info: triOk;            Val: '2'),                                         // 1532: Arguments[23] min Arguments[60]
    (Info: triOk;            Val: '2'),                                         // 1533: Arguments[23] min Arguments[61]
    (Info: triOk;            Val: '2'),                                         // 1534: Arguments[23] min Arguments[62]
    (Info: triOk;            Val: '2'),                                         // 1535: Arguments[23] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1536: Arguments[24] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1537: Arguments[24] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1538: Arguments[24] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1539: Arguments[24] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1540: Arguments[24] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1541: Arguments[24] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1542: Arguments[24] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1543: Arguments[24] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1544: Arguments[24] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1545: Arguments[24] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1546: Arguments[24] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1547: Arguments[24] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1548: Arguments[24] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1549: Arguments[24] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1550: Arguments[24] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1551: Arguments[24] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1552: Arguments[24] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1553: Arguments[24] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1554: Arguments[24] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1555: Arguments[24] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1556: Arguments[24] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1557: Arguments[24] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1558: Arguments[24] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1559: Arguments[24] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1560: Arguments[24] min Arguments[24]
    (Info: triOk;            Val: '7'),                                         // 1561: Arguments[24] min Arguments[25]
    (Info: triOk;            Val: '7'),                                         // 1562: Arguments[24] min Arguments[26]
    (Info: triOk;            Val: '7'),                                         // 1563: Arguments[24] min Arguments[27]
    (Info: triOk;            Val: '7'),                                         // 1564: Arguments[24] min Arguments[28]
    (Info: triOk;            Val: '7'),                                         // 1565: Arguments[24] min Arguments[29]
    (Info: triOk;            Val: '7'),                                         // 1566: Arguments[24] min Arguments[30]
    (Info: triOk;            Val: '7'),                                         // 1567: Arguments[24] min Arguments[31]
    (Info: triOk;            Val: '7'),                                         // 1568: Arguments[24] min Arguments[32]
    (Info: triOk;            Val: '7'),                                         // 1569: Arguments[24] min Arguments[33]
    (Info: triOk;            Val: '7'),                                         // 1570: Arguments[24] min Arguments[34]
    (Info: triOk;            Val: '7'),                                         // 1571: Arguments[24] min Arguments[35]
    (Info: triOk;            Val: '7'),                                         // 1572: Arguments[24] min Arguments[36]
    (Info: triOk;            Val: '7'),                                         // 1573: Arguments[24] min Arguments[37]
    (Info: triOk;            Val: '7'),                                         // 1574: Arguments[24] min Arguments[38]
    (Info: triOk;            Val: '7'),                                         // 1575: Arguments[24] min Arguments[39]
    (Info: triOk;            Val: '7'),                                         // 1576: Arguments[24] min Arguments[40]
    (Info: triOk;            Val: '7'),                                         // 1577: Arguments[24] min Arguments[41]
    (Info: triOk;            Val: '7'),                                         // 1578: Arguments[24] min Arguments[42]
    (Info: triOk;            Val: '7'),                                         // 1579: Arguments[24] min Arguments[43]
    (Info: triOk;            Val: '7'),                                         // 1580: Arguments[24] min Arguments[44]
    (Info: triOk;            Val: '7'),                                         // 1581: Arguments[24] min Arguments[45]
    (Info: triOk;            Val: '7'),                                         // 1582: Arguments[24] min Arguments[46]
    (Info: triOk;            Val: '7'),                                         // 1583: Arguments[24] min Arguments[47]
    (Info: triOk;            Val: '7'),                                         // 1584: Arguments[24] min Arguments[48]
    (Info: triOk;            Val: '7'),                                         // 1585: Arguments[24] min Arguments[49]
    (Info: triOk;            Val: '7'),                                         // 1586: Arguments[24] min Arguments[50]
    (Info: triOk;            Val: '7'),                                         // 1587: Arguments[24] min Arguments[51]
    (Info: triOk;            Val: '7'),                                         // 1588: Arguments[24] min Arguments[52]
    (Info: triOk;            Val: '7'),                                         // 1589: Arguments[24] min Arguments[53]
    (Info: triOk;            Val: '7'),                                         // 1590: Arguments[24] min Arguments[54]
    (Info: triOk;            Val: '7'),                                         // 1591: Arguments[24] min Arguments[55]
    (Info: triOk;            Val: '7'),                                         // 1592: Arguments[24] min Arguments[56]
    (Info: triOk;            Val: '7'),                                         // 1593: Arguments[24] min Arguments[57]
    (Info: triOk;            Val: '7'),                                         // 1594: Arguments[24] min Arguments[58]
    (Info: triOk;            Val: '7'),                                         // 1595: Arguments[24] min Arguments[59]
    (Info: triOk;            Val: '7'),                                         // 1596: Arguments[24] min Arguments[60]
    (Info: triOk;            Val: '7'),                                         // 1597: Arguments[24] min Arguments[61]
    (Info: triOk;            Val: '7'),                                         // 1598: Arguments[24] min Arguments[62]
    (Info: triOk;            Val: '7'),                                         // 1599: Arguments[24] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1600: Arguments[25] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1601: Arguments[25] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1602: Arguments[25] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1603: Arguments[25] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1604: Arguments[25] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1605: Arguments[25] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1606: Arguments[25] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1607: Arguments[25] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1608: Arguments[25] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1609: Arguments[25] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1610: Arguments[25] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1611: Arguments[25] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1612: Arguments[25] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1613: Arguments[25] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1614: Arguments[25] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1615: Arguments[25] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1616: Arguments[25] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1617: Arguments[25] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1618: Arguments[25] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1619: Arguments[25] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1620: Arguments[25] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1621: Arguments[25] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1622: Arguments[25] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1623: Arguments[25] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1624: Arguments[25] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1625: Arguments[25] min Arguments[25]
    (Info: triOk;            Val: '10'),                                        // 1626: Arguments[25] min Arguments[26]
    (Info: triOk;            Val: '10'),                                        // 1627: Arguments[25] min Arguments[27]
    (Info: triOk;            Val: '10'),                                        // 1628: Arguments[25] min Arguments[28]
    (Info: triOk;            Val: '10'),                                        // 1629: Arguments[25] min Arguments[29]
    (Info: triOk;            Val: '10'),                                        // 1630: Arguments[25] min Arguments[30]
    (Info: triOk;            Val: '10'),                                        // 1631: Arguments[25] min Arguments[31]
    (Info: triOk;            Val: '10'),                                        // 1632: Arguments[25] min Arguments[32]
    (Info: triOk;            Val: '10'),                                        // 1633: Arguments[25] min Arguments[33]
    (Info: triOk;            Val: '10'),                                        // 1634: Arguments[25] min Arguments[34]
    (Info: triOk;            Val: '10'),                                        // 1635: Arguments[25] min Arguments[35]
    (Info: triOk;            Val: '10'),                                        // 1636: Arguments[25] min Arguments[36]
    (Info: triOk;            Val: '10'),                                        // 1637: Arguments[25] min Arguments[37]
    (Info: triOk;            Val: '10'),                                        // 1638: Arguments[25] min Arguments[38]
    (Info: triOk;            Val: '10'),                                        // 1639: Arguments[25] min Arguments[39]
    (Info: triOk;            Val: '10'),                                        // 1640: Arguments[25] min Arguments[40]
    (Info: triOk;            Val: '10'),                                        // 1641: Arguments[25] min Arguments[41]
    (Info: triOk;            Val: '10'),                                        // 1642: Arguments[25] min Arguments[42]
    (Info: triOk;            Val: '10'),                                        // 1643: Arguments[25] min Arguments[43]
    (Info: triOk;            Val: '10'),                                        // 1644: Arguments[25] min Arguments[44]
    (Info: triOk;            Val: '10'),                                        // 1645: Arguments[25] min Arguments[45]
    (Info: triOk;            Val: '10'),                                        // 1646: Arguments[25] min Arguments[46]
    (Info: triOk;            Val: '10'),                                        // 1647: Arguments[25] min Arguments[47]
    (Info: triOk;            Val: '10'),                                        // 1648: Arguments[25] min Arguments[48]
    (Info: triOk;            Val: '10'),                                        // 1649: Arguments[25] min Arguments[49]
    (Info: triOk;            Val: '10'),                                        // 1650: Arguments[25] min Arguments[50]
    (Info: triOk;            Val: '10'),                                        // 1651: Arguments[25] min Arguments[51]
    (Info: triOk;            Val: '10'),                                        // 1652: Arguments[25] min Arguments[52]
    (Info: triOk;            Val: '10'),                                        // 1653: Arguments[25] min Arguments[53]
    (Info: triOk;            Val: '10'),                                        // 1654: Arguments[25] min Arguments[54]
    (Info: triOk;            Val: '10'),                                        // 1655: Arguments[25] min Arguments[55]
    (Info: triOk;            Val: '10'),                                        // 1656: Arguments[25] min Arguments[56]
    (Info: triOk;            Val: '10'),                                        // 1657: Arguments[25] min Arguments[57]
    (Info: triOk;            Val: '10'),                                        // 1658: Arguments[25] min Arguments[58]
    (Info: triOk;            Val: '10'),                                        // 1659: Arguments[25] min Arguments[59]
    (Info: triOk;            Val: '10'),                                        // 1660: Arguments[25] min Arguments[60]
    (Info: triOk;            Val: '10'),                                        // 1661: Arguments[25] min Arguments[61]
    (Info: triOk;            Val: '10'),                                        // 1662: Arguments[25] min Arguments[62]
    (Info: triOk;            Val: '10'),                                        // 1663: Arguments[25] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1664: Arguments[26] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1665: Arguments[26] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1666: Arguments[26] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1667: Arguments[26] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1668: Arguments[26] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1669: Arguments[26] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1670: Arguments[26] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1671: Arguments[26] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1672: Arguments[26] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1673: Arguments[26] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1674: Arguments[26] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1675: Arguments[26] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1676: Arguments[26] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1677: Arguments[26] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1678: Arguments[26] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1679: Arguments[26] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1680: Arguments[26] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1681: Arguments[26] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1682: Arguments[26] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1683: Arguments[26] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1684: Arguments[26] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1685: Arguments[26] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1686: Arguments[26] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1687: Arguments[26] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1688: Arguments[26] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1689: Arguments[26] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1690: Arguments[26] min Arguments[26]
    (Info: triOk;            Val: '100'),                                       // 1691: Arguments[26] min Arguments[27]
    (Info: triOk;            Val: '100'),                                       // 1692: Arguments[26] min Arguments[28]
    (Info: triOk;            Val: '100'),                                       // 1693: Arguments[26] min Arguments[29]
    (Info: triOk;            Val: '100'),                                       // 1694: Arguments[26] min Arguments[30]
    (Info: triOk;            Val: '100'),                                       // 1695: Arguments[26] min Arguments[31]
    (Info: triOk;            Val: '100'),                                       // 1696: Arguments[26] min Arguments[32]
    (Info: triOk;            Val: '100'),                                       // 1697: Arguments[26] min Arguments[33]
    (Info: triOk;            Val: '100'),                                       // 1698: Arguments[26] min Arguments[34]
    (Info: triOk;            Val: '100'),                                       // 1699: Arguments[26] min Arguments[35]
    (Info: triOk;            Val: '100'),                                       // 1700: Arguments[26] min Arguments[36]
    (Info: triOk;            Val: '100'),                                       // 1701: Arguments[26] min Arguments[37]
    (Info: triOk;            Val: '100'),                                       // 1702: Arguments[26] min Arguments[38]
    (Info: triOk;            Val: '100'),                                       // 1703: Arguments[26] min Arguments[39]
    (Info: triOk;            Val: '100'),                                       // 1704: Arguments[26] min Arguments[40]
    (Info: triOk;            Val: '100'),                                       // 1705: Arguments[26] min Arguments[41]
    (Info: triOk;            Val: '100'),                                       // 1706: Arguments[26] min Arguments[42]
    (Info: triOk;            Val: '100'),                                       // 1707: Arguments[26] min Arguments[43]
    (Info: triOk;            Val: '100'),                                       // 1708: Arguments[26] min Arguments[44]
    (Info: triOk;            Val: '100'),                                       // 1709: Arguments[26] min Arguments[45]
    (Info: triOk;            Val: '100'),                                       // 1710: Arguments[26] min Arguments[46]
    (Info: triOk;            Val: '100'),                                       // 1711: Arguments[26] min Arguments[47]
    (Info: triOk;            Val: '100'),                                       // 1712: Arguments[26] min Arguments[48]
    (Info: triOk;            Val: '100'),                                       // 1713: Arguments[26] min Arguments[49]
    (Info: triOk;            Val: '100'),                                       // 1714: Arguments[26] min Arguments[50]
    (Info: triOk;            Val: '100'),                                       // 1715: Arguments[26] min Arguments[51]
    (Info: triOk;            Val: '100'),                                       // 1716: Arguments[26] min Arguments[52]
    (Info: triOk;            Val: '100'),                                       // 1717: Arguments[26] min Arguments[53]
    (Info: triOk;            Val: '100'),                                       // 1718: Arguments[26] min Arguments[54]
    (Info: triOk;            Val: '100'),                                       // 1719: Arguments[26] min Arguments[55]
    (Info: triOk;            Val: '100'),                                       // 1720: Arguments[26] min Arguments[56]
    (Info: triOk;            Val: '100'),                                       // 1721: Arguments[26] min Arguments[57]
    (Info: triOk;            Val: '100'),                                       // 1722: Arguments[26] min Arguments[58]
    (Info: triOk;            Val: '100'),                                       // 1723: Arguments[26] min Arguments[59]
    (Info: triOk;            Val: '100'),                                       // 1724: Arguments[26] min Arguments[60]
    (Info: triOk;            Val: '100'),                                       // 1725: Arguments[26] min Arguments[61]
    (Info: triOk;            Val: '100'),                                       // 1726: Arguments[26] min Arguments[62]
    (Info: triOk;            Val: '100'),                                       // 1727: Arguments[26] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1728: Arguments[27] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1729: Arguments[27] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1730: Arguments[27] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1731: Arguments[27] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1732: Arguments[27] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1733: Arguments[27] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1734: Arguments[27] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1735: Arguments[27] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1736: Arguments[27] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1737: Arguments[27] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1738: Arguments[27] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1739: Arguments[27] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1740: Arguments[27] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1741: Arguments[27] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1742: Arguments[27] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1743: Arguments[27] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1744: Arguments[27] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1745: Arguments[27] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1746: Arguments[27] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1747: Arguments[27] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1748: Arguments[27] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1749: Arguments[27] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1750: Arguments[27] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1751: Arguments[27] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1752: Arguments[27] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1753: Arguments[27] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1754: Arguments[27] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1755: Arguments[27] min Arguments[27]
    (Info: triOk;            Val: '409'),                                       // 1756: Arguments[27] min Arguments[28]
    (Info: triOk;            Val: '409'),                                       // 1757: Arguments[27] min Arguments[29]
    (Info: triOk;            Val: '409'),                                       // 1758: Arguments[27] min Arguments[30]
    (Info: triOk;            Val: '409'),                                       // 1759: Arguments[27] min Arguments[31]
    (Info: triOk;            Val: '409'),                                       // 1760: Arguments[27] min Arguments[32]
    (Info: triOk;            Val: '409'),                                       // 1761: Arguments[27] min Arguments[33]
    (Info: triOk;            Val: '409'),                                       // 1762: Arguments[27] min Arguments[34]
    (Info: triOk;            Val: '409'),                                       // 1763: Arguments[27] min Arguments[35]
    (Info: triOk;            Val: '409'),                                       // 1764: Arguments[27] min Arguments[36]
    (Info: triOk;            Val: '409'),                                       // 1765: Arguments[27] min Arguments[37]
    (Info: triOk;            Val: '409'),                                       // 1766: Arguments[27] min Arguments[38]
    (Info: triOk;            Val: '409'),                                       // 1767: Arguments[27] min Arguments[39]
    (Info: triOk;            Val: '409'),                                       // 1768: Arguments[27] min Arguments[40]
    (Info: triOk;            Val: '409'),                                       // 1769: Arguments[27] min Arguments[41]
    (Info: triOk;            Val: '409'),                                       // 1770: Arguments[27] min Arguments[42]
    (Info: triOk;            Val: '409'),                                       // 1771: Arguments[27] min Arguments[43]
    (Info: triOk;            Val: '409'),                                       // 1772: Arguments[27] min Arguments[44]
    (Info: triOk;            Val: '409'),                                       // 1773: Arguments[27] min Arguments[45]
    (Info: triOk;            Val: '409'),                                       // 1774: Arguments[27] min Arguments[46]
    (Info: triOk;            Val: '409'),                                       // 1775: Arguments[27] min Arguments[47]
    (Info: triOk;            Val: '409'),                                       // 1776: Arguments[27] min Arguments[48]
    (Info: triOk;            Val: '409'),                                       // 1777: Arguments[27] min Arguments[49]
    (Info: triOk;            Val: '409'),                                       // 1778: Arguments[27] min Arguments[50]
    (Info: triOk;            Val: '409'),                                       // 1779: Arguments[27] min Arguments[51]
    (Info: triOk;            Val: '409'),                                       // 1780: Arguments[27] min Arguments[52]
    (Info: triOk;            Val: '409'),                                       // 1781: Arguments[27] min Arguments[53]
    (Info: triOk;            Val: '409'),                                       // 1782: Arguments[27] min Arguments[54]
    (Info: triOk;            Val: '409'),                                       // 1783: Arguments[27] min Arguments[55]
    (Info: triOk;            Val: '409'),                                       // 1784: Arguments[27] min Arguments[56]
    (Info: triOk;            Val: '409'),                                       // 1785: Arguments[27] min Arguments[57]
    (Info: triOk;            Val: '409'),                                       // 1786: Arguments[27] min Arguments[58]
    (Info: triOk;            Val: '409'),                                       // 1787: Arguments[27] min Arguments[59]
    (Info: triOk;            Val: '409'),                                       // 1788: Arguments[27] min Arguments[60]
    (Info: triOk;            Val: '409'),                                       // 1789: Arguments[27] min Arguments[61]
    (Info: triOk;            Val: '409'),                                       // 1790: Arguments[27] min Arguments[62]
    (Info: triOk;            Val: '409'),                                       // 1791: Arguments[27] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1792: Arguments[28] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1793: Arguments[28] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1794: Arguments[28] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1795: Arguments[28] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1796: Arguments[28] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1797: Arguments[28] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1798: Arguments[28] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1799: Arguments[28] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1800: Arguments[28] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1801: Arguments[28] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1802: Arguments[28] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1803: Arguments[28] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1804: Arguments[28] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1805: Arguments[28] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1806: Arguments[28] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1807: Arguments[28] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1808: Arguments[28] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1809: Arguments[28] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1810: Arguments[28] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1811: Arguments[28] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1812: Arguments[28] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1813: Arguments[28] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1814: Arguments[28] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1815: Arguments[28] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1816: Arguments[28] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1817: Arguments[28] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1818: Arguments[28] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1819: Arguments[28] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1820: Arguments[28] min Arguments[28]
    (Info: triOk;            Val: '818'),                                       // 1821: Arguments[28] min Arguments[29]
    (Info: triOk;            Val: '818'),                                       // 1822: Arguments[28] min Arguments[30]
    (Info: triOk;            Val: '818'),                                       // 1823: Arguments[28] min Arguments[31]
    (Info: triOk;            Val: '818'),                                       // 1824: Arguments[28] min Arguments[32]
    (Info: triOk;            Val: '818'),                                       // 1825: Arguments[28] min Arguments[33]
    (Info: triOk;            Val: '818'),                                       // 1826: Arguments[28] min Arguments[34]
    (Info: triOk;            Val: '818'),                                       // 1827: Arguments[28] min Arguments[35]
    (Info: triOk;            Val: '818'),                                       // 1828: Arguments[28] min Arguments[36]
    (Info: triOk;            Val: '818'),                                       // 1829: Arguments[28] min Arguments[37]
    (Info: triOk;            Val: '818'),                                       // 1830: Arguments[28] min Arguments[38]
    (Info: triOk;            Val: '818'),                                       // 1831: Arguments[28] min Arguments[39]
    (Info: triOk;            Val: '818'),                                       // 1832: Arguments[28] min Arguments[40]
    (Info: triOk;            Val: '818'),                                       // 1833: Arguments[28] min Arguments[41]
    (Info: triOk;            Val: '818'),                                       // 1834: Arguments[28] min Arguments[42]
    (Info: triOk;            Val: '818'),                                       // 1835: Arguments[28] min Arguments[43]
    (Info: triOk;            Val: '818'),                                       // 1836: Arguments[28] min Arguments[44]
    (Info: triOk;            Val: '818'),                                       // 1837: Arguments[28] min Arguments[45]
    (Info: triOk;            Val: '818'),                                       // 1838: Arguments[28] min Arguments[46]
    (Info: triOk;            Val: '818'),                                       // 1839: Arguments[28] min Arguments[47]
    (Info: triOk;            Val: '818'),                                       // 1840: Arguments[28] min Arguments[48]
    (Info: triOk;            Val: '818'),                                       // 1841: Arguments[28] min Arguments[49]
    (Info: triOk;            Val: '818'),                                       // 1842: Arguments[28] min Arguments[50]
    (Info: triOk;            Val: '818'),                                       // 1843: Arguments[28] min Arguments[51]
    (Info: triOk;            Val: '818'),                                       // 1844: Arguments[28] min Arguments[52]
    (Info: triOk;            Val: '818'),                                       // 1845: Arguments[28] min Arguments[53]
    (Info: triOk;            Val: '818'),                                       // 1846: Arguments[28] min Arguments[54]
    (Info: triOk;            Val: '818'),                                       // 1847: Arguments[28] min Arguments[55]
    (Info: triOk;            Val: '818'),                                       // 1848: Arguments[28] min Arguments[56]
    (Info: triOk;            Val: '818'),                                       // 1849: Arguments[28] min Arguments[57]
    (Info: triOk;            Val: '818'),                                       // 1850: Arguments[28] min Arguments[58]
    (Info: triOk;            Val: '818'),                                       // 1851: Arguments[28] min Arguments[59]
    (Info: triOk;            Val: '818'),                                       // 1852: Arguments[28] min Arguments[60]
    (Info: triOk;            Val: '818'),                                       // 1853: Arguments[28] min Arguments[61]
    (Info: triOk;            Val: '818'),                                       // 1854: Arguments[28] min Arguments[62]
    (Info: triOk;            Val: '818'),                                       // 1855: Arguments[28] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1856: Arguments[29] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1857: Arguments[29] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1858: Arguments[29] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1859: Arguments[29] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1860: Arguments[29] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1861: Arguments[29] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1862: Arguments[29] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1863: Arguments[29] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1864: Arguments[29] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1865: Arguments[29] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1866: Arguments[29] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1867: Arguments[29] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1868: Arguments[29] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1869: Arguments[29] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1870: Arguments[29] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1871: Arguments[29] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1872: Arguments[29] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1873: Arguments[29] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1874: Arguments[29] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1875: Arguments[29] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1876: Arguments[29] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1877: Arguments[29] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1878: Arguments[29] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1879: Arguments[29] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1880: Arguments[29] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1881: Arguments[29] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1882: Arguments[29] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1883: Arguments[29] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1884: Arguments[29] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1885: Arguments[29] min Arguments[29]
    (Info: triOk;            Val: '1000'),                                      // 1886: Arguments[29] min Arguments[30]
    (Info: triOk;            Val: '1000'),                                      // 1887: Arguments[29] min Arguments[31]
    (Info: triOk;            Val: '1000'),                                      // 1888: Arguments[29] min Arguments[32]
    (Info: triOk;            Val: '1000'),                                      // 1889: Arguments[29] min Arguments[33]
    (Info: triOk;            Val: '1000'),                                      // 1890: Arguments[29] min Arguments[34]
    (Info: triOk;            Val: '1000'),                                      // 1891: Arguments[29] min Arguments[35]
    (Info: triOk;            Val: '1000'),                                      // 1892: Arguments[29] min Arguments[36]
    (Info: triOk;            Val: '1000'),                                      // 1893: Arguments[29] min Arguments[37]
    (Info: triOk;            Val: '1000'),                                      // 1894: Arguments[29] min Arguments[38]
    (Info: triOk;            Val: '1000'),                                      // 1895: Arguments[29] min Arguments[39]
    (Info: triOk;            Val: '1000'),                                      // 1896: Arguments[29] min Arguments[40]
    (Info: triOk;            Val: '1000'),                                      // 1897: Arguments[29] min Arguments[41]
    (Info: triOk;            Val: '1000'),                                      // 1898: Arguments[29] min Arguments[42]
    (Info: triOk;            Val: '1000'),                                      // 1899: Arguments[29] min Arguments[43]
    (Info: triOk;            Val: '1000'),                                      // 1900: Arguments[29] min Arguments[44]
    (Info: triOk;            Val: '1000'),                                      // 1901: Arguments[29] min Arguments[45]
    (Info: triOk;            Val: '1000'),                                      // 1902: Arguments[29] min Arguments[46]
    (Info: triOk;            Val: '1000'),                                      // 1903: Arguments[29] min Arguments[47]
    (Info: triOk;            Val: '1000'),                                      // 1904: Arguments[29] min Arguments[48]
    (Info: triOk;            Val: '1000'),                                      // 1905: Arguments[29] min Arguments[49]
    (Info: triOk;            Val: '1000'),                                      // 1906: Arguments[29] min Arguments[50]
    (Info: triOk;            Val: '1000'),                                      // 1907: Arguments[29] min Arguments[51]
    (Info: triOk;            Val: '1000'),                                      // 1908: Arguments[29] min Arguments[52]
    (Info: triOk;            Val: '1000'),                                      // 1909: Arguments[29] min Arguments[53]
    (Info: triOk;            Val: '1000'),                                      // 1910: Arguments[29] min Arguments[54]
    (Info: triOk;            Val: '1000'),                                      // 1911: Arguments[29] min Arguments[55]
    (Info: triOk;            Val: '1000'),                                      // 1912: Arguments[29] min Arguments[56]
    (Info: triOk;            Val: '1000'),                                      // 1913: Arguments[29] min Arguments[57]
    (Info: triOk;            Val: '1000'),                                      // 1914: Arguments[29] min Arguments[58]
    (Info: triOk;            Val: '1000'),                                      // 1915: Arguments[29] min Arguments[59]
    (Info: triOk;            Val: '1000'),                                      // 1916: Arguments[29] min Arguments[60]
    (Info: triOk;            Val: '1000'),                                      // 1917: Arguments[29] min Arguments[61]
    (Info: triOk;            Val: '1000'),                                      // 1918: Arguments[29] min Arguments[62]
    (Info: triOk;            Val: '1000'),                                      // 1919: Arguments[29] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1920: Arguments[30] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1921: Arguments[30] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1922: Arguments[30] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1923: Arguments[30] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1924: Arguments[30] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1925: Arguments[30] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1926: Arguments[30] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1927: Arguments[30] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1928: Arguments[30] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1929: Arguments[30] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1930: Arguments[30] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1931: Arguments[30] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1932: Arguments[30] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1933: Arguments[30] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1934: Arguments[30] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1935: Arguments[30] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1936: Arguments[30] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1937: Arguments[30] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1938: Arguments[30] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1939: Arguments[30] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1940: Arguments[30] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1941: Arguments[30] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1942: Arguments[30] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1943: Arguments[30] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1944: Arguments[30] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1945: Arguments[30] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1946: Arguments[30] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1947: Arguments[30] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1948: Arguments[30] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1949: Arguments[30] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1950: Arguments[30] min Arguments[30]
    (Info: triOk;            Val: '10000'),                                     // 1951: Arguments[30] min Arguments[31]
    (Info: triOk;            Val: '10000'),                                     // 1952: Arguments[30] min Arguments[32]
    (Info: triOk;            Val: '10000'),                                     // 1953: Arguments[30] min Arguments[33]
    (Info: triOk;            Val: '10000'),                                     // 1954: Arguments[30] min Arguments[34]
    (Info: triOk;            Val: '10000'),                                     // 1955: Arguments[30] min Arguments[35]
    (Info: triOk;            Val: '10000'),                                     // 1956: Arguments[30] min Arguments[36]
    (Info: triOk;            Val: '10000'),                                     // 1957: Arguments[30] min Arguments[37]
    (Info: triOk;            Val: '10000'),                                     // 1958: Arguments[30] min Arguments[38]
    (Info: triOk;            Val: '10000'),                                     // 1959: Arguments[30] min Arguments[39]
    (Info: triOk;            Val: '10000'),                                     // 1960: Arguments[30] min Arguments[40]
    (Info: triOk;            Val: '10000'),                                     // 1961: Arguments[30] min Arguments[41]
    (Info: triOk;            Val: '10000'),                                     // 1962: Arguments[30] min Arguments[42]
    (Info: triOk;            Val: '10000'),                                     // 1963: Arguments[30] min Arguments[43]
    (Info: triOk;            Val: '10000'),                                     // 1964: Arguments[30] min Arguments[44]
    (Info: triOk;            Val: '10000'),                                     // 1965: Arguments[30] min Arguments[45]
    (Info: triOk;            Val: '10000'),                                     // 1966: Arguments[30] min Arguments[46]
    (Info: triOk;            Val: '10000'),                                     // 1967: Arguments[30] min Arguments[47]
    (Info: triOk;            Val: '10000'),                                     // 1968: Arguments[30] min Arguments[48]
    (Info: triOk;            Val: '10000'),                                     // 1969: Arguments[30] min Arguments[49]
    (Info: triOk;            Val: '10000'),                                     // 1970: Arguments[30] min Arguments[50]
    (Info: triOk;            Val: '10000'),                                     // 1971: Arguments[30] min Arguments[51]
    (Info: triOk;            Val: '10000'),                                     // 1972: Arguments[30] min Arguments[52]
    (Info: triOk;            Val: '10000'),                                     // 1973: Arguments[30] min Arguments[53]
    (Info: triOk;            Val: '10000'),                                     // 1974: Arguments[30] min Arguments[54]
    (Info: triOk;            Val: '10000'),                                     // 1975: Arguments[30] min Arguments[55]
    (Info: triOk;            Val: '10000'),                                     // 1976: Arguments[30] min Arguments[56]
    (Info: triOk;            Val: '10000'),                                     // 1977: Arguments[30] min Arguments[57]
    (Info: triOk;            Val: '10000'),                                     // 1978: Arguments[30] min Arguments[58]
    (Info: triOk;            Val: '10000'),                                     // 1979: Arguments[30] min Arguments[59]
    (Info: triOk;            Val: '10000'),                                     // 1980: Arguments[30] min Arguments[60]
    (Info: triOk;            Val: '10000'),                                     // 1981: Arguments[30] min Arguments[61]
    (Info: triOk;            Val: '10000'),                                     // 1982: Arguments[30] min Arguments[62]
    (Info: triOk;            Val: '10000'),                                     // 1983: Arguments[30] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 1984: Arguments[31] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 1985: Arguments[31] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 1986: Arguments[31] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 1987: Arguments[31] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 1988: Arguments[31] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 1989: Arguments[31] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 1990: Arguments[31] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 1991: Arguments[31] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 1992: Arguments[31] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 1993: Arguments[31] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 1994: Arguments[31] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 1995: Arguments[31] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 1996: Arguments[31] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 1997: Arguments[31] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 1998: Arguments[31] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 1999: Arguments[31] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2000: Arguments[31] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2001: Arguments[31] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2002: Arguments[31] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2003: Arguments[31] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2004: Arguments[31] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2005: Arguments[31] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2006: Arguments[31] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2007: Arguments[31] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2008: Arguments[31] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2009: Arguments[31] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2010: Arguments[31] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2011: Arguments[31] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2012: Arguments[31] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2013: Arguments[31] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2014: Arguments[31] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2015: Arguments[31] min Arguments[31]
    (Info: triOk;            Val: '100000'),                                    // 2016: Arguments[31] min Arguments[32]
    (Info: triOk;            Val: '100000'),                                    // 2017: Arguments[31] min Arguments[33]
    (Info: triOk;            Val: '100000'),                                    // 2018: Arguments[31] min Arguments[34]
    (Info: triOk;            Val: '100000'),                                    // 2019: Arguments[31] min Arguments[35]
    (Info: triOk;            Val: '100000'),                                    // 2020: Arguments[31] min Arguments[36]
    (Info: triOk;            Val: '100000'),                                    // 2021: Arguments[31] min Arguments[37]
    (Info: triOk;            Val: '100000'),                                    // 2022: Arguments[31] min Arguments[38]
    (Info: triOk;            Val: '100000'),                                    // 2023: Arguments[31] min Arguments[39]
    (Info: triOk;            Val: '100000'),                                    // 2024: Arguments[31] min Arguments[40]
    (Info: triOk;            Val: '100000'),                                    // 2025: Arguments[31] min Arguments[41]
    (Info: triOk;            Val: '100000'),                                    // 2026: Arguments[31] min Arguments[42]
    (Info: triOk;            Val: '100000'),                                    // 2027: Arguments[31] min Arguments[43]
    (Info: triOk;            Val: '100000'),                                    // 2028: Arguments[31] min Arguments[44]
    (Info: triOk;            Val: '100000'),                                    // 2029: Arguments[31] min Arguments[45]
    (Info: triOk;            Val: '100000'),                                    // 2030: Arguments[31] min Arguments[46]
    (Info: triOk;            Val: '100000'),                                    // 2031: Arguments[31] min Arguments[47]
    (Info: triOk;            Val: '100000'),                                    // 2032: Arguments[31] min Arguments[48]
    (Info: triOk;            Val: '100000'),                                    // 2033: Arguments[31] min Arguments[49]
    (Info: triOk;            Val: '100000'),                                    // 2034: Arguments[31] min Arguments[50]
    (Info: triOk;            Val: '100000'),                                    // 2035: Arguments[31] min Arguments[51]
    (Info: triOk;            Val: '100000'),                                    // 2036: Arguments[31] min Arguments[52]
    (Info: triOk;            Val: '100000'),                                    // 2037: Arguments[31] min Arguments[53]
    (Info: triOk;            Val: '100000'),                                    // 2038: Arguments[31] min Arguments[54]
    (Info: triOk;            Val: '100000'),                                    // 2039: Arguments[31] min Arguments[55]
    (Info: triOk;            Val: '100000'),                                    // 2040: Arguments[31] min Arguments[56]
    (Info: triOk;            Val: '100000'),                                    // 2041: Arguments[31] min Arguments[57]
    (Info: triOk;            Val: '100000'),                                    // 2042: Arguments[31] min Arguments[58]
    (Info: triOk;            Val: '100000'),                                    // 2043: Arguments[31] min Arguments[59]
    (Info: triOk;            Val: '100000'),                                    // 2044: Arguments[31] min Arguments[60]
    (Info: triOk;            Val: '100000'),                                    // 2045: Arguments[31] min Arguments[61]
    (Info: triOk;            Val: '100000'),                                    // 2046: Arguments[31] min Arguments[62]
    (Info: triOk;            Val: '100000'),                                    // 2047: Arguments[31] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2048: Arguments[32] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2049: Arguments[32] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2050: Arguments[32] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2051: Arguments[32] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2052: Arguments[32] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2053: Arguments[32] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2054: Arguments[32] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2055: Arguments[32] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2056: Arguments[32] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2057: Arguments[32] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2058: Arguments[32] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2059: Arguments[32] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2060: Arguments[32] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2061: Arguments[32] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2062: Arguments[32] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2063: Arguments[32] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2064: Arguments[32] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2065: Arguments[32] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2066: Arguments[32] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2067: Arguments[32] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2068: Arguments[32] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2069: Arguments[32] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2070: Arguments[32] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2071: Arguments[32] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2072: Arguments[32] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2073: Arguments[32] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2074: Arguments[32] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2075: Arguments[32] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2076: Arguments[32] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2077: Arguments[32] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2078: Arguments[32] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2079: Arguments[32] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2080: Arguments[32] min Arguments[32]
    (Info: triOk;            Val: '1000000'),                                   // 2081: Arguments[32] min Arguments[33]
    (Info: triOk;            Val: '1000000'),                                   // 2082: Arguments[32] min Arguments[34]
    (Info: triOk;            Val: '1000000'),                                   // 2083: Arguments[32] min Arguments[35]
    (Info: triOk;            Val: '1000000'),                                   // 2084: Arguments[32] min Arguments[36]
    (Info: triOk;            Val: '1000000'),                                   // 2085: Arguments[32] min Arguments[37]
    (Info: triOk;            Val: '1000000'),                                   // 2086: Arguments[32] min Arguments[38]
    (Info: triOk;            Val: '1000000'),                                   // 2087: Arguments[32] min Arguments[39]
    (Info: triOk;            Val: '1000000'),                                   // 2088: Arguments[32] min Arguments[40]
    (Info: triOk;            Val: '1000000'),                                   // 2089: Arguments[32] min Arguments[41]
    (Info: triOk;            Val: '1000000'),                                   // 2090: Arguments[32] min Arguments[42]
    (Info: triOk;            Val: '1000000'),                                   // 2091: Arguments[32] min Arguments[43]
    (Info: triOk;            Val: '1000000'),                                   // 2092: Arguments[32] min Arguments[44]
    (Info: triOk;            Val: '1000000'),                                   // 2093: Arguments[32] min Arguments[45]
    (Info: triOk;            Val: '1000000'),                                   // 2094: Arguments[32] min Arguments[46]
    (Info: triOk;            Val: '1000000'),                                   // 2095: Arguments[32] min Arguments[47]
    (Info: triOk;            Val: '1000000'),                                   // 2096: Arguments[32] min Arguments[48]
    (Info: triOk;            Val: '1000000'),                                   // 2097: Arguments[32] min Arguments[49]
    (Info: triOk;            Val: '1000000'),                                   // 2098: Arguments[32] min Arguments[50]
    (Info: triOk;            Val: '1000000'),                                   // 2099: Arguments[32] min Arguments[51]
    (Info: triOk;            Val: '1000000'),                                   // 2100: Arguments[32] min Arguments[52]
    (Info: triOk;            Val: '1000000'),                                   // 2101: Arguments[32] min Arguments[53]
    (Info: triOk;            Val: '1000000'),                                   // 2102: Arguments[32] min Arguments[54]
    (Info: triOk;            Val: '1000000'),                                   // 2103: Arguments[32] min Arguments[55]
    (Info: triOk;            Val: '1000000'),                                   // 2104: Arguments[32] min Arguments[56]
    (Info: triOk;            Val: '1000000'),                                   // 2105: Arguments[32] min Arguments[57]
    (Info: triOk;            Val: '1000000'),                                   // 2106: Arguments[32] min Arguments[58]
    (Info: triOk;            Val: '1000000'),                                   // 2107: Arguments[32] min Arguments[59]
    (Info: triOk;            Val: '1000000'),                                   // 2108: Arguments[32] min Arguments[60]
    (Info: triOk;            Val: '1000000'),                                   // 2109: Arguments[32] min Arguments[61]
    (Info: triOk;            Val: '1000000'),                                   // 2110: Arguments[32] min Arguments[62]
    (Info: triOk;            Val: '1000000'),                                   // 2111: Arguments[32] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2112: Arguments[33] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2113: Arguments[33] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2114: Arguments[33] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2115: Arguments[33] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2116: Arguments[33] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2117: Arguments[33] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2118: Arguments[33] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2119: Arguments[33] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2120: Arguments[33] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2121: Arguments[33] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2122: Arguments[33] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2123: Arguments[33] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2124: Arguments[33] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2125: Arguments[33] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2126: Arguments[33] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2127: Arguments[33] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2128: Arguments[33] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2129: Arguments[33] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2130: Arguments[33] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2131: Arguments[33] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2132: Arguments[33] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2133: Arguments[33] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2134: Arguments[33] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2135: Arguments[33] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2136: Arguments[33] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2137: Arguments[33] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2138: Arguments[33] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2139: Arguments[33] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2140: Arguments[33] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2141: Arguments[33] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2142: Arguments[33] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2143: Arguments[33] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2144: Arguments[33] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2145: Arguments[33] min Arguments[33]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2146: Arguments[33] min Arguments[34]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2147: Arguments[33] min Arguments[35]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2148: Arguments[33] min Arguments[36]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2149: Arguments[33] min Arguments[37]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2150: Arguments[33] min Arguments[38]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2151: Arguments[33] min Arguments[39]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2152: Arguments[33] min Arguments[40]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2153: Arguments[33] min Arguments[41]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2154: Arguments[33] min Arguments[42]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2155: Arguments[33] min Arguments[43]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2156: Arguments[33] min Arguments[44]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2157: Arguments[33] min Arguments[45]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2158: Arguments[33] min Arguments[46]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2159: Arguments[33] min Arguments[47]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2160: Arguments[33] min Arguments[48]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2161: Arguments[33] min Arguments[49]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2162: Arguments[33] min Arguments[50]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2163: Arguments[33] min Arguments[51]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2164: Arguments[33] min Arguments[52]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2165: Arguments[33] min Arguments[53]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2166: Arguments[33] min Arguments[54]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2167: Arguments[33] min Arguments[55]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2168: Arguments[33] min Arguments[56]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2169: Arguments[33] min Arguments[57]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2170: Arguments[33] min Arguments[58]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2171: Arguments[33] min Arguments[59]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2172: Arguments[33] min Arguments[60]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2173: Arguments[33] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2174: Arguments[33] min Arguments[62]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2175: Arguments[33] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2176: Arguments[34] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2177: Arguments[34] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2178: Arguments[34] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2179: Arguments[34] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2180: Arguments[34] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2181: Arguments[34] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2182: Arguments[34] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2183: Arguments[34] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2184: Arguments[34] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2185: Arguments[34] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2186: Arguments[34] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2187: Arguments[34] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2188: Arguments[34] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2189: Arguments[34] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2190: Arguments[34] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2191: Arguments[34] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2192: Arguments[34] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2193: Arguments[34] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2194: Arguments[34] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2195: Arguments[34] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2196: Arguments[34] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2197: Arguments[34] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2198: Arguments[34] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2199: Arguments[34] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2200: Arguments[34] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2201: Arguments[34] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2202: Arguments[34] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2203: Arguments[34] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2204: Arguments[34] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2205: Arguments[34] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2206: Arguments[34] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2207: Arguments[34] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2208: Arguments[34] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2209: Arguments[34] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2210: Arguments[34] min Arguments[34]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2211: Arguments[34] min Arguments[35]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2212: Arguments[34] min Arguments[36]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2213: Arguments[34] min Arguments[37]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2214: Arguments[34] min Arguments[38]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2215: Arguments[34] min Arguments[39]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2216: Arguments[34] min Arguments[40]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2217: Arguments[34] min Arguments[41]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2218: Arguments[34] min Arguments[42]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2219: Arguments[34] min Arguments[43]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2220: Arguments[34] min Arguments[44]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2221: Arguments[34] min Arguments[45]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2222: Arguments[34] min Arguments[46]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2223: Arguments[34] min Arguments[47]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2224: Arguments[34] min Arguments[48]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2225: Arguments[34] min Arguments[49]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2226: Arguments[34] min Arguments[50]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2227: Arguments[34] min Arguments[51]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2228: Arguments[34] min Arguments[52]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2229: Arguments[34] min Arguments[53]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2230: Arguments[34] min Arguments[54]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2231: Arguments[34] min Arguments[55]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2232: Arguments[34] min Arguments[56]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2233: Arguments[34] min Arguments[57]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2234: Arguments[34] min Arguments[58]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2235: Arguments[34] min Arguments[59]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2236: Arguments[34] min Arguments[60]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2237: Arguments[34] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2238: Arguments[34] min Arguments[62]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2239: Arguments[34] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2240: Arguments[35] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2241: Arguments[35] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2242: Arguments[35] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2243: Arguments[35] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2244: Arguments[35] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2245: Arguments[35] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2246: Arguments[35] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2247: Arguments[35] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2248: Arguments[35] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2249: Arguments[35] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2250: Arguments[35] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2251: Arguments[35] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2252: Arguments[35] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2253: Arguments[35] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2254: Arguments[35] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2255: Arguments[35] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2256: Arguments[35] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2257: Arguments[35] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2258: Arguments[35] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2259: Arguments[35] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2260: Arguments[35] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2261: Arguments[35] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2262: Arguments[35] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2263: Arguments[35] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2264: Arguments[35] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2265: Arguments[35] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2266: Arguments[35] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2267: Arguments[35] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2268: Arguments[35] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2269: Arguments[35] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2270: Arguments[35] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2271: Arguments[35] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2272: Arguments[35] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2273: Arguments[35] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2274: Arguments[35] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2275: Arguments[35] min Arguments[35]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2276: Arguments[35] min Arguments[36]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2277: Arguments[35] min Arguments[37]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2278: Arguments[35] min Arguments[38]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2279: Arguments[35] min Arguments[39]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2280: Arguments[35] min Arguments[40]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2281: Arguments[35] min Arguments[41]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2282: Arguments[35] min Arguments[42]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2283: Arguments[35] min Arguments[43]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2284: Arguments[35] min Arguments[44]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2285: Arguments[35] min Arguments[45]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2286: Arguments[35] min Arguments[46]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2287: Arguments[35] min Arguments[47]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2288: Arguments[35] min Arguments[48]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2289: Arguments[35] min Arguments[49]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2290: Arguments[35] min Arguments[50]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2291: Arguments[35] min Arguments[51]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2292: Arguments[35] min Arguments[52]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2293: Arguments[35] min Arguments[53]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2294: Arguments[35] min Arguments[54]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2295: Arguments[35] min Arguments[55]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2296: Arguments[35] min Arguments[56]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2297: Arguments[35] min Arguments[57]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2298: Arguments[35] min Arguments[58]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2299: Arguments[35] min Arguments[59]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2300: Arguments[35] min Arguments[60]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2301: Arguments[35] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2302: Arguments[35] min Arguments[62]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2303: Arguments[35] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2304: Arguments[36] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2305: Arguments[36] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2306: Arguments[36] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2307: Arguments[36] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2308: Arguments[36] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2309: Arguments[36] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2310: Arguments[36] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2311: Arguments[36] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2312: Arguments[36] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2313: Arguments[36] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2314: Arguments[36] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2315: Arguments[36] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2316: Arguments[36] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2317: Arguments[36] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2318: Arguments[36] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2319: Arguments[36] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2320: Arguments[36] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2321: Arguments[36] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2322: Arguments[36] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2323: Arguments[36] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2324: Arguments[36] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2325: Arguments[36] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2326: Arguments[36] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2327: Arguments[36] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2328: Arguments[36] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2329: Arguments[36] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2330: Arguments[36] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2331: Arguments[36] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2332: Arguments[36] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2333: Arguments[36] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2334: Arguments[36] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2335: Arguments[36] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2336: Arguments[36] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2337: Arguments[36] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2338: Arguments[36] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2339: Arguments[36] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2340: Arguments[36] min Arguments[36]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2341: Arguments[36] min Arguments[37]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2342: Arguments[36] min Arguments[38]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2343: Arguments[36] min Arguments[39]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2344: Arguments[36] min Arguments[40]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2345: Arguments[36] min Arguments[41]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2346: Arguments[36] min Arguments[42]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2347: Arguments[36] min Arguments[43]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2348: Arguments[36] min Arguments[44]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2349: Arguments[36] min Arguments[45]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2350: Arguments[36] min Arguments[46]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2351: Arguments[36] min Arguments[47]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2352: Arguments[36] min Arguments[48]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2353: Arguments[36] min Arguments[49]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2354: Arguments[36] min Arguments[50]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2355: Arguments[36] min Arguments[51]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2356: Arguments[36] min Arguments[52]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2357: Arguments[36] min Arguments[53]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2358: Arguments[36] min Arguments[54]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2359: Arguments[36] min Arguments[55]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2360: Arguments[36] min Arguments[56]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2361: Arguments[36] min Arguments[57]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2362: Arguments[36] min Arguments[58]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2363: Arguments[36] min Arguments[59]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2364: Arguments[36] min Arguments[60]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2365: Arguments[36] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2366: Arguments[36] min Arguments[62]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2367: Arguments[36] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2368: Arguments[37] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2369: Arguments[37] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2370: Arguments[37] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2371: Arguments[37] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2372: Arguments[37] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2373: Arguments[37] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2374: Arguments[37] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2375: Arguments[37] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2376: Arguments[37] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2377: Arguments[37] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2378: Arguments[37] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2379: Arguments[37] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2380: Arguments[37] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2381: Arguments[37] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2382: Arguments[37] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2383: Arguments[37] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2384: Arguments[37] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2385: Arguments[37] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2386: Arguments[37] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2387: Arguments[37] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2388: Arguments[37] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2389: Arguments[37] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2390: Arguments[37] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2391: Arguments[37] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2392: Arguments[37] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2393: Arguments[37] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2394: Arguments[37] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2395: Arguments[37] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2396: Arguments[37] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2397: Arguments[37] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2398: Arguments[37] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2399: Arguments[37] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2400: Arguments[37] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2401: Arguments[37] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2402: Arguments[37] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2403: Arguments[37] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2404: Arguments[37] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2405: Arguments[37] min Arguments[37]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2406: Arguments[37] min Arguments[38]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2407: Arguments[37] min Arguments[39]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2408: Arguments[37] min Arguments[40]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2409: Arguments[37] min Arguments[41]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2410: Arguments[37] min Arguments[42]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2411: Arguments[37] min Arguments[43]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2412: Arguments[37] min Arguments[44]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2413: Arguments[37] min Arguments[45]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2414: Arguments[37] min Arguments[46]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2415: Arguments[37] min Arguments[47]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2416: Arguments[37] min Arguments[48]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2417: Arguments[37] min Arguments[49]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2418: Arguments[37] min Arguments[50]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2419: Arguments[37] min Arguments[51]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2420: Arguments[37] min Arguments[52]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2421: Arguments[37] min Arguments[53]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2422: Arguments[37] min Arguments[54]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2423: Arguments[37] min Arguments[55]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2424: Arguments[37] min Arguments[56]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2425: Arguments[37] min Arguments[57]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2426: Arguments[37] min Arguments[58]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2427: Arguments[37] min Arguments[59]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2428: Arguments[37] min Arguments[60]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2429: Arguments[37] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2430: Arguments[37] min Arguments[62]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2431: Arguments[37] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2432: Arguments[38] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2433: Arguments[38] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2434: Arguments[38] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2435: Arguments[38] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2436: Arguments[38] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2437: Arguments[38] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2438: Arguments[38] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2439: Arguments[38] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2440: Arguments[38] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2441: Arguments[38] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2442: Arguments[38] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2443: Arguments[38] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2444: Arguments[38] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2445: Arguments[38] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2446: Arguments[38] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2447: Arguments[38] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2448: Arguments[38] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2449: Arguments[38] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2450: Arguments[38] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2451: Arguments[38] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2452: Arguments[38] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2453: Arguments[38] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2454: Arguments[38] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2455: Arguments[38] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2456: Arguments[38] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2457: Arguments[38] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2458: Arguments[38] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2459: Arguments[38] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2460: Arguments[38] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2461: Arguments[38] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2462: Arguments[38] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2463: Arguments[38] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2464: Arguments[38] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2465: Arguments[38] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2466: Arguments[38] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2467: Arguments[38] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2468: Arguments[38] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2469: Arguments[38] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2470: Arguments[38] min Arguments[38]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2471: Arguments[38] min Arguments[39]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2472: Arguments[38] min Arguments[40]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2473: Arguments[38] min Arguments[41]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2474: Arguments[38] min Arguments[42]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2475: Arguments[38] min Arguments[43]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2476: Arguments[38] min Arguments[44]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2477: Arguments[38] min Arguments[45]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2478: Arguments[38] min Arguments[46]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2479: Arguments[38] min Arguments[47]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2480: Arguments[38] min Arguments[48]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2481: Arguments[38] min Arguments[49]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2482: Arguments[38] min Arguments[50]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2483: Arguments[38] min Arguments[51]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2484: Arguments[38] min Arguments[52]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2485: Arguments[38] min Arguments[53]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2486: Arguments[38] min Arguments[54]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2487: Arguments[38] min Arguments[55]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2488: Arguments[38] min Arguments[56]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2489: Arguments[38] min Arguments[57]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2490: Arguments[38] min Arguments[58]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2491: Arguments[38] min Arguments[59]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2492: Arguments[38] min Arguments[60]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2493: Arguments[38] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2494: Arguments[38] min Arguments[62]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2495: Arguments[38] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2496: Arguments[39] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2497: Arguments[39] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2498: Arguments[39] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2499: Arguments[39] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2500: Arguments[39] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2501: Arguments[39] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2502: Arguments[39] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2503: Arguments[39] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2504: Arguments[39] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2505: Arguments[39] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2506: Arguments[39] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2507: Arguments[39] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2508: Arguments[39] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2509: Arguments[39] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2510: Arguments[39] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2511: Arguments[39] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2512: Arguments[39] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2513: Arguments[39] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2514: Arguments[39] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2515: Arguments[39] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2516: Arguments[39] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2517: Arguments[39] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2518: Arguments[39] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2519: Arguments[39] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2520: Arguments[39] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2521: Arguments[39] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2522: Arguments[39] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2523: Arguments[39] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2524: Arguments[39] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2525: Arguments[39] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2526: Arguments[39] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2527: Arguments[39] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2528: Arguments[39] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2529: Arguments[39] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2530: Arguments[39] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2531: Arguments[39] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2532: Arguments[39] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2533: Arguments[39] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2534: Arguments[39] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2535: Arguments[39] min Arguments[39]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2536: Arguments[39] min Arguments[40]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2537: Arguments[39] min Arguments[41]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2538: Arguments[39] min Arguments[42]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2539: Arguments[39] min Arguments[43]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2540: Arguments[39] min Arguments[44]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2541: Arguments[39] min Arguments[45]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2542: Arguments[39] min Arguments[46]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2543: Arguments[39] min Arguments[47]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2544: Arguments[39] min Arguments[48]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2545: Arguments[39] min Arguments[49]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2546: Arguments[39] min Arguments[50]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2547: Arguments[39] min Arguments[51]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2548: Arguments[39] min Arguments[52]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2549: Arguments[39] min Arguments[53]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2550: Arguments[39] min Arguments[54]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2551: Arguments[39] min Arguments[55]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2552: Arguments[39] min Arguments[56]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2553: Arguments[39] min Arguments[57]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2554: Arguments[39] min Arguments[58]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2555: Arguments[39] min Arguments[59]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2556: Arguments[39] min Arguments[60]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2557: Arguments[39] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2558: Arguments[39] min Arguments[62]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2559: Arguments[39] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2560: Arguments[40] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2561: Arguments[40] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2562: Arguments[40] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2563: Arguments[40] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2564: Arguments[40] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2565: Arguments[40] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2566: Arguments[40] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2567: Arguments[40] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2568: Arguments[40] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2569: Arguments[40] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2570: Arguments[40] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2571: Arguments[40] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2572: Arguments[40] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2573: Arguments[40] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2574: Arguments[40] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2575: Arguments[40] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2576: Arguments[40] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2577: Arguments[40] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2578: Arguments[40] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2579: Arguments[40] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2580: Arguments[40] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2581: Arguments[40] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2582: Arguments[40] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2583: Arguments[40] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2584: Arguments[40] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2585: Arguments[40] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2586: Arguments[40] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2587: Arguments[40] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2588: Arguments[40] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2589: Arguments[40] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2590: Arguments[40] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2591: Arguments[40] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2592: Arguments[40] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2593: Arguments[40] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2594: Arguments[40] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2595: Arguments[40] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2596: Arguments[40] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2597: Arguments[40] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2598: Arguments[40] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2599: Arguments[40] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2600: Arguments[40] min Arguments[40]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2601: Arguments[40] min Arguments[41]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2602: Arguments[40] min Arguments[42]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2603: Arguments[40] min Arguments[43]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2604: Arguments[40] min Arguments[44]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2605: Arguments[40] min Arguments[45]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2606: Arguments[40] min Arguments[46]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2607: Arguments[40] min Arguments[47]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2608: Arguments[40] min Arguments[48]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2609: Arguments[40] min Arguments[49]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2610: Arguments[40] min Arguments[50]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2611: Arguments[40] min Arguments[51]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2612: Arguments[40] min Arguments[52]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2613: Arguments[40] min Arguments[53]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2614: Arguments[40] min Arguments[54]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2615: Arguments[40] min Arguments[55]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2616: Arguments[40] min Arguments[56]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2617: Arguments[40] min Arguments[57]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2618: Arguments[40] min Arguments[58]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2619: Arguments[40] min Arguments[59]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2620: Arguments[40] min Arguments[60]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2621: Arguments[40] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2622: Arguments[40] min Arguments[62]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2623: Arguments[40] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2624: Arguments[41] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2625: Arguments[41] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2626: Arguments[41] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2627: Arguments[41] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2628: Arguments[41] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2629: Arguments[41] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2630: Arguments[41] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2631: Arguments[41] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2632: Arguments[41] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2633: Arguments[41] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2634: Arguments[41] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2635: Arguments[41] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2636: Arguments[41] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2637: Arguments[41] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2638: Arguments[41] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2639: Arguments[41] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2640: Arguments[41] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2641: Arguments[41] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2642: Arguments[41] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2643: Arguments[41] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2644: Arguments[41] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2645: Arguments[41] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2646: Arguments[41] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2647: Arguments[41] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2648: Arguments[41] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2649: Arguments[41] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2650: Arguments[41] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2651: Arguments[41] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2652: Arguments[41] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2653: Arguments[41] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2654: Arguments[41] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2655: Arguments[41] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2656: Arguments[41] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2657: Arguments[41] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2658: Arguments[41] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2659: Arguments[41] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2660: Arguments[41] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2661: Arguments[41] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2662: Arguments[41] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2663: Arguments[41] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2664: Arguments[41] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2665: Arguments[41] min Arguments[41]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2666: Arguments[41] min Arguments[42]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2667: Arguments[41] min Arguments[43]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2668: Arguments[41] min Arguments[44]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2669: Arguments[41] min Arguments[45]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2670: Arguments[41] min Arguments[46]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2671: Arguments[41] min Arguments[47]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2672: Arguments[41] min Arguments[48]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2673: Arguments[41] min Arguments[49]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2674: Arguments[41] min Arguments[50]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2675: Arguments[41] min Arguments[51]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2676: Arguments[41] min Arguments[52]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2677: Arguments[41] min Arguments[53]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2678: Arguments[41] min Arguments[54]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2679: Arguments[41] min Arguments[55]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2680: Arguments[41] min Arguments[56]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2681: Arguments[41] min Arguments[57]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2682: Arguments[41] min Arguments[58]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2683: Arguments[41] min Arguments[59]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2684: Arguments[41] min Arguments[60]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2685: Arguments[41] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2686: Arguments[41] min Arguments[62]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2687: Arguments[41] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2688: Arguments[42] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2689: Arguments[42] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2690: Arguments[42] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2691: Arguments[42] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2692: Arguments[42] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2693: Arguments[42] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2694: Arguments[42] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2695: Arguments[42] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2696: Arguments[42] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2697: Arguments[42] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2698: Arguments[42] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2699: Arguments[42] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2700: Arguments[42] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2701: Arguments[42] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2702: Arguments[42] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2703: Arguments[42] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2704: Arguments[42] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2705: Arguments[42] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2706: Arguments[42] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2707: Arguments[42] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2708: Arguments[42] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2709: Arguments[42] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2710: Arguments[42] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2711: Arguments[42] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2712: Arguments[42] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2713: Arguments[42] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2714: Arguments[42] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2715: Arguments[42] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2716: Arguments[42] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2717: Arguments[42] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2718: Arguments[42] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2719: Arguments[42] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2720: Arguments[42] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2721: Arguments[42] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2722: Arguments[42] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2723: Arguments[42] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2724: Arguments[42] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2725: Arguments[42] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2726: Arguments[42] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2727: Arguments[42] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2728: Arguments[42] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2729: Arguments[42] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2730: Arguments[42] min Arguments[42]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2731: Arguments[42] min Arguments[43]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2732: Arguments[42] min Arguments[44]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2733: Arguments[42] min Arguments[45]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2734: Arguments[42] min Arguments[46]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2735: Arguments[42] min Arguments[47]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2736: Arguments[42] min Arguments[48]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2737: Arguments[42] min Arguments[49]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2738: Arguments[42] min Arguments[50]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2739: Arguments[42] min Arguments[51]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2740: Arguments[42] min Arguments[52]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2741: Arguments[42] min Arguments[53]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2742: Arguments[42] min Arguments[54]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2743: Arguments[42] min Arguments[55]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2744: Arguments[42] min Arguments[56]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2745: Arguments[42] min Arguments[57]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2746: Arguments[42] min Arguments[58]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2747: Arguments[42] min Arguments[59]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2748: Arguments[42] min Arguments[60]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2749: Arguments[42] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2750: Arguments[42] min Arguments[62]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2751: Arguments[42] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2752: Arguments[43] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2753: Arguments[43] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2754: Arguments[43] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2755: Arguments[43] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2756: Arguments[43] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2757: Arguments[43] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2758: Arguments[43] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2759: Arguments[43] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2760: Arguments[43] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2761: Arguments[43] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2762: Arguments[43] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2763: Arguments[43] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2764: Arguments[43] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2765: Arguments[43] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2766: Arguments[43] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2767: Arguments[43] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2768: Arguments[43] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2769: Arguments[43] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2770: Arguments[43] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2771: Arguments[43] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2772: Arguments[43] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2773: Arguments[43] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2774: Arguments[43] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2775: Arguments[43] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2776: Arguments[43] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2777: Arguments[43] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2778: Arguments[43] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2779: Arguments[43] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2780: Arguments[43] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2781: Arguments[43] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2782: Arguments[43] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2783: Arguments[43] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2784: Arguments[43] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2785: Arguments[43] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2786: Arguments[43] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2787: Arguments[43] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2788: Arguments[43] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2789: Arguments[43] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2790: Arguments[43] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2791: Arguments[43] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2792: Arguments[43] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2793: Arguments[43] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2794: Arguments[43] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2795: Arguments[43] min Arguments[43]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2796: Arguments[43] min Arguments[44]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2797: Arguments[43] min Arguments[45]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2798: Arguments[43] min Arguments[46]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2799: Arguments[43] min Arguments[47]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2800: Arguments[43] min Arguments[48]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2801: Arguments[43] min Arguments[49]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2802: Arguments[43] min Arguments[50]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2803: Arguments[43] min Arguments[51]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2804: Arguments[43] min Arguments[52]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2805: Arguments[43] min Arguments[53]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2806: Arguments[43] min Arguments[54]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2807: Arguments[43] min Arguments[55]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2808: Arguments[43] min Arguments[56]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2809: Arguments[43] min Arguments[57]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2810: Arguments[43] min Arguments[58]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2811: Arguments[43] min Arguments[59]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2812: Arguments[43] min Arguments[60]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2813: Arguments[43] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2814: Arguments[43] min Arguments[62]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2815: Arguments[43] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2816: Arguments[44] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2817: Arguments[44] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2818: Arguments[44] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2819: Arguments[44] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2820: Arguments[44] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2821: Arguments[44] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2822: Arguments[44] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2823: Arguments[44] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2824: Arguments[44] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2825: Arguments[44] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2826: Arguments[44] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2827: Arguments[44] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2828: Arguments[44] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2829: Arguments[44] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2830: Arguments[44] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2831: Arguments[44] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2832: Arguments[44] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2833: Arguments[44] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2834: Arguments[44] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2835: Arguments[44] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2836: Arguments[44] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2837: Arguments[44] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2838: Arguments[44] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2839: Arguments[44] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2840: Arguments[44] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2841: Arguments[44] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2842: Arguments[44] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2843: Arguments[44] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2844: Arguments[44] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2845: Arguments[44] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2846: Arguments[44] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2847: Arguments[44] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2848: Arguments[44] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2849: Arguments[44] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2850: Arguments[44] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2851: Arguments[44] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2852: Arguments[44] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2853: Arguments[44] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2854: Arguments[44] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2855: Arguments[44] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2856: Arguments[44] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2857: Arguments[44] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2858: Arguments[44] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2859: Arguments[44] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2860: Arguments[44] min Arguments[44]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2861: Arguments[44] min Arguments[45]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2862: Arguments[44] min Arguments[46]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2863: Arguments[44] min Arguments[47]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2864: Arguments[44] min Arguments[48]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2865: Arguments[44] min Arguments[49]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2866: Arguments[44] min Arguments[50]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2867: Arguments[44] min Arguments[51]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2868: Arguments[44] min Arguments[52]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2869: Arguments[44] min Arguments[53]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2870: Arguments[44] min Arguments[54]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2871: Arguments[44] min Arguments[55]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2872: Arguments[44] min Arguments[56]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2873: Arguments[44] min Arguments[57]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2874: Arguments[44] min Arguments[58]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2875: Arguments[44] min Arguments[59]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2876: Arguments[44] min Arguments[60]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2877: Arguments[44] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2878: Arguments[44] min Arguments[62]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2879: Arguments[44] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2880: Arguments[45] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2881: Arguments[45] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2882: Arguments[45] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2883: Arguments[45] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2884: Arguments[45] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2885: Arguments[45] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2886: Arguments[45] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2887: Arguments[45] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2888: Arguments[45] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2889: Arguments[45] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2890: Arguments[45] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2891: Arguments[45] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2892: Arguments[45] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2893: Arguments[45] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2894: Arguments[45] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2895: Arguments[45] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2896: Arguments[45] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2897: Arguments[45] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2898: Arguments[45] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2899: Arguments[45] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2900: Arguments[45] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2901: Arguments[45] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2902: Arguments[45] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2903: Arguments[45] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2904: Arguments[45] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2905: Arguments[45] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2906: Arguments[45] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2907: Arguments[45] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2908: Arguments[45] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2909: Arguments[45] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2910: Arguments[45] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2911: Arguments[45] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2912: Arguments[45] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2913: Arguments[45] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2914: Arguments[45] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2915: Arguments[45] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2916: Arguments[45] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2917: Arguments[45] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2918: Arguments[45] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2919: Arguments[45] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2920: Arguments[45] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2921: Arguments[45] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2922: Arguments[45] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2923: Arguments[45] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2924: Arguments[45] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2925: Arguments[45] min Arguments[45]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2926: Arguments[45] min Arguments[46]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2927: Arguments[45] min Arguments[47]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2928: Arguments[45] min Arguments[48]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2929: Arguments[45] min Arguments[49]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2930: Arguments[45] min Arguments[50]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2931: Arguments[45] min Arguments[51]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2932: Arguments[45] min Arguments[52]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2933: Arguments[45] min Arguments[53]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2934: Arguments[45] min Arguments[54]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2935: Arguments[45] min Arguments[55]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2936: Arguments[45] min Arguments[56]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2937: Arguments[45] min Arguments[57]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2938: Arguments[45] min Arguments[58]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2939: Arguments[45] min Arguments[59]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2940: Arguments[45] min Arguments[60]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2941: Arguments[45] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2942: Arguments[45] min Arguments[62]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2943: Arguments[45] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 2944: Arguments[46] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 2945: Arguments[46] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 2946: Arguments[46] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 2947: Arguments[46] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 2948: Arguments[46] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 2949: Arguments[46] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 2950: Arguments[46] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 2951: Arguments[46] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 2952: Arguments[46] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 2953: Arguments[46] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 2954: Arguments[46] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 2955: Arguments[46] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 2956: Arguments[46] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 2957: Arguments[46] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 2958: Arguments[46] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 2959: Arguments[46] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 2960: Arguments[46] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 2961: Arguments[46] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 2962: Arguments[46] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 2963: Arguments[46] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 2964: Arguments[46] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 2965: Arguments[46] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 2966: Arguments[46] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 2967: Arguments[46] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 2968: Arguments[46] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 2969: Arguments[46] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 2970: Arguments[46] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 2971: Arguments[46] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 2972: Arguments[46] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 2973: Arguments[46] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 2974: Arguments[46] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2975: Arguments[46] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2976: Arguments[46] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2977: Arguments[46] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2978: Arguments[46] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2979: Arguments[46] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2980: Arguments[46] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2981: Arguments[46] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2982: Arguments[46] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2983: Arguments[46] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2984: Arguments[46] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2985: Arguments[46] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2986: Arguments[46] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2987: Arguments[46] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2988: Arguments[46] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2989: Arguments[46] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2990: Arguments[46] min Arguments[46]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2991: Arguments[46] min Arguments[47]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2992: Arguments[46] min Arguments[48]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2993: Arguments[46] min Arguments[49]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2994: Arguments[46] min Arguments[50]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2995: Arguments[46] min Arguments[51]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2996: Arguments[46] min Arguments[52]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2997: Arguments[46] min Arguments[53]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2998: Arguments[46] min Arguments[54]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2999: Arguments[46] min Arguments[55]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3000: Arguments[46] min Arguments[56]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3001: Arguments[46] min Arguments[57]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3002: Arguments[46] min Arguments[58]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3003: Arguments[46] min Arguments[59]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3004: Arguments[46] min Arguments[60]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3005: Arguments[46] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3006: Arguments[46] min Arguments[62]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3007: Arguments[46] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3008: Arguments[47] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3009: Arguments[47] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3010: Arguments[47] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3011: Arguments[47] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3012: Arguments[47] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3013: Arguments[47] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3014: Arguments[47] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3015: Arguments[47] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3016: Arguments[47] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3017: Arguments[47] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3018: Arguments[47] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3019: Arguments[47] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3020: Arguments[47] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3021: Arguments[47] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3022: Arguments[47] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3023: Arguments[47] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3024: Arguments[47] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3025: Arguments[47] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3026: Arguments[47] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3027: Arguments[47] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3028: Arguments[47] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3029: Arguments[47] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3030: Arguments[47] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3031: Arguments[47] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3032: Arguments[47] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3033: Arguments[47] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3034: Arguments[47] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3035: Arguments[47] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3036: Arguments[47] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3037: Arguments[47] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3038: Arguments[47] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3039: Arguments[47] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3040: Arguments[47] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3041: Arguments[47] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3042: Arguments[47] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3043: Arguments[47] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3044: Arguments[47] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3045: Arguments[47] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3046: Arguments[47] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3047: Arguments[47] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3048: Arguments[47] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3049: Arguments[47] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3050: Arguments[47] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3051: Arguments[47] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3052: Arguments[47] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3053: Arguments[47] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3054: Arguments[47] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3055: Arguments[47] min Arguments[47]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3056: Arguments[47] min Arguments[48]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3057: Arguments[47] min Arguments[49]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3058: Arguments[47] min Arguments[50]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3059: Arguments[47] min Arguments[51]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3060: Arguments[47] min Arguments[52]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3061: Arguments[47] min Arguments[53]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3062: Arguments[47] min Arguments[54]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3063: Arguments[47] min Arguments[55]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3064: Arguments[47] min Arguments[56]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3065: Arguments[47] min Arguments[57]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3066: Arguments[47] min Arguments[58]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3067: Arguments[47] min Arguments[59]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3068: Arguments[47] min Arguments[60]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3069: Arguments[47] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3070: Arguments[47] min Arguments[62]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3071: Arguments[47] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3072: Arguments[48] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3073: Arguments[48] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3074: Arguments[48] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3075: Arguments[48] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3076: Arguments[48] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3077: Arguments[48] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3078: Arguments[48] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3079: Arguments[48] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3080: Arguments[48] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3081: Arguments[48] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3082: Arguments[48] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3083: Arguments[48] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3084: Arguments[48] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3085: Arguments[48] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3086: Arguments[48] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3087: Arguments[48] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3088: Arguments[48] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3089: Arguments[48] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3090: Arguments[48] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3091: Arguments[48] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3092: Arguments[48] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3093: Arguments[48] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3094: Arguments[48] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3095: Arguments[48] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3096: Arguments[48] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3097: Arguments[48] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3098: Arguments[48] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3099: Arguments[48] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3100: Arguments[48] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3101: Arguments[48] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3102: Arguments[48] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3103: Arguments[48] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3104: Arguments[48] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3105: Arguments[48] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3106: Arguments[48] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3107: Arguments[48] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3108: Arguments[48] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3109: Arguments[48] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3110: Arguments[48] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3111: Arguments[48] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3112: Arguments[48] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3113: Arguments[48] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3114: Arguments[48] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3115: Arguments[48] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3116: Arguments[48] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3117: Arguments[48] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3118: Arguments[48] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3119: Arguments[48] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3120: Arguments[48] min Arguments[48]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3121: Arguments[48] min Arguments[49]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3122: Arguments[48] min Arguments[50]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3123: Arguments[48] min Arguments[51]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3124: Arguments[48] min Arguments[52]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3125: Arguments[48] min Arguments[53]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3126: Arguments[48] min Arguments[54]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3127: Arguments[48] min Arguments[55]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3128: Arguments[48] min Arguments[56]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3129: Arguments[48] min Arguments[57]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3130: Arguments[48] min Arguments[58]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3131: Arguments[48] min Arguments[59]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3132: Arguments[48] min Arguments[60]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3133: Arguments[48] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3134: Arguments[48] min Arguments[62]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3135: Arguments[48] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3136: Arguments[49] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3137: Arguments[49] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3138: Arguments[49] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3139: Arguments[49] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3140: Arguments[49] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3141: Arguments[49] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3142: Arguments[49] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3143: Arguments[49] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3144: Arguments[49] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3145: Arguments[49] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3146: Arguments[49] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3147: Arguments[49] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3148: Arguments[49] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3149: Arguments[49] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3150: Arguments[49] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3151: Arguments[49] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3152: Arguments[49] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3153: Arguments[49] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3154: Arguments[49] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3155: Arguments[49] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3156: Arguments[49] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3157: Arguments[49] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3158: Arguments[49] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3159: Arguments[49] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3160: Arguments[49] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3161: Arguments[49] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3162: Arguments[49] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3163: Arguments[49] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3164: Arguments[49] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3165: Arguments[49] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3166: Arguments[49] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3167: Arguments[49] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3168: Arguments[49] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3169: Arguments[49] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3170: Arguments[49] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3171: Arguments[49] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3172: Arguments[49] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3173: Arguments[49] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3174: Arguments[49] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3175: Arguments[49] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3176: Arguments[49] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3177: Arguments[49] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3178: Arguments[49] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3179: Arguments[49] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3180: Arguments[49] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3181: Arguments[49] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3182: Arguments[49] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3183: Arguments[49] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3184: Arguments[49] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3185: Arguments[49] min Arguments[49]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3186: Arguments[49] min Arguments[50]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3187: Arguments[49] min Arguments[51]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3188: Arguments[49] min Arguments[52]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3189: Arguments[49] min Arguments[53]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3190: Arguments[49] min Arguments[54]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3191: Arguments[49] min Arguments[55]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3192: Arguments[49] min Arguments[56]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3193: Arguments[49] min Arguments[57]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3194: Arguments[49] min Arguments[58]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3195: Arguments[49] min Arguments[59]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3196: Arguments[49] min Arguments[60]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3197: Arguments[49] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3198: Arguments[49] min Arguments[62]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3199: Arguments[49] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3200: Arguments[50] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3201: Arguments[50] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3202: Arguments[50] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3203: Arguments[50] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3204: Arguments[50] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3205: Arguments[50] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3206: Arguments[50] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3207: Arguments[50] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3208: Arguments[50] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3209: Arguments[50] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3210: Arguments[50] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3211: Arguments[50] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3212: Arguments[50] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3213: Arguments[50] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3214: Arguments[50] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3215: Arguments[50] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3216: Arguments[50] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3217: Arguments[50] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3218: Arguments[50] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3219: Arguments[50] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3220: Arguments[50] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3221: Arguments[50] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3222: Arguments[50] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3223: Arguments[50] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3224: Arguments[50] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3225: Arguments[50] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3226: Arguments[50] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3227: Arguments[50] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3228: Arguments[50] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3229: Arguments[50] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3230: Arguments[50] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3231: Arguments[50] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3232: Arguments[50] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3233: Arguments[50] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3234: Arguments[50] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3235: Arguments[50] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3236: Arguments[50] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3237: Arguments[50] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3238: Arguments[50] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3239: Arguments[50] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3240: Arguments[50] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3241: Arguments[50] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3242: Arguments[50] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3243: Arguments[50] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3244: Arguments[50] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3245: Arguments[50] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3246: Arguments[50] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3247: Arguments[50] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3248: Arguments[50] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3249: Arguments[50] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3250: Arguments[50] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3251: Arguments[50] min Arguments[51]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3252: Arguments[50] min Arguments[52]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3253: Arguments[50] min Arguments[53]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3254: Arguments[50] min Arguments[54]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3255: Arguments[50] min Arguments[55]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3256: Arguments[50] min Arguments[56]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3257: Arguments[50] min Arguments[57]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3258: Arguments[50] min Arguments[58]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3259: Arguments[50] min Arguments[59]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3260: Arguments[50] min Arguments[60]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3261: Arguments[50] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3262: Arguments[50] min Arguments[62]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3263: Arguments[50] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3264: Arguments[51] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3265: Arguments[51] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3266: Arguments[51] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3267: Arguments[51] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3268: Arguments[51] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3269: Arguments[51] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3270: Arguments[51] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3271: Arguments[51] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3272: Arguments[51] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3273: Arguments[51] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3274: Arguments[51] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3275: Arguments[51] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3276: Arguments[51] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3277: Arguments[51] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3278: Arguments[51] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3279: Arguments[51] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3280: Arguments[51] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3281: Arguments[51] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3282: Arguments[51] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3283: Arguments[51] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3284: Arguments[51] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3285: Arguments[51] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3286: Arguments[51] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3287: Arguments[51] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3288: Arguments[51] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3289: Arguments[51] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3290: Arguments[51] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3291: Arguments[51] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3292: Arguments[51] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3293: Arguments[51] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3294: Arguments[51] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3295: Arguments[51] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3296: Arguments[51] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3297: Arguments[51] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3298: Arguments[51] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3299: Arguments[51] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3300: Arguments[51] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3301: Arguments[51] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3302: Arguments[51] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3303: Arguments[51] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3304: Arguments[51] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3305: Arguments[51] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3306: Arguments[51] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3307: Arguments[51] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3308: Arguments[51] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3309: Arguments[51] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3310: Arguments[51] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3311: Arguments[51] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3312: Arguments[51] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3313: Arguments[51] min Arguments[49]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3314: Arguments[51] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3315: Arguments[51] min Arguments[51]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3316: Arguments[51] min Arguments[52]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3317: Arguments[51] min Arguments[53]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3318: Arguments[51] min Arguments[54]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3319: Arguments[51] min Arguments[55]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3320: Arguments[51] min Arguments[56]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3321: Arguments[51] min Arguments[57]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3322: Arguments[51] min Arguments[58]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3323: Arguments[51] min Arguments[59]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3324: Arguments[51] min Arguments[60]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3325: Arguments[51] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3326: Arguments[51] min Arguments[62]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3327: Arguments[51] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3328: Arguments[52] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3329: Arguments[52] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3330: Arguments[52] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3331: Arguments[52] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3332: Arguments[52] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3333: Arguments[52] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3334: Arguments[52] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3335: Arguments[52] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3336: Arguments[52] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3337: Arguments[52] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3338: Arguments[52] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3339: Arguments[52] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3340: Arguments[52] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3341: Arguments[52] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3342: Arguments[52] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3343: Arguments[52] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3344: Arguments[52] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3345: Arguments[52] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3346: Arguments[52] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3347: Arguments[52] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3348: Arguments[52] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3349: Arguments[52] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3350: Arguments[52] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3351: Arguments[52] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3352: Arguments[52] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3353: Arguments[52] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3354: Arguments[52] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3355: Arguments[52] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3356: Arguments[52] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3357: Arguments[52] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3358: Arguments[52] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3359: Arguments[52] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3360: Arguments[52] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3361: Arguments[52] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3362: Arguments[52] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3363: Arguments[52] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3364: Arguments[52] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3365: Arguments[52] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3366: Arguments[52] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3367: Arguments[52] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3368: Arguments[52] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3369: Arguments[52] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3370: Arguments[52] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3371: Arguments[52] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3372: Arguments[52] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3373: Arguments[52] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3374: Arguments[52] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3375: Arguments[52] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3376: Arguments[52] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3377: Arguments[52] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3378: Arguments[52] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3379: Arguments[52] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3380: Arguments[52] min Arguments[52]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3381: Arguments[52] min Arguments[53]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3382: Arguments[52] min Arguments[54]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3383: Arguments[52] min Arguments[55]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3384: Arguments[52] min Arguments[56]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3385: Arguments[52] min Arguments[57]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3386: Arguments[52] min Arguments[58]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3387: Arguments[52] min Arguments[59]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3388: Arguments[52] min Arguments[60]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3389: Arguments[52] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3390: Arguments[52] min Arguments[62]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3391: Arguments[52] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3392: Arguments[53] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3393: Arguments[53] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3394: Arguments[53] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3395: Arguments[53] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3396: Arguments[53] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3397: Arguments[53] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3398: Arguments[53] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3399: Arguments[53] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3400: Arguments[53] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3401: Arguments[53] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3402: Arguments[53] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3403: Arguments[53] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3404: Arguments[53] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3405: Arguments[53] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3406: Arguments[53] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3407: Arguments[53] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3408: Arguments[53] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3409: Arguments[53] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3410: Arguments[53] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3411: Arguments[53] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3412: Arguments[53] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3413: Arguments[53] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3414: Arguments[53] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3415: Arguments[53] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3416: Arguments[53] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3417: Arguments[53] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3418: Arguments[53] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3419: Arguments[53] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3420: Arguments[53] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3421: Arguments[53] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3422: Arguments[53] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3423: Arguments[53] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3424: Arguments[53] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3425: Arguments[53] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3426: Arguments[53] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3427: Arguments[53] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3428: Arguments[53] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3429: Arguments[53] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3430: Arguments[53] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3431: Arguments[53] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3432: Arguments[53] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3433: Arguments[53] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3434: Arguments[53] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3435: Arguments[53] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3436: Arguments[53] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3437: Arguments[53] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3438: Arguments[53] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3439: Arguments[53] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3440: Arguments[53] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3441: Arguments[53] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3442: Arguments[53] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3443: Arguments[53] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3444: Arguments[53] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3445: Arguments[53] min Arguments[53]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3446: Arguments[53] min Arguments[54]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3447: Arguments[53] min Arguments[55]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3448: Arguments[53] min Arguments[56]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3449: Arguments[53] min Arguments[57]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3450: Arguments[53] min Arguments[58]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3451: Arguments[53] min Arguments[59]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3452: Arguments[53] min Arguments[60]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3453: Arguments[53] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3454: Arguments[53] min Arguments[62]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3455: Arguments[53] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3456: Arguments[54] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3457: Arguments[54] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3458: Arguments[54] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3459: Arguments[54] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3460: Arguments[54] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3461: Arguments[54] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3462: Arguments[54] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3463: Arguments[54] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3464: Arguments[54] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3465: Arguments[54] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3466: Arguments[54] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3467: Arguments[54] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3468: Arguments[54] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3469: Arguments[54] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3470: Arguments[54] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3471: Arguments[54] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3472: Arguments[54] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3473: Arguments[54] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3474: Arguments[54] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3475: Arguments[54] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3476: Arguments[54] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3477: Arguments[54] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3478: Arguments[54] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3479: Arguments[54] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3480: Arguments[54] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3481: Arguments[54] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3482: Arguments[54] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3483: Arguments[54] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3484: Arguments[54] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3485: Arguments[54] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3486: Arguments[54] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3487: Arguments[54] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3488: Arguments[54] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3489: Arguments[54] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3490: Arguments[54] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3491: Arguments[54] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3492: Arguments[54] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3493: Arguments[54] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3494: Arguments[54] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3495: Arguments[54] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3496: Arguments[54] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3497: Arguments[54] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3498: Arguments[54] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3499: Arguments[54] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3500: Arguments[54] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3501: Arguments[54] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3502: Arguments[54] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3503: Arguments[54] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3504: Arguments[54] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3505: Arguments[54] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3506: Arguments[54] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3507: Arguments[54] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3508: Arguments[54] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3509: Arguments[54] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3510: Arguments[54] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3511: Arguments[54] min Arguments[55]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3512: Arguments[54] min Arguments[56]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3513: Arguments[54] min Arguments[57]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3514: Arguments[54] min Arguments[58]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3515: Arguments[54] min Arguments[59]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3516: Arguments[54] min Arguments[60]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3517: Arguments[54] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3518: Arguments[54] min Arguments[62]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3519: Arguments[54] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3520: Arguments[55] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3521: Arguments[55] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3522: Arguments[55] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3523: Arguments[55] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3524: Arguments[55] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3525: Arguments[55] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3526: Arguments[55] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3527: Arguments[55] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3528: Arguments[55] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3529: Arguments[55] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3530: Arguments[55] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3531: Arguments[55] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3532: Arguments[55] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3533: Arguments[55] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3534: Arguments[55] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3535: Arguments[55] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3536: Arguments[55] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3537: Arguments[55] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3538: Arguments[55] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3539: Arguments[55] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3540: Arguments[55] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3541: Arguments[55] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3542: Arguments[55] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3543: Arguments[55] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3544: Arguments[55] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3545: Arguments[55] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3546: Arguments[55] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3547: Arguments[55] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3548: Arguments[55] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3549: Arguments[55] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3550: Arguments[55] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3551: Arguments[55] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3552: Arguments[55] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3553: Arguments[55] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3554: Arguments[55] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3555: Arguments[55] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3556: Arguments[55] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3557: Arguments[55] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3558: Arguments[55] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3559: Arguments[55] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3560: Arguments[55] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3561: Arguments[55] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3562: Arguments[55] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3563: Arguments[55] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3564: Arguments[55] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3565: Arguments[55] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3566: Arguments[55] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3567: Arguments[55] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3568: Arguments[55] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3569: Arguments[55] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3570: Arguments[55] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3571: Arguments[55] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3572: Arguments[55] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3573: Arguments[55] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3574: Arguments[55] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3575: Arguments[55] min Arguments[55]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3576: Arguments[55] min Arguments[56]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3577: Arguments[55] min Arguments[57]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3578: Arguments[55] min Arguments[58]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3579: Arguments[55] min Arguments[59]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3580: Arguments[55] min Arguments[60]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3581: Arguments[55] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3582: Arguments[55] min Arguments[62]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3583: Arguments[55] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3584: Arguments[56] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3585: Arguments[56] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3586: Arguments[56] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3587: Arguments[56] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3588: Arguments[56] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3589: Arguments[56] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3590: Arguments[56] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3591: Arguments[56] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3592: Arguments[56] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3593: Arguments[56] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3594: Arguments[56] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3595: Arguments[56] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3596: Arguments[56] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3597: Arguments[56] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3598: Arguments[56] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3599: Arguments[56] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3600: Arguments[56] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3601: Arguments[56] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3602: Arguments[56] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3603: Arguments[56] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3604: Arguments[56] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3605: Arguments[56] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3606: Arguments[56] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3607: Arguments[56] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3608: Arguments[56] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3609: Arguments[56] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3610: Arguments[56] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3611: Arguments[56] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3612: Arguments[56] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3613: Arguments[56] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3614: Arguments[56] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3615: Arguments[56] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3616: Arguments[56] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3617: Arguments[56] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3618: Arguments[56] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3619: Arguments[56] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3620: Arguments[56] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3621: Arguments[56] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3622: Arguments[56] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3623: Arguments[56] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3624: Arguments[56] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3625: Arguments[56] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3626: Arguments[56] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3627: Arguments[56] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3628: Arguments[56] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3629: Arguments[56] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3630: Arguments[56] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3631: Arguments[56] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3632: Arguments[56] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3633: Arguments[56] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3634: Arguments[56] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3635: Arguments[56] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3636: Arguments[56] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3637: Arguments[56] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3638: Arguments[56] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3639: Arguments[56] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3640: Arguments[56] min Arguments[56]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3641: Arguments[56] min Arguments[57]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3642: Arguments[56] min Arguments[58]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3643: Arguments[56] min Arguments[59]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3644: Arguments[56] min Arguments[60]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3645: Arguments[56] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3646: Arguments[56] min Arguments[62]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3647: Arguments[56] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3648: Arguments[57] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3649: Arguments[57] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3650: Arguments[57] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3651: Arguments[57] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3652: Arguments[57] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3653: Arguments[57] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3654: Arguments[57] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3655: Arguments[57] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3656: Arguments[57] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3657: Arguments[57] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3658: Arguments[57] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3659: Arguments[57] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3660: Arguments[57] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3661: Arguments[57] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3662: Arguments[57] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3663: Arguments[57] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3664: Arguments[57] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3665: Arguments[57] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3666: Arguments[57] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3667: Arguments[57] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3668: Arguments[57] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3669: Arguments[57] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3670: Arguments[57] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3671: Arguments[57] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3672: Arguments[57] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3673: Arguments[57] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3674: Arguments[57] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3675: Arguments[57] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3676: Arguments[57] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3677: Arguments[57] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3678: Arguments[57] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3679: Arguments[57] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3680: Arguments[57] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3681: Arguments[57] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3682: Arguments[57] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3683: Arguments[57] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3684: Arguments[57] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3685: Arguments[57] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3686: Arguments[57] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3687: Arguments[57] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3688: Arguments[57] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3689: Arguments[57] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3690: Arguments[57] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3691: Arguments[57] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3692: Arguments[57] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3693: Arguments[57] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3694: Arguments[57] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3695: Arguments[57] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3696: Arguments[57] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3697: Arguments[57] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3698: Arguments[57] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3699: Arguments[57] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3700: Arguments[57] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3701: Arguments[57] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3702: Arguments[57] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3703: Arguments[57] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3704: Arguments[57] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3705: Arguments[57] min Arguments[57]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3706: Arguments[57] min Arguments[58]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3707: Arguments[57] min Arguments[59]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3708: Arguments[57] min Arguments[60]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3709: Arguments[57] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3710: Arguments[57] min Arguments[62]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3711: Arguments[57] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3712: Arguments[58] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3713: Arguments[58] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3714: Arguments[58] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3715: Arguments[58] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3716: Arguments[58] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3717: Arguments[58] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3718: Arguments[58] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3719: Arguments[58] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3720: Arguments[58] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3721: Arguments[58] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3722: Arguments[58] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3723: Arguments[58] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3724: Arguments[58] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3725: Arguments[58] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3726: Arguments[58] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3727: Arguments[58] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3728: Arguments[58] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3729: Arguments[58] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3730: Arguments[58] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3731: Arguments[58] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3732: Arguments[58] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3733: Arguments[58] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3734: Arguments[58] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3735: Arguments[58] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3736: Arguments[58] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3737: Arguments[58] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3738: Arguments[58] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3739: Arguments[58] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3740: Arguments[58] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3741: Arguments[58] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3742: Arguments[58] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3743: Arguments[58] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3744: Arguments[58] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3745: Arguments[58] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3746: Arguments[58] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3747: Arguments[58] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3748: Arguments[58] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3749: Arguments[58] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3750: Arguments[58] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3751: Arguments[58] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3752: Arguments[58] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3753: Arguments[58] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3754: Arguments[58] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3755: Arguments[58] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3756: Arguments[58] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3757: Arguments[58] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3758: Arguments[58] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3759: Arguments[58] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3760: Arguments[58] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3761: Arguments[58] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3762: Arguments[58] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3763: Arguments[58] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3764: Arguments[58] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3765: Arguments[58] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3766: Arguments[58] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3767: Arguments[58] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3768: Arguments[58] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3769: Arguments[58] min Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3770: Arguments[58] min Arguments[58]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3771: Arguments[58] min Arguments[59]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3772: Arguments[58] min Arguments[60]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3773: Arguments[58] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3774: Arguments[58] min Arguments[62]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3775: Arguments[58] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3776: Arguments[59] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3777: Arguments[59] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3778: Arguments[59] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3779: Arguments[59] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3780: Arguments[59] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3781: Arguments[59] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3782: Arguments[59] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3783: Arguments[59] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3784: Arguments[59] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3785: Arguments[59] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3786: Arguments[59] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3787: Arguments[59] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3788: Arguments[59] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3789: Arguments[59] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3790: Arguments[59] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3791: Arguments[59] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3792: Arguments[59] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3793: Arguments[59] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3794: Arguments[59] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3795: Arguments[59] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3796: Arguments[59] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3797: Arguments[59] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3798: Arguments[59] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3799: Arguments[59] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3800: Arguments[59] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3801: Arguments[59] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3802: Arguments[59] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3803: Arguments[59] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3804: Arguments[59] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3805: Arguments[59] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3806: Arguments[59] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3807: Arguments[59] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3808: Arguments[59] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3809: Arguments[59] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3810: Arguments[59] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3811: Arguments[59] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3812: Arguments[59] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3813: Arguments[59] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3814: Arguments[59] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3815: Arguments[59] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3816: Arguments[59] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3817: Arguments[59] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3818: Arguments[59] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3819: Arguments[59] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3820: Arguments[59] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3821: Arguments[59] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3822: Arguments[59] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3823: Arguments[59] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3824: Arguments[59] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3825: Arguments[59] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3826: Arguments[59] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3827: Arguments[59] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3828: Arguments[59] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3829: Arguments[59] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3830: Arguments[59] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3831: Arguments[59] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3832: Arguments[59] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3833: Arguments[59] min Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3834: Arguments[59] min Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3835: Arguments[59] min Arguments[59]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3836: Arguments[59] min Arguments[60]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3837: Arguments[59] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3838: Arguments[59] min Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3839: Arguments[59] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3840: Arguments[60] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3841: Arguments[60] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3842: Arguments[60] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3843: Arguments[60] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3844: Arguments[60] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3845: Arguments[60] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3846: Arguments[60] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3847: Arguments[60] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3848: Arguments[60] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3849: Arguments[60] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3850: Arguments[60] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3851: Arguments[60] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3852: Arguments[60] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3853: Arguments[60] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3854: Arguments[60] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3855: Arguments[60] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3856: Arguments[60] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3857: Arguments[60] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3858: Arguments[60] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3859: Arguments[60] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3860: Arguments[60] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3861: Arguments[60] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3862: Arguments[60] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3863: Arguments[60] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3864: Arguments[60] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3865: Arguments[60] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3866: Arguments[60] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3867: Arguments[60] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3868: Arguments[60] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3869: Arguments[60] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3870: Arguments[60] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3871: Arguments[60] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3872: Arguments[60] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3873: Arguments[60] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3874: Arguments[60] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3875: Arguments[60] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3876: Arguments[60] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3877: Arguments[60] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3878: Arguments[60] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3879: Arguments[60] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3880: Arguments[60] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3881: Arguments[60] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3882: Arguments[60] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3883: Arguments[60] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3884: Arguments[60] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3885: Arguments[60] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3886: Arguments[60] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3887: Arguments[60] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3888: Arguments[60] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3889: Arguments[60] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3890: Arguments[60] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3891: Arguments[60] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3892: Arguments[60] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3893: Arguments[60] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3894: Arguments[60] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3895: Arguments[60] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3896: Arguments[60] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3897: Arguments[60] min Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3898: Arguments[60] min Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3899: Arguments[60] min Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3900: Arguments[60] min Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3901: Arguments[60] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3902: Arguments[60] min Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3903: Arguments[60] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3904: Arguments[61] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3905: Arguments[61] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3906: Arguments[61] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3907: Arguments[61] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3908: Arguments[61] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3909: Arguments[61] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3910: Arguments[61] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3911: Arguments[61] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3912: Arguments[61] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3913: Arguments[61] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3914: Arguments[61] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3915: Arguments[61] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3916: Arguments[61] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3917: Arguments[61] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3918: Arguments[61] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3919: Arguments[61] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3920: Arguments[61] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3921: Arguments[61] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3922: Arguments[61] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3923: Arguments[61] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3924: Arguments[61] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3925: Arguments[61] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3926: Arguments[61] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3927: Arguments[61] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3928: Arguments[61] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3929: Arguments[61] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3930: Arguments[61] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3931: Arguments[61] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3932: Arguments[61] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3933: Arguments[61] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3934: Arguments[61] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3935: Arguments[61] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 3936: Arguments[61] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 3937: Arguments[61] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 3938: Arguments[61] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 3939: Arguments[61] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 3940: Arguments[61] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 3941: Arguments[61] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 3942: Arguments[61] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 3943: Arguments[61] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 3944: Arguments[61] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 3945: Arguments[61] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 3946: Arguments[61] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 3947: Arguments[61] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 3948: Arguments[61] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 3949: Arguments[61] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3950: Arguments[61] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3951: Arguments[61] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3952: Arguments[61] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3953: Arguments[61] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3954: Arguments[61] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3955: Arguments[61] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3956: Arguments[61] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3957: Arguments[61] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3958: Arguments[61] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3959: Arguments[61] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3960: Arguments[61] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3961: Arguments[61] min Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3962: Arguments[61] min Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3963: Arguments[61] min Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3964: Arguments[61] min Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3965: Arguments[61] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 3966: Arguments[61] min Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3967: Arguments[61] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 3968: Arguments[62] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 3969: Arguments[62] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 3970: Arguments[62] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 3971: Arguments[62] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 3972: Arguments[62] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 3973: Arguments[62] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 3974: Arguments[62] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 3975: Arguments[62] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 3976: Arguments[62] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 3977: Arguments[62] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 3978: Arguments[62] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 3979: Arguments[62] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 3980: Arguments[62] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 3981: Arguments[62] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 3982: Arguments[62] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 3983: Arguments[62] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 3984: Arguments[62] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 3985: Arguments[62] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 3986: Arguments[62] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 3987: Arguments[62] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 3988: Arguments[62] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 3989: Arguments[62] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 3990: Arguments[62] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 3991: Arguments[62] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 3992: Arguments[62] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 3993: Arguments[62] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 3994: Arguments[62] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 3995: Arguments[62] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 3996: Arguments[62] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 3997: Arguments[62] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 3998: Arguments[62] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 3999: Arguments[62] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 4000: Arguments[62] min Arguments[32]
    (Info: triOk;            Val: '10000000000000'),                            // 4001: Arguments[62] min Arguments[33]
    (Info: triOk;            Val: '10000000000000'),                            // 4002: Arguments[62] min Arguments[34]
    (Info: triOk;            Val: '10000000000000'),                            // 4003: Arguments[62] min Arguments[35]
    (Info: triOk;            Val: '10000000000000'),                            // 4004: Arguments[62] min Arguments[36]
    (Info: triOk;            Val: '10000000000000'),                            // 4005: Arguments[62] min Arguments[37]
    (Info: triOk;            Val: '10000000000000'),                            // 4006: Arguments[62] min Arguments[38]
    (Info: triOk;            Val: '10000000000000'),                            // 4007: Arguments[62] min Arguments[39]
    (Info: triOk;            Val: '10000000000000'),                            // 4008: Arguments[62] min Arguments[40]
    (Info: triOk;            Val: '10000000000000'),                            // 4009: Arguments[62] min Arguments[41]
    (Info: triOk;            Val: '10000000000000'),                            // 4010: Arguments[62] min Arguments[42]
    (Info: triOk;            Val: '10000000000000'),                            // 4011: Arguments[62] min Arguments[43]
    (Info: triOk;            Val: '10000000000000'),                            // 4012: Arguments[62] min Arguments[44]
    (Info: triOk;            Val: '10000000000000'),                            // 4013: Arguments[62] min Arguments[45]
    (Info: triOk;            Val: '10000000000000'),                            // 4014: Arguments[62] min Arguments[46]
    (Info: triOk;            Val: '10000000000000'),                            // 4015: Arguments[62] min Arguments[47]
    (Info: triOk;            Val: '10000000000000'),                            // 4016: Arguments[62] min Arguments[48]
    (Info: triOk;            Val: '10000000000000'),                            // 4017: Arguments[62] min Arguments[49]
    (Info: triOk;            Val: '10000000000000'),                            // 4018: Arguments[62] min Arguments[50]
    (Info: triOk;            Val: '10000000000000'),                            // 4019: Arguments[62] min Arguments[51]
    (Info: triOk;            Val: '10000000000000'),                            // 4020: Arguments[62] min Arguments[52]
    (Info: triOk;            Val: '10000000000000'),                            // 4021: Arguments[62] min Arguments[53]
    (Info: triOk;            Val: '10000000000000'),                            // 4022: Arguments[62] min Arguments[54]
    (Info: triOk;            Val: '10000000000000'),                            // 4023: Arguments[62] min Arguments[55]
    (Info: triOk;            Val: '10000000000000'),                            // 4024: Arguments[62] min Arguments[56]
    (Info: triOk;            Val: '10000000000000'),                            // 4025: Arguments[62] min Arguments[57]
    (Info: triOk;            Val: '10000000000000'),                            // 4026: Arguments[62] min Arguments[58]
    (Info: triOk;            Val: '10000000000000'),                            // 4027: Arguments[62] min Arguments[59]
    (Info: triOk;            Val: '10000000000000'),                            // 4028: Arguments[62] min Arguments[60]
    (Info: triOk;            Val: '10000000000000'),                            // 4029: Arguments[62] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 4030: Arguments[62] min Arguments[62]
    (Info: triOk;            Val: '10000000000000'),                            // 4031: Arguments[62] min Arguments[63]
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      // 4032: Arguments[63] min Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        // 4033: Arguments[63] min Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           // 4034: Arguments[63] min Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            // 4035: Arguments[63] min Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             // 4036: Arguments[63] min Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              // 4037: Arguments[63] min Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                // 4038: Arguments[63] min Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  // 4039: Arguments[63] min Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  // 4040: Arguments[63] min Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   // 4041: Arguments[63] min Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   // 4042: Arguments[63] min Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   // 4043: Arguments[63] min Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    // 4044: Arguments[63] min Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    // 4045: Arguments[63] min Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     // 4046: Arguments[63] min Arguments[14]
    (Info: triOk;            Val: '-100'),                                      // 4047: Arguments[63] min Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 4048: Arguments[63] min Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 4049: Arguments[63] min Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 4050: Arguments[63] min Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 4051: Arguments[63] min Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 4052: Arguments[63] min Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 4053: Arguments[63] min Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 4054: Arguments[63] min Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 4055: Arguments[63] min Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 4056: Arguments[63] min Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 4057: Arguments[63] min Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 4058: Arguments[63] min Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 4059: Arguments[63] min Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 4060: Arguments[63] min Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 4061: Arguments[63] min Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 4062: Arguments[63] min Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 4063: Arguments[63] min Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 4064: Arguments[63] min Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 4065: Arguments[63] min Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 4066: Arguments[63] min Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 4067: Arguments[63] min Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 4068: Arguments[63] min Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 4069: Arguments[63] min Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 4070: Arguments[63] min Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 4071: Arguments[63] min Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 4072: Arguments[63] min Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 4073: Arguments[63] min Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 4074: Arguments[63] min Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 4075: Arguments[63] min Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 4076: Arguments[63] min Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 4077: Arguments[63] min Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 4078: Arguments[63] min Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 4079: Arguments[63] min Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 4080: Arguments[63] min Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 4081: Arguments[63] min Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 4082: Arguments[63] min Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 4083: Arguments[63] min Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 4084: Arguments[63] min Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 4085: Arguments[63] min Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 4086: Arguments[63] min Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 4087: Arguments[63] min Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 4088: Arguments[63] min Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 4089: Arguments[63] min Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 4090: Arguments[63] min Arguments[58]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4091: Arguments[63] min Arguments[59]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4092: Arguments[63] min Arguments[60]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4093: Arguments[63] min Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 4094: Arguments[63] min Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000')                         // 4095: Arguments[63] min Arguments[63]
  );

  MaxResults: array[0..ArgumentCount * ArgumentCount - 1] of TTestResult =
  (
    (Info: triOk;            Val: '-158571582985157323973932567063203986538' + 
                                  '4960'),                                      //    0: Arguments[0] max Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //    1: Arguments[0] max Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //    2: Arguments[0] max Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //    3: Arguments[0] max Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //    4: Arguments[0] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //    5: Arguments[0] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //    6: Arguments[0] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //    7: Arguments[0] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //    8: Arguments[0] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //    9: Arguments[0] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //   10: Arguments[0] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //   11: Arguments[0] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //   12: Arguments[0] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //   13: Arguments[0] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //   14: Arguments[0] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //   15: Arguments[0] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //   16: Arguments[0] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //   17: Arguments[0] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //   18: Arguments[0] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //   19: Arguments[0] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //   20: Arguments[0] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //   21: Arguments[0] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //   22: Arguments[0] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //   23: Arguments[0] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //   24: Arguments[0] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //   25: Arguments[0] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //   26: Arguments[0] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //   27: Arguments[0] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //   28: Arguments[0] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //   29: Arguments[0] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //   30: Arguments[0] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //   31: Arguments[0] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //   32: Arguments[0] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //   33: Arguments[0] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //   34: Arguments[0] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //   35: Arguments[0] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //   36: Arguments[0] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //   37: Arguments[0] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //   38: Arguments[0] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //   39: Arguments[0] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //   40: Arguments[0] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //   41: Arguments[0] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //   42: Arguments[0] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //   43: Arguments[0] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //   44: Arguments[0] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //   45: Arguments[0] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //   46: Arguments[0] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //   47: Arguments[0] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //   48: Arguments[0] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //   49: Arguments[0] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //   50: Arguments[0] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //   51: Arguments[0] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //   52: Arguments[0] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //   53: Arguments[0] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //   54: Arguments[0] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //   55: Arguments[0] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //   56: Arguments[0] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //   57: Arguments[0] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //   58: Arguments[0] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //   59: Arguments[0] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //   60: Arguments[0] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //   61: Arguments[0] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //   62: Arguments[0] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //   63: Arguments[0] max Arguments[63]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   64: Arguments[1] max Arguments[0]
    (Info: triOk;            Val: '-180349654468097385635588541938837152071' + 
                                  '67'),                                        //   65: Arguments[1] max Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //   66: Arguments[1] max Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //   67: Arguments[1] max Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //   68: Arguments[1] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //   69: Arguments[1] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //   70: Arguments[1] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //   71: Arguments[1] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //   72: Arguments[1] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //   73: Arguments[1] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //   74: Arguments[1] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //   75: Arguments[1] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //   76: Arguments[1] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //   77: Arguments[1] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //   78: Arguments[1] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //   79: Arguments[1] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //   80: Arguments[1] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //   81: Arguments[1] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //   82: Arguments[1] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //   83: Arguments[1] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //   84: Arguments[1] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //   85: Arguments[1] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //   86: Arguments[1] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //   87: Arguments[1] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //   88: Arguments[1] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //   89: Arguments[1] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //   90: Arguments[1] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //   91: Arguments[1] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //   92: Arguments[1] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //   93: Arguments[1] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //   94: Arguments[1] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //   95: Arguments[1] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //   96: Arguments[1] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //   97: Arguments[1] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //   98: Arguments[1] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //   99: Arguments[1] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  100: Arguments[1] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  101: Arguments[1] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  102: Arguments[1] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  103: Arguments[1] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  104: Arguments[1] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  105: Arguments[1] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  106: Arguments[1] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  107: Arguments[1] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  108: Arguments[1] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  109: Arguments[1] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  110: Arguments[1] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  111: Arguments[1] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  112: Arguments[1] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  113: Arguments[1] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  114: Arguments[1] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  115: Arguments[1] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  116: Arguments[1] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  117: Arguments[1] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  118: Arguments[1] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  119: Arguments[1] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  120: Arguments[1] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  121: Arguments[1] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  122: Arguments[1] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  123: Arguments[1] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  124: Arguments[1] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  125: Arguments[1] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  126: Arguments[1] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  127: Arguments[1] max Arguments[63]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  128: Arguments[2] max Arguments[0]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  129: Arguments[2] max Arguments[1]
    (Info: triOk;            Val: '-779879232593610263927748006161'),           //  130: Arguments[2] max Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  131: Arguments[2] max Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  132: Arguments[2] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  133: Arguments[2] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  134: Arguments[2] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  135: Arguments[2] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  136: Arguments[2] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  137: Arguments[2] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  138: Arguments[2] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  139: Arguments[2] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  140: Arguments[2] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  141: Arguments[2] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  142: Arguments[2] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  143: Arguments[2] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  144: Arguments[2] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  145: Arguments[2] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  146: Arguments[2] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  147: Arguments[2] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  148: Arguments[2] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  149: Arguments[2] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  150: Arguments[2] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  151: Arguments[2] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  152: Arguments[2] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  153: Arguments[2] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  154: Arguments[2] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  155: Arguments[2] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  156: Arguments[2] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  157: Arguments[2] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  158: Arguments[2] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  159: Arguments[2] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  160: Arguments[2] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  161: Arguments[2] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  162: Arguments[2] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  163: Arguments[2] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  164: Arguments[2] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  165: Arguments[2] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  166: Arguments[2] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  167: Arguments[2] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  168: Arguments[2] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  169: Arguments[2] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  170: Arguments[2] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  171: Arguments[2] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  172: Arguments[2] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  173: Arguments[2] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  174: Arguments[2] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  175: Arguments[2] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  176: Arguments[2] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  177: Arguments[2] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  178: Arguments[2] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  179: Arguments[2] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  180: Arguments[2] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  181: Arguments[2] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  182: Arguments[2] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  183: Arguments[2] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  184: Arguments[2] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  185: Arguments[2] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  186: Arguments[2] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  187: Arguments[2] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  188: Arguments[2] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  189: Arguments[2] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  190: Arguments[2] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  191: Arguments[2] max Arguments[63]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  192: Arguments[3] max Arguments[0]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  193: Arguments[3] max Arguments[1]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  194: Arguments[3] max Arguments[2]
    (Info: triOk;            Val: '-82261793876695338192268955270'),            //  195: Arguments[3] max Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  196: Arguments[3] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  197: Arguments[3] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  198: Arguments[3] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  199: Arguments[3] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  200: Arguments[3] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  201: Arguments[3] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  202: Arguments[3] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  203: Arguments[3] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  204: Arguments[3] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  205: Arguments[3] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  206: Arguments[3] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  207: Arguments[3] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  208: Arguments[3] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  209: Arguments[3] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  210: Arguments[3] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  211: Arguments[3] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  212: Arguments[3] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  213: Arguments[3] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  214: Arguments[3] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  215: Arguments[3] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  216: Arguments[3] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  217: Arguments[3] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  218: Arguments[3] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  219: Arguments[3] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  220: Arguments[3] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  221: Arguments[3] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  222: Arguments[3] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  223: Arguments[3] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  224: Arguments[3] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  225: Arguments[3] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  226: Arguments[3] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  227: Arguments[3] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  228: Arguments[3] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  229: Arguments[3] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  230: Arguments[3] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  231: Arguments[3] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  232: Arguments[3] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  233: Arguments[3] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  234: Arguments[3] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  235: Arguments[3] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  236: Arguments[3] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  237: Arguments[3] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  238: Arguments[3] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  239: Arguments[3] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  240: Arguments[3] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  241: Arguments[3] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  242: Arguments[3] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  243: Arguments[3] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  244: Arguments[3] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  245: Arguments[3] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  246: Arguments[3] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  247: Arguments[3] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  248: Arguments[3] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  249: Arguments[3] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  250: Arguments[3] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  251: Arguments[3] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  252: Arguments[3] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  253: Arguments[3] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  254: Arguments[3] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  255: Arguments[3] max Arguments[63]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  256: Arguments[4] max Arguments[0]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  257: Arguments[4] max Arguments[1]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  258: Arguments[4] max Arguments[2]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  259: Arguments[4] max Arguments[3]
    (Info: triOk;            Val: '-8840587743209014991486176890'),             //  260: Arguments[4] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  261: Arguments[4] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  262: Arguments[4] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  263: Arguments[4] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  264: Arguments[4] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  265: Arguments[4] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  266: Arguments[4] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  267: Arguments[4] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  268: Arguments[4] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  269: Arguments[4] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  270: Arguments[4] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  271: Arguments[4] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  272: Arguments[4] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  273: Arguments[4] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  274: Arguments[4] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  275: Arguments[4] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  276: Arguments[4] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  277: Arguments[4] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  278: Arguments[4] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  279: Arguments[4] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  280: Arguments[4] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  281: Arguments[4] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  282: Arguments[4] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  283: Arguments[4] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  284: Arguments[4] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  285: Arguments[4] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  286: Arguments[4] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  287: Arguments[4] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  288: Arguments[4] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  289: Arguments[4] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  290: Arguments[4] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  291: Arguments[4] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  292: Arguments[4] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  293: Arguments[4] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  294: Arguments[4] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  295: Arguments[4] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  296: Arguments[4] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  297: Arguments[4] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  298: Arguments[4] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  299: Arguments[4] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  300: Arguments[4] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  301: Arguments[4] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  302: Arguments[4] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  303: Arguments[4] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  304: Arguments[4] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  305: Arguments[4] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  306: Arguments[4] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  307: Arguments[4] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  308: Arguments[4] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  309: Arguments[4] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  310: Arguments[4] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  311: Arguments[4] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  312: Arguments[4] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  313: Arguments[4] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  314: Arguments[4] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  315: Arguments[4] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  316: Arguments[4] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  317: Arguments[4] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  318: Arguments[4] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  319: Arguments[4] max Arguments[63]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  320: Arguments[5] max Arguments[0]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  321: Arguments[5] max Arguments[1]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  322: Arguments[5] max Arguments[2]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  323: Arguments[5] max Arguments[3]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  324: Arguments[5] max Arguments[4]
    (Info: triOk;            Val: '-499680576774082292410113726'),              //  325: Arguments[5] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  326: Arguments[5] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  327: Arguments[5] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  328: Arguments[5] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  329: Arguments[5] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  330: Arguments[5] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  331: Arguments[5] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  332: Arguments[5] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  333: Arguments[5] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  334: Arguments[5] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  335: Arguments[5] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  336: Arguments[5] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  337: Arguments[5] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  338: Arguments[5] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  339: Arguments[5] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  340: Arguments[5] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  341: Arguments[5] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  342: Arguments[5] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  343: Arguments[5] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  344: Arguments[5] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  345: Arguments[5] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  346: Arguments[5] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  347: Arguments[5] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  348: Arguments[5] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  349: Arguments[5] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  350: Arguments[5] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  351: Arguments[5] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  352: Arguments[5] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  353: Arguments[5] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  354: Arguments[5] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  355: Arguments[5] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  356: Arguments[5] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  357: Arguments[5] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  358: Arguments[5] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  359: Arguments[5] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  360: Arguments[5] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  361: Arguments[5] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  362: Arguments[5] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  363: Arguments[5] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  364: Arguments[5] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  365: Arguments[5] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  366: Arguments[5] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  367: Arguments[5] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  368: Arguments[5] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  369: Arguments[5] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  370: Arguments[5] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  371: Arguments[5] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  372: Arguments[5] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  373: Arguments[5] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  374: Arguments[5] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  375: Arguments[5] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  376: Arguments[5] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  377: Arguments[5] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  378: Arguments[5] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  379: Arguments[5] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  380: Arguments[5] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  381: Arguments[5] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  382: Arguments[5] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  383: Arguments[5] max Arguments[63]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  384: Arguments[6] max Arguments[0]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  385: Arguments[6] max Arguments[1]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  386: Arguments[6] max Arguments[2]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  387: Arguments[6] max Arguments[3]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  388: Arguments[6] max Arguments[4]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  389: Arguments[6] max Arguments[5]
    (Info: triOk;            Val: '-7096499840976817344578600'),                //  390: Arguments[6] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  391: Arguments[6] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  392: Arguments[6] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  393: Arguments[6] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  394: Arguments[6] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  395: Arguments[6] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  396: Arguments[6] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  397: Arguments[6] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  398: Arguments[6] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  399: Arguments[6] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  400: Arguments[6] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  401: Arguments[6] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  402: Arguments[6] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  403: Arguments[6] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  404: Arguments[6] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  405: Arguments[6] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  406: Arguments[6] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  407: Arguments[6] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  408: Arguments[6] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  409: Arguments[6] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  410: Arguments[6] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  411: Arguments[6] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  412: Arguments[6] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  413: Arguments[6] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  414: Arguments[6] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  415: Arguments[6] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  416: Arguments[6] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  417: Arguments[6] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  418: Arguments[6] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  419: Arguments[6] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  420: Arguments[6] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  421: Arguments[6] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  422: Arguments[6] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  423: Arguments[6] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  424: Arguments[6] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  425: Arguments[6] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  426: Arguments[6] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  427: Arguments[6] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  428: Arguments[6] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  429: Arguments[6] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  430: Arguments[6] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  431: Arguments[6] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  432: Arguments[6] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  433: Arguments[6] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  434: Arguments[6] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  435: Arguments[6] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  436: Arguments[6] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  437: Arguments[6] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  438: Arguments[6] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  439: Arguments[6] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  440: Arguments[6] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  441: Arguments[6] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  442: Arguments[6] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  443: Arguments[6] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  444: Arguments[6] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  445: Arguments[6] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  446: Arguments[6] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  447: Arguments[6] max Arguments[63]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  448: Arguments[7] max Arguments[0]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  449: Arguments[7] max Arguments[1]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  450: Arguments[7] max Arguments[2]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  451: Arguments[7] max Arguments[3]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  452: Arguments[7] max Arguments[4]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  453: Arguments[7] max Arguments[5]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  454: Arguments[7] max Arguments[6]
    (Info: triOk;            Val: '-74287305190053403856772'),                  //  455: Arguments[7] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  456: Arguments[7] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  457: Arguments[7] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  458: Arguments[7] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  459: Arguments[7] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  460: Arguments[7] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  461: Arguments[7] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  462: Arguments[7] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  463: Arguments[7] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  464: Arguments[7] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  465: Arguments[7] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  466: Arguments[7] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  467: Arguments[7] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  468: Arguments[7] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  469: Arguments[7] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  470: Arguments[7] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  471: Arguments[7] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  472: Arguments[7] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  473: Arguments[7] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  474: Arguments[7] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  475: Arguments[7] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  476: Arguments[7] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  477: Arguments[7] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  478: Arguments[7] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  479: Arguments[7] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  480: Arguments[7] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  481: Arguments[7] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  482: Arguments[7] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  483: Arguments[7] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  484: Arguments[7] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  485: Arguments[7] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  486: Arguments[7] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  487: Arguments[7] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  488: Arguments[7] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  489: Arguments[7] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  490: Arguments[7] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  491: Arguments[7] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  492: Arguments[7] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  493: Arguments[7] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  494: Arguments[7] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  495: Arguments[7] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  496: Arguments[7] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  497: Arguments[7] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  498: Arguments[7] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  499: Arguments[7] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  500: Arguments[7] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  501: Arguments[7] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  502: Arguments[7] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  503: Arguments[7] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  504: Arguments[7] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  505: Arguments[7] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  506: Arguments[7] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  507: Arguments[7] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  508: Arguments[7] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  509: Arguments[7] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  510: Arguments[7] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  511: Arguments[7] max Arguments[63]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  512: Arguments[8] max Arguments[0]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  513: Arguments[8] max Arguments[1]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  514: Arguments[8] max Arguments[2]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  515: Arguments[8] max Arguments[3]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  516: Arguments[8] max Arguments[4]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  517: Arguments[8] max Arguments[5]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  518: Arguments[8] max Arguments[6]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  519: Arguments[8] max Arguments[7]
    (Info: triOk;            Val: '-13416290973509623768074'),                  //  520: Arguments[8] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  521: Arguments[8] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  522: Arguments[8] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  523: Arguments[8] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  524: Arguments[8] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  525: Arguments[8] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  526: Arguments[8] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  527: Arguments[8] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  528: Arguments[8] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  529: Arguments[8] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  530: Arguments[8] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  531: Arguments[8] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  532: Arguments[8] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  533: Arguments[8] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  534: Arguments[8] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  535: Arguments[8] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  536: Arguments[8] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  537: Arguments[8] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  538: Arguments[8] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  539: Arguments[8] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  540: Arguments[8] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  541: Arguments[8] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  542: Arguments[8] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  543: Arguments[8] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  544: Arguments[8] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  545: Arguments[8] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  546: Arguments[8] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  547: Arguments[8] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  548: Arguments[8] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  549: Arguments[8] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  550: Arguments[8] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  551: Arguments[8] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  552: Arguments[8] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  553: Arguments[8] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  554: Arguments[8] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  555: Arguments[8] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  556: Arguments[8] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  557: Arguments[8] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  558: Arguments[8] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  559: Arguments[8] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  560: Arguments[8] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  561: Arguments[8] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  562: Arguments[8] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  563: Arguments[8] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  564: Arguments[8] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  565: Arguments[8] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  566: Arguments[8] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  567: Arguments[8] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  568: Arguments[8] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  569: Arguments[8] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  570: Arguments[8] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  571: Arguments[8] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  572: Arguments[8] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  573: Arguments[8] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  574: Arguments[8] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  575: Arguments[8] max Arguments[63]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  576: Arguments[9] max Arguments[0]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  577: Arguments[9] max Arguments[1]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  578: Arguments[9] max Arguments[2]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  579: Arguments[9] max Arguments[3]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  580: Arguments[9] max Arguments[4]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  581: Arguments[9] max Arguments[5]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  582: Arguments[9] max Arguments[6]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  583: Arguments[9] max Arguments[7]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  584: Arguments[9] max Arguments[8]
    (Info: triOk;            Val: '-8271324858169862655834'),                   //  585: Arguments[9] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  586: Arguments[9] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  587: Arguments[9] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  588: Arguments[9] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  589: Arguments[9] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  590: Arguments[9] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  591: Arguments[9] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  592: Arguments[9] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  593: Arguments[9] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  594: Arguments[9] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  595: Arguments[9] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  596: Arguments[9] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  597: Arguments[9] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  598: Arguments[9] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  599: Arguments[9] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  600: Arguments[9] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  601: Arguments[9] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  602: Arguments[9] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  603: Arguments[9] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  604: Arguments[9] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  605: Arguments[9] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  606: Arguments[9] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  607: Arguments[9] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  608: Arguments[9] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  609: Arguments[9] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  610: Arguments[9] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  611: Arguments[9] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  612: Arguments[9] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  613: Arguments[9] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  614: Arguments[9] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  615: Arguments[9] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  616: Arguments[9] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  617: Arguments[9] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  618: Arguments[9] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  619: Arguments[9] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  620: Arguments[9] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  621: Arguments[9] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  622: Arguments[9] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  623: Arguments[9] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  624: Arguments[9] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  625: Arguments[9] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  626: Arguments[9] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  627: Arguments[9] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  628: Arguments[9] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  629: Arguments[9] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  630: Arguments[9] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  631: Arguments[9] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  632: Arguments[9] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  633: Arguments[9] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  634: Arguments[9] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  635: Arguments[9] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  636: Arguments[9] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  637: Arguments[9] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  638: Arguments[9] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  639: Arguments[9] max Arguments[63]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  640: Arguments[10] max Arguments[0]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  641: Arguments[10] max Arguments[1]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  642: Arguments[10] max Arguments[2]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  643: Arguments[10] max Arguments[3]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  644: Arguments[10] max Arguments[4]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  645: Arguments[10] max Arguments[5]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  646: Arguments[10] max Arguments[6]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  647: Arguments[10] max Arguments[7]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  648: Arguments[10] max Arguments[8]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  649: Arguments[10] max Arguments[9]
    (Info: triOk;            Val: '-1673271581108184934182'),                   //  650: Arguments[10] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  651: Arguments[10] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  652: Arguments[10] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  653: Arguments[10] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  654: Arguments[10] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  655: Arguments[10] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  656: Arguments[10] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  657: Arguments[10] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  658: Arguments[10] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  659: Arguments[10] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  660: Arguments[10] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  661: Arguments[10] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  662: Arguments[10] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  663: Arguments[10] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  664: Arguments[10] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  665: Arguments[10] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  666: Arguments[10] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  667: Arguments[10] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  668: Arguments[10] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  669: Arguments[10] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  670: Arguments[10] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  671: Arguments[10] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  672: Arguments[10] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  673: Arguments[10] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  674: Arguments[10] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  675: Arguments[10] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  676: Arguments[10] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  677: Arguments[10] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  678: Arguments[10] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  679: Arguments[10] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  680: Arguments[10] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  681: Arguments[10] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  682: Arguments[10] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  683: Arguments[10] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  684: Arguments[10] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  685: Arguments[10] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  686: Arguments[10] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  687: Arguments[10] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  688: Arguments[10] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  689: Arguments[10] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  690: Arguments[10] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  691: Arguments[10] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  692: Arguments[10] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  693: Arguments[10] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  694: Arguments[10] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  695: Arguments[10] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  696: Arguments[10] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  697: Arguments[10] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  698: Arguments[10] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  699: Arguments[10] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  700: Arguments[10] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  701: Arguments[10] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  702: Arguments[10] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  703: Arguments[10] max Arguments[63]
    (Info: triOk;            Val: '-100000'),                                   //  704: Arguments[11] max Arguments[0]
    (Info: triOk;            Val: '-100000'),                                   //  705: Arguments[11] max Arguments[1]
    (Info: triOk;            Val: '-100000'),                                   //  706: Arguments[11] max Arguments[2]
    (Info: triOk;            Val: '-100000'),                                   //  707: Arguments[11] max Arguments[3]
    (Info: triOk;            Val: '-100000'),                                   //  708: Arguments[11] max Arguments[4]
    (Info: triOk;            Val: '-100000'),                                   //  709: Arguments[11] max Arguments[5]
    (Info: triOk;            Val: '-100000'),                                   //  710: Arguments[11] max Arguments[6]
    (Info: triOk;            Val: '-100000'),                                   //  711: Arguments[11] max Arguments[7]
    (Info: triOk;            Val: '-100000'),                                   //  712: Arguments[11] max Arguments[8]
    (Info: triOk;            Val: '-100000'),                                   //  713: Arguments[11] max Arguments[9]
    (Info: triOk;            Val: '-100000'),                                   //  714: Arguments[11] max Arguments[10]
    (Info: triOk;            Val: '-100000'),                                   //  715: Arguments[11] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  716: Arguments[11] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  717: Arguments[11] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  718: Arguments[11] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  719: Arguments[11] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  720: Arguments[11] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  721: Arguments[11] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  722: Arguments[11] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  723: Arguments[11] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  724: Arguments[11] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  725: Arguments[11] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  726: Arguments[11] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  727: Arguments[11] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  728: Arguments[11] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  729: Arguments[11] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  730: Arguments[11] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  731: Arguments[11] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  732: Arguments[11] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  733: Arguments[11] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  734: Arguments[11] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  735: Arguments[11] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  736: Arguments[11] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  737: Arguments[11] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  738: Arguments[11] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  739: Arguments[11] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  740: Arguments[11] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  741: Arguments[11] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  742: Arguments[11] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  743: Arguments[11] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  744: Arguments[11] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  745: Arguments[11] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  746: Arguments[11] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  747: Arguments[11] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  748: Arguments[11] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  749: Arguments[11] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  750: Arguments[11] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  751: Arguments[11] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  752: Arguments[11] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  753: Arguments[11] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  754: Arguments[11] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  755: Arguments[11] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  756: Arguments[11] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  757: Arguments[11] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  758: Arguments[11] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  759: Arguments[11] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  760: Arguments[11] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  761: Arguments[11] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  762: Arguments[11] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  763: Arguments[11] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  764: Arguments[11] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  765: Arguments[11] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  766: Arguments[11] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  767: Arguments[11] max Arguments[63]
    (Info: triOk;            Val: '-45808'),                                    //  768: Arguments[12] max Arguments[0]
    (Info: triOk;            Val: '-45808'),                                    //  769: Arguments[12] max Arguments[1]
    (Info: triOk;            Val: '-45808'),                                    //  770: Arguments[12] max Arguments[2]
    (Info: triOk;            Val: '-45808'),                                    //  771: Arguments[12] max Arguments[3]
    (Info: triOk;            Val: '-45808'),                                    //  772: Arguments[12] max Arguments[4]
    (Info: triOk;            Val: '-45808'),                                    //  773: Arguments[12] max Arguments[5]
    (Info: triOk;            Val: '-45808'),                                    //  774: Arguments[12] max Arguments[6]
    (Info: triOk;            Val: '-45808'),                                    //  775: Arguments[12] max Arguments[7]
    (Info: triOk;            Val: '-45808'),                                    //  776: Arguments[12] max Arguments[8]
    (Info: triOk;            Val: '-45808'),                                    //  777: Arguments[12] max Arguments[9]
    (Info: triOk;            Val: '-45808'),                                    //  778: Arguments[12] max Arguments[10]
    (Info: triOk;            Val: '-45808'),                                    //  779: Arguments[12] max Arguments[11]
    (Info: triOk;            Val: '-45808'),                                    //  780: Arguments[12] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  781: Arguments[12] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  782: Arguments[12] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  783: Arguments[12] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  784: Arguments[12] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  785: Arguments[12] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  786: Arguments[12] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  787: Arguments[12] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  788: Arguments[12] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  789: Arguments[12] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  790: Arguments[12] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  791: Arguments[12] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  792: Arguments[12] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  793: Arguments[12] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  794: Arguments[12] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  795: Arguments[12] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  796: Arguments[12] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  797: Arguments[12] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  798: Arguments[12] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  799: Arguments[12] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  800: Arguments[12] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  801: Arguments[12] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  802: Arguments[12] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  803: Arguments[12] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  804: Arguments[12] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  805: Arguments[12] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  806: Arguments[12] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  807: Arguments[12] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  808: Arguments[12] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  809: Arguments[12] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  810: Arguments[12] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  811: Arguments[12] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  812: Arguments[12] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  813: Arguments[12] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  814: Arguments[12] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  815: Arguments[12] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  816: Arguments[12] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  817: Arguments[12] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  818: Arguments[12] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  819: Arguments[12] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  820: Arguments[12] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  821: Arguments[12] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  822: Arguments[12] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  823: Arguments[12] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  824: Arguments[12] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  825: Arguments[12] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  826: Arguments[12] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  827: Arguments[12] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  828: Arguments[12] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  829: Arguments[12] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  830: Arguments[12] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  831: Arguments[12] max Arguments[63]
    (Info: triOk;            Val: '-10000'),                                    //  832: Arguments[13] max Arguments[0]
    (Info: triOk;            Val: '-10000'),                                    //  833: Arguments[13] max Arguments[1]
    (Info: triOk;            Val: '-10000'),                                    //  834: Arguments[13] max Arguments[2]
    (Info: triOk;            Val: '-10000'),                                    //  835: Arguments[13] max Arguments[3]
    (Info: triOk;            Val: '-10000'),                                    //  836: Arguments[13] max Arguments[4]
    (Info: triOk;            Val: '-10000'),                                    //  837: Arguments[13] max Arguments[5]
    (Info: triOk;            Val: '-10000'),                                    //  838: Arguments[13] max Arguments[6]
    (Info: triOk;            Val: '-10000'),                                    //  839: Arguments[13] max Arguments[7]
    (Info: triOk;            Val: '-10000'),                                    //  840: Arguments[13] max Arguments[8]
    (Info: triOk;            Val: '-10000'),                                    //  841: Arguments[13] max Arguments[9]
    (Info: triOk;            Val: '-10000'),                                    //  842: Arguments[13] max Arguments[10]
    (Info: triOk;            Val: '-10000'),                                    //  843: Arguments[13] max Arguments[11]
    (Info: triOk;            Val: '-10000'),                                    //  844: Arguments[13] max Arguments[12]
    (Info: triOk;            Val: '-10000'),                                    //  845: Arguments[13] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  846: Arguments[13] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  847: Arguments[13] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  848: Arguments[13] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  849: Arguments[13] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  850: Arguments[13] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  851: Arguments[13] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  852: Arguments[13] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  853: Arguments[13] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  854: Arguments[13] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  855: Arguments[13] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  856: Arguments[13] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  857: Arguments[13] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  858: Arguments[13] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  859: Arguments[13] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  860: Arguments[13] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  861: Arguments[13] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  862: Arguments[13] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  863: Arguments[13] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  864: Arguments[13] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  865: Arguments[13] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  866: Arguments[13] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  867: Arguments[13] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  868: Arguments[13] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  869: Arguments[13] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  870: Arguments[13] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  871: Arguments[13] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  872: Arguments[13] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  873: Arguments[13] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  874: Arguments[13] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  875: Arguments[13] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  876: Arguments[13] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  877: Arguments[13] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  878: Arguments[13] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  879: Arguments[13] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  880: Arguments[13] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  881: Arguments[13] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  882: Arguments[13] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  883: Arguments[13] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  884: Arguments[13] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  885: Arguments[13] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  886: Arguments[13] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  887: Arguments[13] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  888: Arguments[13] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  889: Arguments[13] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  890: Arguments[13] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  891: Arguments[13] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  892: Arguments[13] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  893: Arguments[13] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  894: Arguments[13] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  895: Arguments[13] max Arguments[63]
    (Info: triOk;            Val: '-1000'),                                     //  896: Arguments[14] max Arguments[0]
    (Info: triOk;            Val: '-1000'),                                     //  897: Arguments[14] max Arguments[1]
    (Info: triOk;            Val: '-1000'),                                     //  898: Arguments[14] max Arguments[2]
    (Info: triOk;            Val: '-1000'),                                     //  899: Arguments[14] max Arguments[3]
    (Info: triOk;            Val: '-1000'),                                     //  900: Arguments[14] max Arguments[4]
    (Info: triOk;            Val: '-1000'),                                     //  901: Arguments[14] max Arguments[5]
    (Info: triOk;            Val: '-1000'),                                     //  902: Arguments[14] max Arguments[6]
    (Info: triOk;            Val: '-1000'),                                     //  903: Arguments[14] max Arguments[7]
    (Info: triOk;            Val: '-1000'),                                     //  904: Arguments[14] max Arguments[8]
    (Info: triOk;            Val: '-1000'),                                     //  905: Arguments[14] max Arguments[9]
    (Info: triOk;            Val: '-1000'),                                     //  906: Arguments[14] max Arguments[10]
    (Info: triOk;            Val: '-1000'),                                     //  907: Arguments[14] max Arguments[11]
    (Info: triOk;            Val: '-1000'),                                     //  908: Arguments[14] max Arguments[12]
    (Info: triOk;            Val: '-1000'),                                     //  909: Arguments[14] max Arguments[13]
    (Info: triOk;            Val: '-1000'),                                     //  910: Arguments[14] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  911: Arguments[14] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  912: Arguments[14] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  913: Arguments[14] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  914: Arguments[14] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  915: Arguments[14] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  916: Arguments[14] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  917: Arguments[14] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  918: Arguments[14] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  919: Arguments[14] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  920: Arguments[14] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  921: Arguments[14] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  922: Arguments[14] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  923: Arguments[14] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  924: Arguments[14] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  925: Arguments[14] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  926: Arguments[14] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  927: Arguments[14] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  928: Arguments[14] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  929: Arguments[14] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  930: Arguments[14] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  931: Arguments[14] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  932: Arguments[14] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  933: Arguments[14] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  934: Arguments[14] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  935: Arguments[14] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   //  936: Arguments[14] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   //  937: Arguments[14] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   //  938: Arguments[14] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 //  939: Arguments[14] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               //  940: Arguments[14] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              //  941: Arguments[14] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              //  942: Arguments[14] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             //  943: Arguments[14] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             //  944: Arguments[14] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             //  945: Arguments[14] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            //  946: Arguments[14] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            //  947: Arguments[14] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        //  948: Arguments[14] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       //  949: Arguments[14] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    //  950: Arguments[14] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    //  951: Arguments[14] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   //  952: Arguments[14] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         //  953: Arguments[14] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       //  954: Arguments[14] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            //  955: Arguments[14] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          //  956: Arguments[14] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     //  957: Arguments[14] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            //  958: Arguments[14] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        //  959: Arguments[14] max Arguments[63]
    (Info: triOk;            Val: '-100'),                                      //  960: Arguments[15] max Arguments[0]
    (Info: triOk;            Val: '-100'),                                      //  961: Arguments[15] max Arguments[1]
    (Info: triOk;            Val: '-100'),                                      //  962: Arguments[15] max Arguments[2]
    (Info: triOk;            Val: '-100'),                                      //  963: Arguments[15] max Arguments[3]
    (Info: triOk;            Val: '-100'),                                      //  964: Arguments[15] max Arguments[4]
    (Info: triOk;            Val: '-100'),                                      //  965: Arguments[15] max Arguments[5]
    (Info: triOk;            Val: '-100'),                                      //  966: Arguments[15] max Arguments[6]
    (Info: triOk;            Val: '-100'),                                      //  967: Arguments[15] max Arguments[7]
    (Info: triOk;            Val: '-100'),                                      //  968: Arguments[15] max Arguments[8]
    (Info: triOk;            Val: '-100'),                                      //  969: Arguments[15] max Arguments[9]
    (Info: triOk;            Val: '-100'),                                      //  970: Arguments[15] max Arguments[10]
    (Info: triOk;            Val: '-100'),                                      //  971: Arguments[15] max Arguments[11]
    (Info: triOk;            Val: '-100'),                                      //  972: Arguments[15] max Arguments[12]
    (Info: triOk;            Val: '-100'),                                      //  973: Arguments[15] max Arguments[13]
    (Info: triOk;            Val: '-100'),                                      //  974: Arguments[15] max Arguments[14]
    (Info: triOk;            Val: '-100'),                                      //  975: Arguments[15] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       //  976: Arguments[15] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       //  977: Arguments[15] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        //  978: Arguments[15] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        //  979: Arguments[15] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        //  980: Arguments[15] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         //  981: Arguments[15] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         //  982: Arguments[15] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         //  983: Arguments[15] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         //  984: Arguments[15] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        //  985: Arguments[15] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       //  986: Arguments[15] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       //  987: Arguments[15] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       //  988: Arguments[15] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      //  989: Arguments[15] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     //  990: Arguments[15] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    //  991: Arguments[15] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   //  992: Arguments[15] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       //  993: Arguments[15] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       //  994: Arguments[15] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       //  995: Arguments[15] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     //  996: Arguments[15] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     //  997: Arguments[15] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    //  998: Arguments[15] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    //  999: Arguments[15] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1000: Arguments[15] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1001: Arguments[15] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1002: Arguments[15] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1003: Arguments[15] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1004: Arguments[15] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1005: Arguments[15] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1006: Arguments[15] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1007: Arguments[15] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1008: Arguments[15] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1009: Arguments[15] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1010: Arguments[15] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1011: Arguments[15] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1012: Arguments[15] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1013: Arguments[15] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1014: Arguments[15] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1015: Arguments[15] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1016: Arguments[15] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1017: Arguments[15] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1018: Arguments[15] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1019: Arguments[15] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1020: Arguments[15] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1021: Arguments[15] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1022: Arguments[15] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1023: Arguments[15] max Arguments[63]
    (Info: triOk;            Val: '-56'),                                       // 1024: Arguments[16] max Arguments[0]
    (Info: triOk;            Val: '-56'),                                       // 1025: Arguments[16] max Arguments[1]
    (Info: triOk;            Val: '-56'),                                       // 1026: Arguments[16] max Arguments[2]
    (Info: triOk;            Val: '-56'),                                       // 1027: Arguments[16] max Arguments[3]
    (Info: triOk;            Val: '-56'),                                       // 1028: Arguments[16] max Arguments[4]
    (Info: triOk;            Val: '-56'),                                       // 1029: Arguments[16] max Arguments[5]
    (Info: triOk;            Val: '-56'),                                       // 1030: Arguments[16] max Arguments[6]
    (Info: triOk;            Val: '-56'),                                       // 1031: Arguments[16] max Arguments[7]
    (Info: triOk;            Val: '-56'),                                       // 1032: Arguments[16] max Arguments[8]
    (Info: triOk;            Val: '-56'),                                       // 1033: Arguments[16] max Arguments[9]
    (Info: triOk;            Val: '-56'),                                       // 1034: Arguments[16] max Arguments[10]
    (Info: triOk;            Val: '-56'),                                       // 1035: Arguments[16] max Arguments[11]
    (Info: triOk;            Val: '-56'),                                       // 1036: Arguments[16] max Arguments[12]
    (Info: triOk;            Val: '-56'),                                       // 1037: Arguments[16] max Arguments[13]
    (Info: triOk;            Val: '-56'),                                       // 1038: Arguments[16] max Arguments[14]
    (Info: triOk;            Val: '-56'),                                       // 1039: Arguments[16] max Arguments[15]
    (Info: triOk;            Val: '-56'),                                       // 1040: Arguments[16] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1041: Arguments[16] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1042: Arguments[16] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1043: Arguments[16] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1044: Arguments[16] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1045: Arguments[16] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1046: Arguments[16] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1047: Arguments[16] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1048: Arguments[16] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1049: Arguments[16] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1050: Arguments[16] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1051: Arguments[16] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1052: Arguments[16] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1053: Arguments[16] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1054: Arguments[16] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1055: Arguments[16] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1056: Arguments[16] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1057: Arguments[16] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1058: Arguments[16] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1059: Arguments[16] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1060: Arguments[16] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1061: Arguments[16] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1062: Arguments[16] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1063: Arguments[16] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1064: Arguments[16] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1065: Arguments[16] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1066: Arguments[16] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1067: Arguments[16] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1068: Arguments[16] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1069: Arguments[16] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1070: Arguments[16] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1071: Arguments[16] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1072: Arguments[16] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1073: Arguments[16] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1074: Arguments[16] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1075: Arguments[16] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1076: Arguments[16] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1077: Arguments[16] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1078: Arguments[16] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1079: Arguments[16] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1080: Arguments[16] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1081: Arguments[16] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1082: Arguments[16] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1083: Arguments[16] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1084: Arguments[16] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1085: Arguments[16] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1086: Arguments[16] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1087: Arguments[16] max Arguments[63]
    (Info: triOk;            Val: '-10'),                                       // 1088: Arguments[17] max Arguments[0]
    (Info: triOk;            Val: '-10'),                                       // 1089: Arguments[17] max Arguments[1]
    (Info: triOk;            Val: '-10'),                                       // 1090: Arguments[17] max Arguments[2]
    (Info: triOk;            Val: '-10'),                                       // 1091: Arguments[17] max Arguments[3]
    (Info: triOk;            Val: '-10'),                                       // 1092: Arguments[17] max Arguments[4]
    (Info: triOk;            Val: '-10'),                                       // 1093: Arguments[17] max Arguments[5]
    (Info: triOk;            Val: '-10'),                                       // 1094: Arguments[17] max Arguments[6]
    (Info: triOk;            Val: '-10'),                                       // 1095: Arguments[17] max Arguments[7]
    (Info: triOk;            Val: '-10'),                                       // 1096: Arguments[17] max Arguments[8]
    (Info: triOk;            Val: '-10'),                                       // 1097: Arguments[17] max Arguments[9]
    (Info: triOk;            Val: '-10'),                                       // 1098: Arguments[17] max Arguments[10]
    (Info: triOk;            Val: '-10'),                                       // 1099: Arguments[17] max Arguments[11]
    (Info: triOk;            Val: '-10'),                                       // 1100: Arguments[17] max Arguments[12]
    (Info: triOk;            Val: '-10'),                                       // 1101: Arguments[17] max Arguments[13]
    (Info: triOk;            Val: '-10'),                                       // 1102: Arguments[17] max Arguments[14]
    (Info: triOk;            Val: '-10'),                                       // 1103: Arguments[17] max Arguments[15]
    (Info: triOk;            Val: '-10'),                                       // 1104: Arguments[17] max Arguments[16]
    (Info: triOk;            Val: '-10'),                                       // 1105: Arguments[17] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1106: Arguments[17] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1107: Arguments[17] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1108: Arguments[17] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1109: Arguments[17] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1110: Arguments[17] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1111: Arguments[17] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1112: Arguments[17] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1113: Arguments[17] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1114: Arguments[17] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1115: Arguments[17] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1116: Arguments[17] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1117: Arguments[17] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1118: Arguments[17] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1119: Arguments[17] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1120: Arguments[17] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1121: Arguments[17] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1122: Arguments[17] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1123: Arguments[17] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1124: Arguments[17] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1125: Arguments[17] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1126: Arguments[17] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1127: Arguments[17] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1128: Arguments[17] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1129: Arguments[17] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1130: Arguments[17] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1131: Arguments[17] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1132: Arguments[17] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1133: Arguments[17] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1134: Arguments[17] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1135: Arguments[17] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1136: Arguments[17] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1137: Arguments[17] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1138: Arguments[17] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1139: Arguments[17] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1140: Arguments[17] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1141: Arguments[17] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1142: Arguments[17] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1143: Arguments[17] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1144: Arguments[17] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1145: Arguments[17] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1146: Arguments[17] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1147: Arguments[17] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1148: Arguments[17] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1149: Arguments[17] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1150: Arguments[17] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1151: Arguments[17] max Arguments[63]
    (Info: triOk;            Val: '-7'),                                        // 1152: Arguments[18] max Arguments[0]
    (Info: triOk;            Val: '-7'),                                        // 1153: Arguments[18] max Arguments[1]
    (Info: triOk;            Val: '-7'),                                        // 1154: Arguments[18] max Arguments[2]
    (Info: triOk;            Val: '-7'),                                        // 1155: Arguments[18] max Arguments[3]
    (Info: triOk;            Val: '-7'),                                        // 1156: Arguments[18] max Arguments[4]
    (Info: triOk;            Val: '-7'),                                        // 1157: Arguments[18] max Arguments[5]
    (Info: triOk;            Val: '-7'),                                        // 1158: Arguments[18] max Arguments[6]
    (Info: triOk;            Val: '-7'),                                        // 1159: Arguments[18] max Arguments[7]
    (Info: triOk;            Val: '-7'),                                        // 1160: Arguments[18] max Arguments[8]
    (Info: triOk;            Val: '-7'),                                        // 1161: Arguments[18] max Arguments[9]
    (Info: triOk;            Val: '-7'),                                        // 1162: Arguments[18] max Arguments[10]
    (Info: triOk;            Val: '-7'),                                        // 1163: Arguments[18] max Arguments[11]
    (Info: triOk;            Val: '-7'),                                        // 1164: Arguments[18] max Arguments[12]
    (Info: triOk;            Val: '-7'),                                        // 1165: Arguments[18] max Arguments[13]
    (Info: triOk;            Val: '-7'),                                        // 1166: Arguments[18] max Arguments[14]
    (Info: triOk;            Val: '-7'),                                        // 1167: Arguments[18] max Arguments[15]
    (Info: triOk;            Val: '-7'),                                        // 1168: Arguments[18] max Arguments[16]
    (Info: triOk;            Val: '-7'),                                        // 1169: Arguments[18] max Arguments[17]
    (Info: triOk;            Val: '-7'),                                        // 1170: Arguments[18] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1171: Arguments[18] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1172: Arguments[18] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1173: Arguments[18] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1174: Arguments[18] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1175: Arguments[18] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1176: Arguments[18] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1177: Arguments[18] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1178: Arguments[18] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1179: Arguments[18] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1180: Arguments[18] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1181: Arguments[18] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1182: Arguments[18] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1183: Arguments[18] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1184: Arguments[18] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1185: Arguments[18] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1186: Arguments[18] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1187: Arguments[18] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1188: Arguments[18] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1189: Arguments[18] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1190: Arguments[18] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1191: Arguments[18] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1192: Arguments[18] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1193: Arguments[18] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1194: Arguments[18] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1195: Arguments[18] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1196: Arguments[18] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1197: Arguments[18] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1198: Arguments[18] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1199: Arguments[18] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1200: Arguments[18] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1201: Arguments[18] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1202: Arguments[18] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1203: Arguments[18] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1204: Arguments[18] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1205: Arguments[18] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1206: Arguments[18] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1207: Arguments[18] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1208: Arguments[18] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1209: Arguments[18] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1210: Arguments[18] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1211: Arguments[18] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1212: Arguments[18] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1213: Arguments[18] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1214: Arguments[18] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1215: Arguments[18] max Arguments[63]
    (Info: triOk;            Val: '-2'),                                        // 1216: Arguments[19] max Arguments[0]
    (Info: triOk;            Val: '-2'),                                        // 1217: Arguments[19] max Arguments[1]
    (Info: triOk;            Val: '-2'),                                        // 1218: Arguments[19] max Arguments[2]
    (Info: triOk;            Val: '-2'),                                        // 1219: Arguments[19] max Arguments[3]
    (Info: triOk;            Val: '-2'),                                        // 1220: Arguments[19] max Arguments[4]
    (Info: triOk;            Val: '-2'),                                        // 1221: Arguments[19] max Arguments[5]
    (Info: triOk;            Val: '-2'),                                        // 1222: Arguments[19] max Arguments[6]
    (Info: triOk;            Val: '-2'),                                        // 1223: Arguments[19] max Arguments[7]
    (Info: triOk;            Val: '-2'),                                        // 1224: Arguments[19] max Arguments[8]
    (Info: triOk;            Val: '-2'),                                        // 1225: Arguments[19] max Arguments[9]
    (Info: triOk;            Val: '-2'),                                        // 1226: Arguments[19] max Arguments[10]
    (Info: triOk;            Val: '-2'),                                        // 1227: Arguments[19] max Arguments[11]
    (Info: triOk;            Val: '-2'),                                        // 1228: Arguments[19] max Arguments[12]
    (Info: triOk;            Val: '-2'),                                        // 1229: Arguments[19] max Arguments[13]
    (Info: triOk;            Val: '-2'),                                        // 1230: Arguments[19] max Arguments[14]
    (Info: triOk;            Val: '-2'),                                        // 1231: Arguments[19] max Arguments[15]
    (Info: triOk;            Val: '-2'),                                        // 1232: Arguments[19] max Arguments[16]
    (Info: triOk;            Val: '-2'),                                        // 1233: Arguments[19] max Arguments[17]
    (Info: triOk;            Val: '-2'),                                        // 1234: Arguments[19] max Arguments[18]
    (Info: triOk;            Val: '-2'),                                        // 1235: Arguments[19] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1236: Arguments[19] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1237: Arguments[19] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1238: Arguments[19] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1239: Arguments[19] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1240: Arguments[19] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1241: Arguments[19] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1242: Arguments[19] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1243: Arguments[19] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1244: Arguments[19] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1245: Arguments[19] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1246: Arguments[19] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1247: Arguments[19] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1248: Arguments[19] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1249: Arguments[19] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1250: Arguments[19] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1251: Arguments[19] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1252: Arguments[19] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1253: Arguments[19] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1254: Arguments[19] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1255: Arguments[19] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1256: Arguments[19] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1257: Arguments[19] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1258: Arguments[19] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1259: Arguments[19] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1260: Arguments[19] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1261: Arguments[19] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1262: Arguments[19] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1263: Arguments[19] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1264: Arguments[19] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1265: Arguments[19] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1266: Arguments[19] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1267: Arguments[19] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1268: Arguments[19] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1269: Arguments[19] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1270: Arguments[19] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1271: Arguments[19] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1272: Arguments[19] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1273: Arguments[19] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1274: Arguments[19] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1275: Arguments[19] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1276: Arguments[19] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1277: Arguments[19] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1278: Arguments[19] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1279: Arguments[19] max Arguments[63]
    (Info: triOk;            Val: '-1'),                                        // 1280: Arguments[20] max Arguments[0]
    (Info: triOk;            Val: '-1'),                                        // 1281: Arguments[20] max Arguments[1]
    (Info: triOk;            Val: '-1'),                                        // 1282: Arguments[20] max Arguments[2]
    (Info: triOk;            Val: '-1'),                                        // 1283: Arguments[20] max Arguments[3]
    (Info: triOk;            Val: '-1'),                                        // 1284: Arguments[20] max Arguments[4]
    (Info: triOk;            Val: '-1'),                                        // 1285: Arguments[20] max Arguments[5]
    (Info: triOk;            Val: '-1'),                                        // 1286: Arguments[20] max Arguments[6]
    (Info: triOk;            Val: '-1'),                                        // 1287: Arguments[20] max Arguments[7]
    (Info: triOk;            Val: '-1'),                                        // 1288: Arguments[20] max Arguments[8]
    (Info: triOk;            Val: '-1'),                                        // 1289: Arguments[20] max Arguments[9]
    (Info: triOk;            Val: '-1'),                                        // 1290: Arguments[20] max Arguments[10]
    (Info: triOk;            Val: '-1'),                                        // 1291: Arguments[20] max Arguments[11]
    (Info: triOk;            Val: '-1'),                                        // 1292: Arguments[20] max Arguments[12]
    (Info: triOk;            Val: '-1'),                                        // 1293: Arguments[20] max Arguments[13]
    (Info: triOk;            Val: '-1'),                                        // 1294: Arguments[20] max Arguments[14]
    (Info: triOk;            Val: '-1'),                                        // 1295: Arguments[20] max Arguments[15]
    (Info: triOk;            Val: '-1'),                                        // 1296: Arguments[20] max Arguments[16]
    (Info: triOk;            Val: '-1'),                                        // 1297: Arguments[20] max Arguments[17]
    (Info: triOk;            Val: '-1'),                                        // 1298: Arguments[20] max Arguments[18]
    (Info: triOk;            Val: '-1'),                                        // 1299: Arguments[20] max Arguments[19]
    (Info: triOk;            Val: '-1'),                                        // 1300: Arguments[20] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1301: Arguments[20] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1302: Arguments[20] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1303: Arguments[20] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1304: Arguments[20] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1305: Arguments[20] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1306: Arguments[20] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1307: Arguments[20] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1308: Arguments[20] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1309: Arguments[20] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1310: Arguments[20] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1311: Arguments[20] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1312: Arguments[20] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1313: Arguments[20] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1314: Arguments[20] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1315: Arguments[20] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1316: Arguments[20] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1317: Arguments[20] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1318: Arguments[20] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1319: Arguments[20] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1320: Arguments[20] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1321: Arguments[20] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1322: Arguments[20] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1323: Arguments[20] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1324: Arguments[20] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1325: Arguments[20] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1326: Arguments[20] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1327: Arguments[20] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1328: Arguments[20] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1329: Arguments[20] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1330: Arguments[20] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1331: Arguments[20] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1332: Arguments[20] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1333: Arguments[20] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1334: Arguments[20] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1335: Arguments[20] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1336: Arguments[20] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1337: Arguments[20] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1338: Arguments[20] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1339: Arguments[20] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1340: Arguments[20] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1341: Arguments[20] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1342: Arguments[20] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1343: Arguments[20] max Arguments[63]
    (Info: triOk;            Val: '0'),                                         // 1344: Arguments[21] max Arguments[0]
    (Info: triOk;            Val: '0'),                                         // 1345: Arguments[21] max Arguments[1]
    (Info: triOk;            Val: '0'),                                         // 1346: Arguments[21] max Arguments[2]
    (Info: triOk;            Val: '0'),                                         // 1347: Arguments[21] max Arguments[3]
    (Info: triOk;            Val: '0'),                                         // 1348: Arguments[21] max Arguments[4]
    (Info: triOk;            Val: '0'),                                         // 1349: Arguments[21] max Arguments[5]
    (Info: triOk;            Val: '0'),                                         // 1350: Arguments[21] max Arguments[6]
    (Info: triOk;            Val: '0'),                                         // 1351: Arguments[21] max Arguments[7]
    (Info: triOk;            Val: '0'),                                         // 1352: Arguments[21] max Arguments[8]
    (Info: triOk;            Val: '0'),                                         // 1353: Arguments[21] max Arguments[9]
    (Info: triOk;            Val: '0'),                                         // 1354: Arguments[21] max Arguments[10]
    (Info: triOk;            Val: '0'),                                         // 1355: Arguments[21] max Arguments[11]
    (Info: triOk;            Val: '0'),                                         // 1356: Arguments[21] max Arguments[12]
    (Info: triOk;            Val: '0'),                                         // 1357: Arguments[21] max Arguments[13]
    (Info: triOk;            Val: '0'),                                         // 1358: Arguments[21] max Arguments[14]
    (Info: triOk;            Val: '0'),                                         // 1359: Arguments[21] max Arguments[15]
    (Info: triOk;            Val: '0'),                                         // 1360: Arguments[21] max Arguments[16]
    (Info: triOk;            Val: '0'),                                         // 1361: Arguments[21] max Arguments[17]
    (Info: triOk;            Val: '0'),                                         // 1362: Arguments[21] max Arguments[18]
    (Info: triOk;            Val: '0'),                                         // 1363: Arguments[21] max Arguments[19]
    (Info: triOk;            Val: '0'),                                         // 1364: Arguments[21] max Arguments[20]
    (Info: triOk;            Val: '0'),                                         // 1365: Arguments[21] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1366: Arguments[21] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1367: Arguments[21] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1368: Arguments[21] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1369: Arguments[21] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1370: Arguments[21] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1371: Arguments[21] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1372: Arguments[21] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1373: Arguments[21] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1374: Arguments[21] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1375: Arguments[21] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1376: Arguments[21] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1377: Arguments[21] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1378: Arguments[21] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1379: Arguments[21] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1380: Arguments[21] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1381: Arguments[21] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1382: Arguments[21] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1383: Arguments[21] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1384: Arguments[21] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1385: Arguments[21] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1386: Arguments[21] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1387: Arguments[21] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1388: Arguments[21] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1389: Arguments[21] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1390: Arguments[21] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1391: Arguments[21] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1392: Arguments[21] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1393: Arguments[21] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1394: Arguments[21] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1395: Arguments[21] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1396: Arguments[21] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1397: Arguments[21] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1398: Arguments[21] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1399: Arguments[21] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1400: Arguments[21] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1401: Arguments[21] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1402: Arguments[21] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1403: Arguments[21] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1404: Arguments[21] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1405: Arguments[21] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1406: Arguments[21] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1407: Arguments[21] max Arguments[63]
    (Info: triOk;            Val: '1'),                                         // 1408: Arguments[22] max Arguments[0]
    (Info: triOk;            Val: '1'),                                         // 1409: Arguments[22] max Arguments[1]
    (Info: triOk;            Val: '1'),                                         // 1410: Arguments[22] max Arguments[2]
    (Info: triOk;            Val: '1'),                                         // 1411: Arguments[22] max Arguments[3]
    (Info: triOk;            Val: '1'),                                         // 1412: Arguments[22] max Arguments[4]
    (Info: triOk;            Val: '1'),                                         // 1413: Arguments[22] max Arguments[5]
    (Info: triOk;            Val: '1'),                                         // 1414: Arguments[22] max Arguments[6]
    (Info: triOk;            Val: '1'),                                         // 1415: Arguments[22] max Arguments[7]
    (Info: triOk;            Val: '1'),                                         // 1416: Arguments[22] max Arguments[8]
    (Info: triOk;            Val: '1'),                                         // 1417: Arguments[22] max Arguments[9]
    (Info: triOk;            Val: '1'),                                         // 1418: Arguments[22] max Arguments[10]
    (Info: triOk;            Val: '1'),                                         // 1419: Arguments[22] max Arguments[11]
    (Info: triOk;            Val: '1'),                                         // 1420: Arguments[22] max Arguments[12]
    (Info: triOk;            Val: '1'),                                         // 1421: Arguments[22] max Arguments[13]
    (Info: triOk;            Val: '1'),                                         // 1422: Arguments[22] max Arguments[14]
    (Info: triOk;            Val: '1'),                                         // 1423: Arguments[22] max Arguments[15]
    (Info: triOk;            Val: '1'),                                         // 1424: Arguments[22] max Arguments[16]
    (Info: triOk;            Val: '1'),                                         // 1425: Arguments[22] max Arguments[17]
    (Info: triOk;            Val: '1'),                                         // 1426: Arguments[22] max Arguments[18]
    (Info: triOk;            Val: '1'),                                         // 1427: Arguments[22] max Arguments[19]
    (Info: triOk;            Val: '1'),                                         // 1428: Arguments[22] max Arguments[20]
    (Info: triOk;            Val: '1'),                                         // 1429: Arguments[22] max Arguments[21]
    (Info: triOk;            Val: '1'),                                         // 1430: Arguments[22] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1431: Arguments[22] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1432: Arguments[22] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1433: Arguments[22] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1434: Arguments[22] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1435: Arguments[22] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1436: Arguments[22] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1437: Arguments[22] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1438: Arguments[22] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1439: Arguments[22] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1440: Arguments[22] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1441: Arguments[22] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1442: Arguments[22] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1443: Arguments[22] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1444: Arguments[22] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1445: Arguments[22] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1446: Arguments[22] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1447: Arguments[22] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1448: Arguments[22] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1449: Arguments[22] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1450: Arguments[22] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1451: Arguments[22] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1452: Arguments[22] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1453: Arguments[22] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1454: Arguments[22] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1455: Arguments[22] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1456: Arguments[22] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1457: Arguments[22] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1458: Arguments[22] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1459: Arguments[22] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1460: Arguments[22] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1461: Arguments[22] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1462: Arguments[22] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1463: Arguments[22] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1464: Arguments[22] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1465: Arguments[22] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1466: Arguments[22] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1467: Arguments[22] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1468: Arguments[22] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1469: Arguments[22] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1470: Arguments[22] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1471: Arguments[22] max Arguments[63]
    (Info: triOk;            Val: '2'),                                         // 1472: Arguments[23] max Arguments[0]
    (Info: triOk;            Val: '2'),                                         // 1473: Arguments[23] max Arguments[1]
    (Info: triOk;            Val: '2'),                                         // 1474: Arguments[23] max Arguments[2]
    (Info: triOk;            Val: '2'),                                         // 1475: Arguments[23] max Arguments[3]
    (Info: triOk;            Val: '2'),                                         // 1476: Arguments[23] max Arguments[4]
    (Info: triOk;            Val: '2'),                                         // 1477: Arguments[23] max Arguments[5]
    (Info: triOk;            Val: '2'),                                         // 1478: Arguments[23] max Arguments[6]
    (Info: triOk;            Val: '2'),                                         // 1479: Arguments[23] max Arguments[7]
    (Info: triOk;            Val: '2'),                                         // 1480: Arguments[23] max Arguments[8]
    (Info: triOk;            Val: '2'),                                         // 1481: Arguments[23] max Arguments[9]
    (Info: triOk;            Val: '2'),                                         // 1482: Arguments[23] max Arguments[10]
    (Info: triOk;            Val: '2'),                                         // 1483: Arguments[23] max Arguments[11]
    (Info: triOk;            Val: '2'),                                         // 1484: Arguments[23] max Arguments[12]
    (Info: triOk;            Val: '2'),                                         // 1485: Arguments[23] max Arguments[13]
    (Info: triOk;            Val: '2'),                                         // 1486: Arguments[23] max Arguments[14]
    (Info: triOk;            Val: '2'),                                         // 1487: Arguments[23] max Arguments[15]
    (Info: triOk;            Val: '2'),                                         // 1488: Arguments[23] max Arguments[16]
    (Info: triOk;            Val: '2'),                                         // 1489: Arguments[23] max Arguments[17]
    (Info: triOk;            Val: '2'),                                         // 1490: Arguments[23] max Arguments[18]
    (Info: triOk;            Val: '2'),                                         // 1491: Arguments[23] max Arguments[19]
    (Info: triOk;            Val: '2'),                                         // 1492: Arguments[23] max Arguments[20]
    (Info: triOk;            Val: '2'),                                         // 1493: Arguments[23] max Arguments[21]
    (Info: triOk;            Val: '2'),                                         // 1494: Arguments[23] max Arguments[22]
    (Info: triOk;            Val: '2'),                                         // 1495: Arguments[23] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1496: Arguments[23] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1497: Arguments[23] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1498: Arguments[23] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1499: Arguments[23] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1500: Arguments[23] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1501: Arguments[23] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1502: Arguments[23] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1503: Arguments[23] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1504: Arguments[23] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1505: Arguments[23] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1506: Arguments[23] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1507: Arguments[23] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1508: Arguments[23] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1509: Arguments[23] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1510: Arguments[23] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1511: Arguments[23] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1512: Arguments[23] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1513: Arguments[23] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1514: Arguments[23] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1515: Arguments[23] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1516: Arguments[23] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1517: Arguments[23] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1518: Arguments[23] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1519: Arguments[23] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1520: Arguments[23] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1521: Arguments[23] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1522: Arguments[23] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1523: Arguments[23] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1524: Arguments[23] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1525: Arguments[23] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1526: Arguments[23] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1527: Arguments[23] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1528: Arguments[23] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1529: Arguments[23] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1530: Arguments[23] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1531: Arguments[23] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1532: Arguments[23] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1533: Arguments[23] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1534: Arguments[23] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1535: Arguments[23] max Arguments[63]
    (Info: triOk;            Val: '7'),                                         // 1536: Arguments[24] max Arguments[0]
    (Info: triOk;            Val: '7'),                                         // 1537: Arguments[24] max Arguments[1]
    (Info: triOk;            Val: '7'),                                         // 1538: Arguments[24] max Arguments[2]
    (Info: triOk;            Val: '7'),                                         // 1539: Arguments[24] max Arguments[3]
    (Info: triOk;            Val: '7'),                                         // 1540: Arguments[24] max Arguments[4]
    (Info: triOk;            Val: '7'),                                         // 1541: Arguments[24] max Arguments[5]
    (Info: triOk;            Val: '7'),                                         // 1542: Arguments[24] max Arguments[6]
    (Info: triOk;            Val: '7'),                                         // 1543: Arguments[24] max Arguments[7]
    (Info: triOk;            Val: '7'),                                         // 1544: Arguments[24] max Arguments[8]
    (Info: triOk;            Val: '7'),                                         // 1545: Arguments[24] max Arguments[9]
    (Info: triOk;            Val: '7'),                                         // 1546: Arguments[24] max Arguments[10]
    (Info: triOk;            Val: '7'),                                         // 1547: Arguments[24] max Arguments[11]
    (Info: triOk;            Val: '7'),                                         // 1548: Arguments[24] max Arguments[12]
    (Info: triOk;            Val: '7'),                                         // 1549: Arguments[24] max Arguments[13]
    (Info: triOk;            Val: '7'),                                         // 1550: Arguments[24] max Arguments[14]
    (Info: triOk;            Val: '7'),                                         // 1551: Arguments[24] max Arguments[15]
    (Info: triOk;            Val: '7'),                                         // 1552: Arguments[24] max Arguments[16]
    (Info: triOk;            Val: '7'),                                         // 1553: Arguments[24] max Arguments[17]
    (Info: triOk;            Val: '7'),                                         // 1554: Arguments[24] max Arguments[18]
    (Info: triOk;            Val: '7'),                                         // 1555: Arguments[24] max Arguments[19]
    (Info: triOk;            Val: '7'),                                         // 1556: Arguments[24] max Arguments[20]
    (Info: triOk;            Val: '7'),                                         // 1557: Arguments[24] max Arguments[21]
    (Info: triOk;            Val: '7'),                                         // 1558: Arguments[24] max Arguments[22]
    (Info: triOk;            Val: '7'),                                         // 1559: Arguments[24] max Arguments[23]
    (Info: triOk;            Val: '7'),                                         // 1560: Arguments[24] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1561: Arguments[24] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1562: Arguments[24] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1563: Arguments[24] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1564: Arguments[24] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1565: Arguments[24] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1566: Arguments[24] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1567: Arguments[24] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1568: Arguments[24] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1569: Arguments[24] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1570: Arguments[24] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1571: Arguments[24] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1572: Arguments[24] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1573: Arguments[24] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1574: Arguments[24] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1575: Arguments[24] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1576: Arguments[24] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1577: Arguments[24] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1578: Arguments[24] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1579: Arguments[24] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1580: Arguments[24] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1581: Arguments[24] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1582: Arguments[24] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1583: Arguments[24] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1584: Arguments[24] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1585: Arguments[24] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1586: Arguments[24] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1587: Arguments[24] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1588: Arguments[24] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1589: Arguments[24] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1590: Arguments[24] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1591: Arguments[24] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1592: Arguments[24] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1593: Arguments[24] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1594: Arguments[24] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1595: Arguments[24] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1596: Arguments[24] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1597: Arguments[24] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1598: Arguments[24] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1599: Arguments[24] max Arguments[63]
    (Info: triOk;            Val: '10'),                                        // 1600: Arguments[25] max Arguments[0]
    (Info: triOk;            Val: '10'),                                        // 1601: Arguments[25] max Arguments[1]
    (Info: triOk;            Val: '10'),                                        // 1602: Arguments[25] max Arguments[2]
    (Info: triOk;            Val: '10'),                                        // 1603: Arguments[25] max Arguments[3]
    (Info: triOk;            Val: '10'),                                        // 1604: Arguments[25] max Arguments[4]
    (Info: triOk;            Val: '10'),                                        // 1605: Arguments[25] max Arguments[5]
    (Info: triOk;            Val: '10'),                                        // 1606: Arguments[25] max Arguments[6]
    (Info: triOk;            Val: '10'),                                        // 1607: Arguments[25] max Arguments[7]
    (Info: triOk;            Val: '10'),                                        // 1608: Arguments[25] max Arguments[8]
    (Info: triOk;            Val: '10'),                                        // 1609: Arguments[25] max Arguments[9]
    (Info: triOk;            Val: '10'),                                        // 1610: Arguments[25] max Arguments[10]
    (Info: triOk;            Val: '10'),                                        // 1611: Arguments[25] max Arguments[11]
    (Info: triOk;            Val: '10'),                                        // 1612: Arguments[25] max Arguments[12]
    (Info: triOk;            Val: '10'),                                        // 1613: Arguments[25] max Arguments[13]
    (Info: triOk;            Val: '10'),                                        // 1614: Arguments[25] max Arguments[14]
    (Info: triOk;            Val: '10'),                                        // 1615: Arguments[25] max Arguments[15]
    (Info: triOk;            Val: '10'),                                        // 1616: Arguments[25] max Arguments[16]
    (Info: triOk;            Val: '10'),                                        // 1617: Arguments[25] max Arguments[17]
    (Info: triOk;            Val: '10'),                                        // 1618: Arguments[25] max Arguments[18]
    (Info: triOk;            Val: '10'),                                        // 1619: Arguments[25] max Arguments[19]
    (Info: triOk;            Val: '10'),                                        // 1620: Arguments[25] max Arguments[20]
    (Info: triOk;            Val: '10'),                                        // 1621: Arguments[25] max Arguments[21]
    (Info: triOk;            Val: '10'),                                        // 1622: Arguments[25] max Arguments[22]
    (Info: triOk;            Val: '10'),                                        // 1623: Arguments[25] max Arguments[23]
    (Info: triOk;            Val: '10'),                                        // 1624: Arguments[25] max Arguments[24]
    (Info: triOk;            Val: '10'),                                        // 1625: Arguments[25] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1626: Arguments[25] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1627: Arguments[25] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1628: Arguments[25] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1629: Arguments[25] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1630: Arguments[25] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1631: Arguments[25] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1632: Arguments[25] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1633: Arguments[25] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1634: Arguments[25] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1635: Arguments[25] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1636: Arguments[25] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1637: Arguments[25] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1638: Arguments[25] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1639: Arguments[25] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1640: Arguments[25] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1641: Arguments[25] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1642: Arguments[25] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1643: Arguments[25] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1644: Arguments[25] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1645: Arguments[25] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1646: Arguments[25] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1647: Arguments[25] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1648: Arguments[25] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1649: Arguments[25] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1650: Arguments[25] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1651: Arguments[25] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1652: Arguments[25] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1653: Arguments[25] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1654: Arguments[25] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1655: Arguments[25] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1656: Arguments[25] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1657: Arguments[25] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1658: Arguments[25] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1659: Arguments[25] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1660: Arguments[25] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1661: Arguments[25] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1662: Arguments[25] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1663: Arguments[25] max Arguments[63]
    (Info: triOk;            Val: '100'),                                       // 1664: Arguments[26] max Arguments[0]
    (Info: triOk;            Val: '100'),                                       // 1665: Arguments[26] max Arguments[1]
    (Info: triOk;            Val: '100'),                                       // 1666: Arguments[26] max Arguments[2]
    (Info: triOk;            Val: '100'),                                       // 1667: Arguments[26] max Arguments[3]
    (Info: triOk;            Val: '100'),                                       // 1668: Arguments[26] max Arguments[4]
    (Info: triOk;            Val: '100'),                                       // 1669: Arguments[26] max Arguments[5]
    (Info: triOk;            Val: '100'),                                       // 1670: Arguments[26] max Arguments[6]
    (Info: triOk;            Val: '100'),                                       // 1671: Arguments[26] max Arguments[7]
    (Info: triOk;            Val: '100'),                                       // 1672: Arguments[26] max Arguments[8]
    (Info: triOk;            Val: '100'),                                       // 1673: Arguments[26] max Arguments[9]
    (Info: triOk;            Val: '100'),                                       // 1674: Arguments[26] max Arguments[10]
    (Info: triOk;            Val: '100'),                                       // 1675: Arguments[26] max Arguments[11]
    (Info: triOk;            Val: '100'),                                       // 1676: Arguments[26] max Arguments[12]
    (Info: triOk;            Val: '100'),                                       // 1677: Arguments[26] max Arguments[13]
    (Info: triOk;            Val: '100'),                                       // 1678: Arguments[26] max Arguments[14]
    (Info: triOk;            Val: '100'),                                       // 1679: Arguments[26] max Arguments[15]
    (Info: triOk;            Val: '100'),                                       // 1680: Arguments[26] max Arguments[16]
    (Info: triOk;            Val: '100'),                                       // 1681: Arguments[26] max Arguments[17]
    (Info: triOk;            Val: '100'),                                       // 1682: Arguments[26] max Arguments[18]
    (Info: triOk;            Val: '100'),                                       // 1683: Arguments[26] max Arguments[19]
    (Info: triOk;            Val: '100'),                                       // 1684: Arguments[26] max Arguments[20]
    (Info: triOk;            Val: '100'),                                       // 1685: Arguments[26] max Arguments[21]
    (Info: triOk;            Val: '100'),                                       // 1686: Arguments[26] max Arguments[22]
    (Info: triOk;            Val: '100'),                                       // 1687: Arguments[26] max Arguments[23]
    (Info: triOk;            Val: '100'),                                       // 1688: Arguments[26] max Arguments[24]
    (Info: triOk;            Val: '100'),                                       // 1689: Arguments[26] max Arguments[25]
    (Info: triOk;            Val: '100'),                                       // 1690: Arguments[26] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1691: Arguments[26] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1692: Arguments[26] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1693: Arguments[26] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1694: Arguments[26] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1695: Arguments[26] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1696: Arguments[26] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1697: Arguments[26] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1698: Arguments[26] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1699: Arguments[26] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1700: Arguments[26] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1701: Arguments[26] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1702: Arguments[26] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1703: Arguments[26] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1704: Arguments[26] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1705: Arguments[26] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1706: Arguments[26] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1707: Arguments[26] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1708: Arguments[26] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1709: Arguments[26] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1710: Arguments[26] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1711: Arguments[26] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1712: Arguments[26] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1713: Arguments[26] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1714: Arguments[26] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1715: Arguments[26] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1716: Arguments[26] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1717: Arguments[26] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1718: Arguments[26] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1719: Arguments[26] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1720: Arguments[26] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1721: Arguments[26] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1722: Arguments[26] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1723: Arguments[26] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1724: Arguments[26] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1725: Arguments[26] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1726: Arguments[26] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1727: Arguments[26] max Arguments[63]
    (Info: triOk;            Val: '409'),                                       // 1728: Arguments[27] max Arguments[0]
    (Info: triOk;            Val: '409'),                                       // 1729: Arguments[27] max Arguments[1]
    (Info: triOk;            Val: '409'),                                       // 1730: Arguments[27] max Arguments[2]
    (Info: triOk;            Val: '409'),                                       // 1731: Arguments[27] max Arguments[3]
    (Info: triOk;            Val: '409'),                                       // 1732: Arguments[27] max Arguments[4]
    (Info: triOk;            Val: '409'),                                       // 1733: Arguments[27] max Arguments[5]
    (Info: triOk;            Val: '409'),                                       // 1734: Arguments[27] max Arguments[6]
    (Info: triOk;            Val: '409'),                                       // 1735: Arguments[27] max Arguments[7]
    (Info: triOk;            Val: '409'),                                       // 1736: Arguments[27] max Arguments[8]
    (Info: triOk;            Val: '409'),                                       // 1737: Arguments[27] max Arguments[9]
    (Info: triOk;            Val: '409'),                                       // 1738: Arguments[27] max Arguments[10]
    (Info: triOk;            Val: '409'),                                       // 1739: Arguments[27] max Arguments[11]
    (Info: triOk;            Val: '409'),                                       // 1740: Arguments[27] max Arguments[12]
    (Info: triOk;            Val: '409'),                                       // 1741: Arguments[27] max Arguments[13]
    (Info: triOk;            Val: '409'),                                       // 1742: Arguments[27] max Arguments[14]
    (Info: triOk;            Val: '409'),                                       // 1743: Arguments[27] max Arguments[15]
    (Info: triOk;            Val: '409'),                                       // 1744: Arguments[27] max Arguments[16]
    (Info: triOk;            Val: '409'),                                       // 1745: Arguments[27] max Arguments[17]
    (Info: triOk;            Val: '409'),                                       // 1746: Arguments[27] max Arguments[18]
    (Info: triOk;            Val: '409'),                                       // 1747: Arguments[27] max Arguments[19]
    (Info: triOk;            Val: '409'),                                       // 1748: Arguments[27] max Arguments[20]
    (Info: triOk;            Val: '409'),                                       // 1749: Arguments[27] max Arguments[21]
    (Info: triOk;            Val: '409'),                                       // 1750: Arguments[27] max Arguments[22]
    (Info: triOk;            Val: '409'),                                       // 1751: Arguments[27] max Arguments[23]
    (Info: triOk;            Val: '409'),                                       // 1752: Arguments[27] max Arguments[24]
    (Info: triOk;            Val: '409'),                                       // 1753: Arguments[27] max Arguments[25]
    (Info: triOk;            Val: '409'),                                       // 1754: Arguments[27] max Arguments[26]
    (Info: triOk;            Val: '409'),                                       // 1755: Arguments[27] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1756: Arguments[27] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1757: Arguments[27] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1758: Arguments[27] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1759: Arguments[27] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1760: Arguments[27] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1761: Arguments[27] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1762: Arguments[27] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1763: Arguments[27] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1764: Arguments[27] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1765: Arguments[27] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1766: Arguments[27] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1767: Arguments[27] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1768: Arguments[27] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1769: Arguments[27] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1770: Arguments[27] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1771: Arguments[27] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1772: Arguments[27] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1773: Arguments[27] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1774: Arguments[27] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1775: Arguments[27] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1776: Arguments[27] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1777: Arguments[27] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1778: Arguments[27] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1779: Arguments[27] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1780: Arguments[27] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1781: Arguments[27] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1782: Arguments[27] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1783: Arguments[27] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1784: Arguments[27] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1785: Arguments[27] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1786: Arguments[27] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1787: Arguments[27] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1788: Arguments[27] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1789: Arguments[27] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1790: Arguments[27] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1791: Arguments[27] max Arguments[63]
    (Info: triOk;            Val: '818'),                                       // 1792: Arguments[28] max Arguments[0]
    (Info: triOk;            Val: '818'),                                       // 1793: Arguments[28] max Arguments[1]
    (Info: triOk;            Val: '818'),                                       // 1794: Arguments[28] max Arguments[2]
    (Info: triOk;            Val: '818'),                                       // 1795: Arguments[28] max Arguments[3]
    (Info: triOk;            Val: '818'),                                       // 1796: Arguments[28] max Arguments[4]
    (Info: triOk;            Val: '818'),                                       // 1797: Arguments[28] max Arguments[5]
    (Info: triOk;            Val: '818'),                                       // 1798: Arguments[28] max Arguments[6]
    (Info: triOk;            Val: '818'),                                       // 1799: Arguments[28] max Arguments[7]
    (Info: triOk;            Val: '818'),                                       // 1800: Arguments[28] max Arguments[8]
    (Info: triOk;            Val: '818'),                                       // 1801: Arguments[28] max Arguments[9]
    (Info: triOk;            Val: '818'),                                       // 1802: Arguments[28] max Arguments[10]
    (Info: triOk;            Val: '818'),                                       // 1803: Arguments[28] max Arguments[11]
    (Info: triOk;            Val: '818'),                                       // 1804: Arguments[28] max Arguments[12]
    (Info: triOk;            Val: '818'),                                       // 1805: Arguments[28] max Arguments[13]
    (Info: triOk;            Val: '818'),                                       // 1806: Arguments[28] max Arguments[14]
    (Info: triOk;            Val: '818'),                                       // 1807: Arguments[28] max Arguments[15]
    (Info: triOk;            Val: '818'),                                       // 1808: Arguments[28] max Arguments[16]
    (Info: triOk;            Val: '818'),                                       // 1809: Arguments[28] max Arguments[17]
    (Info: triOk;            Val: '818'),                                       // 1810: Arguments[28] max Arguments[18]
    (Info: triOk;            Val: '818'),                                       // 1811: Arguments[28] max Arguments[19]
    (Info: triOk;            Val: '818'),                                       // 1812: Arguments[28] max Arguments[20]
    (Info: triOk;            Val: '818'),                                       // 1813: Arguments[28] max Arguments[21]
    (Info: triOk;            Val: '818'),                                       // 1814: Arguments[28] max Arguments[22]
    (Info: triOk;            Val: '818'),                                       // 1815: Arguments[28] max Arguments[23]
    (Info: triOk;            Val: '818'),                                       // 1816: Arguments[28] max Arguments[24]
    (Info: triOk;            Val: '818'),                                       // 1817: Arguments[28] max Arguments[25]
    (Info: triOk;            Val: '818'),                                       // 1818: Arguments[28] max Arguments[26]
    (Info: triOk;            Val: '818'),                                       // 1819: Arguments[28] max Arguments[27]
    (Info: triOk;            Val: '818'),                                       // 1820: Arguments[28] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1821: Arguments[28] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1822: Arguments[28] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1823: Arguments[28] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1824: Arguments[28] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1825: Arguments[28] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1826: Arguments[28] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1827: Arguments[28] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1828: Arguments[28] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1829: Arguments[28] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1830: Arguments[28] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1831: Arguments[28] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1832: Arguments[28] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1833: Arguments[28] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1834: Arguments[28] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1835: Arguments[28] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1836: Arguments[28] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1837: Arguments[28] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1838: Arguments[28] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1839: Arguments[28] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1840: Arguments[28] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1841: Arguments[28] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1842: Arguments[28] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1843: Arguments[28] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1844: Arguments[28] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1845: Arguments[28] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1846: Arguments[28] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1847: Arguments[28] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1848: Arguments[28] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1849: Arguments[28] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1850: Arguments[28] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1851: Arguments[28] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1852: Arguments[28] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1853: Arguments[28] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1854: Arguments[28] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1855: Arguments[28] max Arguments[63]
    (Info: triOk;            Val: '1000'),                                      // 1856: Arguments[29] max Arguments[0]
    (Info: triOk;            Val: '1000'),                                      // 1857: Arguments[29] max Arguments[1]
    (Info: triOk;            Val: '1000'),                                      // 1858: Arguments[29] max Arguments[2]
    (Info: triOk;            Val: '1000'),                                      // 1859: Arguments[29] max Arguments[3]
    (Info: triOk;            Val: '1000'),                                      // 1860: Arguments[29] max Arguments[4]
    (Info: triOk;            Val: '1000'),                                      // 1861: Arguments[29] max Arguments[5]
    (Info: triOk;            Val: '1000'),                                      // 1862: Arguments[29] max Arguments[6]
    (Info: triOk;            Val: '1000'),                                      // 1863: Arguments[29] max Arguments[7]
    (Info: triOk;            Val: '1000'),                                      // 1864: Arguments[29] max Arguments[8]
    (Info: triOk;            Val: '1000'),                                      // 1865: Arguments[29] max Arguments[9]
    (Info: triOk;            Val: '1000'),                                      // 1866: Arguments[29] max Arguments[10]
    (Info: triOk;            Val: '1000'),                                      // 1867: Arguments[29] max Arguments[11]
    (Info: triOk;            Val: '1000'),                                      // 1868: Arguments[29] max Arguments[12]
    (Info: triOk;            Val: '1000'),                                      // 1869: Arguments[29] max Arguments[13]
    (Info: triOk;            Val: '1000'),                                      // 1870: Arguments[29] max Arguments[14]
    (Info: triOk;            Val: '1000'),                                      // 1871: Arguments[29] max Arguments[15]
    (Info: triOk;            Val: '1000'),                                      // 1872: Arguments[29] max Arguments[16]
    (Info: triOk;            Val: '1000'),                                      // 1873: Arguments[29] max Arguments[17]
    (Info: triOk;            Val: '1000'),                                      // 1874: Arguments[29] max Arguments[18]
    (Info: triOk;            Val: '1000'),                                      // 1875: Arguments[29] max Arguments[19]
    (Info: triOk;            Val: '1000'),                                      // 1876: Arguments[29] max Arguments[20]
    (Info: triOk;            Val: '1000'),                                      // 1877: Arguments[29] max Arguments[21]
    (Info: triOk;            Val: '1000'),                                      // 1878: Arguments[29] max Arguments[22]
    (Info: triOk;            Val: '1000'),                                      // 1879: Arguments[29] max Arguments[23]
    (Info: triOk;            Val: '1000'),                                      // 1880: Arguments[29] max Arguments[24]
    (Info: triOk;            Val: '1000'),                                      // 1881: Arguments[29] max Arguments[25]
    (Info: triOk;            Val: '1000'),                                      // 1882: Arguments[29] max Arguments[26]
    (Info: triOk;            Val: '1000'),                                      // 1883: Arguments[29] max Arguments[27]
    (Info: triOk;            Val: '1000'),                                      // 1884: Arguments[29] max Arguments[28]
    (Info: triOk;            Val: '1000'),                                      // 1885: Arguments[29] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1886: Arguments[29] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1887: Arguments[29] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1888: Arguments[29] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1889: Arguments[29] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1890: Arguments[29] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1891: Arguments[29] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1892: Arguments[29] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1893: Arguments[29] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1894: Arguments[29] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1895: Arguments[29] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1896: Arguments[29] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1897: Arguments[29] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1898: Arguments[29] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1899: Arguments[29] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1900: Arguments[29] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1901: Arguments[29] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1902: Arguments[29] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1903: Arguments[29] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1904: Arguments[29] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1905: Arguments[29] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1906: Arguments[29] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1907: Arguments[29] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1908: Arguments[29] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1909: Arguments[29] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1910: Arguments[29] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1911: Arguments[29] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1912: Arguments[29] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1913: Arguments[29] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1914: Arguments[29] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1915: Arguments[29] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1916: Arguments[29] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1917: Arguments[29] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1918: Arguments[29] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1919: Arguments[29] max Arguments[63]
    (Info: triOk;            Val: '10000'),                                     // 1920: Arguments[30] max Arguments[0]
    (Info: triOk;            Val: '10000'),                                     // 1921: Arguments[30] max Arguments[1]
    (Info: triOk;            Val: '10000'),                                     // 1922: Arguments[30] max Arguments[2]
    (Info: triOk;            Val: '10000'),                                     // 1923: Arguments[30] max Arguments[3]
    (Info: triOk;            Val: '10000'),                                     // 1924: Arguments[30] max Arguments[4]
    (Info: triOk;            Val: '10000'),                                     // 1925: Arguments[30] max Arguments[5]
    (Info: triOk;            Val: '10000'),                                     // 1926: Arguments[30] max Arguments[6]
    (Info: triOk;            Val: '10000'),                                     // 1927: Arguments[30] max Arguments[7]
    (Info: triOk;            Val: '10000'),                                     // 1928: Arguments[30] max Arguments[8]
    (Info: triOk;            Val: '10000'),                                     // 1929: Arguments[30] max Arguments[9]
    (Info: triOk;            Val: '10000'),                                     // 1930: Arguments[30] max Arguments[10]
    (Info: triOk;            Val: '10000'),                                     // 1931: Arguments[30] max Arguments[11]
    (Info: triOk;            Val: '10000'),                                     // 1932: Arguments[30] max Arguments[12]
    (Info: triOk;            Val: '10000'),                                     // 1933: Arguments[30] max Arguments[13]
    (Info: triOk;            Val: '10000'),                                     // 1934: Arguments[30] max Arguments[14]
    (Info: triOk;            Val: '10000'),                                     // 1935: Arguments[30] max Arguments[15]
    (Info: triOk;            Val: '10000'),                                     // 1936: Arguments[30] max Arguments[16]
    (Info: triOk;            Val: '10000'),                                     // 1937: Arguments[30] max Arguments[17]
    (Info: triOk;            Val: '10000'),                                     // 1938: Arguments[30] max Arguments[18]
    (Info: triOk;            Val: '10000'),                                     // 1939: Arguments[30] max Arguments[19]
    (Info: triOk;            Val: '10000'),                                     // 1940: Arguments[30] max Arguments[20]
    (Info: triOk;            Val: '10000'),                                     // 1941: Arguments[30] max Arguments[21]
    (Info: triOk;            Val: '10000'),                                     // 1942: Arguments[30] max Arguments[22]
    (Info: triOk;            Val: '10000'),                                     // 1943: Arguments[30] max Arguments[23]
    (Info: triOk;            Val: '10000'),                                     // 1944: Arguments[30] max Arguments[24]
    (Info: triOk;            Val: '10000'),                                     // 1945: Arguments[30] max Arguments[25]
    (Info: triOk;            Val: '10000'),                                     // 1946: Arguments[30] max Arguments[26]
    (Info: triOk;            Val: '10000'),                                     // 1947: Arguments[30] max Arguments[27]
    (Info: triOk;            Val: '10000'),                                     // 1948: Arguments[30] max Arguments[28]
    (Info: triOk;            Val: '10000'),                                     // 1949: Arguments[30] max Arguments[29]
    (Info: triOk;            Val: '10000'),                                     // 1950: Arguments[30] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 1951: Arguments[30] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 1952: Arguments[30] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 1953: Arguments[30] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 1954: Arguments[30] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 1955: Arguments[30] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 1956: Arguments[30] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 1957: Arguments[30] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 1958: Arguments[30] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 1959: Arguments[30] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 1960: Arguments[30] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 1961: Arguments[30] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 1962: Arguments[30] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 1963: Arguments[30] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 1964: Arguments[30] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 1965: Arguments[30] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 1966: Arguments[30] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 1967: Arguments[30] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 1968: Arguments[30] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 1969: Arguments[30] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 1970: Arguments[30] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 1971: Arguments[30] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 1972: Arguments[30] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 1973: Arguments[30] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 1974: Arguments[30] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 1975: Arguments[30] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 1976: Arguments[30] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 1977: Arguments[30] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 1978: Arguments[30] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 1979: Arguments[30] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 1980: Arguments[30] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 1981: Arguments[30] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 1982: Arguments[30] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 1983: Arguments[30] max Arguments[63]
    (Info: triOk;            Val: '100000'),                                    // 1984: Arguments[31] max Arguments[0]
    (Info: triOk;            Val: '100000'),                                    // 1985: Arguments[31] max Arguments[1]
    (Info: triOk;            Val: '100000'),                                    // 1986: Arguments[31] max Arguments[2]
    (Info: triOk;            Val: '100000'),                                    // 1987: Arguments[31] max Arguments[3]
    (Info: triOk;            Val: '100000'),                                    // 1988: Arguments[31] max Arguments[4]
    (Info: triOk;            Val: '100000'),                                    // 1989: Arguments[31] max Arguments[5]
    (Info: triOk;            Val: '100000'),                                    // 1990: Arguments[31] max Arguments[6]
    (Info: triOk;            Val: '100000'),                                    // 1991: Arguments[31] max Arguments[7]
    (Info: triOk;            Val: '100000'),                                    // 1992: Arguments[31] max Arguments[8]
    (Info: triOk;            Val: '100000'),                                    // 1993: Arguments[31] max Arguments[9]
    (Info: triOk;            Val: '100000'),                                    // 1994: Arguments[31] max Arguments[10]
    (Info: triOk;            Val: '100000'),                                    // 1995: Arguments[31] max Arguments[11]
    (Info: triOk;            Val: '100000'),                                    // 1996: Arguments[31] max Arguments[12]
    (Info: triOk;            Val: '100000'),                                    // 1997: Arguments[31] max Arguments[13]
    (Info: triOk;            Val: '100000'),                                    // 1998: Arguments[31] max Arguments[14]
    (Info: triOk;            Val: '100000'),                                    // 1999: Arguments[31] max Arguments[15]
    (Info: triOk;            Val: '100000'),                                    // 2000: Arguments[31] max Arguments[16]
    (Info: triOk;            Val: '100000'),                                    // 2001: Arguments[31] max Arguments[17]
    (Info: triOk;            Val: '100000'),                                    // 2002: Arguments[31] max Arguments[18]
    (Info: triOk;            Val: '100000'),                                    // 2003: Arguments[31] max Arguments[19]
    (Info: triOk;            Val: '100000'),                                    // 2004: Arguments[31] max Arguments[20]
    (Info: triOk;            Val: '100000'),                                    // 2005: Arguments[31] max Arguments[21]
    (Info: triOk;            Val: '100000'),                                    // 2006: Arguments[31] max Arguments[22]
    (Info: triOk;            Val: '100000'),                                    // 2007: Arguments[31] max Arguments[23]
    (Info: triOk;            Val: '100000'),                                    // 2008: Arguments[31] max Arguments[24]
    (Info: triOk;            Val: '100000'),                                    // 2009: Arguments[31] max Arguments[25]
    (Info: triOk;            Val: '100000'),                                    // 2010: Arguments[31] max Arguments[26]
    (Info: triOk;            Val: '100000'),                                    // 2011: Arguments[31] max Arguments[27]
    (Info: triOk;            Val: '100000'),                                    // 2012: Arguments[31] max Arguments[28]
    (Info: triOk;            Val: '100000'),                                    // 2013: Arguments[31] max Arguments[29]
    (Info: triOk;            Val: '100000'),                                    // 2014: Arguments[31] max Arguments[30]
    (Info: triOk;            Val: '100000'),                                    // 2015: Arguments[31] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2016: Arguments[31] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2017: Arguments[31] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2018: Arguments[31] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2019: Arguments[31] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2020: Arguments[31] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2021: Arguments[31] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2022: Arguments[31] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2023: Arguments[31] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2024: Arguments[31] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2025: Arguments[31] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2026: Arguments[31] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2027: Arguments[31] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2028: Arguments[31] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2029: Arguments[31] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2030: Arguments[31] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2031: Arguments[31] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2032: Arguments[31] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2033: Arguments[31] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2034: Arguments[31] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2035: Arguments[31] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2036: Arguments[31] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2037: Arguments[31] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2038: Arguments[31] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2039: Arguments[31] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2040: Arguments[31] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2041: Arguments[31] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2042: Arguments[31] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2043: Arguments[31] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2044: Arguments[31] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2045: Arguments[31] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2046: Arguments[31] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2047: Arguments[31] max Arguments[63]
    (Info: triOk;            Val: '1000000'),                                   // 2048: Arguments[32] max Arguments[0]
    (Info: triOk;            Val: '1000000'),                                   // 2049: Arguments[32] max Arguments[1]
    (Info: triOk;            Val: '1000000'),                                   // 2050: Arguments[32] max Arguments[2]
    (Info: triOk;            Val: '1000000'),                                   // 2051: Arguments[32] max Arguments[3]
    (Info: triOk;            Val: '1000000'),                                   // 2052: Arguments[32] max Arguments[4]
    (Info: triOk;            Val: '1000000'),                                   // 2053: Arguments[32] max Arguments[5]
    (Info: triOk;            Val: '1000000'),                                   // 2054: Arguments[32] max Arguments[6]
    (Info: triOk;            Val: '1000000'),                                   // 2055: Arguments[32] max Arguments[7]
    (Info: triOk;            Val: '1000000'),                                   // 2056: Arguments[32] max Arguments[8]
    (Info: triOk;            Val: '1000000'),                                   // 2057: Arguments[32] max Arguments[9]
    (Info: triOk;            Val: '1000000'),                                   // 2058: Arguments[32] max Arguments[10]
    (Info: triOk;            Val: '1000000'),                                   // 2059: Arguments[32] max Arguments[11]
    (Info: triOk;            Val: '1000000'),                                   // 2060: Arguments[32] max Arguments[12]
    (Info: triOk;            Val: '1000000'),                                   // 2061: Arguments[32] max Arguments[13]
    (Info: triOk;            Val: '1000000'),                                   // 2062: Arguments[32] max Arguments[14]
    (Info: triOk;            Val: '1000000'),                                   // 2063: Arguments[32] max Arguments[15]
    (Info: triOk;            Val: '1000000'),                                   // 2064: Arguments[32] max Arguments[16]
    (Info: triOk;            Val: '1000000'),                                   // 2065: Arguments[32] max Arguments[17]
    (Info: triOk;            Val: '1000000'),                                   // 2066: Arguments[32] max Arguments[18]
    (Info: triOk;            Val: '1000000'),                                   // 2067: Arguments[32] max Arguments[19]
    (Info: triOk;            Val: '1000000'),                                   // 2068: Arguments[32] max Arguments[20]
    (Info: triOk;            Val: '1000000'),                                   // 2069: Arguments[32] max Arguments[21]
    (Info: triOk;            Val: '1000000'),                                   // 2070: Arguments[32] max Arguments[22]
    (Info: triOk;            Val: '1000000'),                                   // 2071: Arguments[32] max Arguments[23]
    (Info: triOk;            Val: '1000000'),                                   // 2072: Arguments[32] max Arguments[24]
    (Info: triOk;            Val: '1000000'),                                   // 2073: Arguments[32] max Arguments[25]
    (Info: triOk;            Val: '1000000'),                                   // 2074: Arguments[32] max Arguments[26]
    (Info: triOk;            Val: '1000000'),                                   // 2075: Arguments[32] max Arguments[27]
    (Info: triOk;            Val: '1000000'),                                   // 2076: Arguments[32] max Arguments[28]
    (Info: triOk;            Val: '1000000'),                                   // 2077: Arguments[32] max Arguments[29]
    (Info: triOk;            Val: '1000000'),                                   // 2078: Arguments[32] max Arguments[30]
    (Info: triOk;            Val: '1000000'),                                   // 2079: Arguments[32] max Arguments[31]
    (Info: triOk;            Val: '1000000'),                                   // 2080: Arguments[32] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2081: Arguments[32] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2082: Arguments[32] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2083: Arguments[32] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2084: Arguments[32] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2085: Arguments[32] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2086: Arguments[32] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2087: Arguments[32] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2088: Arguments[32] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2089: Arguments[32] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2090: Arguments[32] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2091: Arguments[32] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2092: Arguments[32] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2093: Arguments[32] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2094: Arguments[32] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2095: Arguments[32] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2096: Arguments[32] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2097: Arguments[32] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2098: Arguments[32] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2099: Arguments[32] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2100: Arguments[32] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2101: Arguments[32] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2102: Arguments[32] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2103: Arguments[32] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2104: Arguments[32] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2105: Arguments[32] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2106: Arguments[32] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2107: Arguments[32] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2108: Arguments[32] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2109: Arguments[32] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 2110: Arguments[32] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2111: Arguments[32] max Arguments[63]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2112: Arguments[33] max Arguments[0]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2113: Arguments[33] max Arguments[1]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2114: Arguments[33] max Arguments[2]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2115: Arguments[33] max Arguments[3]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2116: Arguments[33] max Arguments[4]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2117: Arguments[33] max Arguments[5]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2118: Arguments[33] max Arguments[6]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2119: Arguments[33] max Arguments[7]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2120: Arguments[33] max Arguments[8]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2121: Arguments[33] max Arguments[9]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2122: Arguments[33] max Arguments[10]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2123: Arguments[33] max Arguments[11]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2124: Arguments[33] max Arguments[12]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2125: Arguments[33] max Arguments[13]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2126: Arguments[33] max Arguments[14]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2127: Arguments[33] max Arguments[15]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2128: Arguments[33] max Arguments[16]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2129: Arguments[33] max Arguments[17]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2130: Arguments[33] max Arguments[18]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2131: Arguments[33] max Arguments[19]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2132: Arguments[33] max Arguments[20]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2133: Arguments[33] max Arguments[21]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2134: Arguments[33] max Arguments[22]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2135: Arguments[33] max Arguments[23]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2136: Arguments[33] max Arguments[24]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2137: Arguments[33] max Arguments[25]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2138: Arguments[33] max Arguments[26]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2139: Arguments[33] max Arguments[27]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2140: Arguments[33] max Arguments[28]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2141: Arguments[33] max Arguments[29]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2142: Arguments[33] max Arguments[30]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2143: Arguments[33] max Arguments[31]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2144: Arguments[33] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2145: Arguments[33] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2146: Arguments[33] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2147: Arguments[33] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2148: Arguments[33] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2149: Arguments[33] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2150: Arguments[33] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2151: Arguments[33] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2152: Arguments[33] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2153: Arguments[33] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2154: Arguments[33] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2155: Arguments[33] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2156: Arguments[33] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2157: Arguments[33] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2158: Arguments[33] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2159: Arguments[33] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2160: Arguments[33] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2161: Arguments[33] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2162: Arguments[33] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2163: Arguments[33] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2164: Arguments[33] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2165: Arguments[33] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2166: Arguments[33] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2167: Arguments[33] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2168: Arguments[33] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2169: Arguments[33] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2170: Arguments[33] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2171: Arguments[33] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2172: Arguments[33] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2173: Arguments[33] max Arguments[61]
    (Info: triOk;            Val: '4234575746049986044'),                       // 2174: Arguments[33] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2175: Arguments[33] max Arguments[63]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2176: Arguments[34] max Arguments[0]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2177: Arguments[34] max Arguments[1]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2178: Arguments[34] max Arguments[2]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2179: Arguments[34] max Arguments[3]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2180: Arguments[34] max Arguments[4]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2181: Arguments[34] max Arguments[5]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2182: Arguments[34] max Arguments[6]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2183: Arguments[34] max Arguments[7]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2184: Arguments[34] max Arguments[8]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2185: Arguments[34] max Arguments[9]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2186: Arguments[34] max Arguments[10]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2187: Arguments[34] max Arguments[11]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2188: Arguments[34] max Arguments[12]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2189: Arguments[34] max Arguments[13]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2190: Arguments[34] max Arguments[14]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2191: Arguments[34] max Arguments[15]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2192: Arguments[34] max Arguments[16]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2193: Arguments[34] max Arguments[17]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2194: Arguments[34] max Arguments[18]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2195: Arguments[34] max Arguments[19]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2196: Arguments[34] max Arguments[20]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2197: Arguments[34] max Arguments[21]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2198: Arguments[34] max Arguments[22]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2199: Arguments[34] max Arguments[23]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2200: Arguments[34] max Arguments[24]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2201: Arguments[34] max Arguments[25]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2202: Arguments[34] max Arguments[26]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2203: Arguments[34] max Arguments[27]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2204: Arguments[34] max Arguments[28]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2205: Arguments[34] max Arguments[29]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2206: Arguments[34] max Arguments[30]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2207: Arguments[34] max Arguments[31]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2208: Arguments[34] max Arguments[32]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2209: Arguments[34] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2210: Arguments[34] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2211: Arguments[34] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2212: Arguments[34] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2213: Arguments[34] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2214: Arguments[34] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2215: Arguments[34] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2216: Arguments[34] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2217: Arguments[34] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2218: Arguments[34] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2219: Arguments[34] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2220: Arguments[34] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2221: Arguments[34] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2222: Arguments[34] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2223: Arguments[34] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2224: Arguments[34] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2225: Arguments[34] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2226: Arguments[34] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2227: Arguments[34] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2228: Arguments[34] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2229: Arguments[34] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2230: Arguments[34] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2231: Arguments[34] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2232: Arguments[34] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2233: Arguments[34] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2234: Arguments[34] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2235: Arguments[34] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2236: Arguments[34] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2237: Arguments[34] max Arguments[61]
    (Info: triOk;            Val: '5387241703157997895'),                       // 2238: Arguments[34] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2239: Arguments[34] max Arguments[63]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2240: Arguments[35] max Arguments[0]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2241: Arguments[35] max Arguments[1]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2242: Arguments[35] max Arguments[2]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2243: Arguments[35] max Arguments[3]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2244: Arguments[35] max Arguments[4]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2245: Arguments[35] max Arguments[5]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2246: Arguments[35] max Arguments[6]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2247: Arguments[35] max Arguments[7]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2248: Arguments[35] max Arguments[8]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2249: Arguments[35] max Arguments[9]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2250: Arguments[35] max Arguments[10]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2251: Arguments[35] max Arguments[11]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2252: Arguments[35] max Arguments[12]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2253: Arguments[35] max Arguments[13]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2254: Arguments[35] max Arguments[14]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2255: Arguments[35] max Arguments[15]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2256: Arguments[35] max Arguments[16]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2257: Arguments[35] max Arguments[17]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2258: Arguments[35] max Arguments[18]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2259: Arguments[35] max Arguments[19]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2260: Arguments[35] max Arguments[20]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2261: Arguments[35] max Arguments[21]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2262: Arguments[35] max Arguments[22]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2263: Arguments[35] max Arguments[23]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2264: Arguments[35] max Arguments[24]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2265: Arguments[35] max Arguments[25]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2266: Arguments[35] max Arguments[26]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2267: Arguments[35] max Arguments[27]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2268: Arguments[35] max Arguments[28]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2269: Arguments[35] max Arguments[29]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2270: Arguments[35] max Arguments[30]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2271: Arguments[35] max Arguments[31]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2272: Arguments[35] max Arguments[32]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2273: Arguments[35] max Arguments[33]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2274: Arguments[35] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2275: Arguments[35] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2276: Arguments[35] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2277: Arguments[35] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2278: Arguments[35] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2279: Arguments[35] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2280: Arguments[35] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2281: Arguments[35] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2282: Arguments[35] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2283: Arguments[35] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2284: Arguments[35] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2285: Arguments[35] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2286: Arguments[35] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2287: Arguments[35] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2288: Arguments[35] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2289: Arguments[35] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2290: Arguments[35] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2291: Arguments[35] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2292: Arguments[35] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2293: Arguments[35] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2294: Arguments[35] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2295: Arguments[35] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2296: Arguments[35] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2297: Arguments[35] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2298: Arguments[35] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2299: Arguments[35] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2300: Arguments[35] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2301: Arguments[35] max Arguments[61]
    (Info: triOk;            Val: '9223372041149612032'),                       // 2302: Arguments[35] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2303: Arguments[35] max Arguments[63]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2304: Arguments[36] max Arguments[0]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2305: Arguments[36] max Arguments[1]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2306: Arguments[36] max Arguments[2]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2307: Arguments[36] max Arguments[3]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2308: Arguments[36] max Arguments[4]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2309: Arguments[36] max Arguments[5]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2310: Arguments[36] max Arguments[6]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2311: Arguments[36] max Arguments[7]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2312: Arguments[36] max Arguments[8]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2313: Arguments[36] max Arguments[9]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2314: Arguments[36] max Arguments[10]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2315: Arguments[36] max Arguments[11]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2316: Arguments[36] max Arguments[12]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2317: Arguments[36] max Arguments[13]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2318: Arguments[36] max Arguments[14]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2319: Arguments[36] max Arguments[15]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2320: Arguments[36] max Arguments[16]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2321: Arguments[36] max Arguments[17]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2322: Arguments[36] max Arguments[18]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2323: Arguments[36] max Arguments[19]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2324: Arguments[36] max Arguments[20]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2325: Arguments[36] max Arguments[21]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2326: Arguments[36] max Arguments[22]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2327: Arguments[36] max Arguments[23]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2328: Arguments[36] max Arguments[24]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2329: Arguments[36] max Arguments[25]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2330: Arguments[36] max Arguments[26]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2331: Arguments[36] max Arguments[27]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2332: Arguments[36] max Arguments[28]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2333: Arguments[36] max Arguments[29]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2334: Arguments[36] max Arguments[30]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2335: Arguments[36] max Arguments[31]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2336: Arguments[36] max Arguments[32]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2337: Arguments[36] max Arguments[33]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2338: Arguments[36] max Arguments[34]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2339: Arguments[36] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2340: Arguments[36] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2341: Arguments[36] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2342: Arguments[36] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2343: Arguments[36] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2344: Arguments[36] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2345: Arguments[36] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2346: Arguments[36] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2347: Arguments[36] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2348: Arguments[36] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2349: Arguments[36] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2350: Arguments[36] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2351: Arguments[36] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2352: Arguments[36] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2353: Arguments[36] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2354: Arguments[36] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2355: Arguments[36] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2356: Arguments[36] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2357: Arguments[36] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2358: Arguments[36] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2359: Arguments[36] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2360: Arguments[36] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2361: Arguments[36] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2362: Arguments[36] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2363: Arguments[36] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2364: Arguments[36] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2365: Arguments[36] max Arguments[61]
    (Info: triOk;            Val: '172872415652910937156'),                     // 2366: Arguments[36] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2367: Arguments[36] max Arguments[63]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2368: Arguments[37] max Arguments[0]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2369: Arguments[37] max Arguments[1]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2370: Arguments[37] max Arguments[2]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2371: Arguments[37] max Arguments[3]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2372: Arguments[37] max Arguments[4]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2373: Arguments[37] max Arguments[5]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2374: Arguments[37] max Arguments[6]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2375: Arguments[37] max Arguments[7]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2376: Arguments[37] max Arguments[8]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2377: Arguments[37] max Arguments[9]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2378: Arguments[37] max Arguments[10]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2379: Arguments[37] max Arguments[11]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2380: Arguments[37] max Arguments[12]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2381: Arguments[37] max Arguments[13]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2382: Arguments[37] max Arguments[14]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2383: Arguments[37] max Arguments[15]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2384: Arguments[37] max Arguments[16]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2385: Arguments[37] max Arguments[17]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2386: Arguments[37] max Arguments[18]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2387: Arguments[37] max Arguments[19]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2388: Arguments[37] max Arguments[20]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2389: Arguments[37] max Arguments[21]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2390: Arguments[37] max Arguments[22]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2391: Arguments[37] max Arguments[23]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2392: Arguments[37] max Arguments[24]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2393: Arguments[37] max Arguments[25]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2394: Arguments[37] max Arguments[26]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2395: Arguments[37] max Arguments[27]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2396: Arguments[37] max Arguments[28]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2397: Arguments[37] max Arguments[29]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2398: Arguments[37] max Arguments[30]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2399: Arguments[37] max Arguments[31]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2400: Arguments[37] max Arguments[32]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2401: Arguments[37] max Arguments[33]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2402: Arguments[37] max Arguments[34]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2403: Arguments[37] max Arguments[35]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2404: Arguments[37] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2405: Arguments[37] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2406: Arguments[37] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2407: Arguments[37] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2408: Arguments[37] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2409: Arguments[37] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2410: Arguments[37] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2411: Arguments[37] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2412: Arguments[37] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2413: Arguments[37] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2414: Arguments[37] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2415: Arguments[37] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2416: Arguments[37] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2417: Arguments[37] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2418: Arguments[37] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2419: Arguments[37] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2420: Arguments[37] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2421: Arguments[37] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2422: Arguments[37] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2423: Arguments[37] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2424: Arguments[37] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2425: Arguments[37] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2426: Arguments[37] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2427: Arguments[37] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2428: Arguments[37] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2429: Arguments[37] max Arguments[61]
    (Info: triOk;            Val: '977677435906606235647'),                     // 2430: Arguments[37] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2431: Arguments[37] max Arguments[63]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2432: Arguments[38] max Arguments[0]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2433: Arguments[38] max Arguments[1]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2434: Arguments[38] max Arguments[2]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2435: Arguments[38] max Arguments[3]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2436: Arguments[38] max Arguments[4]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2437: Arguments[38] max Arguments[5]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2438: Arguments[38] max Arguments[6]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2439: Arguments[38] max Arguments[7]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2440: Arguments[38] max Arguments[8]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2441: Arguments[38] max Arguments[9]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2442: Arguments[38] max Arguments[10]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2443: Arguments[38] max Arguments[11]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2444: Arguments[38] max Arguments[12]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2445: Arguments[38] max Arguments[13]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2446: Arguments[38] max Arguments[14]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2447: Arguments[38] max Arguments[15]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2448: Arguments[38] max Arguments[16]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2449: Arguments[38] max Arguments[17]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2450: Arguments[38] max Arguments[18]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2451: Arguments[38] max Arguments[19]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2452: Arguments[38] max Arguments[20]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2453: Arguments[38] max Arguments[21]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2454: Arguments[38] max Arguments[22]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2455: Arguments[38] max Arguments[23]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2456: Arguments[38] max Arguments[24]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2457: Arguments[38] max Arguments[25]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2458: Arguments[38] max Arguments[26]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2459: Arguments[38] max Arguments[27]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2460: Arguments[38] max Arguments[28]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2461: Arguments[38] max Arguments[29]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2462: Arguments[38] max Arguments[30]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2463: Arguments[38] max Arguments[31]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2464: Arguments[38] max Arguments[32]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2465: Arguments[38] max Arguments[33]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2466: Arguments[38] max Arguments[34]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2467: Arguments[38] max Arguments[35]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2468: Arguments[38] max Arguments[36]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2469: Arguments[38] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2470: Arguments[38] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2471: Arguments[38] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2472: Arguments[38] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2473: Arguments[38] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2474: Arguments[38] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2475: Arguments[38] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2476: Arguments[38] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2477: Arguments[38] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2478: Arguments[38] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2479: Arguments[38] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2480: Arguments[38] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2481: Arguments[38] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2482: Arguments[38] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2483: Arguments[38] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2484: Arguments[38] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2485: Arguments[38] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2486: Arguments[38] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2487: Arguments[38] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2488: Arguments[38] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2489: Arguments[38] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2490: Arguments[38] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2491: Arguments[38] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2492: Arguments[38] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2493: Arguments[38] max Arguments[61]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 2494: Arguments[38] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2495: Arguments[38] max Arguments[63]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2496: Arguments[39] max Arguments[0]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2497: Arguments[39] max Arguments[1]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2498: Arguments[39] max Arguments[2]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2499: Arguments[39] max Arguments[3]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2500: Arguments[39] max Arguments[4]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2501: Arguments[39] max Arguments[5]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2502: Arguments[39] max Arguments[6]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2503: Arguments[39] max Arguments[7]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2504: Arguments[39] max Arguments[8]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2505: Arguments[39] max Arguments[9]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2506: Arguments[39] max Arguments[10]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2507: Arguments[39] max Arguments[11]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2508: Arguments[39] max Arguments[12]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2509: Arguments[39] max Arguments[13]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2510: Arguments[39] max Arguments[14]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2511: Arguments[39] max Arguments[15]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2512: Arguments[39] max Arguments[16]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2513: Arguments[39] max Arguments[17]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2514: Arguments[39] max Arguments[18]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2515: Arguments[39] max Arguments[19]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2516: Arguments[39] max Arguments[20]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2517: Arguments[39] max Arguments[21]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2518: Arguments[39] max Arguments[22]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2519: Arguments[39] max Arguments[23]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2520: Arguments[39] max Arguments[24]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2521: Arguments[39] max Arguments[25]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2522: Arguments[39] max Arguments[26]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2523: Arguments[39] max Arguments[27]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2524: Arguments[39] max Arguments[28]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2525: Arguments[39] max Arguments[29]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2526: Arguments[39] max Arguments[30]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2527: Arguments[39] max Arguments[31]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2528: Arguments[39] max Arguments[32]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2529: Arguments[39] max Arguments[33]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2530: Arguments[39] max Arguments[34]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2531: Arguments[39] max Arguments[35]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2532: Arguments[39] max Arguments[36]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2533: Arguments[39] max Arguments[37]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2534: Arguments[39] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2535: Arguments[39] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2536: Arguments[39] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2537: Arguments[39] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2538: Arguments[39] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2539: Arguments[39] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2540: Arguments[39] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2541: Arguments[39] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2542: Arguments[39] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2543: Arguments[39] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2544: Arguments[39] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2545: Arguments[39] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2546: Arguments[39] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2547: Arguments[39] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2548: Arguments[39] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2549: Arguments[39] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2550: Arguments[39] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2551: Arguments[39] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2552: Arguments[39] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2553: Arguments[39] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2554: Arguments[39] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2555: Arguments[39] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2556: Arguments[39] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2557: Arguments[39] max Arguments[61]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 2558: Arguments[39] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2559: Arguments[39] max Arguments[63]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2560: Arguments[40] max Arguments[0]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2561: Arguments[40] max Arguments[1]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2562: Arguments[40] max Arguments[2]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2563: Arguments[40] max Arguments[3]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2564: Arguments[40] max Arguments[4]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2565: Arguments[40] max Arguments[5]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2566: Arguments[40] max Arguments[6]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2567: Arguments[40] max Arguments[7]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2568: Arguments[40] max Arguments[8]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2569: Arguments[40] max Arguments[9]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2570: Arguments[40] max Arguments[10]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2571: Arguments[40] max Arguments[11]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2572: Arguments[40] max Arguments[12]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2573: Arguments[40] max Arguments[13]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2574: Arguments[40] max Arguments[14]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2575: Arguments[40] max Arguments[15]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2576: Arguments[40] max Arguments[16]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2577: Arguments[40] max Arguments[17]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2578: Arguments[40] max Arguments[18]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2579: Arguments[40] max Arguments[19]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2580: Arguments[40] max Arguments[20]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2581: Arguments[40] max Arguments[21]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2582: Arguments[40] max Arguments[22]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2583: Arguments[40] max Arguments[23]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2584: Arguments[40] max Arguments[24]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2585: Arguments[40] max Arguments[25]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2586: Arguments[40] max Arguments[26]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2587: Arguments[40] max Arguments[27]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2588: Arguments[40] max Arguments[28]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2589: Arguments[40] max Arguments[29]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2590: Arguments[40] max Arguments[30]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2591: Arguments[40] max Arguments[31]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2592: Arguments[40] max Arguments[32]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2593: Arguments[40] max Arguments[33]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2594: Arguments[40] max Arguments[34]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2595: Arguments[40] max Arguments[35]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2596: Arguments[40] max Arguments[36]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2597: Arguments[40] max Arguments[37]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2598: Arguments[40] max Arguments[38]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2599: Arguments[40] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2600: Arguments[40] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2601: Arguments[40] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2602: Arguments[40] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2603: Arguments[40] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2604: Arguments[40] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2605: Arguments[40] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2606: Arguments[40] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2607: Arguments[40] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2608: Arguments[40] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2609: Arguments[40] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2610: Arguments[40] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2611: Arguments[40] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2612: Arguments[40] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2613: Arguments[40] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2614: Arguments[40] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2615: Arguments[40] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2616: Arguments[40] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2617: Arguments[40] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2618: Arguments[40] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2619: Arguments[40] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2620: Arguments[40] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2621: Arguments[40] max Arguments[61]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 2622: Arguments[40] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2623: Arguments[40] max Arguments[63]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2624: Arguments[41] max Arguments[0]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2625: Arguments[41] max Arguments[1]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2626: Arguments[41] max Arguments[2]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2627: Arguments[41] max Arguments[3]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2628: Arguments[41] max Arguments[4]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2629: Arguments[41] max Arguments[5]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2630: Arguments[41] max Arguments[6]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2631: Arguments[41] max Arguments[7]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2632: Arguments[41] max Arguments[8]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2633: Arguments[41] max Arguments[9]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2634: Arguments[41] max Arguments[10]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2635: Arguments[41] max Arguments[11]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2636: Arguments[41] max Arguments[12]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2637: Arguments[41] max Arguments[13]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2638: Arguments[41] max Arguments[14]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2639: Arguments[41] max Arguments[15]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2640: Arguments[41] max Arguments[16]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2641: Arguments[41] max Arguments[17]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2642: Arguments[41] max Arguments[18]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2643: Arguments[41] max Arguments[19]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2644: Arguments[41] max Arguments[20]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2645: Arguments[41] max Arguments[21]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2646: Arguments[41] max Arguments[22]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2647: Arguments[41] max Arguments[23]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2648: Arguments[41] max Arguments[24]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2649: Arguments[41] max Arguments[25]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2650: Arguments[41] max Arguments[26]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2651: Arguments[41] max Arguments[27]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2652: Arguments[41] max Arguments[28]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2653: Arguments[41] max Arguments[29]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2654: Arguments[41] max Arguments[30]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2655: Arguments[41] max Arguments[31]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2656: Arguments[41] max Arguments[32]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2657: Arguments[41] max Arguments[33]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2658: Arguments[41] max Arguments[34]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2659: Arguments[41] max Arguments[35]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2660: Arguments[41] max Arguments[36]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2661: Arguments[41] max Arguments[37]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2662: Arguments[41] max Arguments[38]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2663: Arguments[41] max Arguments[39]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2664: Arguments[41] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2665: Arguments[41] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2666: Arguments[41] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2667: Arguments[41] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2668: Arguments[41] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2669: Arguments[41] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2670: Arguments[41] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2671: Arguments[41] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2672: Arguments[41] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2673: Arguments[41] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2674: Arguments[41] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2675: Arguments[41] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2676: Arguments[41] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2677: Arguments[41] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2678: Arguments[41] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2679: Arguments[41] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2680: Arguments[41] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2681: Arguments[41] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2682: Arguments[41] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2683: Arguments[41] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2684: Arguments[41] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2685: Arguments[41] max Arguments[61]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 2686: Arguments[41] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2687: Arguments[41] max Arguments[63]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2688: Arguments[42] max Arguments[0]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2689: Arguments[42] max Arguments[1]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2690: Arguments[42] max Arguments[2]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2691: Arguments[42] max Arguments[3]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2692: Arguments[42] max Arguments[4]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2693: Arguments[42] max Arguments[5]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2694: Arguments[42] max Arguments[6]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2695: Arguments[42] max Arguments[7]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2696: Arguments[42] max Arguments[8]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2697: Arguments[42] max Arguments[9]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2698: Arguments[42] max Arguments[10]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2699: Arguments[42] max Arguments[11]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2700: Arguments[42] max Arguments[12]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2701: Arguments[42] max Arguments[13]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2702: Arguments[42] max Arguments[14]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2703: Arguments[42] max Arguments[15]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2704: Arguments[42] max Arguments[16]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2705: Arguments[42] max Arguments[17]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2706: Arguments[42] max Arguments[18]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2707: Arguments[42] max Arguments[19]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2708: Arguments[42] max Arguments[20]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2709: Arguments[42] max Arguments[21]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2710: Arguments[42] max Arguments[22]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2711: Arguments[42] max Arguments[23]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2712: Arguments[42] max Arguments[24]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2713: Arguments[42] max Arguments[25]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2714: Arguments[42] max Arguments[26]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2715: Arguments[42] max Arguments[27]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2716: Arguments[42] max Arguments[28]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2717: Arguments[42] max Arguments[29]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2718: Arguments[42] max Arguments[30]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2719: Arguments[42] max Arguments[31]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2720: Arguments[42] max Arguments[32]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2721: Arguments[42] max Arguments[33]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2722: Arguments[42] max Arguments[34]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2723: Arguments[42] max Arguments[35]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2724: Arguments[42] max Arguments[36]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2725: Arguments[42] max Arguments[37]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2726: Arguments[42] max Arguments[38]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2727: Arguments[42] max Arguments[39]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2728: Arguments[42] max Arguments[40]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2729: Arguments[42] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2730: Arguments[42] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2731: Arguments[42] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2732: Arguments[42] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2733: Arguments[42] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2734: Arguments[42] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2735: Arguments[42] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2736: Arguments[42] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2737: Arguments[42] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2738: Arguments[42] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2739: Arguments[42] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2740: Arguments[42] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2741: Arguments[42] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2742: Arguments[42] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2743: Arguments[42] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2744: Arguments[42] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2745: Arguments[42] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2746: Arguments[42] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2747: Arguments[42] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2748: Arguments[42] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2749: Arguments[42] max Arguments[61]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 2750: Arguments[42] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2751: Arguments[42] max Arguments[63]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2752: Arguments[43] max Arguments[0]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2753: Arguments[43] max Arguments[1]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2754: Arguments[43] max Arguments[2]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2755: Arguments[43] max Arguments[3]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2756: Arguments[43] max Arguments[4]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2757: Arguments[43] max Arguments[5]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2758: Arguments[43] max Arguments[6]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2759: Arguments[43] max Arguments[7]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2760: Arguments[43] max Arguments[8]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2761: Arguments[43] max Arguments[9]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2762: Arguments[43] max Arguments[10]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2763: Arguments[43] max Arguments[11]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2764: Arguments[43] max Arguments[12]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2765: Arguments[43] max Arguments[13]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2766: Arguments[43] max Arguments[14]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2767: Arguments[43] max Arguments[15]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2768: Arguments[43] max Arguments[16]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2769: Arguments[43] max Arguments[17]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2770: Arguments[43] max Arguments[18]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2771: Arguments[43] max Arguments[19]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2772: Arguments[43] max Arguments[20]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2773: Arguments[43] max Arguments[21]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2774: Arguments[43] max Arguments[22]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2775: Arguments[43] max Arguments[23]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2776: Arguments[43] max Arguments[24]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2777: Arguments[43] max Arguments[25]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2778: Arguments[43] max Arguments[26]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2779: Arguments[43] max Arguments[27]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2780: Arguments[43] max Arguments[28]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2781: Arguments[43] max Arguments[29]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2782: Arguments[43] max Arguments[30]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2783: Arguments[43] max Arguments[31]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2784: Arguments[43] max Arguments[32]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2785: Arguments[43] max Arguments[33]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2786: Arguments[43] max Arguments[34]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2787: Arguments[43] max Arguments[35]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2788: Arguments[43] max Arguments[36]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2789: Arguments[43] max Arguments[37]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2790: Arguments[43] max Arguments[38]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2791: Arguments[43] max Arguments[39]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2792: Arguments[43] max Arguments[40]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2793: Arguments[43] max Arguments[41]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2794: Arguments[43] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2795: Arguments[43] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2796: Arguments[43] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2797: Arguments[43] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2798: Arguments[43] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2799: Arguments[43] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2800: Arguments[43] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2801: Arguments[43] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2802: Arguments[43] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2803: Arguments[43] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2804: Arguments[43] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2805: Arguments[43] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2806: Arguments[43] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2807: Arguments[43] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2808: Arguments[43] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2809: Arguments[43] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2810: Arguments[43] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2811: Arguments[43] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2812: Arguments[43] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2813: Arguments[43] max Arguments[61]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 2814: Arguments[43] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2815: Arguments[43] max Arguments[63]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2816: Arguments[44] max Arguments[0]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2817: Arguments[44] max Arguments[1]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2818: Arguments[44] max Arguments[2]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2819: Arguments[44] max Arguments[3]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2820: Arguments[44] max Arguments[4]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2821: Arguments[44] max Arguments[5]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2822: Arguments[44] max Arguments[6]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2823: Arguments[44] max Arguments[7]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2824: Arguments[44] max Arguments[8]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2825: Arguments[44] max Arguments[9]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2826: Arguments[44] max Arguments[10]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2827: Arguments[44] max Arguments[11]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2828: Arguments[44] max Arguments[12]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2829: Arguments[44] max Arguments[13]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2830: Arguments[44] max Arguments[14]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2831: Arguments[44] max Arguments[15]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2832: Arguments[44] max Arguments[16]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2833: Arguments[44] max Arguments[17]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2834: Arguments[44] max Arguments[18]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2835: Arguments[44] max Arguments[19]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2836: Arguments[44] max Arguments[20]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2837: Arguments[44] max Arguments[21]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2838: Arguments[44] max Arguments[22]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2839: Arguments[44] max Arguments[23]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2840: Arguments[44] max Arguments[24]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2841: Arguments[44] max Arguments[25]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2842: Arguments[44] max Arguments[26]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2843: Arguments[44] max Arguments[27]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2844: Arguments[44] max Arguments[28]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2845: Arguments[44] max Arguments[29]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2846: Arguments[44] max Arguments[30]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2847: Arguments[44] max Arguments[31]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2848: Arguments[44] max Arguments[32]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2849: Arguments[44] max Arguments[33]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2850: Arguments[44] max Arguments[34]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2851: Arguments[44] max Arguments[35]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2852: Arguments[44] max Arguments[36]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2853: Arguments[44] max Arguments[37]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2854: Arguments[44] max Arguments[38]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2855: Arguments[44] max Arguments[39]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2856: Arguments[44] max Arguments[40]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2857: Arguments[44] max Arguments[41]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2858: Arguments[44] max Arguments[42]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2859: Arguments[44] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2860: Arguments[44] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2861: Arguments[44] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2862: Arguments[44] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2863: Arguments[44] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2864: Arguments[44] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2865: Arguments[44] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2866: Arguments[44] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2867: Arguments[44] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2868: Arguments[44] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2869: Arguments[44] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2870: Arguments[44] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2871: Arguments[44] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2872: Arguments[44] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2873: Arguments[44] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2874: Arguments[44] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2875: Arguments[44] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2876: Arguments[44] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2877: Arguments[44] max Arguments[61]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 2878: Arguments[44] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2879: Arguments[44] max Arguments[63]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2880: Arguments[45] max Arguments[0]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2881: Arguments[45] max Arguments[1]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2882: Arguments[45] max Arguments[2]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2883: Arguments[45] max Arguments[3]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2884: Arguments[45] max Arguments[4]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2885: Arguments[45] max Arguments[5]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2886: Arguments[45] max Arguments[6]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2887: Arguments[45] max Arguments[7]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2888: Arguments[45] max Arguments[8]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2889: Arguments[45] max Arguments[9]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2890: Arguments[45] max Arguments[10]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2891: Arguments[45] max Arguments[11]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2892: Arguments[45] max Arguments[12]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2893: Arguments[45] max Arguments[13]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2894: Arguments[45] max Arguments[14]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2895: Arguments[45] max Arguments[15]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2896: Arguments[45] max Arguments[16]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2897: Arguments[45] max Arguments[17]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2898: Arguments[45] max Arguments[18]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2899: Arguments[45] max Arguments[19]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2900: Arguments[45] max Arguments[20]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2901: Arguments[45] max Arguments[21]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2902: Arguments[45] max Arguments[22]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2903: Arguments[45] max Arguments[23]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2904: Arguments[45] max Arguments[24]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2905: Arguments[45] max Arguments[25]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2906: Arguments[45] max Arguments[26]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2907: Arguments[45] max Arguments[27]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2908: Arguments[45] max Arguments[28]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2909: Arguments[45] max Arguments[29]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2910: Arguments[45] max Arguments[30]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2911: Arguments[45] max Arguments[31]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2912: Arguments[45] max Arguments[32]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2913: Arguments[45] max Arguments[33]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2914: Arguments[45] max Arguments[34]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2915: Arguments[45] max Arguments[35]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2916: Arguments[45] max Arguments[36]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2917: Arguments[45] max Arguments[37]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2918: Arguments[45] max Arguments[38]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2919: Arguments[45] max Arguments[39]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2920: Arguments[45] max Arguments[40]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2921: Arguments[45] max Arguments[41]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2922: Arguments[45] max Arguments[42]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2923: Arguments[45] max Arguments[43]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2924: Arguments[45] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2925: Arguments[45] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2926: Arguments[45] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2927: Arguments[45] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2928: Arguments[45] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2929: Arguments[45] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2930: Arguments[45] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2931: Arguments[45] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2932: Arguments[45] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2933: Arguments[45] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2934: Arguments[45] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2935: Arguments[45] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 2936: Arguments[45] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 2937: Arguments[45] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 2938: Arguments[45] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 2939: Arguments[45] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 2940: Arguments[45] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 2941: Arguments[45] max Arguments[61]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 2942: Arguments[45] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 2943: Arguments[45] max Arguments[63]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2944: Arguments[46] max Arguments[0]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2945: Arguments[46] max Arguments[1]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2946: Arguments[46] max Arguments[2]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2947: Arguments[46] max Arguments[3]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2948: Arguments[46] max Arguments[4]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2949: Arguments[46] max Arguments[5]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2950: Arguments[46] max Arguments[6]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2951: Arguments[46] max Arguments[7]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2952: Arguments[46] max Arguments[8]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2953: Arguments[46] max Arguments[9]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2954: Arguments[46] max Arguments[10]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2955: Arguments[46] max Arguments[11]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2956: Arguments[46] max Arguments[12]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2957: Arguments[46] max Arguments[13]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2958: Arguments[46] max Arguments[14]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2959: Arguments[46] max Arguments[15]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2960: Arguments[46] max Arguments[16]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2961: Arguments[46] max Arguments[17]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2962: Arguments[46] max Arguments[18]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2963: Arguments[46] max Arguments[19]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2964: Arguments[46] max Arguments[20]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2965: Arguments[46] max Arguments[21]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2966: Arguments[46] max Arguments[22]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2967: Arguments[46] max Arguments[23]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2968: Arguments[46] max Arguments[24]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2969: Arguments[46] max Arguments[25]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2970: Arguments[46] max Arguments[26]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2971: Arguments[46] max Arguments[27]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2972: Arguments[46] max Arguments[28]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2973: Arguments[46] max Arguments[29]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2974: Arguments[46] max Arguments[30]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2975: Arguments[46] max Arguments[31]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2976: Arguments[46] max Arguments[32]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2977: Arguments[46] max Arguments[33]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2978: Arguments[46] max Arguments[34]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2979: Arguments[46] max Arguments[35]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2980: Arguments[46] max Arguments[36]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2981: Arguments[46] max Arguments[37]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2982: Arguments[46] max Arguments[38]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2983: Arguments[46] max Arguments[39]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2984: Arguments[46] max Arguments[40]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2985: Arguments[46] max Arguments[41]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2986: Arguments[46] max Arguments[42]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2987: Arguments[46] max Arguments[43]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2988: Arguments[46] max Arguments[44]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2989: Arguments[46] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 2990: Arguments[46] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 2991: Arguments[46] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 2992: Arguments[46] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 2993: Arguments[46] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 2994: Arguments[46] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 2995: Arguments[46] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 2996: Arguments[46] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 2997: Arguments[46] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 2998: Arguments[46] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 2999: Arguments[46] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3000: Arguments[46] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3001: Arguments[46] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3002: Arguments[46] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3003: Arguments[46] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3004: Arguments[46] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3005: Arguments[46] max Arguments[61]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 3006: Arguments[46] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3007: Arguments[46] max Arguments[63]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3008: Arguments[47] max Arguments[0]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3009: Arguments[47] max Arguments[1]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3010: Arguments[47] max Arguments[2]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3011: Arguments[47] max Arguments[3]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3012: Arguments[47] max Arguments[4]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3013: Arguments[47] max Arguments[5]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3014: Arguments[47] max Arguments[6]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3015: Arguments[47] max Arguments[7]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3016: Arguments[47] max Arguments[8]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3017: Arguments[47] max Arguments[9]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3018: Arguments[47] max Arguments[10]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3019: Arguments[47] max Arguments[11]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3020: Arguments[47] max Arguments[12]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3021: Arguments[47] max Arguments[13]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3022: Arguments[47] max Arguments[14]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3023: Arguments[47] max Arguments[15]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3024: Arguments[47] max Arguments[16]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3025: Arguments[47] max Arguments[17]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3026: Arguments[47] max Arguments[18]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3027: Arguments[47] max Arguments[19]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3028: Arguments[47] max Arguments[20]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3029: Arguments[47] max Arguments[21]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3030: Arguments[47] max Arguments[22]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3031: Arguments[47] max Arguments[23]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3032: Arguments[47] max Arguments[24]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3033: Arguments[47] max Arguments[25]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3034: Arguments[47] max Arguments[26]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3035: Arguments[47] max Arguments[27]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3036: Arguments[47] max Arguments[28]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3037: Arguments[47] max Arguments[29]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3038: Arguments[47] max Arguments[30]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3039: Arguments[47] max Arguments[31]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3040: Arguments[47] max Arguments[32]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3041: Arguments[47] max Arguments[33]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3042: Arguments[47] max Arguments[34]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3043: Arguments[47] max Arguments[35]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3044: Arguments[47] max Arguments[36]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3045: Arguments[47] max Arguments[37]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3046: Arguments[47] max Arguments[38]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3047: Arguments[47] max Arguments[39]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3048: Arguments[47] max Arguments[40]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3049: Arguments[47] max Arguments[41]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3050: Arguments[47] max Arguments[42]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3051: Arguments[47] max Arguments[43]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3052: Arguments[47] max Arguments[44]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3053: Arguments[47] max Arguments[45]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3054: Arguments[47] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3055: Arguments[47] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3056: Arguments[47] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3057: Arguments[47] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3058: Arguments[47] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3059: Arguments[47] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3060: Arguments[47] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3061: Arguments[47] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3062: Arguments[47] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3063: Arguments[47] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3064: Arguments[47] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3065: Arguments[47] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3066: Arguments[47] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3067: Arguments[47] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3068: Arguments[47] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3069: Arguments[47] max Arguments[61]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 3070: Arguments[47] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3071: Arguments[47] max Arguments[63]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3072: Arguments[48] max Arguments[0]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3073: Arguments[48] max Arguments[1]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3074: Arguments[48] max Arguments[2]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3075: Arguments[48] max Arguments[3]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3076: Arguments[48] max Arguments[4]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3077: Arguments[48] max Arguments[5]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3078: Arguments[48] max Arguments[6]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3079: Arguments[48] max Arguments[7]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3080: Arguments[48] max Arguments[8]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3081: Arguments[48] max Arguments[9]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3082: Arguments[48] max Arguments[10]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3083: Arguments[48] max Arguments[11]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3084: Arguments[48] max Arguments[12]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3085: Arguments[48] max Arguments[13]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3086: Arguments[48] max Arguments[14]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3087: Arguments[48] max Arguments[15]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3088: Arguments[48] max Arguments[16]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3089: Arguments[48] max Arguments[17]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3090: Arguments[48] max Arguments[18]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3091: Arguments[48] max Arguments[19]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3092: Arguments[48] max Arguments[20]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3093: Arguments[48] max Arguments[21]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3094: Arguments[48] max Arguments[22]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3095: Arguments[48] max Arguments[23]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3096: Arguments[48] max Arguments[24]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3097: Arguments[48] max Arguments[25]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3098: Arguments[48] max Arguments[26]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3099: Arguments[48] max Arguments[27]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3100: Arguments[48] max Arguments[28]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3101: Arguments[48] max Arguments[29]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3102: Arguments[48] max Arguments[30]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3103: Arguments[48] max Arguments[31]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3104: Arguments[48] max Arguments[32]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3105: Arguments[48] max Arguments[33]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3106: Arguments[48] max Arguments[34]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3107: Arguments[48] max Arguments[35]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3108: Arguments[48] max Arguments[36]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3109: Arguments[48] max Arguments[37]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3110: Arguments[48] max Arguments[38]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3111: Arguments[48] max Arguments[39]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3112: Arguments[48] max Arguments[40]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3113: Arguments[48] max Arguments[41]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3114: Arguments[48] max Arguments[42]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3115: Arguments[48] max Arguments[43]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3116: Arguments[48] max Arguments[44]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3117: Arguments[48] max Arguments[45]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3118: Arguments[48] max Arguments[46]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3119: Arguments[48] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3120: Arguments[48] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3121: Arguments[48] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3122: Arguments[48] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3123: Arguments[48] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3124: Arguments[48] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3125: Arguments[48] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3126: Arguments[48] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3127: Arguments[48] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3128: Arguments[48] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3129: Arguments[48] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3130: Arguments[48] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3131: Arguments[48] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3132: Arguments[48] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3133: Arguments[48] max Arguments[61]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 3134: Arguments[48] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3135: Arguments[48] max Arguments[63]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3136: Arguments[49] max Arguments[0]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3137: Arguments[49] max Arguments[1]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3138: Arguments[49] max Arguments[2]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3139: Arguments[49] max Arguments[3]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3140: Arguments[49] max Arguments[4]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3141: Arguments[49] max Arguments[5]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3142: Arguments[49] max Arguments[6]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3143: Arguments[49] max Arguments[7]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3144: Arguments[49] max Arguments[8]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3145: Arguments[49] max Arguments[9]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3146: Arguments[49] max Arguments[10]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3147: Arguments[49] max Arguments[11]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3148: Arguments[49] max Arguments[12]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3149: Arguments[49] max Arguments[13]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3150: Arguments[49] max Arguments[14]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3151: Arguments[49] max Arguments[15]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3152: Arguments[49] max Arguments[16]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3153: Arguments[49] max Arguments[17]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3154: Arguments[49] max Arguments[18]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3155: Arguments[49] max Arguments[19]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3156: Arguments[49] max Arguments[20]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3157: Arguments[49] max Arguments[21]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3158: Arguments[49] max Arguments[22]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3159: Arguments[49] max Arguments[23]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3160: Arguments[49] max Arguments[24]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3161: Arguments[49] max Arguments[25]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3162: Arguments[49] max Arguments[26]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3163: Arguments[49] max Arguments[27]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3164: Arguments[49] max Arguments[28]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3165: Arguments[49] max Arguments[29]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3166: Arguments[49] max Arguments[30]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3167: Arguments[49] max Arguments[31]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3168: Arguments[49] max Arguments[32]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3169: Arguments[49] max Arguments[33]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3170: Arguments[49] max Arguments[34]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3171: Arguments[49] max Arguments[35]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3172: Arguments[49] max Arguments[36]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3173: Arguments[49] max Arguments[37]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3174: Arguments[49] max Arguments[38]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3175: Arguments[49] max Arguments[39]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3176: Arguments[49] max Arguments[40]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3177: Arguments[49] max Arguments[41]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3178: Arguments[49] max Arguments[42]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3179: Arguments[49] max Arguments[43]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3180: Arguments[49] max Arguments[44]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3181: Arguments[49] max Arguments[45]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3182: Arguments[49] max Arguments[46]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3183: Arguments[49] max Arguments[47]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3184: Arguments[49] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3185: Arguments[49] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3186: Arguments[49] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3187: Arguments[49] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3188: Arguments[49] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3189: Arguments[49] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3190: Arguments[49] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3191: Arguments[49] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3192: Arguments[49] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3193: Arguments[49] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3194: Arguments[49] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3195: Arguments[49] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3196: Arguments[49] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3197: Arguments[49] max Arguments[61]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 3198: Arguments[49] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3199: Arguments[49] max Arguments[63]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3200: Arguments[50] max Arguments[0]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3201: Arguments[50] max Arguments[1]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3202: Arguments[50] max Arguments[2]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3203: Arguments[50] max Arguments[3]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3204: Arguments[50] max Arguments[4]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3205: Arguments[50] max Arguments[5]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3206: Arguments[50] max Arguments[6]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3207: Arguments[50] max Arguments[7]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3208: Arguments[50] max Arguments[8]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3209: Arguments[50] max Arguments[9]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3210: Arguments[50] max Arguments[10]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3211: Arguments[50] max Arguments[11]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3212: Arguments[50] max Arguments[12]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3213: Arguments[50] max Arguments[13]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3214: Arguments[50] max Arguments[14]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3215: Arguments[50] max Arguments[15]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3216: Arguments[50] max Arguments[16]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3217: Arguments[50] max Arguments[17]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3218: Arguments[50] max Arguments[18]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3219: Arguments[50] max Arguments[19]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3220: Arguments[50] max Arguments[20]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3221: Arguments[50] max Arguments[21]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3222: Arguments[50] max Arguments[22]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3223: Arguments[50] max Arguments[23]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3224: Arguments[50] max Arguments[24]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3225: Arguments[50] max Arguments[25]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3226: Arguments[50] max Arguments[26]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3227: Arguments[50] max Arguments[27]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3228: Arguments[50] max Arguments[28]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3229: Arguments[50] max Arguments[29]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3230: Arguments[50] max Arguments[30]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3231: Arguments[50] max Arguments[31]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3232: Arguments[50] max Arguments[32]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3233: Arguments[50] max Arguments[33]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3234: Arguments[50] max Arguments[34]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3235: Arguments[50] max Arguments[35]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3236: Arguments[50] max Arguments[36]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3237: Arguments[50] max Arguments[37]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3238: Arguments[50] max Arguments[38]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3239: Arguments[50] max Arguments[39]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3240: Arguments[50] max Arguments[40]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3241: Arguments[50] max Arguments[41]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3242: Arguments[50] max Arguments[42]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3243: Arguments[50] max Arguments[43]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3244: Arguments[50] max Arguments[44]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3245: Arguments[50] max Arguments[45]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3246: Arguments[50] max Arguments[46]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3247: Arguments[50] max Arguments[47]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3248: Arguments[50] max Arguments[48]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3249: Arguments[50] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3250: Arguments[50] max Arguments[50]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3251: Arguments[50] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3252: Arguments[50] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3253: Arguments[50] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3254: Arguments[50] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3255: Arguments[50] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3256: Arguments[50] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3257: Arguments[50] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3258: Arguments[50] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3259: Arguments[50] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3260: Arguments[50] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3261: Arguments[50] max Arguments[61]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3262: Arguments[50] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3263: Arguments[50] max Arguments[63]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3264: Arguments[51] max Arguments[0]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3265: Arguments[51] max Arguments[1]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3266: Arguments[51] max Arguments[2]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3267: Arguments[51] max Arguments[3]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3268: Arguments[51] max Arguments[4]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3269: Arguments[51] max Arguments[5]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3270: Arguments[51] max Arguments[6]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3271: Arguments[51] max Arguments[7]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3272: Arguments[51] max Arguments[8]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3273: Arguments[51] max Arguments[9]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3274: Arguments[51] max Arguments[10]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3275: Arguments[51] max Arguments[11]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3276: Arguments[51] max Arguments[12]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3277: Arguments[51] max Arguments[13]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3278: Arguments[51] max Arguments[14]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3279: Arguments[51] max Arguments[15]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3280: Arguments[51] max Arguments[16]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3281: Arguments[51] max Arguments[17]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3282: Arguments[51] max Arguments[18]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3283: Arguments[51] max Arguments[19]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3284: Arguments[51] max Arguments[20]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3285: Arguments[51] max Arguments[21]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3286: Arguments[51] max Arguments[22]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3287: Arguments[51] max Arguments[23]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3288: Arguments[51] max Arguments[24]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3289: Arguments[51] max Arguments[25]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3290: Arguments[51] max Arguments[26]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3291: Arguments[51] max Arguments[27]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3292: Arguments[51] max Arguments[28]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3293: Arguments[51] max Arguments[29]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3294: Arguments[51] max Arguments[30]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3295: Arguments[51] max Arguments[31]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3296: Arguments[51] max Arguments[32]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3297: Arguments[51] max Arguments[33]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3298: Arguments[51] max Arguments[34]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3299: Arguments[51] max Arguments[35]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3300: Arguments[51] max Arguments[36]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3301: Arguments[51] max Arguments[37]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3302: Arguments[51] max Arguments[38]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3303: Arguments[51] max Arguments[39]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3304: Arguments[51] max Arguments[40]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3305: Arguments[51] max Arguments[41]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3306: Arguments[51] max Arguments[42]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3307: Arguments[51] max Arguments[43]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3308: Arguments[51] max Arguments[44]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3309: Arguments[51] max Arguments[45]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3310: Arguments[51] max Arguments[46]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3311: Arguments[51] max Arguments[47]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3312: Arguments[51] max Arguments[48]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3313: Arguments[51] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 3314: Arguments[51] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3315: Arguments[51] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3316: Arguments[51] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3317: Arguments[51] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3318: Arguments[51] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3319: Arguments[51] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3320: Arguments[51] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3321: Arguments[51] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3322: Arguments[51] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3323: Arguments[51] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3324: Arguments[51] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3325: Arguments[51] max Arguments[61]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 3326: Arguments[51] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3327: Arguments[51] max Arguments[63]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3328: Arguments[52] max Arguments[0]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3329: Arguments[52] max Arguments[1]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3330: Arguments[52] max Arguments[2]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3331: Arguments[52] max Arguments[3]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3332: Arguments[52] max Arguments[4]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3333: Arguments[52] max Arguments[5]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3334: Arguments[52] max Arguments[6]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3335: Arguments[52] max Arguments[7]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3336: Arguments[52] max Arguments[8]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3337: Arguments[52] max Arguments[9]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3338: Arguments[52] max Arguments[10]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3339: Arguments[52] max Arguments[11]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3340: Arguments[52] max Arguments[12]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3341: Arguments[52] max Arguments[13]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3342: Arguments[52] max Arguments[14]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3343: Arguments[52] max Arguments[15]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3344: Arguments[52] max Arguments[16]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3345: Arguments[52] max Arguments[17]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3346: Arguments[52] max Arguments[18]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3347: Arguments[52] max Arguments[19]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3348: Arguments[52] max Arguments[20]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3349: Arguments[52] max Arguments[21]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3350: Arguments[52] max Arguments[22]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3351: Arguments[52] max Arguments[23]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3352: Arguments[52] max Arguments[24]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3353: Arguments[52] max Arguments[25]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3354: Arguments[52] max Arguments[26]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3355: Arguments[52] max Arguments[27]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3356: Arguments[52] max Arguments[28]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3357: Arguments[52] max Arguments[29]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3358: Arguments[52] max Arguments[30]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3359: Arguments[52] max Arguments[31]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3360: Arguments[52] max Arguments[32]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3361: Arguments[52] max Arguments[33]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3362: Arguments[52] max Arguments[34]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3363: Arguments[52] max Arguments[35]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3364: Arguments[52] max Arguments[36]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3365: Arguments[52] max Arguments[37]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3366: Arguments[52] max Arguments[38]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3367: Arguments[52] max Arguments[39]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3368: Arguments[52] max Arguments[40]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3369: Arguments[52] max Arguments[41]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3370: Arguments[52] max Arguments[42]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3371: Arguments[52] max Arguments[43]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3372: Arguments[52] max Arguments[44]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3373: Arguments[52] max Arguments[45]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3374: Arguments[52] max Arguments[46]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3375: Arguments[52] max Arguments[47]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3376: Arguments[52] max Arguments[48]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3377: Arguments[52] max Arguments[49]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3378: Arguments[52] max Arguments[50]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3379: Arguments[52] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3380: Arguments[52] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3381: Arguments[52] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3382: Arguments[52] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3383: Arguments[52] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3384: Arguments[52] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3385: Arguments[52] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3386: Arguments[52] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3387: Arguments[52] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3388: Arguments[52] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3389: Arguments[52] max Arguments[61]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 3390: Arguments[52] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3391: Arguments[52] max Arguments[63]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3392: Arguments[53] max Arguments[0]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3393: Arguments[53] max Arguments[1]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3394: Arguments[53] max Arguments[2]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3395: Arguments[53] max Arguments[3]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3396: Arguments[53] max Arguments[4]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3397: Arguments[53] max Arguments[5]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3398: Arguments[53] max Arguments[6]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3399: Arguments[53] max Arguments[7]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3400: Arguments[53] max Arguments[8]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3401: Arguments[53] max Arguments[9]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3402: Arguments[53] max Arguments[10]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3403: Arguments[53] max Arguments[11]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3404: Arguments[53] max Arguments[12]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3405: Arguments[53] max Arguments[13]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3406: Arguments[53] max Arguments[14]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3407: Arguments[53] max Arguments[15]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3408: Arguments[53] max Arguments[16]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3409: Arguments[53] max Arguments[17]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3410: Arguments[53] max Arguments[18]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3411: Arguments[53] max Arguments[19]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3412: Arguments[53] max Arguments[20]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3413: Arguments[53] max Arguments[21]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3414: Arguments[53] max Arguments[22]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3415: Arguments[53] max Arguments[23]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3416: Arguments[53] max Arguments[24]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3417: Arguments[53] max Arguments[25]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3418: Arguments[53] max Arguments[26]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3419: Arguments[53] max Arguments[27]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3420: Arguments[53] max Arguments[28]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3421: Arguments[53] max Arguments[29]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3422: Arguments[53] max Arguments[30]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3423: Arguments[53] max Arguments[31]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3424: Arguments[53] max Arguments[32]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3425: Arguments[53] max Arguments[33]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3426: Arguments[53] max Arguments[34]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3427: Arguments[53] max Arguments[35]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3428: Arguments[53] max Arguments[36]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3429: Arguments[53] max Arguments[37]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3430: Arguments[53] max Arguments[38]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3431: Arguments[53] max Arguments[39]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3432: Arguments[53] max Arguments[40]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3433: Arguments[53] max Arguments[41]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3434: Arguments[53] max Arguments[42]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3435: Arguments[53] max Arguments[43]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3436: Arguments[53] max Arguments[44]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3437: Arguments[53] max Arguments[45]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3438: Arguments[53] max Arguments[46]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3439: Arguments[53] max Arguments[47]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3440: Arguments[53] max Arguments[48]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3441: Arguments[53] max Arguments[49]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3442: Arguments[53] max Arguments[50]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3443: Arguments[53] max Arguments[51]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3444: Arguments[53] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3445: Arguments[53] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3446: Arguments[53] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3447: Arguments[53] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3448: Arguments[53] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3449: Arguments[53] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3450: Arguments[53] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3451: Arguments[53] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3452: Arguments[53] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3453: Arguments[53] max Arguments[61]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 3454: Arguments[53] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3455: Arguments[53] max Arguments[63]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3456: Arguments[54] max Arguments[0]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3457: Arguments[54] max Arguments[1]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3458: Arguments[54] max Arguments[2]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3459: Arguments[54] max Arguments[3]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3460: Arguments[54] max Arguments[4]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3461: Arguments[54] max Arguments[5]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3462: Arguments[54] max Arguments[6]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3463: Arguments[54] max Arguments[7]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3464: Arguments[54] max Arguments[8]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3465: Arguments[54] max Arguments[9]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3466: Arguments[54] max Arguments[10]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3467: Arguments[54] max Arguments[11]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3468: Arguments[54] max Arguments[12]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3469: Arguments[54] max Arguments[13]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3470: Arguments[54] max Arguments[14]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3471: Arguments[54] max Arguments[15]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3472: Arguments[54] max Arguments[16]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3473: Arguments[54] max Arguments[17]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3474: Arguments[54] max Arguments[18]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3475: Arguments[54] max Arguments[19]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3476: Arguments[54] max Arguments[20]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3477: Arguments[54] max Arguments[21]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3478: Arguments[54] max Arguments[22]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3479: Arguments[54] max Arguments[23]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3480: Arguments[54] max Arguments[24]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3481: Arguments[54] max Arguments[25]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3482: Arguments[54] max Arguments[26]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3483: Arguments[54] max Arguments[27]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3484: Arguments[54] max Arguments[28]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3485: Arguments[54] max Arguments[29]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3486: Arguments[54] max Arguments[30]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3487: Arguments[54] max Arguments[31]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3488: Arguments[54] max Arguments[32]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3489: Arguments[54] max Arguments[33]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3490: Arguments[54] max Arguments[34]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3491: Arguments[54] max Arguments[35]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3492: Arguments[54] max Arguments[36]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3493: Arguments[54] max Arguments[37]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3494: Arguments[54] max Arguments[38]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3495: Arguments[54] max Arguments[39]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3496: Arguments[54] max Arguments[40]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3497: Arguments[54] max Arguments[41]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3498: Arguments[54] max Arguments[42]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3499: Arguments[54] max Arguments[43]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3500: Arguments[54] max Arguments[44]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3501: Arguments[54] max Arguments[45]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3502: Arguments[54] max Arguments[46]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3503: Arguments[54] max Arguments[47]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3504: Arguments[54] max Arguments[48]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3505: Arguments[54] max Arguments[49]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3506: Arguments[54] max Arguments[50]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3507: Arguments[54] max Arguments[51]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3508: Arguments[54] max Arguments[52]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3509: Arguments[54] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3510: Arguments[54] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3511: Arguments[54] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3512: Arguments[54] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3513: Arguments[54] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3514: Arguments[54] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3515: Arguments[54] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3516: Arguments[54] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3517: Arguments[54] max Arguments[61]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 3518: Arguments[54] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3519: Arguments[54] max Arguments[63]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3520: Arguments[55] max Arguments[0]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3521: Arguments[55] max Arguments[1]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3522: Arguments[55] max Arguments[2]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3523: Arguments[55] max Arguments[3]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3524: Arguments[55] max Arguments[4]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3525: Arguments[55] max Arguments[5]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3526: Arguments[55] max Arguments[6]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3527: Arguments[55] max Arguments[7]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3528: Arguments[55] max Arguments[8]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3529: Arguments[55] max Arguments[9]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3530: Arguments[55] max Arguments[10]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3531: Arguments[55] max Arguments[11]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3532: Arguments[55] max Arguments[12]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3533: Arguments[55] max Arguments[13]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3534: Arguments[55] max Arguments[14]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3535: Arguments[55] max Arguments[15]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3536: Arguments[55] max Arguments[16]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3537: Arguments[55] max Arguments[17]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3538: Arguments[55] max Arguments[18]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3539: Arguments[55] max Arguments[19]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3540: Arguments[55] max Arguments[20]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3541: Arguments[55] max Arguments[21]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3542: Arguments[55] max Arguments[22]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3543: Arguments[55] max Arguments[23]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3544: Arguments[55] max Arguments[24]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3545: Arguments[55] max Arguments[25]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3546: Arguments[55] max Arguments[26]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3547: Arguments[55] max Arguments[27]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3548: Arguments[55] max Arguments[28]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3549: Arguments[55] max Arguments[29]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3550: Arguments[55] max Arguments[30]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3551: Arguments[55] max Arguments[31]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3552: Arguments[55] max Arguments[32]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3553: Arguments[55] max Arguments[33]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3554: Arguments[55] max Arguments[34]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3555: Arguments[55] max Arguments[35]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3556: Arguments[55] max Arguments[36]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3557: Arguments[55] max Arguments[37]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3558: Arguments[55] max Arguments[38]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3559: Arguments[55] max Arguments[39]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3560: Arguments[55] max Arguments[40]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3561: Arguments[55] max Arguments[41]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3562: Arguments[55] max Arguments[42]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3563: Arguments[55] max Arguments[43]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3564: Arguments[55] max Arguments[44]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3565: Arguments[55] max Arguments[45]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3566: Arguments[55] max Arguments[46]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3567: Arguments[55] max Arguments[47]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3568: Arguments[55] max Arguments[48]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3569: Arguments[55] max Arguments[49]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3570: Arguments[55] max Arguments[50]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3571: Arguments[55] max Arguments[51]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3572: Arguments[55] max Arguments[52]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3573: Arguments[55] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3574: Arguments[55] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3575: Arguments[55] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3576: Arguments[55] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3577: Arguments[55] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3578: Arguments[55] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3579: Arguments[55] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3580: Arguments[55] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3581: Arguments[55] max Arguments[61]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 3582: Arguments[55] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3583: Arguments[55] max Arguments[63]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3584: Arguments[56] max Arguments[0]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3585: Arguments[56] max Arguments[1]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3586: Arguments[56] max Arguments[2]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3587: Arguments[56] max Arguments[3]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3588: Arguments[56] max Arguments[4]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3589: Arguments[56] max Arguments[5]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3590: Arguments[56] max Arguments[6]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3591: Arguments[56] max Arguments[7]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3592: Arguments[56] max Arguments[8]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3593: Arguments[56] max Arguments[9]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3594: Arguments[56] max Arguments[10]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3595: Arguments[56] max Arguments[11]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3596: Arguments[56] max Arguments[12]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3597: Arguments[56] max Arguments[13]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3598: Arguments[56] max Arguments[14]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3599: Arguments[56] max Arguments[15]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3600: Arguments[56] max Arguments[16]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3601: Arguments[56] max Arguments[17]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3602: Arguments[56] max Arguments[18]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3603: Arguments[56] max Arguments[19]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3604: Arguments[56] max Arguments[20]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3605: Arguments[56] max Arguments[21]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3606: Arguments[56] max Arguments[22]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3607: Arguments[56] max Arguments[23]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3608: Arguments[56] max Arguments[24]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3609: Arguments[56] max Arguments[25]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3610: Arguments[56] max Arguments[26]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3611: Arguments[56] max Arguments[27]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3612: Arguments[56] max Arguments[28]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3613: Arguments[56] max Arguments[29]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3614: Arguments[56] max Arguments[30]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3615: Arguments[56] max Arguments[31]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3616: Arguments[56] max Arguments[32]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3617: Arguments[56] max Arguments[33]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3618: Arguments[56] max Arguments[34]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3619: Arguments[56] max Arguments[35]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3620: Arguments[56] max Arguments[36]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3621: Arguments[56] max Arguments[37]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3622: Arguments[56] max Arguments[38]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3623: Arguments[56] max Arguments[39]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3624: Arguments[56] max Arguments[40]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3625: Arguments[56] max Arguments[41]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3626: Arguments[56] max Arguments[42]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3627: Arguments[56] max Arguments[43]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3628: Arguments[56] max Arguments[44]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3629: Arguments[56] max Arguments[45]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3630: Arguments[56] max Arguments[46]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3631: Arguments[56] max Arguments[47]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3632: Arguments[56] max Arguments[48]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3633: Arguments[56] max Arguments[49]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3634: Arguments[56] max Arguments[50]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3635: Arguments[56] max Arguments[51]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3636: Arguments[56] max Arguments[52]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3637: Arguments[56] max Arguments[53]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3638: Arguments[56] max Arguments[54]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3639: Arguments[56] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3640: Arguments[56] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3641: Arguments[56] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3642: Arguments[56] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3643: Arguments[56] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3644: Arguments[56] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3645: Arguments[56] max Arguments[61]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 3646: Arguments[56] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3647: Arguments[56] max Arguments[63]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3648: Arguments[57] max Arguments[0]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3649: Arguments[57] max Arguments[1]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3650: Arguments[57] max Arguments[2]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3651: Arguments[57] max Arguments[3]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3652: Arguments[57] max Arguments[4]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3653: Arguments[57] max Arguments[5]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3654: Arguments[57] max Arguments[6]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3655: Arguments[57] max Arguments[7]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3656: Arguments[57] max Arguments[8]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3657: Arguments[57] max Arguments[9]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3658: Arguments[57] max Arguments[10]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3659: Arguments[57] max Arguments[11]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3660: Arguments[57] max Arguments[12]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3661: Arguments[57] max Arguments[13]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3662: Arguments[57] max Arguments[14]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3663: Arguments[57] max Arguments[15]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3664: Arguments[57] max Arguments[16]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3665: Arguments[57] max Arguments[17]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3666: Arguments[57] max Arguments[18]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3667: Arguments[57] max Arguments[19]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3668: Arguments[57] max Arguments[20]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3669: Arguments[57] max Arguments[21]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3670: Arguments[57] max Arguments[22]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3671: Arguments[57] max Arguments[23]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3672: Arguments[57] max Arguments[24]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3673: Arguments[57] max Arguments[25]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3674: Arguments[57] max Arguments[26]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3675: Arguments[57] max Arguments[27]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3676: Arguments[57] max Arguments[28]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3677: Arguments[57] max Arguments[29]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3678: Arguments[57] max Arguments[30]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3679: Arguments[57] max Arguments[31]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3680: Arguments[57] max Arguments[32]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3681: Arguments[57] max Arguments[33]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3682: Arguments[57] max Arguments[34]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3683: Arguments[57] max Arguments[35]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3684: Arguments[57] max Arguments[36]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3685: Arguments[57] max Arguments[37]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3686: Arguments[57] max Arguments[38]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3687: Arguments[57] max Arguments[39]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3688: Arguments[57] max Arguments[40]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3689: Arguments[57] max Arguments[41]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3690: Arguments[57] max Arguments[42]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3691: Arguments[57] max Arguments[43]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3692: Arguments[57] max Arguments[44]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3693: Arguments[57] max Arguments[45]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3694: Arguments[57] max Arguments[46]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3695: Arguments[57] max Arguments[47]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3696: Arguments[57] max Arguments[48]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3697: Arguments[57] max Arguments[49]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3698: Arguments[57] max Arguments[50]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3699: Arguments[57] max Arguments[51]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3700: Arguments[57] max Arguments[52]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3701: Arguments[57] max Arguments[53]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3702: Arguments[57] max Arguments[54]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3703: Arguments[57] max Arguments[55]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3704: Arguments[57] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3705: Arguments[57] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3706: Arguments[57] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3707: Arguments[57] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3708: Arguments[57] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3709: Arguments[57] max Arguments[61]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 3710: Arguments[57] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3711: Arguments[57] max Arguments[63]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3712: Arguments[58] max Arguments[0]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3713: Arguments[58] max Arguments[1]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3714: Arguments[58] max Arguments[2]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3715: Arguments[58] max Arguments[3]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3716: Arguments[58] max Arguments[4]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3717: Arguments[58] max Arguments[5]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3718: Arguments[58] max Arguments[6]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3719: Arguments[58] max Arguments[7]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3720: Arguments[58] max Arguments[8]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3721: Arguments[58] max Arguments[9]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3722: Arguments[58] max Arguments[10]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3723: Arguments[58] max Arguments[11]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3724: Arguments[58] max Arguments[12]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3725: Arguments[58] max Arguments[13]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3726: Arguments[58] max Arguments[14]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3727: Arguments[58] max Arguments[15]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3728: Arguments[58] max Arguments[16]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3729: Arguments[58] max Arguments[17]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3730: Arguments[58] max Arguments[18]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3731: Arguments[58] max Arguments[19]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3732: Arguments[58] max Arguments[20]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3733: Arguments[58] max Arguments[21]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3734: Arguments[58] max Arguments[22]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3735: Arguments[58] max Arguments[23]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3736: Arguments[58] max Arguments[24]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3737: Arguments[58] max Arguments[25]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3738: Arguments[58] max Arguments[26]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3739: Arguments[58] max Arguments[27]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3740: Arguments[58] max Arguments[28]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3741: Arguments[58] max Arguments[29]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3742: Arguments[58] max Arguments[30]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3743: Arguments[58] max Arguments[31]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3744: Arguments[58] max Arguments[32]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3745: Arguments[58] max Arguments[33]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3746: Arguments[58] max Arguments[34]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3747: Arguments[58] max Arguments[35]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3748: Arguments[58] max Arguments[36]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3749: Arguments[58] max Arguments[37]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3750: Arguments[58] max Arguments[38]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3751: Arguments[58] max Arguments[39]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3752: Arguments[58] max Arguments[40]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3753: Arguments[58] max Arguments[41]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3754: Arguments[58] max Arguments[42]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3755: Arguments[58] max Arguments[43]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3756: Arguments[58] max Arguments[44]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3757: Arguments[58] max Arguments[45]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3758: Arguments[58] max Arguments[46]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3759: Arguments[58] max Arguments[47]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3760: Arguments[58] max Arguments[48]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3761: Arguments[58] max Arguments[49]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3762: Arguments[58] max Arguments[50]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3763: Arguments[58] max Arguments[51]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3764: Arguments[58] max Arguments[52]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3765: Arguments[58] max Arguments[53]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3766: Arguments[58] max Arguments[54]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3767: Arguments[58] max Arguments[55]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3768: Arguments[58] max Arguments[56]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3769: Arguments[58] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3770: Arguments[58] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3771: Arguments[58] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3772: Arguments[58] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3773: Arguments[58] max Arguments[61]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 3774: Arguments[58] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 3775: Arguments[58] max Arguments[63]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3776: Arguments[59] max Arguments[0]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3777: Arguments[59] max Arguments[1]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3778: Arguments[59] max Arguments[2]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3779: Arguments[59] max Arguments[3]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3780: Arguments[59] max Arguments[4]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3781: Arguments[59] max Arguments[5]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3782: Arguments[59] max Arguments[6]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3783: Arguments[59] max Arguments[7]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3784: Arguments[59] max Arguments[8]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3785: Arguments[59] max Arguments[9]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3786: Arguments[59] max Arguments[10]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3787: Arguments[59] max Arguments[11]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3788: Arguments[59] max Arguments[12]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3789: Arguments[59] max Arguments[13]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3790: Arguments[59] max Arguments[14]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3791: Arguments[59] max Arguments[15]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3792: Arguments[59] max Arguments[16]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3793: Arguments[59] max Arguments[17]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3794: Arguments[59] max Arguments[18]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3795: Arguments[59] max Arguments[19]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3796: Arguments[59] max Arguments[20]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3797: Arguments[59] max Arguments[21]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3798: Arguments[59] max Arguments[22]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3799: Arguments[59] max Arguments[23]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3800: Arguments[59] max Arguments[24]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3801: Arguments[59] max Arguments[25]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3802: Arguments[59] max Arguments[26]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3803: Arguments[59] max Arguments[27]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3804: Arguments[59] max Arguments[28]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3805: Arguments[59] max Arguments[29]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3806: Arguments[59] max Arguments[30]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3807: Arguments[59] max Arguments[31]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3808: Arguments[59] max Arguments[32]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3809: Arguments[59] max Arguments[33]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3810: Arguments[59] max Arguments[34]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3811: Arguments[59] max Arguments[35]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3812: Arguments[59] max Arguments[36]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3813: Arguments[59] max Arguments[37]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3814: Arguments[59] max Arguments[38]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3815: Arguments[59] max Arguments[39]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3816: Arguments[59] max Arguments[40]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3817: Arguments[59] max Arguments[41]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3818: Arguments[59] max Arguments[42]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3819: Arguments[59] max Arguments[43]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3820: Arguments[59] max Arguments[44]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3821: Arguments[59] max Arguments[45]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3822: Arguments[59] max Arguments[46]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3823: Arguments[59] max Arguments[47]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3824: Arguments[59] max Arguments[48]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3825: Arguments[59] max Arguments[49]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3826: Arguments[59] max Arguments[50]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3827: Arguments[59] max Arguments[51]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3828: Arguments[59] max Arguments[52]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3829: Arguments[59] max Arguments[53]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3830: Arguments[59] max Arguments[54]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3831: Arguments[59] max Arguments[55]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3832: Arguments[59] max Arguments[56]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3833: Arguments[59] max Arguments[57]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3834: Arguments[59] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3835: Arguments[59] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3836: Arguments[59] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3837: Arguments[59] max Arguments[61]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3838: Arguments[59] max Arguments[62]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 3839: Arguments[59] max Arguments[63]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3840: Arguments[60] max Arguments[0]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3841: Arguments[60] max Arguments[1]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3842: Arguments[60] max Arguments[2]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3843: Arguments[60] max Arguments[3]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3844: Arguments[60] max Arguments[4]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3845: Arguments[60] max Arguments[5]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3846: Arguments[60] max Arguments[6]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3847: Arguments[60] max Arguments[7]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3848: Arguments[60] max Arguments[8]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3849: Arguments[60] max Arguments[9]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3850: Arguments[60] max Arguments[10]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3851: Arguments[60] max Arguments[11]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3852: Arguments[60] max Arguments[12]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3853: Arguments[60] max Arguments[13]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3854: Arguments[60] max Arguments[14]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3855: Arguments[60] max Arguments[15]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3856: Arguments[60] max Arguments[16]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3857: Arguments[60] max Arguments[17]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3858: Arguments[60] max Arguments[18]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3859: Arguments[60] max Arguments[19]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3860: Arguments[60] max Arguments[20]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3861: Arguments[60] max Arguments[21]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3862: Arguments[60] max Arguments[22]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3863: Arguments[60] max Arguments[23]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3864: Arguments[60] max Arguments[24]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3865: Arguments[60] max Arguments[25]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3866: Arguments[60] max Arguments[26]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3867: Arguments[60] max Arguments[27]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3868: Arguments[60] max Arguments[28]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3869: Arguments[60] max Arguments[29]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3870: Arguments[60] max Arguments[30]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3871: Arguments[60] max Arguments[31]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3872: Arguments[60] max Arguments[32]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3873: Arguments[60] max Arguments[33]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3874: Arguments[60] max Arguments[34]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3875: Arguments[60] max Arguments[35]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3876: Arguments[60] max Arguments[36]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3877: Arguments[60] max Arguments[37]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3878: Arguments[60] max Arguments[38]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3879: Arguments[60] max Arguments[39]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3880: Arguments[60] max Arguments[40]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3881: Arguments[60] max Arguments[41]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3882: Arguments[60] max Arguments[42]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3883: Arguments[60] max Arguments[43]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3884: Arguments[60] max Arguments[44]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3885: Arguments[60] max Arguments[45]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3886: Arguments[60] max Arguments[46]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3887: Arguments[60] max Arguments[47]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3888: Arguments[60] max Arguments[48]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3889: Arguments[60] max Arguments[49]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3890: Arguments[60] max Arguments[50]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3891: Arguments[60] max Arguments[51]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3892: Arguments[60] max Arguments[52]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3893: Arguments[60] max Arguments[53]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3894: Arguments[60] max Arguments[54]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3895: Arguments[60] max Arguments[55]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3896: Arguments[60] max Arguments[56]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3897: Arguments[60] max Arguments[57]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3898: Arguments[60] max Arguments[58]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3899: Arguments[60] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3900: Arguments[60] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3901: Arguments[60] max Arguments[61]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3902: Arguments[60] max Arguments[62]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 3903: Arguments[60] max Arguments[63]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3904: Arguments[61] max Arguments[0]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3905: Arguments[61] max Arguments[1]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3906: Arguments[61] max Arguments[2]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3907: Arguments[61] max Arguments[3]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3908: Arguments[61] max Arguments[4]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3909: Arguments[61] max Arguments[5]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3910: Arguments[61] max Arguments[6]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3911: Arguments[61] max Arguments[7]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3912: Arguments[61] max Arguments[8]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3913: Arguments[61] max Arguments[9]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3914: Arguments[61] max Arguments[10]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3915: Arguments[61] max Arguments[11]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3916: Arguments[61] max Arguments[12]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3917: Arguments[61] max Arguments[13]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3918: Arguments[61] max Arguments[14]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3919: Arguments[61] max Arguments[15]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3920: Arguments[61] max Arguments[16]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3921: Arguments[61] max Arguments[17]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3922: Arguments[61] max Arguments[18]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3923: Arguments[61] max Arguments[19]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3924: Arguments[61] max Arguments[20]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3925: Arguments[61] max Arguments[21]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3926: Arguments[61] max Arguments[22]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3927: Arguments[61] max Arguments[23]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3928: Arguments[61] max Arguments[24]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3929: Arguments[61] max Arguments[25]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3930: Arguments[61] max Arguments[26]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3931: Arguments[61] max Arguments[27]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3932: Arguments[61] max Arguments[28]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3933: Arguments[61] max Arguments[29]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3934: Arguments[61] max Arguments[30]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3935: Arguments[61] max Arguments[31]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3936: Arguments[61] max Arguments[32]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3937: Arguments[61] max Arguments[33]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3938: Arguments[61] max Arguments[34]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3939: Arguments[61] max Arguments[35]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3940: Arguments[61] max Arguments[36]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3941: Arguments[61] max Arguments[37]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3942: Arguments[61] max Arguments[38]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3943: Arguments[61] max Arguments[39]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3944: Arguments[61] max Arguments[40]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3945: Arguments[61] max Arguments[41]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3946: Arguments[61] max Arguments[42]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3947: Arguments[61] max Arguments[43]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3948: Arguments[61] max Arguments[44]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3949: Arguments[61] max Arguments[45]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3950: Arguments[61] max Arguments[46]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3951: Arguments[61] max Arguments[47]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3952: Arguments[61] max Arguments[48]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3953: Arguments[61] max Arguments[49]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3954: Arguments[61] max Arguments[50]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3955: Arguments[61] max Arguments[51]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3956: Arguments[61] max Arguments[52]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3957: Arguments[61] max Arguments[53]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3958: Arguments[61] max Arguments[54]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3959: Arguments[61] max Arguments[55]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3960: Arguments[61] max Arguments[56]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3961: Arguments[61] max Arguments[57]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3962: Arguments[61] max Arguments[58]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3963: Arguments[61] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3964: Arguments[61] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3965: Arguments[61] max Arguments[61]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3966: Arguments[61] max Arguments[62]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 3967: Arguments[61] max Arguments[63]
    (Info: triOk;            Val: '10000000000000'),                            // 3968: Arguments[62] max Arguments[0]
    (Info: triOk;            Val: '10000000000000'),                            // 3969: Arguments[62] max Arguments[1]
    (Info: triOk;            Val: '10000000000000'),                            // 3970: Arguments[62] max Arguments[2]
    (Info: triOk;            Val: '10000000000000'),                            // 3971: Arguments[62] max Arguments[3]
    (Info: triOk;            Val: '10000000000000'),                            // 3972: Arguments[62] max Arguments[4]
    (Info: triOk;            Val: '10000000000000'),                            // 3973: Arguments[62] max Arguments[5]
    (Info: triOk;            Val: '10000000000000'),                            // 3974: Arguments[62] max Arguments[6]
    (Info: triOk;            Val: '10000000000000'),                            // 3975: Arguments[62] max Arguments[7]
    (Info: triOk;            Val: '10000000000000'),                            // 3976: Arguments[62] max Arguments[8]
    (Info: triOk;            Val: '10000000000000'),                            // 3977: Arguments[62] max Arguments[9]
    (Info: triOk;            Val: '10000000000000'),                            // 3978: Arguments[62] max Arguments[10]
    (Info: triOk;            Val: '10000000000000'),                            // 3979: Arguments[62] max Arguments[11]
    (Info: triOk;            Val: '10000000000000'),                            // 3980: Arguments[62] max Arguments[12]
    (Info: triOk;            Val: '10000000000000'),                            // 3981: Arguments[62] max Arguments[13]
    (Info: triOk;            Val: '10000000000000'),                            // 3982: Arguments[62] max Arguments[14]
    (Info: triOk;            Val: '10000000000000'),                            // 3983: Arguments[62] max Arguments[15]
    (Info: triOk;            Val: '10000000000000'),                            // 3984: Arguments[62] max Arguments[16]
    (Info: triOk;            Val: '10000000000000'),                            // 3985: Arguments[62] max Arguments[17]
    (Info: triOk;            Val: '10000000000000'),                            // 3986: Arguments[62] max Arguments[18]
    (Info: triOk;            Val: '10000000000000'),                            // 3987: Arguments[62] max Arguments[19]
    (Info: triOk;            Val: '10000000000000'),                            // 3988: Arguments[62] max Arguments[20]
    (Info: triOk;            Val: '10000000000000'),                            // 3989: Arguments[62] max Arguments[21]
    (Info: triOk;            Val: '10000000000000'),                            // 3990: Arguments[62] max Arguments[22]
    (Info: triOk;            Val: '10000000000000'),                            // 3991: Arguments[62] max Arguments[23]
    (Info: triOk;            Val: '10000000000000'),                            // 3992: Arguments[62] max Arguments[24]
    (Info: triOk;            Val: '10000000000000'),                            // 3993: Arguments[62] max Arguments[25]
    (Info: triOk;            Val: '10000000000000'),                            // 3994: Arguments[62] max Arguments[26]
    (Info: triOk;            Val: '10000000000000'),                            // 3995: Arguments[62] max Arguments[27]
    (Info: triOk;            Val: '10000000000000'),                            // 3996: Arguments[62] max Arguments[28]
    (Info: triOk;            Val: '10000000000000'),                            // 3997: Arguments[62] max Arguments[29]
    (Info: triOk;            Val: '10000000000000'),                            // 3998: Arguments[62] max Arguments[30]
    (Info: triOk;            Val: '10000000000000'),                            // 3999: Arguments[62] max Arguments[31]
    (Info: triOk;            Val: '10000000000000'),                            // 4000: Arguments[62] max Arguments[32]
    (Info: triOk;            Val: '4234575746049986044'),                       // 4001: Arguments[62] max Arguments[33]
    (Info: triOk;            Val: '5387241703157997895'),                       // 4002: Arguments[62] max Arguments[34]
    (Info: triOk;            Val: '9223372041149612032'),                       // 4003: Arguments[62] max Arguments[35]
    (Info: triOk;            Val: '172872415652910937156'),                     // 4004: Arguments[62] max Arguments[36]
    (Info: triOk;            Val: '977677435906606235647'),                     // 4005: Arguments[62] max Arguments[37]
    (Info: triOk;            Val: '1673271581108184934182'),                    // 4006: Arguments[62] max Arguments[38]
    (Info: triOk;            Val: '8271324858169862655834'),                    // 4007: Arguments[62] max Arguments[39]
    (Info: triOk;            Val: '13416290973509623768074'),                   // 4008: Arguments[62] max Arguments[40]
    (Info: triOk;            Val: '74287305190053403856772'),                   // 4009: Arguments[62] max Arguments[41]
    (Info: triOk;            Val: '85961827383486510530560'),                   // 4010: Arguments[62] max Arguments[42]
    (Info: triOk;            Val: '7096499840976817344578600'),                 // 4011: Arguments[62] max Arguments[43]
    (Info: triOk;            Val: '499680576774082292410113726'),               // 4012: Arguments[62] max Arguments[44]
    (Info: triOk;            Val: '1243478184157339114435077574'),              // 4013: Arguments[62] max Arguments[45]
    (Info: triOk;            Val: '8840587743209014991486176890'),              // 4014: Arguments[62] max Arguments[46]
    (Info: triOk;            Val: '19807040619342712359383728129'),             // 4015: Arguments[62] max Arguments[47]
    (Info: triOk;            Val: '63733365657267277460012361609'),             // 4016: Arguments[62] max Arguments[48]
    (Info: triOk;            Val: '82261793876695338192268955270'),             // 4017: Arguments[62] max Arguments[49]
    (Info: triOk;            Val: '779879232593610263927748006161'),            // 4018: Arguments[62] max Arguments[50]
    (Info: triOk;            Val: '113110558780721284166510605813'),            // 4019: Arguments[62] max Arguments[51]
    (Info: triOk;            Val: '4847586039315419829807005894255429'),        // 4020: Arguments[62] max Arguments[52]
    (Info: triOk;            Val: '90612345123875509091827560007100099'),       // 4021: Arguments[62] max Arguments[53]
    (Info: triOk;            Val: '85070591730234615847396907784232501249'),    // 4022: Arguments[62] max Arguments[54]
    (Info: triOk;            Val: '85070591730234615847396907784232501250'),    // 4023: Arguments[62] max Arguments[55]
    (Info: triOk;            Val: '680564693277057719623408366969033850880'),   // 4024: Arguments[62] max Arguments[56]
    (Info: triOk;            Val: '1803496544680973856355885419388371520716' + 
                                  '7'),                                         // 4025: Arguments[62] max Arguments[57]
    (Info: triOk;            Val: '1585715829851573239739325670632039865384' + 
                                  '960'),                                       // 4026: Arguments[62] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 4027: Arguments[62] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 4028: Arguments[62] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 4029: Arguments[62] max Arguments[61]
    (Info: triOk;            Val: '10000000000000'),                            // 4030: Arguments[62] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4031: Arguments[62] max Arguments[63]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4032: Arguments[63] max Arguments[0]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4033: Arguments[63] max Arguments[1]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4034: Arguments[63] max Arguments[2]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4035: Arguments[63] max Arguments[3]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4036: Arguments[63] max Arguments[4]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4037: Arguments[63] max Arguments[5]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4038: Arguments[63] max Arguments[6]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4039: Arguments[63] max Arguments[7]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4040: Arguments[63] max Arguments[8]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4041: Arguments[63] max Arguments[9]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4042: Arguments[63] max Arguments[10]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4043: Arguments[63] max Arguments[11]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4044: Arguments[63] max Arguments[12]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4045: Arguments[63] max Arguments[13]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4046: Arguments[63] max Arguments[14]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4047: Arguments[63] max Arguments[15]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4048: Arguments[63] max Arguments[16]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4049: Arguments[63] max Arguments[17]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4050: Arguments[63] max Arguments[18]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4051: Arguments[63] max Arguments[19]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4052: Arguments[63] max Arguments[20]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4053: Arguments[63] max Arguments[21]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4054: Arguments[63] max Arguments[22]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4055: Arguments[63] max Arguments[23]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4056: Arguments[63] max Arguments[24]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4057: Arguments[63] max Arguments[25]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4058: Arguments[63] max Arguments[26]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4059: Arguments[63] max Arguments[27]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4060: Arguments[63] max Arguments[28]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4061: Arguments[63] max Arguments[29]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4062: Arguments[63] max Arguments[30]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4063: Arguments[63] max Arguments[31]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4064: Arguments[63] max Arguments[32]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4065: Arguments[63] max Arguments[33]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4066: Arguments[63] max Arguments[34]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4067: Arguments[63] max Arguments[35]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4068: Arguments[63] max Arguments[36]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4069: Arguments[63] max Arguments[37]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4070: Arguments[63] max Arguments[38]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4071: Arguments[63] max Arguments[39]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4072: Arguments[63] max Arguments[40]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4073: Arguments[63] max Arguments[41]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4074: Arguments[63] max Arguments[42]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4075: Arguments[63] max Arguments[43]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4076: Arguments[63] max Arguments[44]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4077: Arguments[63] max Arguments[45]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4078: Arguments[63] max Arguments[46]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4079: Arguments[63] max Arguments[47]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4080: Arguments[63] max Arguments[48]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4081: Arguments[63] max Arguments[49]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4082: Arguments[63] max Arguments[50]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4083: Arguments[63] max Arguments[51]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4084: Arguments[63] max Arguments[52]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4085: Arguments[63] max Arguments[53]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4086: Arguments[63] max Arguments[54]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4087: Arguments[63] max Arguments[55]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4088: Arguments[63] max Arguments[56]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4089: Arguments[63] max Arguments[57]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4090: Arguments[63] max Arguments[58]
    (Info: triOk;            Val: '1234567890123456789012345678901234567890' + 
                                  '123456789012345678901234567890'),            // 4091: Arguments[63] max Arguments[59]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '57982263970188796520233154296875'),          // 4092: Arguments[63] max Arguments[60]
    (Info: triOk;            Val: '3435973836799999999999999999956631913100' + 
                                  '5798226397018879652023315429687500000000' + 
                                  '00000'),                                     // 4093: Arguments[63] max Arguments[61]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000'),                        // 4094: Arguments[63] max Arguments[62]
    (Info: triOk;            Val: '1000000000000000000000000000000000000000' + 
                                  '000000000000000000')                         // 4095: Arguments[63] max Arguments[63]
  );

  FactorialResults: array[0..40 - 1] of TTestResult =
  (
    (Info: triOk;            Val: '1'),                                         // Factorial(BitShifts[0])
    (Info: triOk;            Val: '2'),                                         // Factorial(BitShifts[1])
    (Info: triOk;            Val: '6'),                                         // Factorial(BitShifts[2])
    (Info: triOk;            Val: '24'),                                        // Factorial(BitShifts[3])
    (Info: triOk;            Val: '120'),                                       // Factorial(BitShifts[4])
    (Info: triOk;            Val: '720'),                                       // Factorial(BitShifts[5])
    (Info: triOk;            Val: '5040'),                                      // Factorial(BitShifts[6])
    (Info: triOk;            Val: '40320'),                                     // Factorial(BitShifts[7])
    (Info: triOk;            Val: '362880'),                                    // Factorial(BitShifts[8])
    (Info: triOk;            Val: '3628800'),                                   // Factorial(BitShifts[9])
    (Info: triOk;            Val: '39916800'),                                  // Factorial(BitShifts[10])
    (Info: triOk;            Val: '479001600'),                                 // Factorial(BitShifts[11])
    (Info: triOk;            Val: '6227020800'),                                // Factorial(BitShifts[12])
    (Info: triOk;            Val: '87178291200'),                               // Factorial(BitShifts[13])
    (Info: triOk;            Val: '1307674368000'),                             // Factorial(BitShifts[14])
    (Info: triOk;            Val: '2432902008176640000'),                       // Factorial(BitShifts[15])
    (Info: triOk;            Val: '15511210043330985984000000'),                // Factorial(BitShifts[16])
    (Info: triOk;            Val: '265252859812191058636308480000000'),         // Factorial(BitShifts[17])
    (Info: triOk;            Val: '8222838654177922817725562880000000'),        // Factorial(BitShifts[18])
    (Info: triOk;            Val: '263130836933693530167218012160000000'),      // Factorial(BitShifts[19])
    (Info: triOk;            Val: '8683317618811886495518194401280000000'),     // Factorial(BitShifts[20])
    (Info: triOk;            Val: '1033314796638614492966665133752320000000' + 
                                  '0'),                                         // Factorial(BitShifts[21])
    (Info: triOk;            Val: '8159152832478977343456112695961158942720' + 
                                  '00000000'),                                  // Factorial(BitShifts[22])
    (Info: triOk;            Val: '3041409320171337804361260816606476884437' + 
                                  '7641568960512000000000000'),                 // Factorial(BitShifts[23])
    (Info: triOk;            Val: '8320987112741390144276341183223364380754' + 
                                  '1726063612459524492776964096000000000000' + 
                                  '00'),                                        // Factorial(BitShifts[24])
    (Info: triOk;            Val: '1197857166996989179607278372168909873645' + 
                                  '8938142546425857555362864628009582789845' + 
                                  '319680000000000000000'),                     // Factorial(BitShifts[25])
    (Info: triOk;            Val: '8504785885678623175211676442399260102885' + 
                                  '8460812079623588643076338858868037807901' + 
                                  '7697280000000000000000'),                    // Factorial(BitShifts[26])
    (Info: triOk;            Val: '6123445837688608686152407038527467274077' + 
                                  '8091784697328983823014963978384987221689' + 
                                  '274204160000000000000000'),                  // Factorial(BitShifts[27])
    (Info: triOk;            Val: '4470115461512684340891257138125051110076' + 
                                  '8007002829050158190800923704221040671833' + 
                                  '17016903680000000000000000'),                // Factorial(BitShifts[28])
    (Info: triOk;            Val: '3307885441519386412259530282212537821456' + 
                                  '8325182093497117061192683541123570097156' + 
                                  '5459250872320000000000000000'),              // Factorial(BitShifts[29])
    (Info: triOk;            Val: '2480914081139539809194647711659403366092' + 
                                  '6243886570122837795894512655842677572867' + 
                                  '409443815424000000000000000000'),            // Factorial(BitShifts[30])
    (Info: triOk;            Val: '1485715964481761497309522733620825737885' + 
                                  '5699612846887669422168637049853930940658' + 
                                  '7654599213137088405964561723446997811200' + 
                                  '0000000000000000000'),                       // Factorial(BitShifts[31])
    (Info: triOk;            Val: '9332621544394415268169923885626670049071' + 
                                  '5968264381621468592963895217599993229915' + 
                                  '6089414639761565182862536979208272237582' + 
                                  '51185210916864000000000000000000000000'),    // Factorial(BitShifts[32])
    (Info: triOk;            Val: '1588245541522742940425370312709077287172' + 
                                  '4410234473563207581748318444567162948183' + 
                                  '0309599601315176785204792436726381799902' + 
                                  '0852114862342226687675762391121920000000' + 
                                  '0000000000000000000'),                       // Factorial(BitShifts[33])
    (Info: triOk;            Val: '2946702272495038326504339507351214862194' + 
                                  '9538940341262811056536144846410841713848' + 
                                  '7716861268898821872312226705065512247663' + 
                                  '8168421183149385930893186799109435156968' + 
                                  '0048832099063309970621353762725702179489' + 
                                  '6245353619886061381163620820832527959258' + 
                                  '5625600000000000000000000000000000000000' + 
                                  '000'),                                       // Factorial(BitShifts[34])
    (Info: triOk;            Val: '4714723635992061322406943211761943779511' + 
                                  '9262304546020497690457831754257346742158' + 
                                  '0346978030238114995699562728104819596262' + 
                                  '1069473893039017489429098878575096251148' + 
                                  '8078131358501295952994166020361123487183' + 
                                  '3992565791817698209861793313332044734813' + 
                                  '7000960000000000000000000000000000000000' + 
                                  '00000'),                                     // Factorial(BitShifts[35])
    (Info: triOk;            Val: '7590705053947218729075178570936729485014' + 
                                  '2012310319093001281637109124354328254874' + 
                                  '4358634628683365143076295992248759549981' + 
                                  '9921852967792818157980849194505904964349' + 
                                  '5805791487187086484320607292781408814365' + 
                                  '2728030924826494117877487234464592023050' + 
                                  '0571545600000000000000000000000000000000' + 
                                  '0000000'),                                   // Factorial(BitShifts[36])
    (Info: triOk;            Val: '1229694218739449434110178928491750176572' + 
                                  '3005994271693066207625211678145401177289' + 
                                  '6586098809846705153178359950744299047097' + 
                                  '0827340180782436541592897569509956604224' + 
                                  '6320538220924308010459938381430588227927' + 
                                  '1741941009821892047096152931983263907734' + 
                                  '1092590387200000000000000000000000000000' + 
                                  '0000000000'),                                // Factorial(BitShifts[37])
    (Info: triOk;            Val: '2004401576545302577599591653441552787812' + 
                                  '8499770662859697918429095035377003918982' + 
                                  '1435341060050129399680726719713207446768' + 
                                  '2448564494675371562796423038301229264886' + 
                                  '1502477300106622057049699561731858811521' + 
                                  '2939363846009684036766729279132720169606' + 
                                  '5980922331136000000000000000000000000000' + 
                                  '000000000000'),                              // Factorial(BitShifts[38])
    (Info: triOk;            Val: '3287218585534296227263330311644146572013' + 
                                  '0739623887089904586223715858018286427130' + 
                                  '7153959338482212215476391820329660212699' + 
                                  '9215645771267609362986133782814015994413' + 
                                  '2864062772174860173561507281240248450894' + 
                                  '9220556707455881820297436017777661078154' + 
                                  '8208712623063040000000000000000000000000' + 
                                  '00000000000000')                             // Factorial(BitShifts[39])
  );

